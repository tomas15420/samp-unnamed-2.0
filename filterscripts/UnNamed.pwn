#include <a_samp>
#include <streamer>
#include <a_mysql>
#include <DOF2>
#include <dini>
#include <UnNamed>
#include <a_http>
#include <InfoBox>
#include <izcmd>
#include <antiad>
#include <mSelection>
#include <unbot>
#include <daily>
//#include <serazeni>
#undef MAX_PLAYERS
#define CHRISTMAS_VW    22
#define MAX_PLAYERS 100
#define MAX_AFK_TIME 15
#define jc "{7171FF}"
native IsValidVehicle(vehicleid);
native gpci (playerid, serial [], len);

#define BYTES_PER_CELL 4

#define SRV_WEB "Example.com"
#define SRV_MAIL "example@example.com"
#define SRV_INSTA "instagram.com/server_ig"
#define SRV_FB  "facebook.com/server_fb"
#define SRV_DISCORD  "discord.gg/server_discord"
#define SRV_NAME "Example"

#define function%0(%1) forward%0(%1); public%0(%1)
#define MAX_OBJECTS_EX 100
#define HLASKA_TIME 4
#define MAX_PENALTY_POINTS  50
#define PENALTY_TIME        168 //hodiny
#define PENALTY_REASON      "Nevhodné chování (max. poèet trestných bodù)"
#define MAX_COUNTRY_NAME    37
#define MAX_S_OBJECTS 20
#define MAX_DMS 		7
#define TOMBOLA_TIME    18
#define MAX_DM_WEAPONS  3
#define SHOP_SKIN      25000
#define NORMAL_SKIN    26000
#define NEXT_AUTO_EVENT_TIME 30 //minut
#define MIN_AUTO_EVENT_PLAYERS 8
#define MAX_GIFTS 10
#define MAX_RACES 100
#define MAX_PROPERTIES 800
#define MAX_PROPERTIES_PER_PLAYER 4
#define MAX_PROPERTY_LEVEL 20
#define MAX_PROPERTY_CASH_LEVEL 20
#define CASH_PER_LEVEL  10000000
#define PROPERTY_DPRICE 8000000
#define UPGRADE_COST 50
#define UPGRADE_CASH_COST 50
#define HOUR_COST 0.2
#define MISSION_PLUS 0.075
#define MISSION_PLUSD 375
#define MAX_BLOCKED 10
#define MAX_ZONES 10
#define MAX_INTERIORS 80
#define MAX_HOUSES 1500
#define MAX_HOUSES_PER_PLAYER 1
#define MAX_EPROPS  10
#define MAX_EPROP_PER_PLAYER  2
#define EPROP_PRICE 0
#define EPROP_SELL  EPROP_PRICE/2
#define EARNING_PER_LEVEL 20000
#define MAX_CPS 200
#define MAX_SPECIAL_SLOTS 10
#define MAX_SLOTS 15+MAX_SPECIAL_SLOTS
#define MAX_TITULS 25
#define MAX_MAPS 80
#define MAX_RADIOS 30
#define MAX_PLAYER_VYBAVA 5
#define MAX_ENTRY 500
#define MAX_PACKAGES 200
#define MAX_LEN 20
#define MAX_ACHIEVEMENTS 64
#define DM_VW 100
#define DEFAULT_SPZ "DG-%d%s%d%s"
#define MAX_VYBAVA_SLOTS 			13
#define MAX_TREZORS 16
#define BUILD 21.2
#define co                  	    "{FF7700}"
#define ORANGE                	  	0xFF7700FF

#define TYPE_KICK 	0
#define TYPE_BAN    1
#define TYPE_TBAN   2
#define TYPE_VAR    3
#define TYPE_CBLOCK 4
#define TYPE_MUTE   5

#define TYPE_GIFT   0
#define TYPE_EGG    1

#define EPROP_TYPE_DRUGS    0

#define EVENT_TYPE_NOCOLISION 	1
#define EVENT_TYPE_REPEAT       2

#define SPAWN_TYPE_NONE 	0
#define SPAWN_TYPE_GANG 	1
#define SPAWN_TYPE_HOUSE    2

#define TYPE_TRAIN 			1
#define TYPE_BIKES 			2
#define TYPE_LETADLA 		3
#define TYPE_BOATS 			4
#define TYPE_RC 			5
#define TYPE_CAR 			6
#define TYPE_MOTO 			7
#define TYPE_KAMION 		8
#define TYPE_HELI 			9
#define TYPE_TRAM 			10

#define TYPE_WEAPON         0
#define TYPE_ARMOUR         1
#define TYPE_HEALTH         2
#define TYPE_AMMO           4
#define TYPE_NONE           5
#define MAX_TYPES           5

#define MAX_DUELS					10
#define MAX_ROUNDS					30
#define MIN_ROUNDS					1

#define DUEL_STATUS_FREE			0
#define DUEL_STATUS_CREATING    	1
#define DUEL_STATUS_CONNECT			2
#define DUEL_STATUS_WAIT            3
#define DUEL_STATUS_STARTED			4

#define D_DIALOG					UNNAMED+800
#define DUEL_WORLD              	100
#define MAX_DUEL_TD                 5

enum ENUM_CustomSkin
{
	sSkinBaseID,sSkinID,sSkinName[24],sSkinFile[24],sSkinPrice,sSkinLevel
};

new CustomSkin[][ENUM_CustomSkin] =
{
	{180,0,"Tommy Varcetti","tommyvarcetti",0,-2},
	{180,1,"Iron Man","ironman",10000,50},
	{180,2,"Captain America","captain_america_cw",5000,30},
	{180,3,"The Flash","theflash",6500,35},
	{180,4,"Green Arrow","greenarrow",7000,38},
	{180,5,"Niko Bellic","niko",8000,43},
	{180,6,"Vaas","vaas",8000,43},
	{180,7,"Vito Scaletta","vito",8500,-1},
	{180,8,"Zombie","zombie",4000,20},
	{180,9,"Franklin Clinton","franklin",4000,20},
	{180,10,"Michael DeSanta","michael",4000,20},
	{180,11,"Trevor Philips","trevor",5000,30},
	{180,12,"Aiden Pierce","aiden",6500,35},
	{180,13,"Marcus Holloway","marcus",6800,37},
	{180,14,"Deadpool","deadpool",9000,-1},
	{180,15,"Black Panther","black_panther",7500,40},
	{180,16,"Scout","scout",6000,32},
	{180,17,"Pyro","pyro",6000,32},
	{180,18,"Spy","spy",6000,32},
	{180,19,"212th Clone Trooper","stormtrooper",6000,-1},
	{180,20,"Spider-Man","spiderman",5000,30},
	{180,21,"Quake","quake",4000,20},
	{180,22,"Wrench","wrench",4500,25},
	{180,23,"Medic","medic",6000,32},
	{180,24,"Wonder Woman","wonder_woman",6500,35},
	{180,25,"Joe Barbaro","joe_barbaro",8500,-1},
	{180,26,"Horse Head","horse_head",3000,13},
	{180,27,"Gign","gign",5500,33},
	{180,28,"Joker","joker",7000,38}
};


enum ENUM_DailyChallenges
{
	dailyType,dailyValue,dailyDesc[70]
}

new DailyChallenges[][ENUM_DailyChallenges] =
{
	{DAILY_TYPE_RACE_WIN,5,"Vyhrát 5 závodù"},
	{DAILY_TYPE_KILLS,10,"Zabít 10 hráèù"},
	{DAILY_TYPE_MISSION_KURYR,20,"Splnit 20 misí za Kurýra"},
	{DAILY_TYPE_RACE,10,"Odjet 10 závodù"},
	{DAILY_TYPE_ROB,20,"Vykrást 20 nemovitostí"},
	{DAILY_TYPE_EVENT,1,"Vyhrát 1 event"},
	{DAILY_TYPE_STUNTS,15,"Dokonèit 15 libovolých stuntù"},
	{DAILY_TYPE_DM_KILLS,15,"Zabít 15 hráèù v DM"},
	{DAILY_TYPE_MISSION_PILOT,20,"Splnit 20 misí za Pilota"},
	{DAILY_TYPE_GANJA,50,"Vypìstovat 50g marihuany"},
	{DAILY_TYPE_MISSION_MEDIC,3,"Vyléèit 3 hráèe v misi Zdravotník"},
	{DAILY_TYPE_SUMO,10,"Vyhrát 10 sumo zápasù (/sumo)"},
	{DAILY_TYPE_MISSION_TRUCKER,10,"Splnit 10 zákazek za øidièe kamionu"},
	{DAILY_TYPE_DUEL,5,"Vyhrát 5 kol v duelu"},
	{DAILY_TYPE_TIME,120,"Nahrát za den 2 hodiny na serveru"},
	{DAILY_TYPE_MISSION_POLICE,3,"Zatknout 3 hráèe"},
	{DAILY_TYPE_RACE_WIN,5,"Vyhrát 5 závodù"},
	{DAILY_TYPE_ROB,20,"Vykrást 20 nemovitostí"},
	{DAILY_TYPE_CARS_SELL,10,"Prodat 10 vozidel Wang Cars"},
	{DAILY_TYPE_MISSION_HASIC,20,"Splnit 20 misí za Hasièe"},
	{DAILY_TYPE_MISSION_BUS,10,"Splnit 10 misí za øidièe autobusu"},
	{DAILY_TYPE_MISSION_DREVORUBEC,10,"Splnit 10 misí za Døevorubce"},
	{DAILY_TYPE_KILLS,16,"Zabít 15 hráèù"},
	{DAILY_TYPE_GANG_TAKE,3,"Zabrat 3 gang území"},
	{DAILY_TYPE_GANG_KILLS,10,"Zabít 10 èlenù nepøátelského gangu"},
	{DAILY_TYPE_DM_KILLS,20,"Zabít 20 lidí v DeathMatchi"},
	{DAILY_TYPE_YAKUZA_TAKE,20,"Zabrat 20 nemovitosti pro rodinu Yakuzy"},
	{DAILY_TYPE_MAFIA_TAKE,20,"Zabrat 20 nemovitostí pro rodinu Ruská mafie"},
	{DAILY_TYPE_MISSION_MECHANIC,10,"Splnit 10 misí za Mechanika"},
	{DAILY_TYPE_RACE_WIN,4,"Vyhrát 4 závody"},
	{DAILY_TYPE_KOSTKA,3,"Vyhrát 3 hody v kostce"},
	{DAILY_TYPE_ROB,25,"Vykrást 25 nemovitostí"},
	{DAILY_TYPE_SMOKE,30,"Vyhulit 30g trávy (/zhulit)"},
	{DAILY_TYPE_STUNTS,20,"Dokonèit 20 libovolných stuntù"},
	{DAILY_TYPE_DUEL,7,"Vyhrát 7 kol v duelu"},
	{DAILY_TYPE_ROB,35,"Vykrást 35 nemovitostí"},
	{DAILY_TYPE_RACE,15,"Odjet 15 závodù"},
	{DAILY_TYPE_GANJA,30,"Vypìstovat 30g marihuany"}
};

new ActiveDailyIDs[3];

/*enum ENUM_OtherSkins
{
	sSkinBaseID,sSkinID,sSkinFile[24]
};

new OtherSkins[][ENUM_OtherSkins] =
{
	{180,0,"robot1"},
	{180,1,"robot2"},
	{180,2,"dalmatine"},
	{180,3,"buldog"},
	{180,4,"groot"},
	{180,5,"zombie2"},
	{180,6,"zombie3"},
	{180,7,"zombie4"},
	{180,8,"zombie5"},
	{180,9,"zombie6"},
	{180,10,"zombie7"},
	{180,11,"zombie8"},
	{180,12,"zombie9"},
	{180,13,"survivor1"},
	{180,14,"survivor2"},
	{180,15,"survivor3"},
	{180,16,"survivor4"},
	{180,17,"survivor5"},
	{180,18,"pikachu"},
	{180,19,"space_monkey"}
};
*/
enum ENUM_PlayerData
{
	pAFKTime,pAFKTimeTotal,
	pPrevVeh,
	pMadeEvents,
	eProp[MAX_EPROP_PER_PLAYER],
	pPMHightLight,
	pEventKills,
	pGunGameState,
	pBanned,
	bool:pSkinOwned[sizeof(CustomSkin)],
	pMail[50],
	pZrusMisiTime,
	pHide,
	pDaily[3],
	bool:pDailyComp,
	pDailyDone,
	pPostrehStreak
}

new Player[MAX_PLAYERS][ENUM_PlayerData];

enum ENUM_Vybava
{
	vybID[MAX_VYBAVA_SLOTS],vybName[24]
}

new pVybava[MAX_PLAYERS][MAX_PLAYER_VYBAVA][ENUM_Vybava];

new tTickets[][] =
{
	{1,50},
	{2,90},
	{3,130},
	{4,170},
	{5,210}
};

new LastVylosovani;

new GunGameGuns[] = {27,25,31,30,28,32,29,34,33,24,22,23};
/*

enum ENUM_EPropertyData
{
	bool:ePUsed,ePInt,Float:ePX,Float:ePY,Float:ePZ
}

new eProps[MAX_EPROPS][ENUM_EPropertyData];

new Float:ElitePropsInteriors[][7] =
{
	{934.6870,2085.8604,10.8203,180.1934,975.8062,2084.2339,11.0301}
};

new ePropsNames[sizeof(ElitePropsInteriors)][24] =
{
	"Drogové doupì"
};
*/

enum ENUM_RandomPics
{
	picModel,picType,picAdd
}
new Float:PUBGVehicles[][4] =
{
	{-665.3303,-1996.0386,24.4682,11.6079},
	{-449.1752,-1968.6381,22.4978,172.5756},
	{-809.3629,-2168.9858,21.8647,159.7978},
	{-1090.4086,-2135.4636,37.7590,167.6674},
	{-777.3409,-2454.0488,72.8158,148.1208},
	{-712.1040,-2352.7319,40.9209,191.6687},
	{-447.3163,-2259.6140,46.3831,278.2056},
	{-761.7772,-2683.0126,84.2578,134.4606},
	{-1150.2235,-2640.0449,10.4646,41.2000},
	{-1479.2364,-2632.3278,43.5966,91.2933},
	{-928.6891,-2858.7629,67.2093,242.0697},
	{-268.1721,-2847.9799,40.0493,262.9853},
	{-1710.7043,-2303.2116,44.8485,286.4625},
	{-1672.3258,-2108.0104,37.9488,38.8337},
	{-1442.9062,-2162.7924,8.2710,267.0867},
	{-1151.0430,-2372.8227,25.0985,253.1828},
	{-1443.6462,-1773.8076,48.0543,81.7122},
	{-1788.0435,-1927.8392,94.5637,111.6564},
	{-1859.8902,-1615.9925,21.5122,110.0711},
	{-2117.8115,-2106.9775,59.8495,146.3382},
	{-2122.4023,-2762.5253,41.7004,278.0412}
};

new Float:PUBGPos[][3] =
{
	{-117.6097,-2627.1166,70.8796},
	{-137.1723,-2596.4580,63.8285},
	{34.9040,-2654.4694,40.0750},
	{33.3262,-2640.8447,39.9949},
	{-163.0056,-2639.5681,24.9767},
	{-257.3224,-2181.0385,28.6042},
	{-263.3934,-2186.1330,28.4906},
	{-285.3705,-2150.7561,28.1101},
	{-692.8426,-2147.1308,24.0377},
	{-656.6875,-1905.7647,7.6505},
	{-846.3721,-1958.3394,14.2155},
	{-964.3854,-1981.9865,65.2157},
	{-1209.0445,-2366.7407,6.3826},
	{-1216.6091,-2345.2822,16.9128},
	{-1357.9093,-2149.1206,25.9868},
	{-1090.9997,-2334.9094,51.3012},
	{-1004.4072,-2338.4418,65.7072},
	{-962.0304,-2338.6159,63.7562},
	{-934.9039,-2420.7199,77.3169},
	{-926.4763,-2473.2734,98.3202},
	{-752.0388,-2493.7890,77.7317},
	{-623.5224,-2392.5485,29.6553},
	{-576.1225,-2307.2653,27.5367},
	{-576.5594,-2192.9953,37.6062},
	{-900.6668,-2642.9587,96.0188},
	{-775.6787,-2711.3195,82.9059},
	{-451.6325,-2827.4052,46.4757},
	{-942.0785,-2810.2141,90.5184},
	{-1249.1101,-2703.3107,47.6708},
	{-1398.5285,-2691.5827,73.8417},
	{-1613.9304,-2657.9506,57.1078},
	{-1585.3054,-2572.8767,28.3083},
	{-1675.4959,-2517.9069,18.9290},
	{-1623.8787,-2686.6857,48.1077},
	{-1560.1978,-2722.5869,48.2113},
	{-1536.5733,-2742.8537,48.0996},
	{-1871.3791,-2472.6877,33.1689},
	{-1976.9899,-2412.4467,36.6403},
	{-2018.2364,-2395.4741,30.1876},
	{-2057.1960,-2545.2836,30.1915},
	{-2076.4748,-2437.8295,30.1904},
	{-2114.6987,-2406.6838,30.8674},
	{-2119.4711,-2413.3825,30.7912},
	{-2115.3496,-2413.8276,30.8080},
	{-2109.6542,-2408.6269,30.8740},
	{-2139.6752,-2447.4680,30.2068},
	{-2155.2309,-2550.0563,30.1591},
	{-2211.0051,-2515.0354,30.4116},
	{-2233.4353,-2568.4338,31.4856},
	{-2194.0319,-2435.1713,30.1887},
	{-2179.7463,-2411.0854,35.2968},
	{-2181.4689,-2431.8610,35.5234},
	{-2224.9111,-2401.6166,31.5500},
	{-2202.2622,-2339.8674,30.1940},
	{-2231.1081,-2297.4523,30.1896},
	{-2199.8515,-2243.5173,30.3463},
	{-2076.7185,-2242.6257,31.0543},
	{-2091.1132,-2344.6000,30.1913},
	{-2417.2836,-2178.2661,32.8752},
	{-1976.8308,-1820.3544,36.9994},
	{-1837.3548,-1709.7216,23.2031},
	{-1847.6132,-1704.7601,40.8054},
	{-1901.8040,-1681.2242,23.0156},
	{-1914.1622,-1682.0914,23.0156},
	{-1901.6676,-1663.3767,23.0156},
	{-1912.8244,-1660.8417,23.0156},
	{-1893.0844,-1619.7188,21.7564},
	{-1857.2510,-1550.5450,21.7500},
	{-1788.8038,-1607.1254,21.7500},
	{-1807.9183,-1621.0566,23.0215},
	{-1805.7744,-1605.4798,23.0215},
	{-1829.1003,-1604.9858,23.0156},
	{-1831.4825,-1620.4793,23.0156},
	{-1741.6357,-1872.6812,91.6370},
	{-1855.5478,-1882.9652,88.9803},
	{-1992.4963,-1931.1044,78.1709},
	{-2011.4765,-2001.4351,80.9687},
	{-1956.2961,-2128.9099,76.1093},
	{-1867.4189,-2308.0295,46.7903},
	{-1899.8605,-2369.9572,30.8267},
	{-1832.5554,-2176.4636,79.6120},
	{-1659.5727,-2057.6213,53.5454},
	{-1636.3444,-2234.3666,31.4765},
	{-1631.5764,-2234.2180,31.4765},
	{-1629.6015,-2245.2402,31.4765},
	{-1636.2402,-2245.7199,31.4765},
	{-1439.1632,-2190.8044,14.0067},
	{-1400.6105,-2213.9028,27.5086},
	{-1319.8798,-2248.7744,30.7686},
	{-1245.7487,-2164.0466,29.6759},
	{-1466.6446,-1884.7655,46.4761},
	{-1497.0186,-1886.2159,71.8880},
	{-1480.2546,-2357.4355,14.0496},
	{-1471.0043,-2485.4985,51.8457},
	{-1351.7844,-2487.6350,34.8076},
	{-1290.4842,-2491.8908,17.2530},
	{-1258.7084,-2599.7082,18.3283},
	{-1051.6407,-2675.4858,40.7057},
	{-805.1170,-2370.4238,52.8243},
	{-846.7912,-2322.8339,32.4378},
	{-902.2897,-2216.3310,34.6057},
	{-981.1788,-2195.4858,42.1563},
	{-945.2413,-2087.8715,113.9737},
	{-949.8218,-2124.6662,117.2260},
	{-902.4565,-2059.6662,144.9364},
	{-903.2575,-2047.8914,146.4427},
	{-904.5083,-2034.5871,147.8722},
	{-884.7254,-2021.3691,138.8260},
	{-592.7132,-1991.8381,42.9795},
	{-614.9276,-1953.8455,31.8338},
	{-629.8548,-1982.0905,49.9030},
	{-548.5260,-2067.6162,56.5164},
	{-424.6479,-2000.6899,34.8954},
	{-378.3078,-1915.7836,10.8762},
	{-336.8699,-1914.9501,11.9528}
};

new RandomPickups[][ENUM_RandomPics] =
{
	{1242,TYPE_ARMOUR,0},
	{2061,TYPE_AMMO,0},
	{1240,TYPE_HEALTH,0},
	{347,TYPE_WEAPON,23},
	{346,TYPE_WEAPON,22},
	{348,TYPE_WEAPON,24},
	{351,TYPE_WEAPON,27},
	{349,TYPE_WEAPON,25},
	{353,TYPE_WEAPON,29},
	{355,TYPE_WEAPON,30},
	{356,TYPE_WEAPON,31},
	{358,TYPE_WEAPON,34},
	{357,TYPE_WEAPON,33}
};

new PlayerText:DuelTD[MAX_PLAYERS][MAX_DUEL_TD];

new Float:DuelPos[2][4] =
{
	{-1300.8148,-110.2604,-67.0000,203.4169},
	{-1280.6327,-165.6397,-67.0000,14.5313}
};
/*
enum ENUM_PackageData
{
	pID,Float:pX,Float:pY,Float:pZ,Finded,Text3D:Label,Pickup
}

enum ENUM_PlayerPackagesData
{
	FindPackages,bool:FindPack[MAX_PACKAGES]
}

enum ENUM_PackagesData
{
	TotalPackages, bool:PackagesState, PackagesVW
}

new Package[MAX_PACKAGES][ENUM_PackageData];
new PlayerPackages[MAX_PLAYERS][ENUM_PlayerPackagesData];
new Packages[ENUM_PackagesData];
*/
enum ENUM_DuelData
{
	DuelWeapon,DuelRound,DuelRounds,DuelPlayer[2],DuelKills[2],
	DuelStatus,DuelTime,DuelOdp,DuelRoundTime,DuelTimer
}

enum ENUM_PlayerDuelData
{
	pDuelStatus,pDuelRoom,DuelPlayer,pDuelSpec
}

new dPlayer[MAX_PLAYERS][ENUM_PlayerDuelData];
new Duel[MAX_DUELS][ENUM_DuelData];

#define WARP_CITIES     0
#define WARP_AIRPORTS   1
#define WARP_DRIFTS     2
#define WARP_TUNINGS    3
#define WARP_OTHERS     4

enum ENUM_WarpData
{
	wCategory,wCMD[15],Float:wX,Float:wY,Float:wZ,wPredlozka[3],wLokace[30],wWeapon,wVehicle
}

new WarpCategories[][] =
{
	"Mìsta",
	"Letitì",
	"Drifty",
	"Tuningové dílny",
	"Ostatní"
};

new Warps[][ENUM_WarpData] =
{
	{WARP_CITIES,"lv",1692.9095,1454.6190,10.7645,"do","Las Venturas",-1,-1},
	{WARP_CITIES,"sf",-1950.2485,578.4912,35.5415,"do","San Fiera",-1,-1},
	{WARP_CITIES,"ls",1270.4708,-1337.5778,13.3371,"do","Los Santos",-1,-1},
	{WARP_AIRPORTS,"draglv",1473.9213,1780.9507,10.8125,"na","Letitì LV",-1,-1},
	{WARP_AIRPORTS,"dragsf",-1671.2374,-174.6528,14.1484,"na","Letitì SF",-1,-1},
	{WARP_AIRPORTS,"dragls",1448.0426,-2493.7043,13.1796,"na","Letitì LS",-1,-1},
	{WARP_AIRPORTS,"nevada",423.0148,2499.6289,16.4844,"na","Letitì Nevada",-1,-1},
	{WARP_DRIFTS,"driftsf",-2407.1277,-597.5767,132.6484,"na","Drift SF",-1,-1},
	{WARP_DRIFTS,"driftlv",2320.3948,1448.6752,42.8203,"na","Drift LV",-1,-1},
	{WARP_DRIFTS,"driftpoust",-307.5260,1514.7635,75.3594,"na","Drift Pou",-1,-1},
	{WARP_DRIFTS,"drift",276.4462,4930.4961,774.3270,"na","Canyon Drift",-1,-1},
	{WARP_TUNINGS,"tuninglv",2386.9284,1032.9649,10.4453,"k","Tuningu LV",-1,-1},
	{WARP_TUNINGS,"tuningsf",-2710.8852,217.8113,3.8296,"k","Tuningu SF",-1,-1},
	{WARP_TUNINGS,"tuningwc",-1935.5643,234.4339,33.8587,"k","Tuningu Wang",-1,-1},
	{WARP_TUNINGS,"tuningls",2644.8103,-2031.4570,13.1753,"k","Tuningu LS",-1,-1},
	{WARP_OTHERS,"ostrov",-2336.1084,2343.5352,4.9844,"na","Ostrov",-1,-1},
	{WARP_OTHERS,"skatepark",1944.7495,-1372.5892,18.5781,"do","Skate Parku",-1,-1},
	{WARP_OTHERS,"stadion",1096.9209,1617.1333,12.5469,"na","Stadion",-1,-1},
	{WARP_OTHERS,"chiliad",-2319.9268,-1638.3442,483.7031,"na","Mount Chiliad",-1,-1},
	{WARP_OTHERS,"bigtunel",-2623.065429,2177.413330,4003.699218,"na","Bigtunel",-1,-1},
	{WARP_OTHERS,"grove",2487.6323,-1668.9922,13.3359,"do","Grove Street",-1,-1},
	{WARP_OTHERS,"mrakodrap",1544.0980,-1355.4080,329.4707,"na","Mrakodrap",-1,-1},
	{WARP_OTHERS,"ballas",2224.1616,-1154.6422,25.7836,"k","Ballasum",-1,-1},
	{WARP_OTHERS,"vagos",2350.9597,-1161.5328,27.3918,"k","Vagos",-1,-1},
	{WARP_OTHERS,"aztecas",1884.0601,-2022.0332,13.3906,"k","Aztecas",-1,-1},
	{WARP_OTHERS,"area",313.4467,1952.5280,17.6406,"k","Area 51",-1,-1},
	{WARP_OTHERS,"caligula",2162.6658,1683.6243,10.8203,"ke","Caligule",-1,-1},
	{WARP_OTHERS,"dragon",2031.5106,1008.7639,10.8203,"k","Four Dragons",-1,-1},
	{WARP_OTHERS,"policielv",2287.2000,2412.4541,10.8807,"k","Policii LV",-1,-1},
	{WARP_OTHERS,"urad",2428.2073,1124.3113,10.6719,"na","Úøad",-1,-1},
	{WARP_OTHERS,"nemocnice",1606.5399,1841.5455,10.8203,"k","Nemocnici",-1,-1},
	{WARP_OTHERS,"wang",-1977.8038,288.3367,34.9428,"k","Wang Cars",-1,-1},
	{WARP_OTHERS,"otto",-1631.9600,1203.2496,7.1797,"k","Otto's Autos",-1,-1},
	{WARP_OTHERS,"jizzy",-2618.2634,1392.8973,6.7271,"k","Jizzy Klubu",-1,-1},
	{WARP_OTHERS,"farma",-1091.2806,-1641.5371,76.3739,"na","Farmu",-1,-1},
	{WARP_OTHERS,"topgear",-2865.5017,1417.8308,7.4174,"na","Top Gear",-1,-1},
	{WARP_OTHERS,"basejump",-1337.5111,-2894.2139,2671.3457,"na","Base Jump",46,0},
	{WARP_OTHERS,"stuntpark",-209.3010,3884.7251,14.1366,"do","Stunt Parku",-1,-1},
	{WARP_OTHERS,"autoskola",-2020.3893,-98.0877,35.1641,"k","Autokole",-1,-1},
	{WARP_OTHERS,"chodnikslavy",972.2021,-1133.7153,23.8281,"k","Chodníku slávy",-1,-1}
};

enum ENUM_GPSData
{
	gCat,gName[24],Float:gX,Float:gY,Float:gZ
}

new GPS[][ENUM_GPSData] =
{
	{0,"Ruská Mafia",2169.7664,1711.8387,11.0469},
	{0,"Ruská Mafia",-1673.2389,1367.0319,7.1722},
	{1,"Pilot",1715.2097,1616.5674,10.0548},
	{1,"Pilot",-1543.8795,-440.9693,6.0000},
	{1,"Pilot",1956.9459,-2183.6123,13.5469},
	{2,"Yakuza",1906.1869,956.6627,10.8203},
	{2,"Yakuza",-2172.6973,680.0135,55.1620},
	{3,"Zdravotník",1615.2050,1818.6062,10.8203},
	{3,"Zdravotník",-2649.7976,635.6573,14.4531},
	{3,"Zdravotník",1177.4781,-1323.2365,14.0727},
	{3,"Zdravotník",2036.6229,-1413.0352,16.9922},
	{4,"Mechanik",1941.4959,2184.6660,10.8203},
	{4,"Mechanik",-2101.9546,-391.1818,35.5313},
	{4,"Mechanik",2772.8943,-1819.5541,11.8438},
	{5,"Právník",2412.6613,1123.8356,10.8203},
	{5,"Právník",1724.4799,-1652.6080,20.0625},
	{6,"Policie",2287.0400,2432.1147,10.8203},
	{6,"Policie",1555.0899,-1674.8299,16.1953},
	{7,"Hasiè",1770.4496,2079.6157,10.8203},
	{7,"Hasiè",-2026.5299,67.2462,28.6916},
	{7,"Hasiè",1742.8964,-1459.7411,13.5066},
	{8,"SBS",2262.0061,2036.5695,10.8203},
	{8,"SBS",-1819.2751,-150.1722,9.3984},
	{8,"SBS",1304.7100,-795.7449,84.1406},
	{9,"Voják",349.5813,2024.0856,22.6406},
	{9,"Voják",-1525.9418,485.4807,7.1797},
	{9,"Voják",2731.5181,-2417.1606,13.6279},
	{10,"Dealer",-1111.0803,-1637.2302,76.3672},
	{10,"Dealer",-367.3138,-1427.6720,25.7266},
	{11,"Terorista",-1303.2765,2541.6926,93.3047},
	{12,"Taxikáø",2184.1016,1815.7340,10.8203},
	{12,"Taxikáø",-1861.9761,-145.2125,11.8984},
	{12,"Taxikáø",2140.5413,-1176.5918,23.9922},
	{13,"Úøad",2412.6613,1123.8356,10.8203},
	{14,"Prùkazy",-2026.6285,-100.1490,35.1640}
};

new TeamNames[][] =
{
	"Red",
	"Blue"
};

new TeamColors[] =
{
    red,
    blue,
};

new SlevaMSG[100];
new SpawnTypeNames[][] = {"Povolání","Gangu","Domu"};

new Letters[][] =
{
	"A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"
};
new BotCommands[][] = {"ban","kick","var","mute","unmute","tban","say","gw","gm","vyhra","eventend","respcars","god","cblock","uncblock","banip","cas","pocasi","adelete","rpenize","acheat","avypoved","anketa","spam"};

new PWBLOCK;
new VWBLOCK;
new DailyID;
new DailyDay;
new Float:ServerPoints;
new botid = -1;
new botrespawn;

new XPBoosts[][] =
{
	{20,25},
	{31,50},
	{50,75},
	{75,100},
	{100,120}
};
new vArmors[][] =
{
	{25,25,3300},
	{50,50,5500},
	{75,75,7800},
	{100,100,10000}
};

new ReportReasons[][] =
{
	"Nevhodný slovník",
	"Uráky hráèe",
	"Uráky rodiny",
	"Napodobování nicku",
	"Zneuití bugu",
	"Speed Hack",
	"Fly Hack",
	"Teleport Hack",
	"Zneuití ESC",
	"Naruování eventu",
	"Reklama"
};

new GarageCategories[][] =
{
	"Sportovní",
	"Motorky",
	"Salónové",
	"Off-Road",
	"Lowridery",
	"Lodì",
	"Letadla",
	"Helikoptéry",
	"Kola",
	"Dodávky",
	"Unikátní",
	"Limuzíny",
	"Kabriolety",
	"Sluební",
	"Prùmyslová",
	"Speciální",
	"Elita"
};

new Events[][] =
{
	"Fallout",
	"Derby",
	"Kopec smrti",
	"Mrakodrap smrti",
	"Let smrti",
	"Masakr",
	"Special Derby",
	"PUBG",
	"Team DeathMatch",
	"DeathMatch",
	"GunGame",
	"Hledání dárkù",
	"{0077FF}Vlastní"
};
new odpocetsek;
new joins;
new EventEndTime;
new EventHour = 12;
new EventWeather = 1;
new eventpatra;
new bool:EventStarted;
new bool:BotEventOn = true;
new eventobjects;
new eventwinpos;
new bool:BotEvent;
new EventMista;
new eObjects[5];
new eVehicles[30];
new Float:EventTDMPos[2][3];
new Float:EventDMPos[10][3];
new EventGuns[5];
new PlayerTeams[2];

enum ENUM_EventPickups
{
	PickID,PickModel,Float:PickPos[3],PickType,PickWorld
}

new ePickups[130][ENUM_EventPickups];

new PlayerEventObject[20][MAX_PLAYERS];

new Float:StuntPos[][7] =
{
	{2090.2326, 1351.7263, 10.8203,270.9315,2492.6806, 1347.9522, 16.6315},
	{1945.9725,2197.1606,10.3813,272.2362,2184.7619, 2225.8894, 24.93},
	{1970.5416, -1423.2785, 13.119,92.0689,1827.8133, -1414.3051, 29.6172},
	{-1657.2321,531.4206,38.0066,315.2982,-1520.1216, 676.241, 139.2734},
	{-2816.773, -6.5872, 7.1796,269.7873,-2660.6126, -5.7499, 11.557},
	{2094.8110,-1342.2494,23.5826,87.7567,1807.1002,-1347.0208,27.4634},
	{-2012.2109,838.4020,45.0194,358.3842,-2003.5226,1117.9620,70.3194},
	{1799.3341,1450.8578,13.4844,269.1259,2093.7612,1482.9076,23.7100},
	{1872.8257,924.1755,10.3773,268.5099,2112.7883,919.8309,17.0547},
	{2137.4014,1048.0032,10.3914,198.8624,2168.8003,955.8382,15.6720},
	{2301.8730,1048.1135,10.3858,231.8380,2372.2610,980.3948,18.3189},
	{2422.6699,1213.3459,10.3203,92.2131,2008.6552,1216.0090,18.0859},
	{1757.3127,974.4865,10.3923,1.4146,1757.2887,1057.0864,15.0222},
	{1976.5986,875.5366,8.8854,83.2000,1777.3021,890.7548,26.8828},
	{1531.8970,-1369.1149,329.2987,327.8727,1574.5621,-1262.4944,277.4456},
	{1575.6697,-1248.1053,277.4510,272.2739,1664.8956,-1241.5698,232.9203},
	{-512.5339,1599.0032,28.5204,202.2909,-512.0514,1594.7863,2.2085},
	{-662.1915,2305.8335,135.6225,89.4026,-1028.4246,2315.0583,70.9818},
	{-1638.9966,-363.0471,13.7185,87.6334,-1798.6986,-369.8712,18.2902},
	{-712.5787,-252.3690,59.7686,88.3454,-1123.7201,-198.0383,13.7146},
	{1921.1348,1450.0135,10.2455,87.1793,1665.5966,1493.3165,21.4420},
	{-1608.3636,-276.2823,13.7323,33.9574,-1713.6854,-110.6567,17.8916},
	{2211.6550,-1995.4297,12.9032,353.4655,2234.2886,-1800.4698,20.6528},
	{2274.7454,-2281.9480,12.9350,339.9998,2346.1636,-2086.7776,20.7998},
	{2534.2559,-1735.1283,12.9534,164.9538,2501.6023,-1886.2028,25.1237},
	{1151.9252,-1573.1797,12.8310,178.1892,1139.5620,-1765.0768,29.0882},
	{1039.5884,-1633.3370,13.3828,11.0000,1013.7777,-1516.8634,24.3138},
	{1836.8242,-1453.6761,13.1323,345.9999,1883.8771,-1329.1459,24.3372},
	{882.1954,-1661.9097,13.1055,294.0000,976.5016,-1610.3550,27.5637},
	{-2405.2498,732.5854,34.5904,91.3165,-2544.8342,732.9932,44.5979},
	{505.9911,-1813.3445,5.8660,90.0000,404.1209,-1813.8716,14.7247},
	{953.3112,-952.9412,39.7117,85.5700,823.6908,-943.3613,60.2821},
	{-1997.2079,-194.9860,35.4369,5.0000,-2038.1085,-55.1372,46.8622},
	{2840.6978,-1024.8621,22.2300,172.9986,2822.9070,-1165.8931,32.2310},
	{1500.1022,-1303.9207,13.6159,263.9994,1744.3015,-1322.5594,29.5400},
	{2219.4429,-1741.9259,12.9689,184.2620,2233.6877,-1879.2236,18.4016},
	{1426.0521,-2201.3738,15.7484,269.0065,1593.8102,-2210.6138,23.2151},
	{1934.2054,1466.2521,10.3853,257.0252,2114.9065,1407.2880,16.0114},
	{-1636.2781,1192.2435,6.6567,88.8551,-1828.2788,1203.6864,42.1901},
	{910.5969,-1371.1067,12.9709,179.0186,904.4192,-1586.7810,28.0000},
	{1843.8035,-1476.9708,12.9583,276.0005,2052.0708,-1417.2170,47.9127},
	{1776.8092,-1964.2811,13.6927,88.0001,1698.7897,-1962.1681,19.3982},
	{-2557.4941,1097.4412,55.1324,264.7062,-1868.3478,1118.6235,67.3808},
	{2261.6130,1375.2257,10.2533,93.279,1913.6119,1360.8228,24.27890},
	{2299.7830,1371.5861,10.2941,271.415,2749.6145,1405.7860,24.0703},
	{1921.1625,2006.6338,9.9240,197.9410,1954.3213,1946.3867,23.2304},
	{2575.7949,-1941.0536,3.4345,173.0352,2521.8145,-2111.0183,26.5063},
	{1206.9917,-1858.6982,13.1275,269.703,1402.3479,-1860.0154,30.6969},
	{1864.5504,-1429.0592,13.1281,273.0199,1975.5220,-1427.9860,27.9615},
	{1536.5673,-1584.2129,13.1203,180.631,1544.3049,-1706.0529,28.3948},
	{-2141.7380,-214.5104,34.8927,0.8145,-2141.1040,-90.7001,44.5272},
	{-845.0894,2738.2810,45.3095,131.5885,-916.0004,2671.8579,49.7041},
	{-2241.0000,322.8295,34.7273,264.9384,-1938.1793,298.1014,47.2557},
	{-2075.5222,42.1677,34.8672,357.7680,-2075.5376,63.5853,36.4950},
	{1845.6260,1206.3796,10.3925,0.9332,1846.0569,1293.5897,16.4862},
	{1757.2170,971.9970,10.3809,178.2776,1757.2410,898.6053,14.5832},
	{-2002.4552,15.7119,32.5447,170.7180,-2027.4860,-111.7234,38.4836},
	{215.6517,-1774.4075,3.4906,269.6385,637.3196,-1770.4823,24.2077},
	{2349.4702,1891.6566,10.4140,89.2658,2077.2256,1901.1326,17.3636},
	{2233.3701,786.5175,9.3512,87.6426,2121.8953,780.7393,14.8706},
	{2103.7620,-1807.3551,13.1254,84.8405,2038.9250,-1797.6660,21.4049},
	{2058.8218,-1339.3031,23.3889,262.7724,2248.2285,-1346.9425,36.1314},
	{1818.9191,-1949.8848,13.1113,264.1241,2043.8722,-1971.7397,22.5853},
	{2014.5576,-1948.9827,13.1206,104.4926,1898.9154,-1982.4380,18.3642},
	{554.7776,-1229.3633,16.7581,191.1933,575.6145,-1343.9269,21.5036},
	{747.2964,-1815.8153,12.5942,75.0000,587.6439,-1765.9147,24.8960},
	{1355.2498,-1279.6409,12.9281,88.9993,1170.0127,-1296.3607,31.0604},
	{-2504.6218,445.2160,27.0946,301.9980,-2359.7581,581.2350,41.5335},
	{2834.9360,1468.3336,10.4311,172.6083,2802.7417,1249.1779,22.5514},
	{1289.5321,-1776.2566,13.1115,357.9999,1289.8538,-1483.9397,29.1392}, //XX
	{1343.5138,-1624.8679,13.1573,179.7488,1332.8274,-1674.0754,22.4383},
	{1968.6466,-1424.6398,13.1303,90.9998,1829.8284,-1432.2195,35.4604}
};

enum ENUM_PlayerStuntData
{
	sVeh,sTime,sTakeTime,sCompleted,sTotalCompleted,sEachCompleted[sizeof(StuntPos)],sStuntID,bool:sStatus[sizeof(StuntPos)]
}

new pStunt[MAX_PLAYERS][ENUM_PlayerStuntData];

new Float:DerbyPos[][5] =
{
    {2413.1145,1087.2095,34.6031,45.0},
    {2361.5776,1087.2239,34.6098,315.0},
    {2361.3130,1180.0059,34.6144,225.0},
    {2412.8750,1179.6537,34.6094,135.0},
    {2387.4907,1088.7042,34.6097,360.0},
    {2387.3506,1177.4988,34.6018,180.0},
    {2363.4722,1131.1221,34.6083,270.0},
    {2411.3477,1130.6433,34.6086,90.0},
    {2363.0461,1109.7120,34.6100,270.0},
    {2411.5,1109.5944,34.6100,90.0},
    {2411.5,1154.5121,34.6140,90.0},
    {2363.1313,1154.5415,34.6099,270.0}
};
new Float:WalkOfFamePos[][3] =
{
	{974.8627,-1133.7022,23.8203},
	{979.6491,-1133.6003,23.8203},
	{984.0158,-1133.5374,23.8281},
	{988.6301,-1133.5942,23.8281},
	{993.1351,-1133.5272,23.8281},
	{997.7826,-1133.4978,23.8281},
	{1002.1414,-1133.4694,23.8281},
	{1007.0065,-1133.4379,23.8281},
	{1011.2989,-1133.4107,23.8281},
	{1016.0874,-1133.5640,23.8281},
	{1020.4455,-1133.7480,23.8281},
	{1025.4785,-1133.6866,23.8203},
	{1030.1964,-1133.6292,23.8203},
	{1034.8291,-1133.5712,23.8203},
	{1039.0144,-1133.6634,23.8203},
	{1043.4873,-1133.7366,23.8203},
	{1047.9362,-1133.6833,23.8281},
	{1052.4873,-1133.6287,23.8281},
	{1057.1217,-1133.7277,23.8281},
	{1061.4675,-1133.6745,23.8281},
	{1066.0433,-1133.8079,23.8281},
	{1070.4262,-1133.7548,23.8281},
	{1094.9417,-1133.7019,23.8281},
	{1099.1450,-1133.7884,23.8281},
	{1103.5092,-1133.7437,23.8281},
	{1107.6798,-1133.7631,23.8281},
	{1112.0676,-1133.7836,23.8281},
	{1116.3389,-1133.7239,23.8281},
	{1120.8636,-1133.6291,23.8281},
	{1124.9990,-1133.6743,23.8281},
	{1129.0811,-1133.7191,23.8281},
	{1133.4571,-1133.7670,23.8281},
	{1137.8242,-1133.7253,23.8281},
	{1142.1243,-1133.7722,23.8281},
	{1146.4378,-1133.6751,23.8281},
	{1150.8248,-1133.7230,23.8281},
	{1174.9892,-1133.7751,23.8441},
	{1180.2471,-1133.7612,23.8608},
	{1185.4750,-1133.7714,23.8696},
	{1190.5841,-1133.7353,23.8858},
	{1195.7966,-1133.6597,23.9027},
	{1201.3084,-1133.6260,23.9261},
	{1206.6921,-1133.6608,23.9440},
	{1212.0935,-1133.5994,23.9553},
	{1217.4501,-1133.5631,23.9586},
	{1222.7673,-1133.4555,23.9183},
	{1228.3602,-1133.4018,23.8861},
	{1233.6094,-1133.3796,23.8618},
	{1238.9934,-1133.5242,23.8499},
	{1244.4307,-1133.6442,23.8406},
	{1249.8374,-1133.6849,23.8314}
};

new Float:GiftsPos[][3] =
{
	{-2236.9514,-1715.0388,476.7704},
	{-2597.0830,-1540.3852,421.0820},
	{-2388.0964,-1864.8701,404.9690},
	{-2349.8669,-2024.8457,265.4614},
	{-1993.4708,-1565.1817,85.9625},
	{-2712.9577,-1915.5860,91.5261},
	{-2832.5131,-1420.1270,135.9985},
	{-2504.0151,-1146.0185,145.8832},
	{-2202.1469,-1347.3323,296.0569},
	{-2635.4958,-2147.7094,71.6130}
};

new PickedGifts[MAX_PLAYERS][sizeof(GiftsPos)];
new TotalGifts[MAX_PLAYERS];
new bool: GiftMode;

#file "UnNamed_v2.0"
#define JailCmdBlock(%1); if(IsPlayerInRangeOfPoint(playerid,7.0,198.3082,161.9286,1003.0300)) return SM(playerid,"Ve vìzení nemùete pouít tento pøíkaz"); if(GetPlayerWantedLevel(playerid) == 0) { if(IsPlayerInRangeOfPoint(playerid,20.0,248.7287,1800.2538,7.4141)) return SM(playerid,"Ve vìzení nemùete pouít tento pøíkaz"); if(PrisonTime[playerid] > 0) return SM(playerid,"Ve vìzení nemùete pouít tento pøíkaz"); }

#define host	"localhost"
#define user	"root"
#define db		"unsamp"
#define db_pass	""

/*
#define host	"casa4.fakaheda.eu"
#define user	"217521_mysql_db"
#define db		"217521_mysql_db"
#define db_pass	"testserver"
*/
new bool:blockplayerpos;
new serverweather = 1;
new objectlist = mS_INVALID_LISTID;
new mysql;
new connections;
//============================================================================//
static CENZURA[MAX_ENTRY][MAX_LEN];

new url[250];
new atext[128];

new transactionid;
new propertyid;
new DMTextTimer[MAX_DMS];

new EventName[129];
new EventInfo[129];
new EventPlace[129];
new EventReward[2];
new EventRadius;
new Float:EventRadiusPos[4];
new EventZone[2];
new EventAdmin[MAX_PLAYER_NAME+1];
new EventBody;
new Event;
new EventOptions;
new EventWorld;
new EventTime[3];
new EventTimer;
new EventPlayers;
new RunEvent;
new EventState;
new portid;
new EventRace = -1;
new interior;
new AnketaTimer;

new ano;
new ne;
new nevim;
new hlasovani;

new Znaminko;
new Priklad[2];
new PostrehString[16] = "";
//new TextKOpsani[50];
new PostrehOdmena;

new Truck[15];
new Bus[16];
new TreeCar[10];
new KuryrCar[12];
new Plane[8];
new MechanicCars[9];

new CarSellObject;
new CarSellID;
new CarSellText;

new sumo;
new bool: LogActions = false;
new bool: SumoStart;
new hraci = 0;
new phraci = 0;
new ahraci = 0;
new ecarid;
new pozice[MAX_RACES];
new cps[MAX_RACES];
new TimeToStartSeconds[MAX_RACES];
new RaceVehicle[MAX_RACES];
new AutRepair;
new acars[50];

new minuty;
new hodiny;
new TimerStream;
new TimerGameTime;
new dos[MAX_PLAYERS];
new SumoTime;

new MusicTimeMinutes;
new MusicTimeSeconds;
new POINT_PRICE;
new bool:CHRISTMAS_MODE;

new Missions[][] =
{
	"ádná",
	"Øidiè kamionu",
	"Øidiè autobusu",
	"Døevorubec",
	"Kurýr",
	"Pilot",
	"Mechanik",
	"Policista",
	"Zdravotník",
	"Hasiè"
};

new MissionsCount[MAX_PLAYERS][sizeof(Missions)];
new MissionTimeSeconds[MAX_PLAYERS];
new MissionTimer[MAX_PLAYERS];
new MissionToEndTimer[MAX_PLAYERS];
new MissionToEndTime[MAX_PLAYERS];
new bool: MissionLastCustomer[MAX_PLAYERS][MAX_PLAYERS];
new MissionPay[MAX_PLAYERS];
new PrevMission[MAX_PLAYERS];
new MissionObject[MAX_PLAYERS];
new MissionVehicle[MAX_PLAYERS];
new AntiSpam[MAX_PLAYERS];
new MissionTrailer[MAX_PLAYERS];
new MissionLine[MAX_PLAYERS];
new PrisonTime[MAX_PLAYERS];
new MissionCar[MAX_PLAYERS];
new bool:Kicked[MAX_PLAYERS];
new EventPlayer[MAX_PLAYERS];
new SecondTimer[MAX_PLAYERS];
new pHours[MAX_PLAYERS];
new pMinutes[MAX_PLAYERS];
new MusicID[MAX_PLAYERS];

new BombAreaZone;

new Float:XX,Float:YY,Float:ZZ,Float:AA;
new Float:bX,Float:bY,Float:bZ,bRadius,bTime,bType;
new Float:XXX,Float:YYY,Float:ZZZ,int;
new Float:LastX[MAX_PLAYERS],Float:LastY[MAX_PLAYERS],Float:LastZ[MAX_PLAYERS],LastInt[MAX_PLAYERS];
new Float:SpawnPos[MAX_PLAYERS][3];
new Float:AFKPos[MAX_PLAYERS][3];

new Text:Textdraw0;
new Text:Textdraw1[MAX_PLAYERS];
new Text:Textdraw2;
new Text:Textdraw3; //Event Text
new Text:Textdraw5;
new Text:event[5];
new Text:TDTimery[MAX_PLAYERS][3];
new Text:Textdraw7;
new Text:Textdraw8;
new Text:Textdraw9;
new Text:Textdraw11;
new Text:Textdraw12;
new Text:Textdraw13;
new Text:Textdraw16;
new Text:Textdraw17;
new Text:Textdraw18;
new Text:Textdraw19;
new PlayerText:TDTime[MAX_PLAYERS];
new Text:Textdraw20; //Pozadi (Race)
new Text:Textdraw21; //Pozadi2 (Race)
new PlayerText:Textdraw22[MAX_PLAYERS]; //CPCount
new PlayerText:Textdraw23[MAX_PLAYERS]; //RacePosition
new PlayerText:Textdraw24[MAX_PLAYERS]; //TimeRace
new PlayerText:Textdraw25[MAX_PLAYERS]; //MisionText
new PlayerText:Textdraw26[MAX_PLAYERS]; //MisionText
new Text:Textdraw28; //Anketa
new PlayerText:Textdraw29[MAX_PLAYERS]; //XP Text
new PlayerText:Textdraw30[MAX_PLAYERS]; //+ XP Text
new PlayerText:Textdraw31[MAX_PLAYERS]; //Wanted Level
new Text:Textdraw32; //Wanted Level - pozadí
new PlayerText:Textdraw33[MAX_PLAYERS]; //Kills + Deaths (DM)
new PlayerText:Textdraw34[MAX_PLAYERS]; //Pocet hracu (DM)
new Text:Textdraw35[MAX_DMS]; //Kill Text (DM)
new PlayerText:Textdraw36[MAX_PLAYERS]; //Score Text (DM)
new PlayerText:Textdraw37[MAX_PLAYERS]; //Score Box (DM)
new PlayerText:Textdraw38[MAX_PLAYERS]; //HP Text
new PlayerText:Textdraw39[MAX_PLAYERS]; //Armour Text
new PlayerText:Textdraw40[MAX_PLAYERS]; //Spectate - Nick
new PlayerText:Textdraw41[MAX_PLAYERS]; //Spectate - Text
new Text:Textdraw42; //Rezim nahledu
new PlayerText:Textdraw43[MAX_PLAYERS]; //Darky text
new Text:Textdraw44; //EventTime
//============================================================================//
enum ENUM_MapData
{
	MapObject[MAX_OBJECTS_EX],MapObjectID[MAX_OBJECTS_EX],
	Float:MapX[MAX_OBJECTS_EX],Float:MapY[MAX_OBJECTS_EX],Float:MapZ[MAX_OBJECTS_EX],
	Float:MapRX[MAX_OBJECTS_EX],Float:MapRY[MAX_OBJECTS_EX],Float:MapRZ[MAX_OBJECTS_EX],
	Float:MapSX,Float:MapSY,Float:MapSZ,MapVW,
	MapAutor[24],MapName[24],bool:MapLoaded,MapAutoLoad,bool:MapSlotUsed
}

new Map[MAX_MAPS][ENUM_MapData];

enum DBVehData
{
	dbvID
}

new DBVeh[MAX_VEHICLES][DBVehData];

enum DMData
{
	DMName[25],DMInt,DMWeapon[MAX_DM_WEAPONS],bool:DMLObjects,DMPlayers
}

new DM[][DMData] =
{
	{"Jefferson Motel",15,{31},false},
	{"Caligula's Casino",1,{31},false},
	{"Airport SF",0,{26},false},
	{"RC Battlefield",10,{30},false},
	{"Ruins",0,{24},true},
	{"Minigun Madness",0,{38},false},
	{"Area 51",0,{34,4},false}
};


new Float:DMPos[][][4] =
{
	{
		//Jefferson Motel
		{2217.6020,-1153.2904,1025.7968,323.0000},
		{2227.2727,-1138.5963,1029.7968,142.7854},
		{2241.6943,-1150.8292,1029.8043,128.0585},
		{2231.5864,-1155.9372,1029.7968,267.8064},
		{2235.5305,-1168.7343,1029.8043,239.8961},
		{2246.2170,-1193.2453,1029.7968,20.2473},
		{2226.5534,-1183.5034,1029.7968,159.6819},
		{2186.8261,-1184.0357,1029.7968,268.0963},
		{2199.1921,-1157.5406,1029.7968,86.0479},
		{2190.5310,-1141.1693,1029.7968,229.5560}
	},
	{
	    //Caligula's Casino
		{2173.4128,1611.1435,999.9788,290.1047},
		{2193.2512,1625.1757,999.9717,139.7267},
		{2225.5583,1620.4235,999.9654,130.6399},
		{2229.5891,1580.7401,999.9680,87.3995},
		{2219.5341,1556.4329,1004.6857,352.1453},
		{2173.1262,1584.2893,999.9709,289.5342},
		{2218.3022,1614.9696,999.9826,1.9616},
		{2232.3085,1591.3214,999.9569,57.7120},
		{2206.9687,1555.0598,1007.7617,232.5303},
		{2197.1672,1580.4920,999.9788,351.9348}
	},
	{
	    //Airport SF
		{-1244.6741,-228.8456,14.1484,264.2386},
		{-1242.5125,-157.2858,14.1484,1.0592},
		{-1295.3247,-173.1275,14.1484,187.4666},
		{-1276.9992,-206.5662,14.1439,192.5081},
		{-1260.8937,-257.6543,14.1484,248.1940},
		{-1208.4685,-267.1953,14.1484,269.2760},
		{-1175.4398,-240.3397,14.1439,351.5134},
		{-1179.3223,-188.3575,14.1484,5.7835},
		{-1211.8366,-214.8479,14.1484,131.4313},
		{-1237.3684,-219.7693,14.1484,131.4313}
	},
	{
	    //RC Battlefield
		{-972.7409,1076.2236,1344.9998,96.1268},
		{-1026.0460,1030.2264,1342.3167,97.4379},
		{-1070.7401,1095.4737,1343.0571,59.7352},
		{-1114.5250,1026.2620,1343.6726,333.3551},
		{-1129.7833,1049.4840,1345.7341,277.5908},
		{-1067.1177,1063.4542,1343.7249,97.5346},
		{-1071.5261,1091.4632,1343.2077,274.1700},
		{-1027.2285,1097.7016,1342.7739,221.4839},
		{-978.5271,1055.5582,1344.9842,24.7798},
		{-1126.3736,1063.3581,1345.7249,214.4146}
	},
	{
	    //Ruins
		{3292.5764,371.8763,1390.3078,251.1997},
		{3361.3718,384.4493,1390.3078,282.4520},
		{3422.8615,383.9949,1396.0202,88.0043},
		{3422.0283,345.9798,1390.3078,195.4086},
		{3295.5744,353.2132,1390.3078,14.1798},
		{3316.5800,281.8450,1391.3562,43.3433},
		{3283.4482,304.4073,1391.3562,297.7491},
		{3322.8312,365.1528,1390.3078,269.5255},
		{3341.8051,387.9982,1390.3078,194.6380},
		{3339.3032,403.3668,1390.3078,358.1763}
	},
	{
	    //Minigun Madness
		{265.0345,1358.3380,10.5859,19.7378},
		{268.6448,1410.0708,10.4740,336.4974},
		{271.2564,1467.5894,10.5859,345.5842},
		{223.8697,1362.7327,10.5859,89.9251},
		{246.4021,1385.6456,23.3750,260.6700},
		{246.4058,1410.3159,23.3750,316.7572},
		{184.2778,1413.0219,10.5859,88.6718},
		{176.0466,1443.1450,10.5912,24.7746},
		{188.0850,1362.5726,10.5859,216.8264},
		{156.9750,1409.1022,10.5859,271.9970}
	},
	{
		{267.0153,1895.2355,25.4985,87.9915},
		{233.4031,1934.7461,25.4985,87.0281},
		{161.9166,1933.2587,25.4985,92.6682},
		{104.1561,1900.9558,25.4985,180.0890},
		{113.4502,1814.5850,25.4985,94.5482},
		{212.3647,1810.8218,21.8672,286.9133},
		{263.0242,1807.5986,25.4985,265.6064},
		{213.1896,1880.5544,20.4324,173.7989},
		{139.3615,1903.6832,24.9102,265.2931},
		{126.2544,1856.0640,17.7358,292.5065}
	}
};

//============================================================================//
#define C_PATER 	1
#define C_HLAVA 	2
#define C_RUKA      5
#define C_KRK       17
#define C_OBLICEJ   17

#define PO_HAT      50
#define PO_GLASS    30
#define PO_SO       300
//============================================================================//
enum GiftData
{
	Float:gX,Float:gY,Float:gZ,gObject,Text3D:gText,gType
};
//============================================================================//
new Gifts[MAX_GIFTS][GiftData];
//============================================================================//
enum intData
{
	iID,Float:iX,Float:iY,Float:iZ,Float:iA,iName[50],iMapIcon
};
//============================================================================//
enum intEnterData
{
	ieID,Float:ieX,Float:ieY,Float:ieZ,iePickup,Text3D:ieText,
	ieExit
};
//============================================================================//
enum HouseInteriorsData
{
	HouseIntID,Float:HouseInteriorX,Float:HouseInteriorY,Float:HouseInteriorZ,
	Float:HouseInteriorInX,Float:HouseInteriorInY,Float:HouseInteriorInZ,
	HouseInteriorName[24],HouseInteriorPrice,HouseInteriorPriceB,bool:HouseInteriorLoading,
	hInPickup,
};

enum HouseData
{
	Float:hX,Float:hY,Float:hZ,hID,hOwner[MAX_PLAYER_NAME+1],hPickup,Text3D:hText,hMapIcon,
	hInt,hPassword[30],hName[30],hPrice,hNeedHours
};
//============================================================================//
new InteriorEnters[MAX_INTERIORS][intEnterData];
//============================================================================//
new HouseInteriors[][HouseInteriorsData] =
{
	{2,266.7334,304.9137,999.1484,270.4131,304.8224,999.1557,"Malý",5000000,200},
	{5,2233.6437,-1115.2604,1050.8828,2232.4238,-1105.1196,1050.8902,"Malý",6000000,250},
	{10,2262.9450,-1132.6685,1050.6328,2262.9479,-1138.0086,1050.6328,"Malý",8000000,300},
	{1,2218.4033,-1076.2647,1050.4843,2205.3132,-1074.5354,1050.4843,"Malý",8000000,350},
	{3,2496.0007,-1692.1492,1014.7421,2496.0764,-1709.1911,1014.7421,"Støední",10000000,400},
	{9,2317.7397,-1026.7585,1050.2177,2324.6245,-1021.5194,1050.2109,"Støední",20000000,600},
	{8,2365.2739,-1135.5982,1050.8825,2372.5004,-1126.4841,1050.8750,"Støední",20000000,800},
	{12,2324.4216,-1149.5413,1050.7100,2319.9523,-1143.2078,1050.4921,"Støední",30000000,3000},
	{5,140.5248,1365.9248,1083.8593,150.6143,1371.8393,1083.8593,"Velký",40000000,4000},
	{5,226.2982,1114.2402,1080.9929,246.2556,1114.7424,1080.9921,"Velký",50000000,5000},
	{5,1260.8111,-785.4118,1091.9062,1268.9575,-775.4101,1091.9062,"Velmi Velký",200000000,20000},
	{0,835.5282,-127.1663,1007.1997,838.2781,-133.6430,1007.5214,"Velký",150000000,15000,true},
	{0,851.1138,1997.8569,1011.0809,858.7064,1993.6121,1011.0909,"Støední",3500000,900,true},
	{0,243.4193,-1851.5806,3333.9329,252.4181,-1851.1156,3333.3689,"Støední",4500000,1000,true}
};
//============================================================================//
new House[MAX_HOUSES][HouseData];
new Interiors[][intData] =
{
	{5,772.3865,-5.2768,1000.7288,180.4106,"Tìlocvièna LS",54},
	{3,834.6676,7.4383,1004.1870,270.6513,"Inside Track",0},
	{3,1212.1600,-25.8844,1000.9531,181.4955,"Malý strip club",21},
	{3,418.6206,-84.3662,1001.8047,173.8773,"Barber Shop",7},
	{3,390.0683,173.8134,1008.3828,359.1082,"Úøad LV",32},
	{3,239.5136,139.1876,1003.0234,1.2344,"Policie LV [ Vchod 1 ]",30},
	{3,289.6051,166.9485,1007.1719,6.8511,"Policie LV [ Vchod 2 ]"},
	{3,207.1069,-140.3172,1003.5078,178.0542,"Pro Laps",45},
	{3,-100.3422,-25.0377,1000.7188,178.9944,"Sex Shop",0},
	{3,-204.4067,-44.2025,1002.2734,184.6577,"Las Venturas Tattoo",39},
	{10,6.0911,-29.2718,1003.5494,357.1377,"24/7",0},
	{5,372.3924,-133.4104,1001.4922,177.7878,"Pizza Stack",29},
	{5,227.4293,-7.7839,1002.2109,87.4019,"Victim",45},
	{7,773.6589,-78.8391,1000.6628,2.198,"Tìlocvièna LV,54"},
	{1,203.9512,-50.6486,1001.8047,6.0047,"Sub Urban",45},
	{2,1204.9674,-13.5335,1000.9219,2.8279,"Srip Club LV",21},
	{10,2018.7267,1017.8928,996.8750,86.4887,"Four Dragons",0},
	{10,363.4160,-75.1276,1001.5078,314.2374,"Burger Shot",10},
	{1,2233.8181,1713.9905,1012.3080,179.2129,"Caligula's Casino",0},
	{2,411.7551,-22.9860,1001.8047,179.3813,"Barber Shop LS",7},
	{18,161.4157,-96.8050,1001.8047,2.5147,"Zip",45},
	{3,-2636.6165,1402.7729,906.4609,0.008,"Jizzy",48},
	{5,1260.9487,-785.3934,1091.9063,272.6106,"Madd Dogg's Mansion [ Vchod 1 ]",0},
	{5,1299.0284,-796.6904,1084.0078,9.5067,"Madd Dogg's Mansion [ Vchod 2 ]",0},
	{10,422.5631,2536.6743,10.0000,90.6609,"Nevada",0},
	{12,1133.2538,-15.4507,1000.6797,3.2868,"Staré Kasíno",0},
	{17,493.1972,-24.7532,1000.6797,359.8402,"Club",48},
	{18,1726.7762,-1638.0349,20.2230,181.8652,"Úøad LS",32},
	{17,-959.7394,1955.6804,9.0000,179.3351,"Pøehrada",0},
	{15,2214.9727,-1150.5732,1025.7969,269.576,"Jefferson Motel",0},
	{15,207.7923,-110.9537,1005.1328,2.3001,"Binco",45},
	{18,-228.8862,1401.0935,27.7656,272.3728,"UFO Hospoda",48},
	{4,285.7746,-86.7110,1001.5229,0.4436,"Ammu nation",18},
	{6,774.2820,-50.2791,1000.5859,0.4436,"Tìlocvièna SF",54},
	{6,246.6674,62.5950,1003.6406,356.0569,"Policie LS",30},
	{6,-2240.4133,136.9748,1035.4141,268.3227,"Zero's RC Shop",0},
	{9,365.3426,-11.7605,1001.8516,1.9868,"Clucki'n Bell",14},
	{3,-2027.0695,-103.9010,1035.1719,179.9617,"Autokola",36},
	{11,501.8795,-68.0440,998.7578,356.8283,"Bar LS",48}
};

//============================================================================//
enum PropertyData
{
	PropertyPickup,Float:PropertyX,Float:PropertyY,Float:PropertyZ,
	PropertyOwner[MAX_PLAYER_NAME+1],Text3D:PropertyText,PropertyName[50],
	PropertyPrice,PropertyLevel,PropertyCashLevel,PropertyEarning,bool: PropertyRobbed,
	PropertyTime,PropertyOnSale,PropertyMafia,bool:PropertyTaken
};
//============================================================================//
new Property[MAX_PROPERTIES][PropertyData];
//============================================================================//
enum AchievData
{
	AchievName[50],AchievReward,AchievPopis[100]
};
//============================================================================//
new AchievementsNames[MAX_ACHIEVEMENTS][AchievData] =
{
	{"Hundred Points",0,"Získat 100 bodù"},
	{"Poor In Points",0,"Získat 800 bodù"},
 	{"Few Points",0,"Získat 1500 bodù"},
	{"First Kill",10,"Zabít hráèe"},
	{"Noob",50,"Zabít 100 hráèù"},
	{"Few Kills",100,"Zabít 500 hráèù"},
	{"Killer",200,"Zabít 1000 hráèù"},
	{"First Hour",10,"Odehrát na serveru jednu hodinu"},
	{"First Day",50,"Odehrát na serveru jeden den"},
	{"Gambler",100,"Odehrát na serveru 100 hodin"},
	{"Lord of Time",500,"Odehrát na serveru 500 hodin"},
	{"First Mission",5,"Úspìnì splnit první misi"},
	{"Mission Man",30,"Úspìnì splnit 100 misí"},
	{"Lord of Missions",80,"Úspìnì splnit 200 misí"},
	{"First Win",10,"Vyhrát první event"},
	{"Master of Events",30,"Vyhrát 10 eventù"},
	{"Lord of Events",100,"Vyhrát 30 Eventù"},
	{"First Car",30,"Koupit první vozidlo"},
	{"Full Garage",100,"Zaplnit celou "g"/garaz"},
	{"První Postøeh",10,"Vyhrát první postøeh"},
	{"Mistr Postøehù",100,"Vyhrát 250 postøehù"},
	{"Král Postøehù",200,"Vyhrát 500 postøehù"},
	{"Duel Noob",10,"Vyhrát první duel"},
	{"Getting Better",30,"Vyhrát 50 duelù"},
	{"Mistr duelù",50,"Vyhrát 100 duelù"},
	{"Král duelù",100,"Vyhrát 200 duelù"},
	{"Become Member",15,"Stát se èlenem gangu"},
	{"Sumo Noob",10,"Vyhrát první sumo zápas"},
	{"Sumo Getting Better",50,"Vyhrát 50 sumo zápasù"},
	{"Master of Sumo",75,"Vyhrát 100 sumo zápasù"},
	{"Lord of Sumo",150,"Vyhrát 200 sumo zápasù"},
	{"First Race Win",10,"Vyhrát první závod"},
	{"Master of Races",30,"Vyhrát 25 závodù"},
	{"King of Races",100,"Vyhrát 50 závodù"},
	{"Businessman",30,"Vlastnit nemovitost"},
	{"Zlodìj",10,"Vykrást 10 nemovitostí"},
	{"Mistr Zlodìjù",30,"Vykrást 75 nemovitostí"},
	{"Král Zlodìjù",75,"Vykrást 150 nemovitostí"},
	{"Tenth Level",50,"Dosáhnout 10. levelu"},
	{"Thirtieth Level",100,"Dosáhnout 30. levelu"},
	{"Fiftieth Level",200,"Dosáhnout 50. levelu"},
	{"Hundred Level",500,"Dosáhnout 100. levelu"},
	{"DM Noob",100,"Zabít 100 hráèù v DeathMatchi"},
	{"DM Getting Better",150,"Zabít 500 hráèù v DeathMatchi"},
	{"Master of DeahtMatch",250,"Zabít 1000 hráèù v DeathMatchi"},
	{"Lord of DeathMatch",500,"Zabít 2000 hráèù v DeathMatchi"},
	{"Lots of Points",0,"Získat 10 000 bodù"},
	{"Master of Points",0,"Získat 50 000 bodù"},
	{"Lord of Points",0,"Získat 100 000 bodù"},
	{"Master Killer",500,"Zabít 5000 Hráèù"},
	{"Lord of Killers",1000,"Zabít 10000 Hráèù"},
	{"Stunter Noob",5,"Splnit 1 stunt"},
	{"Stunter Amateur",30,"Splnit 10 stuntù"},
	{"Stunt Master",100,"Splnit 25 stunt"},
	{"King of Stunts",150,"Splnit 50 stunt"},
	{"Truck Driver",1000,"Dosáhnout maximálního levelu u Øidièe Kamionu"},
	{"Bus Driver",1000,"Dosáhnout maximálního levelu u Øidièe Autobusu"},
	{"Lumberjack",1000,"Dosáhnout maximálního levelu u Døevorubce"},
	{"Transporter",1000,"Dosáhnout maximálního levelu u Kurýra"},
	{"Pilot",1000,"Dosáhnout maximálního levelu u Pilota"},
	{"The Mechanic",1000,"Dosáhnout maximálního levelu u Mechanika"},
	{"Policeman",1000,"Dosáhnout maximálního levelu u Policie"},
	{"Paramedic",1000,"Dosáhnout maximálního levelu u Záchranáøe"},
	{"Fireman",1000,"Dosáhnout maximálního levelu u Hasièe"}
//	{"Stunter Elite",200,"Splnit 75 stuntù"},
//	{"Legendary Stunter",250,"Splnit 100 stuntù"}
};
//============================================================================//
#define POINTS_100		0
#define POINTS_800 		1
#define POINTS_1500 	2
#define KILLS_1 		3
#define KILLS_100 		4
#define KILLS_500 		5
#define KILLS_1000 		6
#define TIME_1 			7
#define TIME_24 		8
#define TIME_100 		9
#define TIME_500 		10
#define MISE_1    		11
#define MISE_100     	12
#define MISE_200    	13
#define EVENT_1     	14
#define EVENT_10    	15
#define EVENT_30    	16
#define GARAGE_1    	17
#define GARAGE_FULL 	18
#define POSTREH_1   	19
#define POSTREH_250 	20
#define POSTREH_500 	21
#define DUEL_1      	22
#define DUEL_50     	23
#define DUEL_100     	24
#define DUEL_200    	25
#define BE_MEMBER   	26
#define SUMO_1          27
#define SUMO_50         28
#define SUMO_100        29
#define SUMO_200        30
#define RACE_1          31
#define RACE_25         32
#define RACE_50         33
#define BUSINESS_1      34
#define ROB_10          35
#define ROB_75          36
#define ROB_150         37
#define LEVEL_10        38
#define LEVEL_30        39
#define LEVEL_50        40
#define LEVEL_100       41
#define DM_100          42
#define DM_500          43
#define DM_1000         44
#define DM_2000         45
#define POINTS_10000    46
#define POINTS_50000    47
#define POINTS_100000   48
#define KILLS_5000      49
#define KILLS_10000     50
#define STUNT_1         51
#define STUNT_10        52
#define STUNT_25        53
#define STUNT_50        54
#define MISE_TRUCK      55
#define MISE_BUS	    56
#define MISE_DREVO 	    57
#define MISE_KURYR      58
#define MISE_PILOT   	59
#define MISE_MECHANIK   60
#define MISE_POLICE     61
#define MISE_PARAM      62
#define MISE_FIREMAN    63
//============================================================================//
new Achiv[MAX_PLAYERS][MAX_ACHIEVEMENTS];
new GiftsObject[] =
{
	//19320//Dýnì
	19055,19054,19056,19057,19058 //Vánoèní dárky
};
/*new EggObjects[] =
{
	19341,19342,19343
};
*/
new AntiSpamMessage[MAX_PLAYERS][145];
new var[MAX_PLAYERS];
new EditField[MAX_PLAYERS][2];
new SumoCar[2];
new AutoPlay[MAX_PLAYERS];
new MusicLenght[MAX_PLAYERS];
new AFKTime[MAX_PLAYERS];
new AFKMoving[MAX_PLAYERS];
new PlayerWeather[MAX_PLAYERS] = {-1,...};
new LastVar[MAX_PLAYERS];
new PenaltyPoints[MAX_PLAYERS];
new MinceWin[MAX_PLAYERS];
new MinceLose[MAX_PLAYERS];
new WorkMission[MAX_PLAYERS];
new NextHod[MAX_PLAYERS];
new MapEdit[MAX_PLAYERS] = {-1,...};
new BackZoneTime[MAX_PLAYERS];
new AntiPointsBug[MAX_PLAYERS];
new PlayerTeam[MAX_PLAYERS];
new ViewMode[MAX_PLAYERS];
new HlaskaTime[MAX_PLAYERS];
new AcheatWeapons[MAX_PLAYERS][13][2];
new TotalAccounts[MAX_PLAYERS];
new SpectatePlayer[MAX_PLAYERS];
new SpectateInt[MAX_PLAYERS];
new SpectateVW[MAX_PLAYERS];
new SpectatePlayerType[MAX_PLAYERS];
new AntiSK[MAX_PLAYERS];
new Trezor[MAX_PLAYERS][MAX_TREZORS];
new BuildSaw[MAX_PLAYERS];
new XPBoostPercent[MAX_PLAYERS];
new XPBoostSeconds[MAX_PLAYERS];
new InDM[MAX_PLAYERS];
new DMRoundKills[MAX_PLAYERS];
new DMRoundKillTime[MAX_PLAYERS];
new DMScore[MAX_PLAYERS];
new DMKills[MAX_PLAYERS];
new DMKillsTotal[MAX_PLAYERS];
new DMDeaths[MAX_PLAYERS];
new DMDeathsTotal[MAX_PLAYERS];
new PlayerSpeed[MAX_PLAYERS];
new PlayerID[MAX_PLAYERS];
new WorkStatus[MAX_PLAYERS];
new WantedLevel[MAX_PLAYERS];
new Float:Points[MAX_PLAYERS];
new Mute[MAX_PLAYERS];
new bool: MutePlayers[MAX_PLAYERS][MAX_PLAYERS];
new CBLOCK[MAX_PLAYERS];
new ACAR[MAX_PLAYERS];
new TimerTime[MAX_PLAYERS];
new SumoTimer[MAX_PLAYERS];
new PlayedTime[MAX_PLAYERS];
new PlayedTimeNS[MAX_PLAYERS];
new PlayedTimeMultipler[MAX_PLAYERS];
new RepairTime[MAX_PLAYERS];
new HealTime[MAX_PLAYERS];
new WarpTimeMinutes[MAX_PLAYERS];
new WarpTimeSeconds[MAX_PLAYERS];
new PlayerProps[MAX_PLAYERS][MAX_PROPERTIES_PER_PLAYER];
new SumoVehicle[MAX_PLAYERS];
new TimerWarpBlock[MAX_PLAYERS];
new CrazyCarTimer[MAX_PLAYERS];
new FlashNickTimer[MAX_PLAYERS];
new EventsWins[MAX_PLAYERS];
new PlayerHouse[MAX_PLAYERS];
new RaceWins[MAX_PLAYERS];
new DuelWins[MAX_PLAYERS];
new Finding[MAX_PLAYERS];
new SpawnType[MAX_PLAYERS];
new DuelLose[MAX_PLAYERS];
new SumoWins[MAX_PLAYERS];
new Sex[MAX_PLAYERS];
new Robs[MAX_PLAYERS];
new EventColor[MAX_PLAYERS];
new RacePlayer[MAX_PLAYERS] = -1;
new SumoLose[MAX_PLAYERS];
new MiseCompleted[MAX_PLAYERS];
new RaceEdit[MAX_PLAYERS] = -1;
new AntiFakeKill[MAX_PLAYERS];
new RobTime[MAX_PLAYERS];
new PropertyTakeTime[MAX_PLAYERS];
new PropertyTakeID[MAX_PLAYERS];
new XP[MAX_PLAYERS];
new Level[MAX_PLAYERS];
new OdehranoTimer[MAX_PLAYERS];
new pIP[MAX_PLAYERS][16];
new pTime[MAX_PLAYERS];
new Kills[MAX_PLAYERS];
new PropSlots[MAX_PLAYERS] = {3,...};
new Hitman[MAX_PLAYERS];
new Float:Donate[MAX_PLAYERS];
new Deaths[MAX_PLAYERS];
new AntiFlood[MAX_PLAYERS];
new AntiCrasher[MAX_PLAYERS];
new AntiFakeBullets[MAX_PLAYERS];
new Money[MAX_PLAYERS];
new NickColor[MAX_PLAYERS];
new BlockedPMs[MAX_PLAYERS][MAX_BLOCKED];
new bool:Blocked[MAX_PLAYERS][MAX_PLAYERS][2];
new bool:BlockedPMsAll[MAX_PLAYERS] = false;
new bool:PMSounds[MAX_PLAYERS];
new WarpBlock[MAX_PLAYERS];
new Slots[MAX_PLAYERS][MAX_SLOTS];
new Hitted[MAX_PLAYERS];
new HittedPL[MAX_PLAYERS];
new LogListy[MAX_PLAYERS];
new BackTime[MAX_PLAYERS];
new BackVehicle[MAX_PLAYERS];
new Ecar[MAX_PLAYERS];
new Eobj[MAX_PLAYERS];
new EB[MAX_PLAYERS];
new bool:eb;
new Bans[MAX_PLAYERS];
new WinPostrehy[MAX_PLAYERS];
new Locked[MAX_VEHICLES] = -1;
new PLocked[MAX_PLAYERS];
new TBans[MAX_PLAYERS];
new Kicks[MAX_PLAYERS];
new Vars[MAX_PLAYERS];
new NumbersConnections[MAX_PLAYERS];
new RacePlayers[MAX_RACES];
new Naboje[MAX_PLAYERS];
new ObjectOne[MAX_PLAYERS],ObjectTwo[MAX_PLAYERS],ObjectThree[MAX_PLAYERS],ObjectFour[MAX_PLAYERS],ObjectFive[MAX_PLAYERS];
new Object[MAX_PLAYERS][MAX_OBJECTS_EX];
new ObjectsIDS[MAX_PLAYERS][MAX_OBJECTS_EX];
new Text3D:ObjectLabel[MAX_PLAYERS][MAX_OBJECTS_EX];
new Color[MAX_PLAYERS];
new PlayerCP[MAX_PLAYERS];
new RaceOdpocet[MAX_PLAYERS];
new RaceMinutes[MAX_PLAYERS];
new RaceSeconds[MAX_PLAYERS];
new CenzuraMute[MAX_PLAYERS];
new Listening[MAX_PLAYERS] = -1;
new BlockedStream[MAX_PLAYERS];
new POwner[MAX_PLAYERS];
new Hodnost[MAX_PLAYERS][100];
enum ENUM_RaceData
{
	CP[MAX_CPS+2],Float:CPX[MAX_CPS+2],Float:CPY[MAX_CPS+2],Float:CPZ[MAX_CPS+2],Float:CPA,CPVeh[MAX_CPS+2],
	CPName[25],CPAutor[MAX_PLAYER_NAME+1],CPHide,CPLetecky,
	CPVW,CPAR,RaceZapisne,RaceWin
};
new Race[MAX_RACES][ENUM_RaceData];

enum BeforeEventData
{
	Float:beX,Float:beY,Float:beZ,
	beWeapon[13],beAmmo[13],Float:beHealth,Float:beArmor,
	beInt
};

new BeforeEvent[MAX_PLAYERS][BeforeEventData];
//============================================================================//
new bool: Holding[MAX_PLAYERS];
new bool: reply[MAX_PLAYERS];
new bool: GOD[MAX_PLAYERS];
new bool: OnEvent[MAX_PLAYERS];
new bool: Spawned[MAX_PLAYERS];
new bool: TD[MAX_PLAYERS] = false;
new bool: TNick[MAX_PLAYERS];
new bool: AFK[MAX_PLAYERS];
new bool: Hlasoval[MAX_PLAYERS];
new bool: CrazyCar[MAX_PLAYERS];
new bool: FlashNick[MAX_PLAYERS];
new bool: InSumo[MAX_PLAYERS];
new bool: Odpovedet[MAX_PLAYERS];
new bool: NewBie[MAX_PLAYERS];
new bool: Elite[MAX_PLAYERS];
new bool: Legend[MAX_PLAYERS];
new bool: Shopping[MAX_PLAYERS];
new bool: vyhra = false;
new bool: AdminHide[MAX_PLAYERS];
new bool: RaceStart[MAX_RACES];
new bool: RaceReady[MAX_RACES];
new bool: BombArea;
new bool: AR[MAX_PLAYERS];
new bool: EventDL[MAX_PLAYERS];
new bool: AutoBank[MAX_PLAYERS];
new bool: RealnyTime[MAX_PLAYERS];
new bool: AutoBankVlozit[MAX_PLAYERS];
new bool: UseLastPos[MAX_PLAYERS];
new bool: BlockedVgoto[MAX_PLAYERS];
new bool: BlockedKostka[MAX_PLAYERS];
new bool: BlockedGangInvite[MAX_PLAYERS];
new bool: bFlip[MAX_PLAYERS];
new bool: bOprava[MAX_PLAYERS];
new bool: HitSound[MAX_PLAYERS];
//============================================================================//
new FreezeTimer[MAX_PLAYERS];
new MuteTimer[MAX_PLAYERS];
new CBlockTimer[MAX_PLAYERS];
new PortTimer[MAX_PLAYERS];
//============================================================================//
forward GameTime();
forward Tipy();
forward Priklady();
forward RealTime();
forward MinuteTimer();
forward Odehrano(playerid);
forward ClearWL(playerid);
forward PropertyPayOff();
//forward ElitePropsPayment(id);
//============================================================================//
#define IsNoConnected(%1) if(!IPC(%1) || IsPlayerNPC(%1)) return SM(playerid,"Hráè s tímto ID není pøipojen");
#define CONFIG "UnNamed/UNConfig.cfg"
#define DAILYCFG    "UnNamed/DailyConfig.cfg"
#define NKZ_FILE   "UnNamed/NKZ/Zone%d.txt"
#define RULES_FILE "UnNamed/Rules.txt"
#define TRANS_FILE "UnNamed/Logy/Transactions.txt"
#define DIALOG_NONECLICK 999
#define UNNAMED 1000
#define Crash "%s"
#define Off "exit"
#define CENSOREDFILE "UnNamed/Cenzura.cfg"

#define DIALOG_BULLETS 7777
#define DIALOG_BUYBULLETS 7778
#define DIALOG_GIVEBULLETS 7779

#define CheckZrusMisi(%1) format(str,sizeof(str),"Dalí misi mùe plnit za "g"%s",SecondsToMinutes(Player[%1][pZrusMisiTime]));\
						  if(Player[%1][pZrusMisiTime] > 0) return SM(%1,str)
//============================================================================//
#pragma tabsize 0
#pragma dynamic 140000
//============================================================================//
/*new Reklama[][] =
{
	"www.",".cz",".eu",".org",".webnode",".mzf",".4fan","http://","https://",
	".hys",".tk","velka-parba",":27969",".com","rsgame",".me","wtls","welcome to los santos",
	"s1.gta-multiplayer.cz","s2.gta-multiplayer.cz","s3.gta-multiplayer.cz","ganja-party",
	"ganja party","9tri 9jeden 2pat0 14sedem 2sedem393",".sk","sfdfd"
};
*/
//============================================================================//
new PostrehZnaky[][] =
{
	"a", "b", "c", "d", "e", "f", "g", "h", "i", "j",
	"k", "m", "n", "o", "p", "q", "r", "s", "t",
	"u", "v", "w", "x", "y", "z", "A", "B", "C", "D",
	"E", "F", "G", "H", "J", "K", "L", "M", "N",
	"O", "P", "Q", "R", "S", "T", "U", "V", "W", "X",
	"Y", "Z"
};
//============================================================================//
enum TruckerData
{
	Float:TStartX,Float:TStartY,Float:TStartZ,
	Float:TFinishX,Float:TFinishY,Float:TFinishZ,
	TStartText[50],TFinishText[50],TPredlozka[10],
	TPay,Float:TBody
};

enum BusData
{
	Float:BusX,Float:BusY,Float:BusZ
};

enum TreeData
{
	Float:TreeX,Float:TreeY,Float:TreeZ
};

enum KuryrData
{
	Float:KuryrX,Float:KuryrY,Float:KuryrZ
};

enum PilotData
{
	Float:PStartX,Float:PStartY,Float:PStartZ,
	Float:PFinishX,Float:PFinishY,Float:PFinishZ,
	PStartText[50],PFinishText[50],PPredlozka[5],
	PPay,PBody
};

enum MechanicData
{
	Float:MX,Float:MY,Float:MZ,Float:MA
};

new Float:TruckerMission[][TruckerData] =
{
	{-1928.235595,267.380645,40.671688,-525.905639,-556.219238,25.523437,"Wang Cars","Falen Tree","u",35000,6.0},
	{-525.905639,-556.219238,25.523437,-1928.235595,267.380645,40.671688,"Falen Tree","Wang Cars","ve",35000,6.0},
	{-1732.644531,-80.414390,3.548918,-231.936828,1071.384033,19.366975,"Easter Basin","Fort Carson","v",55000,6.0},
	{-39.922809,1172.572998,19.084775,981.313781,2117.509765,10.445219,"Fort Carson","Whitewoord Estates","ve",45000,6.0},
	{1900.303955,2140.778564,10.445024,2463.010009,-2618.373291,13.287235,"Redsands East","Ocean Docks","v",100000,12.0},
	{2466.125976,-2089.685058,14.555259,-107.335334,-375.346282,1.054599,"Ocean Docks","Falen Tree","v",50000,6.0},
	{-525.905639,-556.219238,25.523437,-1732.644531,-80.414390,3.548918,"Falen Tree","Easter Basin","ve",40000,5.0},
	{-107.335334,-375.346282,1.054599,1900.303955,2140.778564,10.445024,"Falen Tree","Redsands East","ve",80000,12.0},
	{-1928.235595,267.380645,40.671688,-1963.735595,-2462.942626,30.625000,"Wang Cars","Angel Pine","u",60000,8.0},
	{-2103.960693,-2242.395996,30.249774,886.916442,-1229.320312,16.531494,"Angel Pine","Vinewood","v",80000,12.0},
	{1151.3094,-1225.8513,18.3469,1900.303955,2140.778564,10.445024,"Market","Redsands East","v",100000,12.0}
};

new Float:BusMission[][BusData] =
{
	{-2702.0878,-10.5228,3.8764},
	{-2691.8217,284.0472,3.8765},
	{-2602.0361,540.8521,14.1579},
	{-2602.5659,881.9917,61.0260},
	{-2569.2756,1100.3465,55.1841},
	{-2011.4243,1020.5200,54.1441},
	{-1863.9510,911.5977,34.7123},
	{-1593.7408,738.1157,9.3981},
	{-2011.4573,457.9416,34.7157},
	{-2171.7951,324.8242,34.8686},
	{-2710.2392,195.3349,3.8744},
	{-2671.4604,-42.6212,3.9607}
};

new Float:BusMission2[][BusData] =
{
	{-2709.6757,-182.2913,4.2952},
	{-2417.4570,-110.4755,35.3444},
	{-2110.4716,-549.9328,33.3983},
	{-1991.6995,-1021.7230,32.2300},
	{-2416.3654,-604.2440,132.6966},
	{-2809.8291,-312.8963,7.2410},
	{-2709.7426,440.5869,4.4121},
	{-2509.2932,438.1618,27.2475},
	{-2171.9060,559.2200,35.2227},
	{-2151.3132,250.0731,35.3864},
	{-2608.0566,118.1818,4.3799},
	{-2654.7395,-42.9655,4.4692}
};

new Float:TreeMission[][TreeData] =
{
	{-1645.273193,-2208.430664,33.700641},
	{-1382.540283,-2110.549072,27.359714},
	{-1376.919921,-2327.322021,35.930698},
	{-1459.338134,-2569.601562,66.066925},
	{-1501.290649,-2496.329101,62.394924},
	{-1726.009399,-2022.822875,70.695945},
	{-1668.832153,-1894.738037,93.397232},
	{-1451.398437,-1791.533325,47.197784},
	{-1274.966552,-2073.164550,22.297998},
	{-1134.656982,-2340.402343,31.091064},
	{-1050.493286,-2154.929443,36.095676},
	{-567.421447,-2049.606445,52.577545},
	{-384.675384,-1980.521240,27.251462},
	{-600.282714,-1840.843994,27.483062},
	{-704.608032,-2088.846191,23.025018}
};

new Float:KuryrMission[][KuryrData] =
{
	{2875.942138,2414.970214,10.820312},
	{1135.385864,2256.929199,16.343591},
	{1492.146484,711.157836,10.671875},
	{2829.383056,915.332824,10.374888},
	{1709.749267,1454.489379,10.370108},
	{1655.474243,-1054.762695,23.523227},
	{1934.333129,-2148.678222,13.178678},
	{334.043701,-1519.481933,35.492229},
	{2817.639648,-1087.513916,30.739578},
	{2497.770019,-1683.154663,12.998721}
};

new Float:PilotMission[][PilotData] =
{
	{-1517.1124,-96.2846,13.7431,1345.6977,1578.1743,10.4065,"Letitì SF","Letitì LV","na",50000,6},
	{-1517.1124,-96.2846,13.7431,375.2762,2538.4057,16.1687,"Letitì SF","Letitì Nevada","na",35000,3},
	{1345.6977,1578.1743,10.4065,375.2762,2538.4057,16.1687,"Letitì LV","Letitì Nevada","na",35000,3},
	{1345.6977,1578.1743,10.4065,-1517.1124,-96.2846,13.7431,"Letitì LV","Letitì SF","na",50000,6},
	{375.2762,2538.4057,16.1687,-1517.1124,-96.2846,13.7431,"Letitì Nevada","Letitì SF","na",35000,3},
	{375.2762,2538.4057,16.1687,1345.6977,1578.1743,10.4065,"Letitì Nevada","Letitì LV","na",35000,3}
};
//============================================================================//
new Float:MechanicMission[][MechanicData] =
{
	{-2134.6645,-398.5905,34.9678,310.0511},
	{-1989.5017,-757.2640,31.6471,209.2400},
	{-2471.8032,-510.3958,108.3684,32.6310},
	{-2608.9797,-215.9503,3.8780,261.7851},
	{-2722.2114,482.2100,4.5507,53.0656},
	{-2720.0449,1107.5866,45.3088,347.1949},
	{-2468.2666,1398.2380,6.8994,290.7843},
	{-1663.2164,1235.5853,6.7330,224.7210},
	{-1561.1450,731.7540,6.6622,224.4561},
	{-1644.3452,426.6527,6.9783,115.1543},
	{-1805.9871,-142.1870,6.1041,27.3352},
	{-1611.4447,-510.8845,8.3982,292.2037},
	{-1758.4847,-714.5616,28.9316,269.1288}
};
//============================================================================//
new CarSellIDS[] =
{
	560,562,411,541,451,402,415,429,522,535,536,558,559,561,565
};
//============================================================================//
enum ChatColorData
{
	Code[6+1],Name[20]
};
new ChatColors[][ChatColorData] =
{
	{"FFFFFF","Bílá"},
	{"FF0000","Èervená"},
	{"0C7C00","Tmavì zelená"},
	{"00FF00","Zelená"},
	{"90FF00","Zelinkavá"},
	{"FFFF00","lutá"},
	{"FF00FF","Purpurová"},
	{"A100FF","Fialová"},
	{"00FFFF","Tyrkysová"},
	{"0055FF","Modrá"},
	{"0000FF","Tmavì Modrá"},
	{"FFA100","Oranová"},
	{"FF5400","Tmavá Oranová"}
};
//============================================================================//
enum NoKillData
{
	Float:NX,Float:NY,Float:NZ,Float:NRadius,NPickup,Text3D:NText[145],
	bool:ZoneUsed
};
//============================================================================//
new NoKillZone[MAX_ZONES][NoKillData];
new lastzone;

//============================================================================//
enum ParkData
{
	Model,
	Float:pX,Float:pY,Float:pZ,Float:pA,
	PaintJob,Color1,Color2,SPZ[30],Password[30],
	TuneSlot0,TuneSlot1,TuneSlot2,TuneSlot3,TuneSlot4,TuneSlot5,TuneSlot6,TuneSlot7,TuneSlot8,TuneSlot9,TuneSlot10,TuneSlot11,TuneSlot12,TuneSlot13,
	SpecialObjects[MAX_S_OBJECTS],Float:pPancir,bool:pOdstaveno,pCashBack
};
//============================================================================//
new SavedCar[MAX_PLAYERS][MAX_SLOTS];
new ParkInfo[MAX_PLAYERS][MAX_SLOTS][ParkData];

enum FallData
{
	FObject,bool: FDestroyed
}

#define FLATS_SPEED     5+random(5)
#define MAX_FALLOUT_FLOOR   5
#define MAX_FALLOUT_SIDE_A  10
#define MAX_FALLOUT_SIDE_B  10
new Fallout[MAX_FALLOUT_SIDE_A*MAX_FALLOUT_SIDE_B][MAX_FALLOUT_FLOOR][FallData];
enum RadioData
{
	RadioName[50],RadioLang[5],RadioURL[100],RadioListeners
};
//============================================================================//
new Radio[MAX_RADIOS][RadioData];
new FirstRadio[11][RadioData] =
{
	{"Evropa 2","CZ","http://delete.4fan.cz/radia/evropa2.m3u"},
	{"Europa 2","SK","http://delete.4fan.cz/radia/europa2.m3u"},
	{"Frekvence 1","CZ","http://delete.4fan.cz/radia/frekvence1.m3u"},
	{"Impuls","CZ","http://delete.4fan.cz/radia/impuls.m3u"},
	{"dance","CZ","http://delete.4fan.cz/radia/dance.m3u"},
	{"Helax","CZ","http://delete.4fan.cz/radia/helax.m3u"},
	{"Hip Hop Stage","CZ","http://delete.4fan.cz/radia/hiphopstage.pls"},
	{"Fun Rádio","SK","http://delete.4fan.cz/radia/fun.m3u"},
	{"Fun Rádio Hip Hop","SK","http://delete.4fan.cz/radia/funhiphop.m3u"},
	{"Technobase","DE","http://delete.4fan.cz/radia/technobase.pls"},
	{"Housetime","DE","http://delete.4fan.cz/radia/housetime.pls"}
};
//============================================================================//
new VehicleColoursTableRGBA[256] =
{
	0x000000FF, 0xF5F5F5FF, 0x2A77A1FF, 0x840410FF, 0x263739FF, 0x86446EFF, 0xD78E10FF, 0x4C75B7FF, 0xBDBEC6FF, 0x5E7072FF,
	0x46597AFF, 0x656A79FF, 0x5D7E8DFF, 0x58595AFF, 0xD6DAD6FF, 0x9CA1A3FF, 0x335F3FFF, 0x730E1AFF, 0x7B0A2AFF, 0x9F9D94FF,
	0x3B4E78FF, 0x732E3EFF, 0x691E3BFF, 0x96918CFF, 0x515459FF, 0x3F3E45FF, 0xA5A9A7FF, 0x635C5AFF, 0x3D4A68FF, 0x979592FF,
	0x421F21FF, 0x5F272BFF, 0x8494ABFF, 0x767B7CFF, 0x646464FF, 0x5A5752FF, 0x252527FF, 0x2D3A35FF, 0x93A396FF, 0x6D7A88FF,
	0x221918FF, 0x6F675FFF, 0x7C1C2AFF, 0x5F0A15FF, 0x193826FF, 0x5D1B20FF, 0x9D9872FF, 0x7A7560FF, 0x989586FF, 0xADB0B0FF,
	0x848988FF, 0x304F45FF, 0x4D6268FF, 0x162248FF, 0x272F4BFF, 0x7D6256FF, 0x9EA4ABFF, 0x9C8D71FF, 0x6D1822FF, 0x4E6881FF,
	0x9C9C98FF, 0x917347FF, 0x661C26FF, 0x949D9FFF, 0xA4A7A5FF, 0x8E8C46FF, 0x341A1EFF, 0x6A7A8CFF, 0xAAAD8EFF, 0xAB988FFF,
	0x851F2EFF, 0x6F8297FF, 0x585853FF, 0x9AA790FF, 0x601A23FF, 0x20202CFF, 0xA4A096FF, 0xAA9D84FF, 0x78222BFF, 0x0E316DFF,
	0x722A3FFF, 0x7B715EFF, 0x741D28FF, 0x1E2E32FF, 0x4D322FFF, 0x7C1B44FF, 0x2E5B20FF, 0x395A83FF, 0x6D2837FF, 0xA7A28FFF,
	0xAFB1B1FF, 0x364155FF, 0x6D6C6EFF, 0x0F6A89FF, 0x204B6BFF, 0x2B3E57FF, 0x9B9F9DFF, 0x6C8495FF, 0x4D8495FF, 0xAE9B7FFF,
	0x406C8FFF, 0x1F253BFF, 0xAB9276FF, 0x134573FF, 0x96816CFF, 0x64686AFF, 0x105082FF, 0xA19983FF, 0x385694FF, 0x525661FF,
	0x7F6956FF, 0x8C929AFF, 0x596E87FF, 0x473532FF, 0x44624FFF, 0x730A27FF, 0x223457FF, 0x640D1BFF, 0xA3ADC6FF, 0x695853FF,
	0x9B8B80FF, 0x620B1CFF, 0x5B5D5EFF, 0x624428FF, 0x731827FF, 0x1B376DFF, 0xEC6AAEFF, 0x000000FF,

	0x177517FF, 0x210606FF, 0x125478FF, 0x452A0DFF, 0x571E1EFF, 0x010701FF, 0x25225AFF, 0x2C89AAFF, 0x8A4DBDFF, 0x35963AFF,
	0xB7B7B7FF, 0x464C8DFF, 0x84888CFF, 0x817867FF, 0x817A26FF, 0x6A506FFF, 0x583E6FFF, 0x8CB972FF, 0x824F78FF, 0x6D276AFF,
	0x1E1D13FF, 0x1E1306FF, 0x1F2518FF, 0x2C4531FF, 0x1E4C99FF, 0x2E5F43FF, 0x1E9948FF, 0x1E9999FF, 0x999976FF, 0x7C8499FF,
	0x992E1EFF, 0x2C1E08FF, 0x142407FF, 0x993E4DFF, 0x1E4C99FF, 0x198181FF, 0x1A292AFF, 0x16616FFF, 0x1B6687FF, 0x6C3F99FF,
	0x481A0EFF, 0x7A7399FF, 0x746D99FF, 0x53387EFF, 0x222407FF, 0x3E190CFF, 0x46210EFF, 0x991E1EFF, 0x8D4C8DFF, 0x805B80FF,
	0x7B3E7EFF, 0x3C1737FF, 0x733517FF, 0x781818FF, 0x83341AFF, 0x8E2F1CFF, 0x7E3E53FF, 0x7C6D7CFF, 0x020C02FF, 0x072407FF,
	0x163012FF, 0x16301BFF, 0x642B4FFF, 0x368452FF, 0x999590FF, 0x818D96FF, 0x99991EFF, 0x7F994CFF, 0x839292FF, 0x788222FF,
	0x2B3C99FF, 0x3A3A0BFF, 0x8A794EFF, 0x0E1F49FF, 0x15371CFF, 0x15273AFF, 0x375775FF, 0x060820FF, 0x071326FF, 0x20394BFF,
	0x2C5089FF, 0x15426CFF, 0x103250FF, 0x241663FF, 0x692015FF, 0x8C8D94FF, 0x516013FF, 0x090F02FF, 0x8C573AFF, 0x52888EFF,
	0x995C52FF, 0x99581EFF, 0x993A63FF, 0x998F4EFF, 0x99311EFF, 0x0D1842FF, 0x521E1EFF, 0x42420DFF, 0x4C991EFF, 0x082A1DFF,
	0x96821DFF, 0x197F19FF, 0x3B141FFF, 0x745217FF, 0x893F8DFF, 0x7E1A6CFF, 0x0B370BFF, 0x27450DFF, 0x071F24FF, 0x784573FF,
	0x8A653AFF, 0x732617FF, 0x319490FF, 0x56941DFF, 0x59163DFF, 0x1B8A2FFF, 0x38160BFF, 0x041804FF, 0x355D8EFF, 0x2E3F5BFF,
	0x561A28FF, 0x4E0E27FF, 0x706C67FF, 0x3B3E42FF, 0x2E2D33FF, 0x7B7E7DFF, 0x4A4442FF, 0x28344EFF
};
//============================================================================//
public OnGameModeInit()
{
	SetWeather(serverweather);
	DisableInteriorEnterExits();
	SetGameModeText("UnNamed 2.0");
	mysql_query(mysql,"TRUNCATE `OnlineUsers`",false);
	return 1;
}
//============================================================================//
new timerpriklady;
public Priklady()
{
	if(hraci > 1)
	{
	    Znaminko = random(3);
		if(Znaminko == 0)
		{
			Priklad[0] = random(100);
			Priklad[1] = random(100);
		}
		else if(Znaminko == 1)
		{
			Priklad[0] = random(100);
			Priklad[1] = random(100);
		}
		else if(Znaminko == 2)
		{
		    new delka = (random(10) + 5);
		    format(PostrehString,sizeof(PostrehString),"");
		    for(new i = 0; i != delka; i ++)
		    {
		    	format(PostrehString,sizeof(PostrehString),"%s%s",PostrehString,PostrehZnaky[random(sizeof(PostrehZnaky))]);
			}
		}
		PostrehOdmena = 5+random(10);
		if(Znaminko == 0)
		{
			format(str,sizeof(str),"Kdo první vypoèítá pøíklad "w"%d + "w"%d{0073E0}, získá: "g"%d bodù.",Priklad[0],Priklad[1],PostrehOdmena);
		}
		else if(Znaminko == 1)
		{
			format(str,sizeof(str),"Kdo první vypoèítá pøíklad "w"%d - "w"%d{0073E0}, získá: "g"%d bodù.",Priklad[0],Priklad[1],PostrehOdmena);
		}
		else if(Znaminko == 2)
		{
			format(str,sizeof(str),"Kdo první opíe text "w"%s{0073E0}, získá: "g"%d bodù.",PostrehString,PostrehOdmena);
		}
		SCMTA(0x0073E0FF,str);
		vyhra = true;
		timerpriklady = SetTimer("reloadpriklady",1000*30,false);
	}
	return 1;
}
forward reloadpriklady();
public reloadpriklady()
{
	new vysledek;
	if(Znaminko == 0)
	{
		vysledek = Priklad[0] + Priklad[1];
	}
	else if(Znaminko == 1)
	{
		vysledek = Priklad[0] - Priklad[1];
	}
	if(Znaminko == 0 || Znaminko == 1)
	{
		format(str,sizeof(str),"Nikdo nevyhrál, výsledek byl "w"%d{0073E0}.",vysledek);
	}
	else if(Znaminko == 2)
	{
		format(str,sizeof(str),"Nikdo nevyhrál, text k opsání byl "w"%s{0073E0}.",PostrehString);
	}
	SCMTA(0x0073E0FF,str);
	vyhra = false;
	ReloadPostrehStreak();
	return 1;
}
//============================================================================//
public MinuteTimer()
{
    new hour,minute;
    gettime(hour,minute);
	if(hour == 0 && minute == 0)
	{
		if(strcmp(GetWeekDay(),"Sobota",true) == 0 && !strlen(SlevaMSG))
		{
			DOF2_SetString(CONFIG,"Sleva","Víkendová sleva");
			DOF2_SetInt(CONFIG,"PPRICE",250000);
			DOF2_SaveFile();
			POINT_PRICE = 250000;
			format(SlevaMSG,sizeof(SlevaMSG),"Víkendová sleva");
		}
		else if(strcmp(GetWeekDay(),"Pondìlí",true) == 0 && strlen(SlevaMSG) && strcmp(SlevaMSG,"Víkendová sleva",true) == 0)
		{
			DOF2_SetString(CONFIG,"Sleva","");
			DOF2_SetInt(CONFIG,"PPRICE",300000);
			DOF2_SaveFile();
			POINT_PRICE = 300000;
			format(SlevaMSG,sizeof(SlevaMSG),"");
		}
	}
	return 1;
}
//============================================================================//
public RealTime()
{
	new day,month,year,hour,minute;
	gettime(hour,minute);
	getdate(year,month,day);
	if(day != DailyDay)
	{
	    GenerateDaily();
	}
	if(hour == TOMBOLA_TIME && minute == 0)
	{
		new Cache:cache;
	    if(LastVylosovani != day)
	    {
	        LastVylosovani = day;
			cache = mysql_query(mysql,"SELECT SUM(`Price`),COUNT(DISTINCT `Nick`) FROM `Tombola`");
			new Float:win = cache_get_field_content_float(0,"SUM(`Price`)",mysql),tplayers = cache_get_field_content_int(0,"COUNT(DISTINCT `Nick`)"),nick[25];
			cache_delete(cache,mysql);
	        cache = mysql_query(mysql,"SELECT * FROM `Tombola`");
			if(cache_get_row_count(mysql) > 0)
			{
		        new rand = random(cache_get_row_count(mysql)),query[200];
				cache_get_field_content(rand,"Nick",nick,mysql,sizeof(nick));
				mysql_format(mysql,query,sizeof(query),"INSERT INTO `TombolaWins` (`Nick`,`Vyhra`,`Los`,`Time`) VALUES ('%e',%f,%d,%d)",nick,win,rand,gettime());
				mysql_query(mysql,query,false);
		        SCMTA(0x0077FFFF,"**********************************************************************************");
		        format(str,sizeof(str),"Tombolu v hodnotì "g"%0.1f bodù "w"vyhrává hráè "g"%s"w".",win,nick);
		        SCMTA(bila,str);
		        format(str,sizeof(str),"Tomboly se %s celkem "g"%d %s"w".",PluralWord(tplayers,"zúèastnil","zúèastnili","zúèastnilo"),tplayers,PluralWord(tplayers,"hráè","hráèi","hráèù"));
		        SCMTA(bila,str);
		        SCMTA(0x0077FFFF,"**********************************************************************************");
		        cache_delete(cache,mysql);
		        mysql_query(mysql,"TRUNCATE `Tombola`",false);
		        new id = GetPlayerIdFromName(nick);
		        if(IPC(id))
		        {
		            new Float:before = Points[id];
		            GivePoints(id,win);
				    format(str,sizeof(str),"%s +%0.1f points (before:%0.1f, after: %0.1f)",nick,win,before,Points[id]);
				    printEx(str);
				}
				else
				{
				    new file[50],Float:before,Float:after;
				    format(file,sizeof(file),USER_FILES,nick);
				    before = DOF2_GetFloat(file,"Body");
				    after = before+win;
				    DOF2_SetFloat(file,"Body",before+win);
				    DOF2_SaveFile();
				    format(str,sizeof(str),"%s +%0.1f points (before:%0.1f, after: %0.1f)",nick,win,before,after);
				    printEx(str);
				}
				format(str,sizeof(str),"Gratulujeme, vyhrál jste "g"%0.1f bodù "dc"v tombole\nCelkem se tomboly %s "g"%d %s"w".",win,PluralWord(tplayers,"zúèastnil","zúèastnili","zúèastnilo"),tplayers,PluralWord(tplayers,"hráè","hráèi","hráèù"));
				SendPlayerNotification(nick,"Výhra v tombole",str);
			}
	    }
	}
	format(str,sizeof(str),"~r~%02d~w~.~r~%02d~w~.~y~%d",day,month,year);
	TextDrawSetString(Textdraw18,str);
	if(EventTime[2] < NEXT_AUTO_EVENT_TIME*60 && EventTime[2] != -1 && IsBotConnected() && hraci >= MIN_AUTO_EVENT_PLAYERS && BotEventOn == true)
	{
	    EventTime[2] ++;
		if(EventTime[2] >= NEXT_AUTO_EVENT_TIME*60)
		{
		    if(RunEvent == 0)
		    {
				StartAutoEvent(random(4));
		    	EventTime[2] = -1;
		    }
			else
			{
				EventTime[2] -= 300;
				SendAdminMessage("Automatický event odloen o 5 minut (Právì probíhá event");
			}
		}
	}
	if(EventEndTime > 0)
	{
		if(EventStarted == true)
		{
		    EventEndTime --;
		    format(str,sizeof(str),"~r~Konec: ~y~%s",SecondsToMinutes(EventEndTime));
			TextDrawSetString(Textdraw44,str);
			if(EventEndTime == 0)
		    {
				if(RunEvent == 11)
				{
			        new DIALOG[30*35],players[MAX_PLAYERS],kills[MAX_PLAYERS];
			        for(new i; i <= GetPlayerPoolSize(); i ++)
			        {
			            kills[i] = Player[i][pEventKills];
						players[i] = i;
			        }
					for(new i; i <= GetPlayerPoolSize(); i ++)
					{
					    for(new j=i;j <= GetPlayerPoolSize(); j ++)
					    {
					        if(kills[j] > kills[i])
							{
							    new pam = kills[j],pam2 = players[j];
							    players[j] = players[i];
							    players[i] = pam2;
							    kills[j] = kills[i];
							    kills[i] = pam;
							}
					    }
					}
					if(BotEvent == true)
					{
						for(new i; i < EventMista; i ++)
						{
						    if(kills[i] > 0 && IPC(players[i]))
						    {
						        new text[10];
						        format(text,sizeof(text),"%d",players[i]);
						        CallLocalFunction("cmd_vyhra","is",botid,text);
							}
						}
				        CallLocalFunction("cmd_dann","is",botid," ");
					}
					new places;
					for(new i; i <= GetPlayerPoolSize(); i ++)
					{
				    	if(IPC(players[i]) && !IsPlayerNPC(players[i]) && OnEvent[players[i]] == true && kills[i] > 0)
						{
						    places++;
          			        format(str,sizeof(str),"%d. "g"%s\t%d zabití\n",places,Jmeno(players[i]),kills[i]);
					        strcat(DIALOG,str);
					        format(str,sizeof(str),"DM: %d. "g"%s "w"-> %d zabití",places,Jmeno(players[i]),kills[i]);
					        printEx(str);
						}
					}
					new id = GetPlayerIdFromName(EventAdmin);
					if(IPC(id) && OnEvent[id] == false)
						SPD(id,0,DIALOG_STYLE_TABLIST,"Výsledky eventu",DIALOG,"Zavøít","");
					for(new i; i <= GetPlayerPoolSize(); i ++)
					    if(IPC(i) && !IsPlayerNPC(i) && OnEvent[i] == true)
							SPD(i,0,DIALOG_STYLE_TABLIST,"Výsledky eventu",DIALOG,"Zavøít","");
					if(IsBotConnected())
						CallRemoteFunction("OnPlayerCommandText","is",GetBotID(),"/eventend");
				}
		    }
		}
	}
	return 1;
}
//============================================================================//
function JoinSpamTimer(joinsbefore)
{
	if(joinsbefore <= joins)
	{
	    joins = 0;
	}
	else
	    SetTimerEx("JoinSpamTimer",5000,false,"i",joins);
}
//============================================================================//
public GameTime()
{
	if(IsPlayerConnected(botid))
	{
	    botrespawn ++;
	    if(botrespawn >= 60)
	    {
		    CallLocalFunction("OnDialogResponse","iiiis",botid,UNNAMED+90,1,0,"Respawnout gará");
			botrespawn = 0;
		}
	}
	minuty++;
	if(minuty == 60)
	{
	    minuty = 0;
		hodiny++;
		if(hodiny == 24)
		{
		    minuty = 0;
		    hodiny = 0;
		}
	}
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(IPC(i))
	    {
			if(RealnyTime[i] == true && OnEvent[i] == false)
			{
			    new hours,minutes;
			    gettime(hours,minutes);
				SetPlayerTime(i,hours,minutes);
				format(str,sizeof(str),"~g~~h~%02d~w~:~g~~h~%02d",hours,minutes);
			}
			else if(pHours[i] != -1 && pMinutes[i] != -1 && OnEvent[i] == false)
			{
/*			    pMinutes[i] ++;
			    if(pMinutes[i] == 60)
			    {
			        pMinutes[i] = 0;
			        pHours[i] ++;
			        if(pHours[i] == 24)
			            pHours[i] = 0;
			    }
*/				SetPlayerTime(i,pHours[i],pMinutes[i]);
				format(str,sizeof(str),"~g~~h~%02d~w~:~g~~h~%02d",pHours[i],pMinutes[i]);
			}
			else if(OnEvent[i] == false)
			{
				SetPlayerTime(i,hodiny,minuty);
				format(str,sizeof(str),"~g~~h~%02d~w~:~g~~h~%02d",hodiny,minuty);
			}
			else
			{
				SetPlayerTime(i,EventHour,0);
				format(str,sizeof(str),"~g~~h~%02d~w~:~g~~h~00",EventHour);
			}
			PlayerTextDrawSetString(i,TDTime[i],str);
		}
	}
	return 1;
}
//============================================================================//
public Odehrano(playerid)
{
	new hours = GetPlayerPlayedTime(playerid)/60/60;
    if(Achiv[playerid][TIME_1] == 0)
    {
        if(hours>= 1)
        {
            SetPlayerAchievement(playerid,TIME_1);
        }
    }
    if(Achiv[playerid][TIME_24] == 0)
    {
        if(hours >= 24)
        {
            SetPlayerAchievement(playerid,TIME_24);
        }
    }
    if(Achiv[playerid][TIME_100] == 0)
    {
        if(hours >= 100)
        {
            SetPlayerAchievement(playerid,TIME_100);
        }
    }
    if(Achiv[playerid][TIME_500] == 0)
    {
        if(hours >= 500)
        {
            SetPlayerAchievement(playerid,TIME_500);
        }
    }
	return 1;
}
//============================================================================//
/*public ElitePropsPayment(id)
{
	if(id == MAX_EPROPS)
		id = 0;
	SetTimerEx("ElitePropsPayment",1000*60*10,false,"i",id+1);
	new query[100],Cache:cache;
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `EliteProps` WHERE `ElitePropID`=%d",id);
	cache = mysql_query(mysql,query);
	for(new i; i < cache_get_row_count(); i ++)
	{
		new lvl = cache_get_field_content_int(i,"Level"),id2 = cache_get_field_content_int(i,"ID");
		mysql_format(mysql,query,sizeof(query),"UPDATE `EliteProps` SET `Earnings`=`Earnings`+%d WHERE `ID`=%d",lvl*10,id2);
		mysql_query(mysql,query,false);
	}
	cache_delete(cache,mysql);
	return 1;
}
*/
public PropertyPayOff()
{
	new props[MAX_PLAYERS],fajl[50];
	for(new i = 1; i < MAX_PROPERTIES; i ++)
	{
	    if(strcmp(Property[i][PropertyOwner],"0",false) != 0)
		{
		    format(fajl,sizeof(fajl),"UnNamed/Properties/Property%d.txt",i);
		    if(strcmp(Property[i][PropertyOwner],"-1",false) != 0)
		    {
			    Property[i][PropertyTime] --;
				if(Property[i][PropertyTime] <= 0)
				{
					DOF2_SetString(fajl,"Owner","-1");
					DOF2_SetInt(fajl,"Level",1);
					DOF2_SetInt(fajl,"CashLevel",1);
					DOF2_SetInt(fajl,"OnSale",0);
					Property[i][PropertyOnSale] = 0;
					Property[i][PropertyLevel] = 1;
					Property[i][PropertyCashLevel] = 1;
					Property[i][PropertyPrice] = Property[i][PropertyLevel]*PROPERTY_DPRICE+Property[i][PropertyCashLevel]*PROPERTY_DPRICE;
					GivePlayerMoneyToTrezor(Property[i][PropertyOwner],Property[i][PropertyEarning]);
					format(str,sizeof(str),"Nemovitost "g"%s "dc"vyprel pronájem, byla odprodána mìstu. Vechny peníze ("g"%s$"dc") byly pøevedeny\ndo záloního trezoru "g"/trezor",Property[i][PropertyName],Split(Property[i][PropertyEarning]));
					SendPlayerNotification(Property[i][PropertyOwner],"Nemovitost odprodána",str);
				    for(new x; x <= GetPlayerPoolSize(); x ++)
				    {
				        if(IPC(x))
				        {
				            if(IsPlayerPropertyOwner(x,i))
				            {
				                format(str,sizeof(str),"Nemovitosti {FF8C00}%s {00FFFF}vyprel pronájem, byla odprodána mìstu.",Property[i][PropertyName]);
								SCM(x,0x00FFFFFF,str);
								POwner[x]--;
				            }
				        }
				    }
					format(Property[i][PropertyOwner],24,"-1");
				}
			    new rand = ((Property[i][PropertyLevel]*EARNING_PER_LEVEL)/2)+ random((Property[i][PropertyLevel]*EARNING_PER_LEVEL));
			    if(Property[i][PropertyEarning] + rand > Property[i][PropertyCashLevel]*CASH_PER_LEVEL)
				{
				    rand = (Property[i][PropertyEarning]+rand)-Property[i][PropertyCashLevel]*CASH_PER_LEVEL;
				    Property[i][PropertyEarning] = Property[i][PropertyCashLevel]*CASH_PER_LEVEL;
				}
				else
				    Property[i][PropertyEarning] += rand;
			    DOF2_SetInt(fajl,"Earning",Property[i][PropertyEarning]);
			    DOF2_SetInt(fajl,"Hours",Property[i][PropertyTime]);
				DOF2_SaveFile();
				UpdatePropertyText(i);
				for(new x; x <= GetPlayerPoolSize(); x ++)
			    {
			        if(IPC(x))
			        {
			            if(IsPlayerPropertyOwner(x,i))
			            {
						    props[x]++;
							if(rand == 0)
				                format(str,sizeof(str),"Nemovitost {FF8C00}%s {00FFFF}má plnou kasu ({FF8C00}%s${00FFFF}), nic ti nevydìlala.",Property[i][PropertyName],Split(Property[i][PropertyEarning]));
							else
				                format(str,sizeof(str),"Nemovitost {FF8C00}%s {00FFFF}ti vydìlala {FF8C00}%s${00FFFF} celkem {FF8C00}%s${00FFFF}.",Property[i][PropertyName],Split(rand),Split(Property[i][PropertyEarning]));
							SCM(x,0x00FFFFFF,str);
							if(Property[i][PropertyTime] > 0 && Property[i][PropertyTime] < 24)
							{
				                format(str,sizeof(str),"Nemovitosti {FF8C00}%s {00FFFF}vyprí za {FF8C00}%d hodin {00FFFF}pronájem.",Property[i][PropertyName],Property[i][PropertyTime]);
								SCM(x,0x00FFFFFF,str);
								if(POwner[x] == props[x])
								{
									SCM(x,0x00FFFFFF,"Pronájem navýite u nemovitosti.");
								}
							}
			            }
			        }
			    }
			}
	 		new query[300],rows = 0,fields = 0;
		    mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Properties` WHERE `PropertyID` = %d LIMIT 1",i);
		    new Cache:cache = mysql_query(mysql,query);
		    cache_get_data(rows,fields,mysql);
		    if(!rows)
		    {
		        mysql_format(mysql,query,sizeof(query),"INSERT INTO `Properties` (`PropertyID`,`Owner`,`Name`,`X`,`Y`,`Z`,`Level`,`Earnings`) VALUES ('%d','%e','%e',%f,%f,%f,'%d','%d')",i,Property[i][PropertyOwner],Property[i][PropertyName],Property[i][PropertyX],Property[i][PropertyY],Property[i][PropertyZ],Property[i][PropertyLevel],Property[i][PropertyEarning]);
		        mysql_query(mysql,query,false);
		    }
		    else
		    {
				mysql_format(mysql,query,sizeof(query),"UPDATE `Properties` SET `Owner`='%e',`Name`='%e', `X`=%f, `Y`=%f, `Z`=%f,`Level`='%d',`Earnings`='%d' WHERE `PropertyID` = %d",Property[i][PropertyOwner],Property[i][PropertyName],Property[i][PropertyX],Property[i][PropertyY],Property[i][PropertyZ],Property[i][PropertyLevel],Property[i][PropertyEarning],i);
		        mysql_query(mysql,query,false);
		    }
		    cache_delete(cache,mysql);
		}
	}
	return 1;
}
//============================================================================//
public ClearWL(playerid)
{
	SetPlayerWantedLevel(playerid,0);
	return 1;
}
//============================================================================//
function OnPlayerLogged(playerid)
{
	new query[300],Cache:cache,nick[MAX_PLAYER_NAME+1],los,Float:win,serial[150];
	gpci(playerid,serial,sizeof(serial));
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Users` WHERE `Nick`='%e'",Jmeno(playerid));
	cache = mysql_query(mysql,query);
	if(cache_get_row_count(mysql))
	{
		mysql_format(mysql,query,sizeof(query),"UPDATE `Users` SET `LastConnect`=%d, `IP`='%s', `AntiNickCopy`='%e', `GPCI`='%e',`Dovolena`=0 WHERE `Nick`='%e'",gettime(),GetIP(playerid),EncodeNick(Jmeno(playerid)),serial,Jmeno(playerid));
		PlayerID[playerid] = cache_get_field_content_int(0,"ID",mysql);
	}
	else
	{
		mysql_format(mysql,query,sizeof(query),"INSERT INTO `Users` (`Nick`,`LastConnect`,`Create` ,`IP`,`AntiNickCopy`,`GPCI`) VALUES ('%e',%d,%d,'%s','%e','%e')",Jmeno(playerid),gettime(),gettime(),GetIP(playerid),EncodeNick(Jmeno(playerid)),serial);
	}
	cache_delete(cache,mysql);
	mysql_query(mysql,query,false);

	cache = mysql_query(mysql,"SELECT * FROM `TombolaWins` ORDER BY `Time` DESC LIMIT 1");
	if(cache_get_row_count(mysql))
	{
		cache_get_field_content(0,"Nick",nick);
		los = cache_get_field_content_int(0,"Los",mysql);
		win = cache_get_field_content_float(0,"Vyhra",mysql);
	}
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Tombola` WHERE `Nick`='%e' LIMIT 1",Jmeno(playerid));
	cache = mysql_query(mysql,query);
	if(!cache_get_row_count(mysql))
	{
		SCM(playerid,sblue,"Zapojte se do tomboly -> "g"/tombola "sb"<- vylosování kadý den v "w"18:00");
		if(los != 0)
		{
			format(str,sizeof(str),"Výherce minulé tomboly: "g"%s"sb", vyhrál "w"%0.1f bodù "sb"s losem "w"è. %d",nick,win,los);
			SCM(playerid,sblue,str);
		}
	}
	cache_delete(cache,mysql);

/*
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Skins` WHERE `Nick`='%e'",Jmeno(playerid));
	cache = mysql_query(mysql,query);
	for(new i; i < cache_get_row_count(mysql); i ++)
		Player[playerid][pSkinOwned][cache_get_field_content_int(i,"SkinID")] = true;
	cache_delete(cache,mysql);
*/	return 1;
}
//============================================================================//
function Inzeraty()
{
	new inzerats,Inzerat[MAX_PLAYERS][129],InzeratID[MAX_PLAYERS];
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(IPC(i))
	    {
	        new inzerat[129];
	        GetPVarString(i,"Inzerat",inzerat,sizeof(inzerat));
	        if(strlen(inzerat))
	        {
	            Inzerat[inzerats] = inzerat;
	            InzeratID[inzerats] = i;
	            inzerats++;
	        }
	    }
	}
	if(inzerats > 0)
	{
		new rand = random(inzerats);
		while(!strlen(Inzerat[rand]))
			rand = random(inzerats);
		format(str,sizeof(str),"[ /inzerat ] [ %s ]: "w"%s",Jmeno(InzeratID[rand]),Inzerat[rand]);
		SCMTA(0xc7ff00FF,str);
	}
	return 1;
}
//============================================================================//
public Tipy()
{
	there:
	switch(random(2))
	{
	    case 0:
	    {
			switch(random(36))
			{
				case 0: SCMTA(yellow,"[ TIP ] {C700FF}Pro opravení vozidla pouijte pøíkaz "g"/oprava {C700FF}nebo klávesu "g"NUM 8{C700FF}.");
				case 1: SCMTA(yellow,"[ TIP ] {C700FF}Pro doplnìní zdraví pouijte pøíkaz "g"/heal{C700FF}.");
				case 2: SCMTA(yellow,"[ TIP ] {C700FF}Pro spawnutí vozidla pouijte pøíkaz "g"/carmenu {C700FF}nebo "g"/car{C700FF}.");
				case 3: SCMTA(yellow,"[ TIP ] {C700FF}Pro seznam Administrátorù pouijte pøíkaz "g"/admins{C700FF}.");
				case 4: SCMTA(yellow,"[ TIP ] {C700FF}Pro seznam nových pøíkazù, warpù atd. "g"/cmds, /warpy, /premium{C700FF}.");
				case 5: SCMTA(yellow,"[ TIP ] {C700FF}Pokud si chcete zapnout rádio pouijte pøíkaz "g"/radio{C700FF}.");
				case 6: SCMTA(yellow,"[ TIP ] {C700FF}Chcete se orat ? Pouijte pøíkaz "g"/chlast{C700FF}.");
				case 7: SCMTA(yellow,"[ TIP ] {C700FF}Pro zmìnu bojového umìní pouijte pøíkaz "g"/umeni{C700FF}.");
				case 8: SCMTA(yellow,"[ TIP ] {C700FF}Na serveru jsou rozmístìny gangy, "g"/gangy, /members{C700FF}.");
				case 9: SCMTA(yellow,"[ TIP ] {C700FF}VIP Úèet získáte za body "g"/shop{C700FF}.");
				case 10: SCMTA(yellow,"[ TIP ] {C700FF}Body se dají získat: "g"zabíjením, duely, závody, postøehy, /mise, koupením{C700FF}.");
//				case 11: SCMTA(yellow,"[ TIP ] {C700FF}Potøebujete se zbavit Wanted Levelu ? Najmìte si právníka "g"/shop{C700FF}.");
				case 12: SCMTA(yellow,"[ TIP ] {C700FF}Navtivte ná web: "g""SRV_WEB"{C700FF}.");
				case 13: SCMTA(yellow,"[ TIP ] {C700FF}Proètìte si pravidla "g"/pravidla {C700FF}neznalost pravidel se neomlouvá{C700FF}.");
				case 14: SCMTA(yellow,"[ TIP ] {C700FF}Chcete si uloit vozidlo tak aby vám nezmizelo i s tuningem ? pouijte "g"/garaz{C700FF}.");
				case 15: SCMTA(yellow,"[ TIP ] {C700FF}Nelíbí se vám u Vae vozidlo ? Prodejte ho jinému hráèi pøíkazem "g"/sellcar{C700FF}!");
				case 16: SCMTA(yellow,"[ TIP ] {C700FF}Seznam achievementù zobrazíte pøíkazem "g"/achiev{C700FF}.");
				case 17: SCMTA(yellow,"[ TIP ] {C700FF}Otestujte své zkuenosti se zbranìmi "g"/duel{C700FF}.");
				case 18: SCMTA(yellow,"[ TIP ] {C700FF}Zjistìte kdo z Vás je nejlepí "g"/sumo{C700FF}.");
				case 19: SCMTA(yellow,"[ TIP ] {C700FF}Prodejte hráèi body pøíkazem "g"/sellbody{C700FF}.");
				case 20: SCMTA(yellow,"[ TIP ] {C700FF}Najdete nás také na Facebooku (/fb): "g""SRV_FB"{C700FF}.");
				case 21:
				{
				    new props;
				    for(new i = 1; i < propertyid+1; i ++)
				    {
						if(strcmp(Property[i][PropertyOwner],"0",false) != 0)
						{
						    if(strcmp(Property[i][PropertyOwner],"-1",false) == 0)
						    {
						        props++;
						    }
						}
					}
				    format(str,sizeof(str),"[ TIP ] {C700FF}Na serveru je volných "g"%d {C700FF}nemovitostí.",props);
					SCMTA(yellow,str);
				}
				case 22:
				{
				    new Cache:cache = mysql_query(mysql,"SELECT * FROM `Soutez` WHERE `Active` = 1");
				    if(cache_get_row_count(mysql)) {
				        new Nazev[50];
						cache_get_field_content(0,"Nazev",Nazev,mysql,sizeof(Nazev));
						if(strcmp(Nazev,"NULL",true) == 0 || gettime() < cache_get_field_content_int(0,"Start",mysql) || gettime() > cache_get_field_content_int(0,"End",mysql))
						{
						    goto there;
						}
					    format(str,sizeof(str),"[ TIP ] {C700FF}Právì probíhá soutì "g"%s {C700FF}pøipojte se "g"/soutez.",Nazev);
						SCMTA(yellow,str);
						cache_delete(cache,mysql);
					}
				}
				case 23: SCMTA(yellow,"[ TIP ] {C700FF}Pokud se potøebujete na nìco zeptat pouijte pøíkaz: "g"/dotaz{C700FF}.");
				case 24: SCMTA(yellow,"[ TIP ] {C700FF}Navtivte ná Discord (/discord) server"g" "SRV_DISCORD"{C700FF}.");
				case 25:
				{
				    new houses;
				    for(new i; i < MAX_HOUSES; i ++)
				    {
						if(strcmp(House[i][hOwner],"0",false) != 0)
						{
						    if(strcmp(House[i][hOwner],"-1",false) == 0)
						    {
						        houses++;
						    }
						}
					}
				    format(str,sizeof(str),"[ TIP ] {C700FF}Na serveru je volných "g"%d {C700FF}domù.",houses);
					SCMTA(yellow,str);

				}
				case 26: SCMTA(yellow,"[ TIP ] {C700FF}Pro nastavení pouijte pøíkaz"g" /nastaveni{C700FF}.");
				case 27: SCMTA(yellow,"[ TIP ] {C700FF}Na naem Facebooku mùete nalézt "g"Aktivaèní Kódy{C700FF}.");
				case 28: SCMTA(yellow,"[ TIP ] {C700FF}Zazápaste si v DeathMatchi "g"/dm{C700FF}.");
				case 29: SCMTA(yellow,"[ TIP ] {C700FF}Èím více misí splníte, tím vìtí bude vae "g"odmìna{C700FF}.");
				case 30: SCMTA(yellow,"[ TIP ] {C700FF}Na serveru se nachízí draby. Drabu zaloíte pøíkazem "g"/drazba{C700FF}.");
				case 31: SCMTA(yellow,"[ TIP ] {C700FF}Seznam aktualních draeb zobrazíte pøíkazem "g"/drazby{C700FF}.");
				case 32: SCMTA(yellow,"[ TIP ] {C700FF}Pokud si koupíte vozidlo, mùete ho do 5 minut vrátit za "g"plnou cenu{C700FF}.");
				case 33: SCMTA(yellow,"[ TIP ] {C700FF}Nudíte se ? zkuste si zastuntovat "g"/stunt{C700FF}.");
				case 34: SCMTA(yellow,"[ TIP ] {C700FF}Zkuste své tìstí v tombole "g"/tombola{C700FF}.");
				case 35: SCMTA(yellow,"[ TIP ] {C700FF}Najdete nás také na Instagramu (/ig): "g""SRV_INSTA"{C700FF}.");
			}
		}
		case 1:
		{
			new query[100];
			new Interest[][][] =
			{
			    {"Points","bodù"},
			    {"Kills","zavradìných hráèù"},
			    {"Events","vyhraných eventù"},
			    {"Duels","vyhraných duelù"},
			    {"Sumos","vyhraných sumo zápasù"},
			    {"Races","vyhraných závodù"},
			    {"Hours","odehraných hodin"},
			    {"Missions","splnìných misí"},
			    {"Robbed","vykradených nemovitostí"},
				{"Postrehu","vyhraných postøehù"},
				{"DMKills","zabitých hráèù v DM"},
				{"DMSCore","DM score"}
			};
			new rand = random(sizeof(Interest));
			switch(random(sizeof(Interest)+1))
			{
				case 0..sizeof(Interest)-1:
				{
					mysql_format(mysql,query,sizeof(query),"SELECT SUM(`%s`) FROM `Users`",Interest[rand][0]);
					mysql_tquery(mysql,query,"SendInterestMessage","ss",Interest[rand][0],Interest[rand][1]);
				}
				case sizeof(Interest):
				{
				    new Cache:cache = mysql_query(mysql,"SELECT * FROM `Users` ORDER BY `ID` DESC LIMIT 1"),name[24+1];
				    if(cache_get_row_count(mysql))
				    {
					    cache_get_field_content(0,"Nick",name,mysql);
						format(str,sizeof(str),"[ SERVER ] {C700FF}Nejnovìjí hráè na serveru je "g"%s{C700FF}.",name);
						SCMTA(yellow,str);
					}
					cache_delete(cache);
				}
			}
		}
	}
	return 1;
}
//============================================================================//
forward SendInterestMessage(name1[],name2[]);

public SendInterestMessage(name1[],name2[])
{
	new retezec[50];
	format(retezec,sizeof(retezec),"SUM(`%s`)",name1);
	format(str,sizeof(str),"[ VÍTE, E ] {C700FF}Víte, e je na serveru celkem "g"%s {C700FF}%s ?",Split(cache_get_field_content_int(0,retezec,mysql),1),name2);
	SCMTA(yellow,str);
	return 1;
}

//============================================================================//
public OnFilterScriptInit()
{
	DOF2_SetUTF8(true);
	print("+------------------------+");
	print("|        UnNamed         |");
	print("+------------------------+");
	print("Autor: DeLeTe");
	printf("Verze: 2.0 (Build: #%0.1f)",BUILD);
	print("Discord: deletecz");
	print("Development: 2014-2019");
	print("Server: "SRV_NAME"");
	print("Web: "SRV_WEB"");
	print("Pro GM: FAKERZE8");
	print("+------------------------+");

	hodiny = 7;
	minuty = 0;

	if(!fexist("UnNamed"))
	{
	    print("Chybí sloka UnNamed prosím vytvoøte ji do sloky scriptfiles");
		SCMTA(red,Crash);
	}
	if(!fexist("UnNamed/Vehicles"))
	{
	    print("Chybí sloka Vehicles prosím vytvoøte ji ve sloce UnNamed ve scriptfiles");
		SCMTA(red,Crash);
	}
	if(!fexist("UnNamed/Races"))
	{
	    print("Chybí sloka Races prosím vytvoøte ji ve sloce UnNamed ve scriptfiles");
		SCMTA(red,Crash);
	}
	if(!fexist("UnNamed/Maps"))
	{
	    print("Chybí sloka Maps prosím vytvoøte ji ve sloce UnNamed ve scriptfiles");
		SCMTA(red,Crash);
	}
	if(!fexist("UnNamed/NKZ"))
	{
	    print("Chybí sloka NKZ prosím vytvoøte ji ve sloce UnNamed ve scriptfiles");
		SCMTA(red,Crash);
	}
	if(!fexist(CONFIG))
	{
	    DOF2_CreateFile(CONFIG);
	    DOF2_SetInt(CONFIG,"VIP_ZDARMA",1);
	    DOF2_SetInt(CONFIG,"Minuta",5);
	    DOF2_SetInt(CONFIG,"Castka",10000);
	    DOF2_SetInt(CONFIG,"Odmena",10);
	    DOF2_SetInt(CONFIG,"SBLOCK",0);
		DOF2_SetInt(CONFIG,"AREPAIR",0);
		DOF2_SetInt(CONFIG,"Cena",35000);
		DOF2_SetInt(CONFIG,"PWBLOCK",3);
		DOF2_SetInt(CONFIG,"VPWBLOCK",6);
		DOF2_SetInt(CONFIG,"VBODY",10);
		DOF2_SetInt(CONFIG,"PPRICE",300000);
		DOF2_SetFloat(CONFIG,"ServerPoints",0.0);

		DOF2_SetString(CONFIG,"DB_HOST",host);
		DOF2_SetString(CONFIG,"DB_USER",user);
		DOF2_SetString(CONFIG,"DB_NAME",db);
		DOF2_SetString(CONFIG,"DB_PASS",db_pass);

		for(new i; i < sizeof(FirstRadio); i ++)
		{
		    format(str,sizeof(str),"Name%d",i);
			DOF2_SetString(CONFIG,str,FirstRadio[i][RadioName]);
		    format(str,sizeof(str),"Language%d",i);
			DOF2_SetString(CONFIG,str,FirstRadio[i][RadioLang]);
		    format(str,sizeof(str),"URL%d",i);
			DOF2_SetString(CONFIG,str,FirstRadio[i][RadioURL]);
		}
		DOF2_SaveFile();
	}
	else
	{
	    AutRepair = DOF2_GetInt(CONFIG,"AREPAIR");
	    POINT_PRICE = DOF2_GetInt(CONFIG,"PPRICE");
	    transactionid = DOF2_GetInt(CONFIG,"TransactionID");
	    ServerPoints = DOF2_GetFloat(CONFIG,"ServerPoints");
	}
	PWBLOCK = DOF2_GetInt(CONFIG,"PWBLOCK");
	VWBLOCK = DOF2_GetInt(CONFIG,"VPWBLOCK");

	if(!fexist(DAILYCFG))
	    DOF2_CreateFile(DAILYCFG);
	    
	DailyID = DOF2_GetInt(DAILYCFG,"DailyID");
	DailyDay = DOF2_GetInt(DAILYCFG,"DailyDay");
	new newday,newyear,newmonth;
	getdate(newyear,newmonth,newday);
	if(DailyDay != newday)
	{
	    GenerateDaily();
	}
	else
	{
	    new string[128];
	    format(string,sizeof(string),DOF2_GetString(DAILYCFG,"DailyIDs"));
	    sscanf(string,"iii",ActiveDailyIDs[0],ActiveDailyIDs[1],ActiveDailyIDs[2]);
	}

	format(SlevaMSG,sizeof(SlevaMSG),DOF2_GetString(CONFIG,"Sleva"));
	for(new i; i < MAX_RADIOS; i ++)
	{
	    format(str,sizeof(str),"Name%d",i);
	    format(Radio[i][RadioName],128,DOF2_GetString(CONFIG,str));
	    format(str,sizeof(str),"Language%d",i);
	    format(Radio[i][RadioLang],128,DOF2_GetString(CONFIG,str));
	    format(str,sizeof(str),"URL%d",i);
	    format(Radio[i][RadioURL],128,DOF2_GetString(CONFIG,str));
	}
	print("[ UnNamed ] Config [ OK ]");

	CreateDynamicPickup(3593,23,-686.0338,-2097.7839,25.7700,CHRISTMAS_VW); //Auto
	CreateDynamic3DTextLabel("Jetpack",cyan,-2291.7175,-1673.4275,483.3532,30,.testlos=1,.worldid=CHRISTMAS_VW);
	CreateDynamicPickup(370,23,-2291.7175,-1673.4275,483.3532,CHRISTMAS_VW); //Jetpack
	CreateDynamic3DTextLabel("Hledejte tyto dárky\n"w"(tento je pouze vzorový)",cyan,-2297.0071,-1664.4762,483.4301,30,.testlos=1,.worldid=CHRISTMAS_VW);
	CreateDynamicPickup(19055,23,-2297.0071,-1664.4762,483.4301,CHRISTMAS_VW);


	mysql_log(LOG_ERROR | LOG_WARNING);
	mysql = mysql_connect(DOF2_GetString(CONFIG,"DB_HOST"), DOF2_GetString(CONFIG,"DB_USER"), DOF2_GetString(CONFIG,"DB_NAME"), DOF2_GetString(CONFIG,"DB_PASS"));
	if(mysql_errno(mysql) != 0)
	{
		printf("[ UnNamed ] MySQL (%s) [ FAIL ] [ SHUTTED DOWN ]",DOF2_GetString(CONFIG,"DB_NAME"));
		SendRconCommand(Off);
	}
	else
	{
		printf("[ UnNamed ] MySQL (%s) [ OK ]",DOF2_GetString(CONFIG,"DB_NAME"));
		mysql_tquery(mysql,"SET character_set_client=cp1250","","");
		mysql_tquery(mysql,"SET character_set_connection=cp1250","","");
		mysql_tquery(mysql,"SET character_set_results=cp1250","","");
	}
/*
	for(new i; i < sizeof(OtherSkins); i ++)
	{
	    new string[100],string2[100];
	    format(string,sizeof(string),"skins/%s/%s.dff",OtherSkins[i][sSkinFile],OtherSkins[i][sSkinFile]);
	    format(string2,sizeof(string2),"skins/%s/%s.txd",OtherSkins[i][sSkinFile],OtherSkins[i][sSkinFile]);
		AddCharModel(OtherSkins[i][sSkinBaseID],OtherSkins[i][sSkinID]+NORMAL_SKIN,string,string2);
	}

	for(new i; i < sizeof(CustomSkin); i ++)
	{
	    new string[100],string2[100];
	    format(string,sizeof(string),"skins/%s/%s.dff",CustomSkin[i][sSkinFile],CustomSkin[i][sSkinFile]);
	    format(string2,sizeof(string2),"skins/%s/%s.txd",CustomSkin[i][sSkinFile],CustomSkin[i][sSkinFile]);
		AddCharModel(CustomSkin[i][sSkinBaseID],CustomSkin[i][sSkinID]+SHOP_SKIN,string,string2);
	}
*/
	new userquery[100],Cache:usercache;
	mysql_format(mysql,userquery,sizeof(userquery),"SELECT * FROM `Users` WHERE `LastConnect`<%d",gettime()-31536000);
	usercache = mysql_query(mysql,userquery);
	for(new i; i < cache_get_row_count(mysql); i ++)
	{
	    new nick[25];
	    cache_get_field_content(i,"Nick",nick,mysql,sizeof(nick));
		DeleteUser(nick);
	}
	cache_delete(usercache,mysql);
//	CreateEliteProperty(-1987.6838,247.6640,34.7968,EPROP_TYPE_DRUGS);
/*	new vquery[300];
	for(new i; i < sizeof(Cars); i ++)
	{
	    mysql_format(mysql,vquery,sizeof(vquery),"INSERT INTO `GarageVehicles` (`Model`,`Price`,`Category`) VALUES (%d,%d,'%e')",Cars[i][GarageID],Cars[i][GarageCena],Cars[i][GarageCategory]);
		mysql_tquery(mysql,vquery,"","");
	}
*/
//	new pquery[150],Cache:pcache;
/*	for(new i; i < sizeof(Poss); i ++)
	{
		mysql_format(mysql,pquery,sizeof(pquery),"INSERT INTO `Packages` (`X`,`Y`,`Z`,`Finded`) VALUE (%f,%f,%f,0)",Poss[i][0],Poss[i][1],Poss[i][2]);
		mysql_query(mysql,pquery,false);
		printf("%d",i+1);
	}
	mysql_format(mysql,pquery,sizeof(pquery),"SELECT * FROM `Packages`LIMIT %d",MAX_PACKAGES);
	pcache = mysql_query(mysql,pquery);
	for(new i; i < cache_get_row_count(mysql); i ++)
	{
	    Package[i][pID] = cache_get_field_content_int(i,"ID",mysql);
	    Package[i][pX] = cache_get_field_content_float(i,"X",mysql);
	    Package[i][pY] = cache_get_field_content_float(i,"Y",mysql);
	    Package[i][pZ] = cache_get_field_content_float(i,"Z",mysql);
	    Package[i][Finded] = cache_get_field_content_int(i,"Finded",mysql);
	}
	Packages[TotalPackages] = cache_get_row_count(mysql);
	cache_delete(pcache,mysql);
	print("[ UnNamed ] Packages [ OK ]");
*/
	for(new i; i < MAX_ZONES; i ++)
	{
	    format(dfile,sizeof(dfile),NKZ_FILE,i);
	    if(fexist(dfile))
	    {
	        new Float:X,Float:Y,Float:Z,Float:radius;
	        X = DOF2_GetFloat(dfile,"X");
	        Y = DOF2_GetFloat(dfile,"Y");
	        Z = DOF2_GetFloat(dfile,"Z");
	        radius = DOF2_GetFloat(dfile,"Radius");
	        CreateNoKillZone(X,Y,Z,radius);
	    }
	}
	print("[ UnNamed ] No Kill Zones [ OK ]");


	for(new i; i < MAX_DUELS; i ++)
	{
	    for(new x; x < 2; x ++)
			Duel[i][DuelPlayer][x] = -1;
	    ResetDuel(i);
	}

	new DuelNadpis[4];

	CreateObject(8171, -1315.946655 -10, -142.697463, -52.000000, 0.000000, 90.000000, 20.000000);
	CreateObject(8171, -1302.169555 -10, -111.749763, -52.000000, 0.000000, -90.000000, 112.000000);
	CreateObject(8171, -1252.244384 -10, -115.306755, -52.000000, 0.000000, -90.000000, 20.000000);
	CreateObject(8171, -1279.656005 -10, -175.094528, -52.000000, 0.000000, 90.000000, 112.000000);

	CreateObject(8171, -1301.068847 -10, -140.689407, -68.000000, 0.000000, 0.000000, 20.000000);
	CreateObject(8171, -1264.027343 -10, -126.513778, -68.000000, 0.000000, 0.000000, 20.000000);

	CreateObject(8171, -1301.068847 -10, -140.689407, -35.959926, 0.000000, 180.000000, 20.000000);
	CreateObject(8171, -1263.867553 -10, -126.455680, -35.959957, 0.000000, 180.000000, 20.000000);

	DuelNadpis[0] = CreateObject(4238, -1278.9952, -170.7525, -52.0000, 0.0000, 0.0000, -127.8003);
	DuelNadpis[1] = CreateObject(4238, -1301.4739, -107.4712, -52.0000, 0.0000, 0.0000, 52.1944);
	DuelNadpis[2] = CreateObject(4238, -1322.2235, -152.8825, -52.0000, 0.0000, 0.0000, 140.2787);
	DuelNadpis[3] = CreateObject(4238, -1258.4338, -125.9478, -52.0000, 0.0000, 0.0000, -39.6827);

	for(new i; i < sizeof(DuelNadpis); i++)
	{
	    SetObjectMaterialText(DuelNadpis[i], "{FFFFFF}Un{0077FF}Named{FFFFFF}",0, 80, "Arial", 35, 1, -32256, 0, 1);
	}

	new Cache:wofcache,wofquery[200];
	mysql_format(mysql,wofquery,sizeof(wofquery),"SELECT * FROM `Users` WHERE `Hours`>=1000 AND `Level`>= 50 ORDER BY `Hours` DESC LIMIT %d",sizeof(WalkOfFamePos));
	wofcache = mysql_query(mysql,wofquery);
	for(new i; i < cache_get_row_count(); i ++)
	{
		new wofname[24+1],text[100];
		cache_get_field_content(i,"Nick",wofname,mysql);
//		if(cache_get_field_content_int(i,"Legend",mysql) == 0)
//			format(text,sizeof(text),"** %s **\n{0077FF}Odehrál zde %d hodin\nDosáhl %d. levelu",wofname,cache_get_field_content_int(i,"Hours",mysql),cache_get_field_content_int(i,"Level",mysql));
//		else
		format(text,sizeof(text),""g"*** %s ***\n"y"Odehrál zde %d hodin\nDosáhl %d. levelu",wofname,cache_get_field_content_int(i,"Hours",mysql),cache_get_field_content_int(i,"Level",mysql));
		CreateDynamic3DTextLabel(text,bila,WalkOfFamePos[i][0],WalkOfFamePos[i][1],WalkOfFamePos[i][2],30,.testlos=1);
	}
	cache_delete(wofcache,mysql);
	print("[ UnNamed ] Walk of Fame [ OK ]");

	mysql_tquery(mysql,"SELECT * FROM `ServerVehicles` ORDER BY `ID` ASC","LoadServerVehicles","");

	for(new i; i < sizeof(GiftsPos); i ++)
	{
		CreateGift(GiftsPos[i][0],GiftsPos[i][1],GiftsPos[i][2]);
	}
	print("[ UnNamed ] Gifts [ OK ]");

	new hrquery[200];
	mysql_format(mysql,hrquery,sizeof(hrquery),"UPDATE `Houses` SET `Owner`='-1', `Name`='Dùm na prodej', `Price`=0, `OwnerActivity`=NULL WHERE `Owner` != -1 AND `OwnerActivity` <= %d",gettime()-60*60*24*30);
	mysql_query(mysql,hrquery,false);


/*	new hquery[100],Cache:hcache;//,rows,fields,Cache:cache;
	mysql_format(mysql,hquery,sizeof(hquery),"SELECT * FROM `Houses`");
	hcache = mysql_query(mysql,hquery);
	for(new i; i < cache_get_row_count(mysql); i ++)
	{
		new Float:X,Float:Y,Float:Z;
		X = cache_get_field_content_float(i,"X",mysql);
		Y = cache_get_field_content_float(i,"Y",mysql);
		Z = cache_get_field_content_float(i,"Z",mysql);
		if(X != 0.0 && Y != 0.0 && Z != 0.0)
		{
			CreateHouse(X,Y,Z,cache_get_field_content_int(i,"Interior",mysql),cache_get_field_content_int(i,"NeedHours"));
		}
	}
	cache_delete(hcache,mysql);
*/
	for(new x; x < sizeof(HouseInteriors); x ++)
	{
		HouseInteriors[x][hInPickup] = CreateDynamicPickup(1277,23,HouseInteriors[x][HouseInteriorInX],HouseInteriors[x][HouseInteriorInY],HouseInteriors[x][HouseInteriorInZ],-1);
		CreateDynamicPickup(1318,23,HouseInteriors[x][HouseInteriorX],HouseInteriors[x][HouseInteriorY],HouseInteriors[x][HouseInteriorZ],-1);
		CreateDynamic3DTextLabel("[ {0088FF}ENTER "w"]",bila,HouseInteriors[x][HouseInteriorX],HouseInteriors[x][HouseInteriorY],HouseInteriors[x][HouseInteriorZ],10,.testlos = 1);
	}
	LoadHouses();
	print("[ UnNamed ] Houses [ OK ]");
	for(new i; i < sizeof(Interiors); i ++)
	{
		CreateDynamicPickup(1318,23,Interiors[i][iX],Interiors[i][iY],Interiors[i][iZ]);
		CreateDynamic3DTextLabel("[ {0088FF}ENTER "w"]",bila,Interiors[i][iX],Interiors[i][iY],Interiors[i][iZ],10,.testlos = 1,.worldid = 0);
	}

	new intquery[64],Cache:cache;
	mysql_format(mysql, intquery, sizeof(intquery), "SELECT * FROM `Interiors`");
	cache = mysql_query(mysql, intquery);

	new rows, fields;
	cache_get_data(rows, fields);

	for (new i = 0; i < rows; i++)
	{
	    new id, Exit;
	    new Float:X, Float:Y, Float:Z;

	    id = cache_get_field_content_int(i, "IntID");
	    X = cache_get_field_content_float(i, "X");
	    Y = cache_get_field_content_float(i, "Y");
	    Z = cache_get_field_content_float(i, "Z");
	    Exit = cache_get_field_content_int(i, "IntExit");

	    CreateInteriorEnter(id, X, Y, Z, Exit);
	}

	cache_delete(cache);
	print("[ UnNamed ] Interiors [ OK ]");
	for(new i = 1; i < MAX_PROPERTIES; i ++)
	{
	    format(dfile,sizeof(dfile),"UnNamed/Properties/Property%d.txt",i);
	    if(fexist(dfile))
	    {
			new Float:X,Float:Y,Float:Z;
			X = DOF2_GetFloat(dfile,"X");
			Y = DOF2_GetFloat(dfile,"Y");
			Z = DOF2_GetFloat(dfile,"Z");
			CreateProperty(X,Y,Z);
		}
	}
	print("[ UnNamed ] Properties [ OK ]");
	//ResetProperties();
	for(new i; i < MAX_RACES; i ++)
	{
		format(dfile,sizeof(dfile),"UnNamed/Races/Race[%d].txt",i);
		if(fexist(dfile))
		{
			cps[i] = dini_Int(dfile,"CPS");
			for(new x = 1; x <= cps[i]; x ++)
			{
			    format(str,sizeof(str),"X[%d]",x);
				Race[i][CPX][x] = dini_Float(dfile,str);
			    format(str,sizeof(str),"Y[%d]",x);
				Race[i][CPY][x] = dini_Float(dfile,str);
			    format(str,sizeof(str),"Z[%d]",x);
				Race[i][CPZ][x] = dini_Float(dfile,str);
			    format(str,sizeof(str),"Vehicle[%d]",i);
				Race[i][CPVeh][x] = dini_Int(dfile,str);
			}
			Race[i][CPA] = dini_Float(dfile,"Angle");
			if(Race[i][CPA] == 0)
			{
			    Race[i][CPA] = dini_Float(dfile,"Angel");
			}
			format(Race[i][CPName],25,dini_Get(dfile,"Name"));
			format(Race[i][CPAutor],25,dini_Get(dfile,"Autor"));
			Race[i][CPHide] = dini_Int(dfile,"Hide");
			Race[i][CPVW] = dini_Int(dfile,"VW");
			Race[i][CPAR] = dini_Int(dfile,"AR");
			Race[i][CPLetecky] = dini_Int(dfile,"Letecky");
		}
	}
	print("[ UnNamed ] Races [ OK ]");

	cache = mysql_query(mysql,"SELECT * FROM `Maps`");
	for(new i; i < cache_get_row_count(mysql); i ++)
	{
        new id = cache_get_field_content_int(i,"MapID");
		if(id < MAX_HOUSES)
		{
	        cache_get_field_content(i,"Name",Map[id][MapName],mysql,25);
	        cache_get_field_content(i,"Autor",Map[id][MapAutor],mysql,25);
			Map[id][MapAutoLoad] = cache_get_field_content_int(i,"AutoLoad",mysql);
			Map[id][MapSX] = cache_get_field_content_float(i,"X",mysql);
			Map[id][MapSY] = cache_get_field_content_float(i,"Y",mysql);
			Map[id][MapSZ] = cache_get_field_content_float(i,"Z",mysql);
			Map[id][MapVW] = cache_get_field_content_int(i,"VW",mysql);
			Map[id][MapSlotUsed] = true;
			new query[100];
			mysql_format(mysql,query,sizeof(query),"SELECT * FROM `MapsObjects` WHERE `MapID`=%d",id);
			mysql_tquery(mysql,query,"LoadMapObjects","i",id);
		}
	}
	cache_delete(cache,mysql);

/*	for(new i; i < MAX_MAPS; i ++)
	{
		format(dfile,sizeof(dfile),"UnNamed/Maps/Map%d.txt",i);
		if(fexist(dfile))
		{
			format(Map[i][MapName],24,DOF2_GetString(dfile,"Name"));
			format(Map[i][MapAutor],24,DOF2_GetString(dfile,"Autor"));
			Map[i][MapSlotUsed] = true;
			Map[i][MapAutoLoad] = DOF2_GetBool(dfile,"AutoLoad");
			Map[i][MapSX] = DOF2_GetFloat(dfile,"X");
			Map[i][MapSY] = DOF2_GetFloat(dfile,"Y");
		 	Map[i][MapSZ] = DOF2_GetFloat(dfile,"Z");
		 	new mquery[500];
			mysql_format(mysql,mquery,sizeof(mquery),"INSERT INTO `Maps` (`MapID`,`Name`,`Autor`,`AutoLoad`,`X`,`Y`,`Z`) VALUES (%d,'%e','%e',%d,%f,%f,%f)",i,Map[i][MapName],Map[i][MapAutor],Map[i][MapAutoLoad],Map[i][MapSX],Map[i][MapSY],Map[i][MapSZ]);
			mysql_query(mysql,mquery,false);
			for(new x; x < MAX_OBJECTS_EX; x ++)
			{
			    format(str,sizeof(str),"ObjectID%d",x);
			    Map[i][MapObjectID][x] = DOF2_GetInt(dfile,str);
				if(Map[i][MapObjectID][x] != 0)
				{
					format(str,sizeof(str),"ObjectX%d",x);
					Map[i][MapX][x] = DOF2_GetFloat(dfile,str);
					format(str,sizeof(str),"ObjectY%d",x);
					Map[i][MapY][x] = DOF2_GetFloat(dfile,str);
					format(str,sizeof(str),"ObjectZ%d",x);
					Map[i][MapZ][x] = DOF2_GetFloat(dfile,str);
					format(str,sizeof(str),"ObjectRX%d",x);
					Map[i][MapRX][x] = DOF2_GetFloat(dfile,str);
					format(str,sizeof(str),"ObjectRY%d",x);
					Map[i][MapRY][x] = DOF2_GetFloat(dfile,str);
					format(str,sizeof(str),"ObjectRZ%d",x);
					Map[i][MapRZ][x] = DOF2_GetFloat(dfile,str);
					mysql_format(mysql,mquery,sizeof(mquery),"INSERT INTO `MapsObjects` (`MapID`,`ObjectID`,`X`,`Y`,`Z`,`rX`,`rY`,`rZ`) VALUES (%d,%d,%f,%f,%f,%f,%f,%f)",i,Map[i][MapObjectID][x],Map[i][MapX][x],Map[i][MapY][x],Map[i][MapZ][x],Map[i][MapRX][x],Map[i][MapRY][x],Map[i][MapRZ][x]);
					mysql_query(mysql,mquery,false);
				}
			}
			
			if(Map[i][MapAutoLoad] == true)
			{
			    LoadMap(i);
			}
		}
	}
*/	objectlist = LoadModelSelectionMenu("UnNamed/Objects.txt");
	print("[ UnNamed ] Maps [ OK ]");

	AntiDeAMX();
    new rand = random(sizeof(CarSellIDS));
	CarSellID = CarSellIDS[rand];
	TurnBlinkWeb();

	CarSellObject = CreateObject(19381, -1973.37476, 303.32645, 34.08110,   0.00000, 90.00000, 0.00000);
	SetObjectMaterial(CarSellObject, 0, 19341, "wall029", "all_walls", 0xFFFF0000);
	CarSellText = CreateObject(1649, -1973.906494, 309.6, 36.331890, 0.000000, 0.000000, 0.000000);
	format(str,sizeof(str),"Wang Cars\n"g"Zatrubte pro prodání vozu\n"w"Vykupujeme "r"%s",GetVehicleNameByCarID(CarSellID));
	SetObjectMaterialText(CarSellText,str,0,OBJECT_MATERIAL_SIZE_512x512,"Arial",45,1,bila,0xFF000000,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
	for(new i; i < MAX_VEHICLES; i ++)
	{
	    Locked[i] = -1;
	}
	TimerGameTime = SetTimer("GameTime",DOF2_GetInt(CONFIG,"Minuta")*1000,true);
	SetTimer("Tipy",1000*59*10,true);
	SetTimer("Inzeraty",1000*53*6,true);
	SetTimer("PropertyPayOff",1000*60*60,true);
//	SetTimerEx("ElitePropsPayment",1000*60*10,false,"i",0);
	SetTimer("Priklady",1000*58*5,true);
	SetTimer("RealTime",1000,true);
	SetTimer("MinuteTimer",1000*58,true);
	SumoCar[0] = CreateVehicle(495,1777.606567,-1544.826538,39.315345,267.558471,0,0,-1);
	SumoCar[1] = CreateVehicle(495,1814.272583,-1548.797119,39.311759,83.842048,0,0,-1);
	SetVehicleVirtualWorld(SumoCar[0],1);
	SetVehicleVirtualWorld(SumoCar[1],1);

	for(new t=0;t<5;t++)
	{
		TextDraw[t] = TextDrawCreate(636, 319+t*11, "_");
		TextDrawAlignment(TextDraw[t], 3);
		TextDrawBackgroundColor(TextDraw[t], 255);
		TextDrawFont(TextDraw[t], 2);
		TextDrawLetterSize(TextDraw[t], 0.159998, 1.000000);
		TextDrawColor(TextDraw[t], -1);
		TextDrawSetOutline(TextDraw[t], 1);
		TextDrawSetProportional(TextDraw[t], 1);
		TextDrawSetSelectable(TextDraw[t], 0);
	}
	for(new i; i < 3; i ++)
	{
	    for(new t; t < MAX_PLAYERS; t++)
	    {
			TDTimery[t][i] = TextDrawCreate(630.000000, 228+i*11, "_");
			TextDrawAlignment(TDTimery[t][i], 3);
			TextDrawBackgroundColor(TDTimery[t][i], 255);
			TextDrawFont(TDTimery[t][i], 2);
			TextDrawLetterSize(TDTimery[t][i], 0.209999, 1.200000);
			TextDrawColor(TDTimery[t][i], -1381126657);
			TextDrawSetOutline(TDTimery[t][i], 1);
			TextDrawSetProportional(TDTimery[t][i], 1);
			TextDrawSetSelectable(TDTimery[t][i], 0);
		}
	}
	Textdraw44 = TextDrawCreate(635.000000, 240.000000, "_");
	TextDrawAlignment(Textdraw44, 3);
	TextDrawBackgroundColor(Textdraw44, 255);
	TextDrawFont(Textdraw44, 2);
	TextDrawLetterSize(Textdraw44, 0.190000, 1.299999);
	TextDrawColor(Textdraw44, -16776961);
	TextDrawSetOutline(Textdraw44, 1);
	TextDrawSetProportional(Textdraw44, 1);
	TextDrawSetSelectable(Textdraw44, 0);

	Textdraw42 = TextDrawCreate(320.000000, 386.000000, "rezim nahledu ukoncite stisknutim klavesy ~r~ENTER");
	TextDrawAlignment(Textdraw42, 2);
	TextDrawBackgroundColor(Textdraw42, 255);
	TextDrawFont(Textdraw42, 2);
	TextDrawLetterSize(Textdraw42, 0.360000, 2.599999);
	TextDrawColor(Textdraw42, -1);
	TextDrawSetOutline(Textdraw42, 1);
	TextDrawSetProportional(Textdraw42, 1);
	TextDrawSetSelectable(Textdraw42, 0);

	Textdraw0 = TextDrawCreate(18.000000, 212.000000, "~g~Novy Event");
	TextDrawBackgroundColor(Textdraw0, 255);
	TextDrawFont(Textdraw0, 1);
	TextDrawLetterSize(Textdraw0, 0.500000, 2.000000);
	TextDrawColor(Textdraw0, -65281);
	TextDrawSetOutline(Textdraw0, 1);
	TextDrawSetProportional(Textdraw0, 1);
	TextDrawSetSelectable(Textdraw0, 0);

	Textdraw28 = TextDrawCreate(16.000000, 270.000000, "~p~] ~r~Anketa ~p~]~n~~y~Je Domm borec a delete zasrana pica?~n~~b~Ano: ~r~0 ~w~/ ~b~Ne: ~r~0 ~w~/ ~b~Nevim: ~r~0");
	TextDrawBackgroundColor(Textdraw28, 150);
	TextDrawFont(Textdraw28, 2);
	TextDrawLetterSize(Textdraw28, 0.179998, 1.000000);
	TextDrawColor(Textdraw28, -1);
	TextDrawSetOutline(Textdraw28, 1);
	TextDrawSetProportional(Textdraw28, 1);
	TextDrawSetSelectable(Textdraw28, 0);

	Textdraw20 = TextDrawCreate(609.000000, 270.000000, "    ");
	TextDrawAlignment(Textdraw20, 2);
	TextDrawBackgroundColor(Textdraw20, 255);
	TextDrawFont(Textdraw20, 2);
	TextDrawLetterSize(Textdraw20, 0.229999, 1.500000);
	TextDrawColor(Textdraw20, 16711935);
	TextDrawSetOutline(Textdraw20, 1);
	TextDrawSetProportional(Textdraw20, 1);
	TextDrawUseBox(Textdraw20, 1);
	TextDrawBoxColor(Textdraw20, 100);
	TextDrawTextSize(Textdraw20, 0.000000, -46.000000);
	TextDrawSetSelectable(Textdraw20, 0);

	Textdraw21 = TextDrawCreate(609.000000, 271.000000, "  ");
	TextDrawAlignment(Textdraw21, 2);
	TextDrawBackgroundColor(Textdraw21, 255);
	TextDrawFont(Textdraw21, 2);
	TextDrawLetterSize(Textdraw21, 0.709999, 4.199997);
	TextDrawColor(Textdraw21, 16711935);
	TextDrawSetOutline(Textdraw21, 1);
	TextDrawSetProportional(Textdraw21, 1);
	TextDrawUseBox(Textdraw21, 1);
	TextDrawBoxColor(Textdraw21, 65330);
	TextDrawTextSize(Textdraw21, -41.000000, -44.000000);
	TextDrawSetSelectable(Textdraw21, 0);

	for(new i; i < MAX_PLAYERS; i ++)
	{
		Textdraw1[i] = TextDrawCreate(635.000000, 308.000000, "_");
		TextDrawAlignment(Textdraw1[i], 3);
		TextDrawBackgroundColor(Textdraw1[i], 255);
		TextDrawFont(Textdraw1[i], 2);
		TextDrawLetterSize(Textdraw1[i], 0.219999, 1.200000);
		TextDrawColor(Textdraw1[i], -16776961);
		TextDrawSetOutline(Textdraw1[i], 1);
		TextDrawSetProportional(Textdraw1[i], 1);
		TextDrawSetSelectable(Textdraw1[i], 0);
	}
	Textdraw2 = TextDrawCreate(6.000000, 422.000000, "~r~/c~w~mds,~r~/w~w~arpy,~r~/p~w~remium,~r~/s~w~hop,~r~/m~w~ise,~r~/a~w~chiev,~r~/t~w~ops,~r~/d~w~aily");
	TextDrawBackgroundColor(Textdraw2, 255);
	TextDrawFont(Textdraw2, 2);
	TextDrawLetterSize(Textdraw2, 0.180000, 1.200000);
	TextDrawColor(Textdraw2, -1);
	TextDrawSetOutline(Textdraw2, 1);
	TextDrawSetProportional(Textdraw2, 1);
	TextDrawSetSelectable(Textdraw2, 0);

	Textdraw3 = TextDrawCreate(637.000000, 2.000000, "_");
	TextDrawAlignment(Textdraw3, 3);
	TextDrawBackgroundColor(Textdraw3, 255);
	TextDrawFont(Textdraw3, 2);
	TextDrawLetterSize(Textdraw3, 0.230000, 1.100000);
	TextDrawColor(Textdraw3, -1);
	TextDrawSetOutline(Textdraw3, 1);
	TextDrawSetProportional(Textdraw3, 1);
	TextDrawSetSelectable(Textdraw3, 0);

 Textdraw5 = TextDrawCreate(137.000000, 332.000000, "_");
	TextDrawBackgroundColor(Textdraw5, 255);
	TextDrawFont(Textdraw5, 3);
	TextDrawLetterSize(Textdraw5, 0.460000, 2.100000);
	TextDrawColor(Textdraw5, -1);
	TextDrawSetOutline(Textdraw5, 1);
	TextDrawSetProportional(Textdraw5, 1);
	TextDrawUseBox(Textdraw5, 1);
	TextDrawBoxColor(Textdraw5, 0);
	TextDrawTextSize(Textdraw5, 430.000000, 0.000000);
	TextDrawSetSelectable(Textdraw5, 0);

	for(new t; t < 5; t ++)
	{
		event[t] = TextDrawCreate(18.000000, 231+t*14, "_");
		TextDrawBackgroundColor(event[t], 255);
		TextDrawFont(event[t], 2);
		TextDrawLetterSize(event[t], 0.320000, 1.200000);
		TextDrawColor(event[t], -1);
		TextDrawSetOutline(event[t], 1);
		TextDrawSetProportional(event[t], 1);
		TextDrawSetSelectable(event[t], 0);
	}

	Textdraw12 = TextDrawCreate(320.000000, 3.000000, "_"); ///cmds /warpy atd.
	TextDrawBackgroundColor(Textdraw12, 255);
	TextDrawFont(Textdraw12, 2);
	TextDrawLetterSize(Textdraw12, 0.470000, 2.300000);
	TextDrawColor(Textdraw12, -1);
	TextDrawSetOutline(Textdraw12, 1);
	TextDrawSetProportional(Textdraw12, 1);
	TextDrawSetSelectable(Textdraw12, 0);

	Textdraw13 = TextDrawCreate(-1.000000, 436.000000, "                                                        ");
	TextDrawBackgroundColor(Textdraw13, 255);
	TextDrawFont(Textdraw13, 1);
	TextDrawLetterSize(Textdraw13, 0.800000, 2.800000);
	TextDrawColor(Textdraw13, -1);
	TextDrawSetOutline(Textdraw13, 0);
	TextDrawSetProportional(Textdraw13, 1);
	TextDrawSetShadow(Textdraw13, 1);
	TextDrawUseBox(Textdraw13, 1);
	TextDrawBoxColor(Textdraw13, 100);
	TextDrawTextSize(Textdraw13, 651.000000, 10.000000);
	TextDrawSetSelectable(Textdraw13, 0);

	Textdraw14 = TextDrawCreate(6.000000, 435.000000, "UnNamed");
	TextDrawAlignment(Textdraw14, 1);
	TextDrawBackgroundColor(Textdraw14, 255);
	TextDrawFont(Textdraw14, 0);
	TextDrawLetterSize(Textdraw14, 0.359999, 1.100000);
	TextDrawColor(Textdraw14, -1);
	TextDrawSetOutline(Textdraw14, 1);
	TextDrawSetProportional(Textdraw14, 1);
	TextDrawSetSelectable(Textdraw14, 0);

	Textdraw15 = TextDrawCreate(630.000000, 435.000000, "UnNamed");
	TextDrawAlignment(Textdraw15, 3);
	TextDrawBackgroundColor(Textdraw15, 255);
	TextDrawFont(Textdraw15, 0);
	TextDrawLetterSize(Textdraw15, 0.359999, 1.100000);
	TextDrawColor(Textdraw15, -1);
	TextDrawSetOutline(Textdraw15, 1);
	TextDrawSetProportional(Textdraw15, 1);
	TextDrawSetSelectable(Textdraw15, 0);

	Textdraw16 = TextDrawCreate(26.000000, 436.000000, "_"); //www.
	TextDrawBackgroundColor(Textdraw16, 255);
	TextDrawFont(Textdraw16, 2);
	TextDrawLetterSize(Textdraw16, 0.210000, 1.000000);
	TextDrawColor(Textdraw16, -1);
	TextDrawSetOutline(Textdraw16, 0);
	TextDrawSetProportional(Textdraw16, 1);
	TextDrawSetShadow(Textdraw16, 1);
	TextDrawSetSelectable(Textdraw16, 0);

	Textdraw17 = TextDrawCreate(84.000000, 436.000000, ""); //.cz
	TextDrawBackgroundColor(Textdraw17, 255);
	TextDrawFont(Textdraw17, 2);
	TextDrawLetterSize(Textdraw17, 0.210000, 1.000000);
	TextDrawColor(Textdraw17, -1);
	TextDrawSetOutline(Textdraw17, 0);
	TextDrawSetProportional(Textdraw17, 1);
	TextDrawSetShadow(Textdraw17, 1);
	TextDrawSetSelectable(Textdraw17, 0);

	Textdraw18 = TextDrawCreate(554.000000, 10.000000, "_");
	TextDrawAlignment(Textdraw18, 3);
	TextDrawBackgroundColor(Textdraw18, 255);
	TextDrawFont(Textdraw18, 2);
	TextDrawLetterSize(Textdraw18, 0.240000, 1.500000);
	TextDrawColor(Textdraw18, -1);
	TextDrawSetOutline(Textdraw18, 1);
	TextDrawSetProportional(Textdraw18, 1);
	TextDrawSetSelectable(Textdraw18, 0);

	Textdraw19 = TextDrawCreate(577.000000, 21.000000, "_");
	TextDrawAlignment(Textdraw19, 2);
	TextDrawBackgroundColor(Textdraw19, 255);
	TextDrawFont(Textdraw19, 2);
	TextDrawLetterSize(Textdraw19, 0.479999, 2.500000);
	TextDrawColor(Textdraw19, -1);
	TextDrawSetOutline(Textdraw19, 1);
	TextDrawSetProportional(Textdraw19, 1);
	TextDrawSetSelectable(Textdraw19, 0);

	Textdraw8 = TextDrawCreate(100.000000, 436.000000, "On-Line ~w~Hraci: 0");
	TextDrawBackgroundColor(Textdraw8, 255);
	TextDrawFont(Textdraw8, 2);
	TextDrawLetterSize(Textdraw8, 0.209998, 1.000000);
	TextDrawColor(Textdraw8, 16711935);
	TextDrawSetOutline(Textdraw8, 0);
	TextDrawSetProportional(Textdraw8, 1);
	TextDrawSetShadow(Textdraw8, 1);
	TextDrawSetSelectable(Textdraw8, 0);

	Textdraw9 = TextDrawCreate(235.000000, 436.000000, "On-Line ~y~Premium Hraci: ~w~0");
	TextDrawBackgroundColor(Textdraw9, 255);
	TextDrawFont(Textdraw9, 2);
	TextDrawLetterSize(Textdraw9, 0.209998, 1.000000);
	TextDrawColor(Textdraw9, 16711935);
	TextDrawSetOutline(Textdraw9, 0);
	TextDrawSetProportional(Textdraw9, 1);
	TextDrawSetShadow(Textdraw9, 1);
	TextDrawSetSelectable(Textdraw9, 0);

	Textdraw7 = TextDrawCreate(407.000000, 436.000000, "On-Line ~r~Administratori: ~w~0");
	TextDrawBackgroundColor(Textdraw7, 255);
	TextDrawFont(Textdraw7, 2);
	TextDrawLetterSize(Textdraw7, 0.209998, 1.000000);
	TextDrawColor(Textdraw7, 16711935);
	TextDrawSetOutline(Textdraw7, 0);
	TextDrawSetProportional(Textdraw7, 1);
	TextDrawSetShadow(Textdraw7, 1);
	TextDrawSetSelectable(Textdraw7, 0);

	Textdraw11 = TextDrawCreate(427.000000, 164.000000, "");
	TextDrawBackgroundColor(Textdraw11, 255);
	TextDrawFont(Textdraw11, 1);
	TextDrawLetterSize(Textdraw11, 0.270000, 1.300000);
	TextDrawColor(Textdraw11, -1);
	TextDrawSetOutline(Textdraw11, 1);
	TextDrawSetProportional(Textdraw11, 1);
	TextDrawSetSelectable(Textdraw11, 0);

	Textdraw32 = TextDrawCreate(610.000000, 102.000000, "]]]]]]");
	TextDrawAlignment(Textdraw32, 3);
	TextDrawBackgroundColor(Textdraw32, 255);
	TextDrawFont(Textdraw32, 2);
	TextDrawLetterSize(Textdraw32, 0.529999, 2.299998);
	TextDrawColor(Textdraw32, 0xDDDDDDFF);
	TextDrawSetOutline(Textdraw32, 1);
	TextDrawSetProportional(Textdraw32, 1);
	TextDrawSetSelectable(Textdraw32, 0);

	for(new i; i < MAX_DMS; i ++)
	{
		Textdraw35[i] = TextDrawCreate(310.000000, 142.000000, "");
		TextDrawAlignment(Textdraw35[i], 2);
		TextDrawBackgroundColor(Textdraw35[i], 255);
		TextDrawFont(Textdraw35[i], 2);
		TextDrawLetterSize(Textdraw35[i], 0.180000, 1.000000);
		TextDrawColor(Textdraw35[i], -11066625);
		TextDrawSetOutline(Textdraw35[i], 1);
		TextDrawSetProportional(Textdraw35[i], 1);
		TextDrawSetSelectable(Textdraw35[i], 0);
	}
	CreateInfoTextDraw();

	for(new t; t < 5; t++)
	{
		TextDrawShowForAll(TextDraw[t]);
	}
	TextDrawShowForAll(Textdraw2);
	TextDrawShowForAll(Textdraw5);
	TextDrawShowForAll(Textdraw7);
	TextDrawShowForAll(Textdraw8);
	TextDrawShowForAll(Textdraw9);
	TextDrawShowForAll(Textdraw12);
	TextDrawShowForAll(Textdraw13);
	TextDrawShowForAll(Textdraw14);
	TextDrawShowForAll(Textdraw15);
	TextDrawShowForAll(Textdraw16);
	TextDrawShowForAll(Textdraw17);
	TextDrawShowForAll(Textdraw18);
	TextDrawShowForAll(Textdraw19);
	new year,month,day,hour,minute;
	gettime(hour,minute);
	getdate(year,month,day);
	format(str,sizeof(str),"~r~%02d~w~.~r~%02d~w~.~y~%d",day,month,year);
	TextDrawSetString(Textdraw18,str);
	format(str,sizeof(str),"_",hour,minute);
	TextDrawSetString(Textdraw19,str);
	AddStringToTextDraw("~r~UnNamed ~y~v2.0~w~ by ~b~~h~DeLeTe ~w~uspesne ~g~spusten");

	GetOnlinePlayers();

    if(!fexist(CENSOREDFILE))
    {
	    DOF2_CreateFile(CENSOREDFILE);
    }
    if(fexist(CENSOREDFILE))
    {
            new File:myFile,
                    line[MAX_LEN],
                    index=0;

            myFile=fopen(CENSOREDFILE,filemode:io_read);

            while(fread(myFile,line,sizeof line) && (index != MAX_ENTRY))
            {
                    if(strlen(line)>MAX_LEN) continue;
                    StripNewLine(line);
                    strmid(CENZURA[index],line,0,strlen(line),sizeof line);
                    index++;
            }
    }
	for(new i; i < sizeof(ChatColors); i ++)
	{
	    new color[255],color2[255];
		format(str,sizeof(str),"TextColor[%d]",i);
		format(color,sizeof(color),"ColorName[%d]",i);
		format(color2,sizeof(color2),"NickColor[%d]",i);
		if(strlen(DOF2_GetString(CONFIG,str)) == 0)
	    {
			DOF2_SetString(CONFIG,color,ChatColors[i][Name]);
	        DOF2_SetString(CONFIG,str,ChatColors[i][Code]);
	        format(str,sizeof(str),"0x%sFF",ChatColors[i][Code]);
	        DOF2_SetString(CONFIG,color2,str);
	        DOF2_SaveFile();
	    }
	}

	ConnectNPC(BOT_NAME,"unbot");
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(IsPlayerConnected(i) && IsPlayerNPC(i))
	    {
	        if(strcmp(Jmeno(i),BOT_NAME,false) == 0)
	        {
	            botid = i;
	            break;
			}
	    }
	}
	printEx("{FF0000}UnNamed 2.0 - Successfully started");
	return 1;
}
//============================================================================//
forward LoadServerVehicles();

public LoadServerVehicles()
{
	new loaded;
	for(new i; i < cache_get_row_count(); i ++)
	{
	    new ModelID,Float:X,Float:Y,Float:Z,Float:A,vehid;
		ModelID = cache_get_field_content_int(i,"ModelID",mysql);
		X = cache_get_field_content_float(i,"X",mysql);
		Y = cache_get_field_content_float(i,"Y",mysql);
		Z = cache_get_field_content_float(i,"Z",mysql);
		A = cache_get_field_content_float(i,"A",mysql);
		vehid = AddStaticVehicleEx(ModelID,X,Y,Z,A,-1,-1,300);
		SetVehicleDefaultSPZ(i);
		DBVeh[vehid][dbvID] = cache_get_field_content_int(i,"ID",mysql);
		loaded ++;
	}
	LoadMissionVehicles();
	printf("[ UnNamed ] Vehicles loaded: %d",loaded);
	return 1;
}
//============================================================================//
public OnFilterScriptExit()
{
	DOF2_Exit();
	mysql_close(mysql);
	for(new i; i < MAX_INTERIORS; i ++)
	{
	    DestroyDynamicPickup(InteriorEnters[i][iePickup]);
	}
	for(new i; i < MAX_HOUSES; i ++)
	{
	    DestroyDynamicPickup(House[i][hPickup]);
	}
	for(new i; i < MAX_PROPERTIES; i ++)
	{
	    DestroyDynamicPickup(Property[i][PropertyPickup]);
		DestroyDynamic3DTextLabel(Property[i][PropertyText]);
	}
	for(new i; i < sizeof(Fallout); i ++)
	{
		for(new x; x < sizeof(Fallout[]); x ++)
		    DestroyObject(Fallout[i][x][FObject]);
	}
	for(new i; i < MAX_PLAYERS; i ++)
	{
		for(new x; x < MAX_SLOTS; x ++)
		{
		    DestroyVehicle(SavedCar[i][x]);
		    for(new q; q < MAX_S_OBJECTS; q ++)
		    {
		        DestroyDynamicObject(ParkInfo[i][x][SpecialObjects][q]);
		    }
		}
	}
	DestroyObject(CarSellObject);
	DestroyObject(CarSellText);
	for(new i; i < 14; i++)
	{
	    DestroyVehicle(Truck[i]);
	}
	for(new i; i < 16; i++)
	{
	    DestroyVehicle(Bus[i]);
	}
	for(new i; i < 10; i ++)
	{
	    DestroyVehicle(TreeCar[i]);
	}
	for(new i; i < 12; i ++)
	{
		DestroyVehicle(KuryrCar[i]);
	}
	for(new i; i < 8; i ++)
	{
	    DestroyVehicle(Plane[i]);
	}
	for(new i; i < 9; i ++)
	{
	    DestroyVehicle(MechanicCars[i]);
	}
	for(new i; i < MAX_VEHICLES; i ++)
	{
	    if(Neony[i] == 1)
	    {
	        DestroyObject(Neon1[i]);
	        DestroyObject(Neon2[i]);
		}
	}
	DestroyVehicle(SumoCar[0]);
	DestroyVehicle(SumoCar[1]);
	for(new t; t < 5; t++)
	{
		TextDrawDestroy(TextDraw[t]);
		TextDrawDestroy(event[t]);
	}
	TextDrawDestroy(Textdraw0);
	TextDrawDestroy(Textdraw2);
	TextDrawDestroy(Textdraw3);
	TextDrawDestroy(Textdraw5);
	TextDrawDestroy(Textdraw7);
	TextDrawDestroy(Textdraw8);
	TextDrawDestroy(Textdraw9);
	TextDrawDestroy(Textdraw28);
	TextDrawDestroy(Textdraw12);
	TextDrawDestroy(Textdraw13);
	TextDrawDestroy(Textdraw14);
	TextDrawDestroy(Textdraw15);
	TextDrawDestroy(Textdraw16);
	TextDrawDestroy(Textdraw17);
	TextDrawDestroy(Textdraw18);
	TextDrawDestroy(Textdraw19);
	TextDrawDestroy(Textdraw20);
	TextDrawDestroy(Textdraw21);

	for(new i; i < 3; i ++)
	{
	    for(new t; t < MAX_PLAYERS; t ++)
		{
			TextDrawDestroy(TDTimery[t][i]);
		}
	}

	for(new i; i < MAX_PLAYERS; i++)
	{
		DestroyVehicle(MissionCar[i]);
		MissionCar[i] = 0;
		format(dfile,sizeof(dfile),USER_FILES,Jmeno(i));
	    DOF2_SetInt(dfile,"Hitman",Hitman[i]);
		if(InSumo[i] == true)
		{
		    DestroyVehicle(SumoVehicle[i]);
		}
		if(WorkMission[i] == 3)
		{
		    DestroyPlayerObject(i,MissionObject[i]);
		}
		PlayerTextDrawDestroy(i,Textdraw22[i]);
		PlayerTextDrawDestroy(i,Textdraw24[i]);
		PlayerTextDrawDestroy(i,Textdraw25[i]);
		PlayerTextDrawDestroy(i,Textdraw26[i]);
		PlayerTextDrawDestroy(i,Textdraw29[i]);
		PlayerTextDrawDestroy(i,Textdraw30[i]);
		PlayerTextDrawDestroy(i,TDTime[i]);
		DestroyObject(ObjectOne[i]);
  		DestroyObject(ObjectTwo[i]);
		DestroyObject(ObjectThree[i]);
		DestroyObject(ObjectFour[i]);
		DestroyObject(ObjectFive[i]);
		DestroyVehicle(ACAR[i]);
  		DisablePlayerCheckpoint(i);
      	PlayerTextDrawDestroy(i,InfoNadpis[i]);
        PlayerTextDrawDestroy(i,InfoText[i]);
        PlayerTextDrawDestroy(i,InfoType2[i]);
        PlayerTextDrawDestroy(i,InfoType2Nadpis[i]);
		RemovePlayerMapIcon(i,50);
	    if(IsPlayerConnected(i))
	    {
			DestroyVehicle(CCAR[i]);
			SetPlayerVirtualWorld(i,0);
			DestroyVehicle(Ecar[i]);
			Ecar[i] = 0;
		    TogglePlayerControllable(i,true);
			if(InSumo[i] == true)
			{
			    SpawnPlayer(i);
			    TogglePlayerControllable(i,true);
			}
			if(AFK[i] == true)
			{
				new pName[MAX_PLAYER_NAME+1];
				GetPVarString(i,"afkName",pName,sizeof(pName));
				SetPlayerName(i,pName);
			}
		}
	}
	for(new i; i < sizeof(acars); i ++)
	{
	    DestroyVehicle(acars[i]);
	}
	for(new t; t < MAX_PLAYERS; t++)
	{
	    TextDrawDestroy(Textdraw1[t]);
		for(new i; i < MAX_OBJECTS_EX; i++)
		{
		    DestroyObject(Object[t][i]);
		}
	}
	return 1;
}
//============================================================================//
public OnPlayerPickUpDynamicPickup(playerid,pickupid)
{
	if(GetPlayerVirtualWorld(playerid) == 0)
	{
/*	    for(new i; i < sizeof(eProps); i ++)
	    {
	        new id = eProps[i][ePInt];
	        if(IsPlayerInRangeOfPoint(playerid,1.5,eProps[i][ePX],eProps[i][ePY],eProps[i][ePZ]))
	            CreateInfoBox(playerid,"Pro spravu ~b~elitni ~w~nemovitosti stisknete ~r~L.ALT",3);
			if(IsPlayerInRangeOfPoint(playerid,1.5,ElitePropsInteriors[id][0],ElitePropsInteriors[id][1],ElitePropsInteriors[id][2]))
	            CreateInfoBox(playerid,"Pro odchod z ~b~elitni ~w~nemovitosti stisknete ~r~ENTER",3);
	    }
*/	}
	if(OnEvent[playerid] == true && GetPlayerVirtualWorld(playerid) == EventWorld && !IsPlayerInAnyVehicle(playerid))
	{
	    for(new i; i < sizeof(ePickups); i ++)
	    {
	        if(IsPlayerInRangeOfPoint(playerid,2,ePickups[i][PickPos][0],ePickups[i][PickPos][1],ePickups[i][PickPos][2]))
	        {
	            switch(ePickups[i][PickType])
	            {
	                case TYPE_WEAPON:
	                {
     					switch(ePickups[i][PickModel])
						{
	                    	case 22,23: GivePlayerWeapon(playerid,ePickups[i][PickModel],15+random(11));
	                    	case 24,25,27: GivePlayerWeapon(playerid,ePickups[i][PickModel],7+random(5));
	                    	case 33,34: GivePlayerWeapon(playerid,ePickups[i][PickModel],5+random(6));
	                    	case 29,30,31: GivePlayerWeapon(playerid,ePickups[i][PickModel],25+random(16));
	                    	default: GivePlayerWeapon(playerid,ePickups[i][PickModel],3);
						}
	                }
	                case TYPE_ARMOUR:
	                {
	                    new Float:ARm;
	                    GetPlayerArmour(playerid,ARm);
	                    if(ARm == 100) return 0;
						SetPlayerArmour(playerid,100);
	                }
	                case TYPE_HEALTH:
	                {
	                    new Float:HP;
	                    GetPlayerHealth(playerid,HP);
	                    if(HP == 100) return 0;
	                    SetPlayerHealth(playerid,100);
	                }
	                case TYPE_AMMO:
	                {
	                    if(GetPlayerWeapon(playerid) == 0) return 0;
	                    GivePlayerWeapon(playerid,GetPlayerWeapon(playerid),10);
	                }
	            }
	            DestroyEventPickup(i);
	        }
	    }
	}
/*	if(GetPlayerVirtualWorld(playerid) == Packages[PackagesVW] && Packages[PackagesState] == true)
	{
	    for(new i; i < sizeof(Package); i ++)
	    {
	        if(IsPlayerInRangeOfPoint(playerid,2,Package[i][pX],Package[i][pY],Package[i][pZ]) && PlayerPackages[playerid][FindPack][i] == false)
	        {
	            new query[150];
	            PlayerPackages[playerid][FindPackages] ++;
	            PlayerPackages[playerid][FindPack][i] = true;
	            Package[i][Finded] ++;
	            mysql_format(mysql,query,sizeof(query),"UPDATE `Packages` SET `Finded`=%d WHERE `ID`=%d",Package[i][Finded],Package[i][pID]);
	            mysql_query(mysql,query,false);
				format(str,sizeof(str),"Balicku: ~w~%d/%d",PlayerPackages[playerid][FindPackages],Packages[TotalPackages]);
				PlayerTextDrawSetString(playerid,Textdraw43[playerid],str);
	            format(str,sizeof(str),"Nalezeno: "w"%dx",Package[i][Finded]);
	            UpdateDynamic3DTextLabelText(Package[i][Label],0x0077FFFF,str);
	            format(str,sizeof(str),"Balíèek nalezen, nalezeno "g"%d "w"%s, "g"%d "w"zbývá z "g"%d\n\n"dc"Tento balíèek nalezlo "g"%d hráèù",PlayerPackages[playerid][FindPackages],PluralWord(PlayerPackages[playerid][FindPackages],"balíèek","balíèky","balíèkù"),Packages[TotalPackages]-PlayerPackages[playerid][FindPackages],Packages[TotalPackages],Package[i][Finded]-1);
				SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Balíèek",str,"Zavøít","");
				format(str,sizeof(str),"~b~%s ~w~%s ~b~nalezl balicek, celkem nalezeno ~w~%d ~b~balicku~w~.",Players(playerid),Jmeno(playerid),PlayerPackages[playerid][FindPackages]);
				AddStringToTextDraw(str);
			    mysql_format(mysql,query,sizeof(query),"INSERT INTO `PlayerPackages` (`Nick`,`PackageID`) VALUES ('%e',%d)",Jmeno(playerid),i);
				mysql_query(mysql,query,false);
				GiveXP(playerid,50,"nelzeni balicku");
			}
			else if(PlayerPackages[playerid][FindPack][i] == true)
			    CreateInfoBox(playerid,"Tento balicek uz si nalezl",3);
	    }
	}
*/	if(GetPlayerVirtualWorld(playerid) == CHRISTMAS_VW && GiftMode == true)
	{
	    if(IsPlayerInRangeOfPoint(playerid,3,-686.0338,-2097.7839,25.7700))
	    {
	        if(!IsPlayerInAnyVehicle(playerid))
	        {
	            CreateCarMenuVehicle(playerid,468);
	        }
	    }
		if(IsPlayerInRangeOfPoint(playerid,2,-2291.7175,-1673.4275,483.3532))
		{
		    if(GetPlayerSpecialAction(playerid) != 2)
		    {
		        SetPlayerSpecialAction(playerid,2);
		    }
		}
		for(new i; i < sizeof(GiftsPos); i ++)
		{
		    if(IsPlayerInRangeOfPoint(playerid,1.5,Gifts[i][gX],Gifts[i][gY],Gifts[i][gZ]))
		    {
				if(PickedGifts[playerid][i] == 0)
				{
				    new item[150],DIALOG[350];
				    PickedGifts[playerid][i] = 1;
				    new query[100];
					TotalGifts[playerid] ++;
					format(str,sizeof(str),"~b~Darku: ~g~%d~w~/~r~%d",TotalGifts[playerid],sizeof(GiftsPos));
					PlayerTextDrawSetString(playerid,Textdraw43[playerid],str);
				    format(str,sizeof(str),"Nalezl jsi dárek è. %d (%d/%d), v dárku se nachází:\n\n{00FFFF}",i+1,TotalGifts[playerid],sizeof(GiftsPos));
				    strcat(DIALOG,str);
					mysql_format(mysql,query,sizeof(query),"INSERT INTO `Gifts` (`Nick`,`gift_id`) VALUES ('%e',%d)",Jmeno(playerid),i);
					mysql_query(mysql,query,false);
					switch(i)
					{
					    case 0:
					    {
					        format(item,sizeof(item),"300 bodù\n500XP");
					        GivePoints(playerid,500);
					        GiveXP(playerid,200,"darek",false);
					    }
					    case 1:
					    {
					        format(item,sizeof(item),"500 bodù\n1000 XP");
					        GivePoints(playerid,500);
					        GiveXP(playerid,1000,"Nalezeni darku",false);
					    }
					    case 2:
					    {
					        format(item,sizeof(item),"150.000.000$\nSpeciální titul Stromeèek\nTitul bude v prosinci-lednu/decembri-januári zelený");
					        GiveMoney(playerid,150000000,"Vánoèní dárek");
					        AddPlayerTitul(playerid,"Stromeèek");
					    }
					    case 3:
					    {
					        format(item,sizeof(item),"VIP Úèet na 30 dní\n300 Bodù");
					        SetPlayerVIP(playerid,30);
					        GivePoints(playerid,300);
					    }
					    case 4:
					    {
					        format(item,sizeof(item),"Speciální titul: Vánoce 2k18");
					        AddPlayerTitul(playerid,"Vánoce 2k18");
					    }
					    case 5:
					    {
					        format(item,sizeof(item),"Speciální titul Jeíek\nTitul bude v prosinci-lednu/decembri-januári cyanový");
                            AddPlayerTitul(playerid,"Jeíek");
					    }
					    case 6:
						{
						    format(item,sizeof(item),"100g marihuany\n");
						    GivePlayerGanja(playerid,100,"Vánoèní dárek");
						}
					    case 7:
						{
					        format(item,sizeof(item),"x2 XP Boost na 5 hodin");
							XPBoostPercent[playerid] = 100;
							XPBoostSeconds[playerid] = 5*60*60;
						}
					    case 8:
						{
					        format(item,sizeof(item),"2000 XP\nSpeciální titul Santa\nTitul bude v prosinci-lednu/decembri-januári èervený");
					        AddPlayerTitul(playerid,"Santa");
					        GiveXP(playerid,2000,"Vánoèní dárek",false);
						}
					    case 9:
						{
					        format(item,sizeof(item),"VIP Úèet na 14 dní\n300 bodù\n50.000.000$");
					        SetPlayerVIP(playerid,14);
					        GiveMoney(playerid,50000000,"Vánoèní dárek");
					        GivePoints(playerid,500);
						}
					    default: SM(playerid,"Error");
					}
					strcat(DIALOG,item);
					SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Dárek",DIALOG,"Zavøít","");
					format(str,sizeof(str),"%s "g"%s "w"sebral dárek è. %d (%d/%d) [ "g"%s "w"]",Players(playerid),Jmeno(playerid),i+1,TotalGifts[playerid],sizeof(GiftsPos),item);
					SendAdminMessage(str);
					if(TotalGifts[playerid] == 10)
					{
						format(str,sizeof(str),"%s "g"%s "r"nael vechny vánoèní dárky ("g"%d/%d"r").",Players(playerid),Jmeno(playerid),TotalGifts[playerid],sizeof(GiftsPos));
						SCMTA(red,str);
						printEx(str);
						SCM(playerid,-1,"Nael si vech 10 dárkù, jako bonus dostává:");
						SCM(playerid,cyan,"1000 bodù");
						SCM(playerid,cyan,"1000 XP");
						SCM(playerid,cyan,"100.000.000$");
						SCM(playerid,cyan,"100g Marihuany");
						SCM(playerid,-1,"Dìkujeme ti za úèast :)");

						GivePoints(playerid,1000);
						GiveXP(playerid,1000,"Nalezeny vsechny vánoèní dárky",false);
						GiveMoney(playerid,100000000,"Nael vechny vánoèní dárky");
						GivePlayerGanja(playerid,100,"Nael vechny vánoèní dárky");
					}
				    format(str,sizeof(str),""g"%s uloeno [ Nael dárek ]",Jmeno(playerid));
				    printEx(str);
				}
				else
				{
				    SPD(playerid,0,DIALOG_STYLE_MSGBOX,"{00FFFF}Vánoèní dárek","Tento vánoèní dárek jsi u nael","Zavøít","");
				}
			}
		}
	}
	for(new i; i < sizeof(HouseInteriors); i ++)
	{
	    if(IsPlayerInRangeOfPoint(playerid,1.5,HouseInteriors[i][HouseInteriorInX],HouseInteriors[i][HouseInteriorInY],HouseInteriors[i][HouseInteriorInZ]))
	    {
			new DIALOG[500],id = GetPVarInt(playerid,"HouseID");
			if(IsPlayerHouseOwner(playerid,id))
			{
				strcat(DIALOG,"Pøejmenovat\n");
				if(!strlen(House[id][hPassword]))
				{
				    strcat(DIALOG,"Zamknout\n");
				}
				else
				{
				    strcat(DIALOG,"Odemknout\n");
				}
				if(GetPlayerSpawn(playerid) != SPAWN_TYPE_HOUSE)
				{
				    strcat(DIALOG,"Nastavit spawn u domu\n");
				}
				else
				{   strcat(DIALOG,"Nastavit spawn u povolání\n");
				}
				strcat(DIALOG,"Zmìnit interiér");
				SPD(playerid,UNNAMED+131,DIALOG_STYLE_LIST,"Dùm",DIALOG,"Vybrat","Zavøít");
			}
		}
	}
	for(new i; i < MAX_PROPERTIES; i ++)
	{
	    if(IsPlayerInRangeOfPoint(playerid,1.5,Property[i][PropertyX],Property[i][PropertyY],Property[i][PropertyZ]))
	    {
	        CreateInfoBox(playerid,"Pro spravu nemovitosti stiskni ~r~L.ALT",3);
	    }
	}
	for(new i; i < MAX_HOUSES; i ++)
	{
	    if(IsPlayerInRangeOfPoint(playerid,1.5,House[i][hX],House[i][hY],House[i][hZ]))
	    {
	        CreateInfoBox(playerid,"Pro spravu domu stiskni ~r~L.ALT",3);
	    }
	}
	return 1;
}
//============================================================================//
public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_DRIVER)
	{
		if(pStunt[playerid][sStuntID] != -1)
		{
	        LeaveStunt(playerid);
	        SPD(playerid,UNNAMED+182,DIALOG_STYLE_MSGBOX,"Stunt","Opustil jste vozidlo, chcete to zkusit znovu?",""g"Ano","Ne");
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
		if(WorkMission[playerid]== 0)
		{
			new vehicleid = GetPlayerVehicleID(playerid),model = GetVehicleModel(vehicleid);
			switch(model)
			{
			    case 515,437,431,495,560,541,415,593,525,497,596..599,523,601,427,416,407:
			    {
				    CreateInfoBox(playerid,"V tomto vozidle muzete plnit mise stisknutim klavesy ~r~+ ~w~nebo ~r~~k~~TOGGLE_SUBMISSIONS~",3);
			    }
			}
		}
	}
    return 1;
}
//============================================================================//
public OnDynamicObjectMoved(objectid)
{
	if(RunEvent == 8 && objectid == eObjects[1])
	{
	    EventState = 1;
	    for(new i; i <= GetPlayerPoolSize(); i ++)
	    {
	        if(IPC(i) && OnEvent[i] == true)
			{
				if(IsPlayerInRangeOfPoint(i,30,-3003.4584,-1815.5701,510.5311))
				    CancelEvent(i,"Nevyskoèil z letadla");
				else
				{
				    TextDrawSetString(Textdraw44,"_");
					TextDrawShowForPlayer(i,Textdraw44);
					CreateInfoBox(i,"Zona se zaèíná zmenovat",5);
				}
			}
	    }
	}
	return 1;
}
//============================================================================//
public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
	if(response == EDIT_RESPONSE_CANCEL || response == EDIT_RESPONSE_FINAL)
	{
	    if(!IsValidObject(objectid)) return 1;
	    new id = GetPVarInt(playerid,"EObjectID");
	    SetObjectPos(objectid, fX, fY, fZ);
	    SetObjectRot(objectid, fRotX, fRotY, fRotZ);
		if(IsValidDynamic3DTextLabel(ObjectLabel[playerid][id]))
			DestroyDynamic3DTextLabel(ObjectLabel[playerid][id]);
		format(str,sizeof(str),"Object ID: "w"%d\n"sb"Model: "w"%d",id,ObjectsIDS[playerid][id]);
		ObjectLabel[playerid][id] = CreateDynamic3DTextLabel(str,0x0077FFFF,fX,fY,fZ,50,.playerid = playerid);
	}
	return 1;
}
//============================================================================//
public OnPlayerSelectObject(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ)
{
	SetPVarInt(playerid,"EditObjectID",objectid);
	SetPVarInt(playerid,"EditObjectModel",modelid);
	SPD(playerid,UNNAMED+86,DIALOG_STYLE_LIST,"Object","Editovat Object\nDuplikovat Object","Vybrat","Zavøít");
	CancelEdit(playerid);
	return 1;
}
//============================================================================//
public OnPlayerEnterVehicle(playerid,vehicleid,ispassenger)
{
	if(ispassenger == 0)
	{
		if(Admin[playerid] == 0)
		{
			new model = GetVehicleModel(vehicleid),lvl;
			switch(model)
			{
				case 425,432: lvl = 30;
				case 520: lvl = 20;
				case 447: lvl = 15;
				case 464: lvl = 10;
			}
			if(lvl > 0)
			{
			    if(Level[playerid] < lvl && OnEvent[playerid] == false)
			    {
					format(str,sizeof(str),"Toto vozidlo ("g"%s"w") mùete øídit a od {0077FF}%d"w". levelu",GetVehicleName(vehicleid),lvl);
					SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Vozidlo",str,"Zavøít","");
					BlockVehicleDrive(playerid);
				}
			}
		}
		if(Locked[vehicleid] > -1)
		{
		    if(PLocked[playerid] != vehicleid)
		    {
				new Float:X,Float:Y,Float:Z;
				GetPlayerPos(playerid,X,Y,Z);
				SetPlayerPos(playerid,X,Y,Z);
				format(str,sizeof(str),"Toto vozidlo zamknul %s~r~ %s",TDPlayers(Locked[vehicleid]),Jmeno(Locked[vehicleid]));
				CreateInfoBox(playerid,str,5);
		    }
		}
 		for(new i; i <= GetPlayerPoolSize(); i ++)
		{
		    for(new x; x < MAX_SLOTS; x++)
		    {
			    if(i != playerid)
			    {
			    	if(vehicleid == SavedCar[i][x])
		    		{
			    	    if(strcmp(ParkInfo[i][x][Password],"Unlocked",false) != 0)
			    	    {
							new Float:X,Float:Y,Float:Z;
							GetPlayerPos(playerid,X,Y,Z);
							SetPlayerPos(playerid,X,Y,Z);
				    	    if(strcmp(ParkInfo[i][x][Password],"Locked",false) == 0)
				    	    {
								format(str,sizeof(str),"Toto vozidlo ("g"%s"w") vlastní hráè "g"%s",GetVehicleNameByCarID(ParkInfo[i][x][Model]),Jmeno(i));
								SM(playerid,str);
							}
							else
							{
								format(str,sizeof(str),"Toto vozidlo ("g"%s"w") patøí hráèi: "g"%s\n"w"Pro odemknutí vozidla zadejte heslo",GetVehicleNameByCarID(ParkInfo[i][x][Model]),Jmeno(i));
							    SPD(playerid,UNNAMED+125,DIALOG_STYLE_INPUT,"Heslo",str,"Zadat","Zavøít");
							    SetPVarInt(playerid,"PlayerVehicle",i);
							    SetPVarInt(playerid,"GarageSlotID",x);
							}
						}
			    	}
				}
				else
				{
				    if(x < MAX_SLOTS-MAX_SPECIAL_SLOTS)
				    {
					    if(vehicleid == SavedCar[i][x])
					    {
					        if(Slots[playerid][x] == 0)
					        {
								TogglePlayerControllable(playerid,false);
								TogglePlayerControllable(playerid,true);
								format(str,sizeof(str),"Toto vozidlo "r"%s "w"je v zamknutém slotu [ %d ] --> "g"/garaz",GetVehicleName(vehicleid),x+1);
								SM(playerid,str);
					        }
					    }
					}
				}
			}
		}
	}
	return 1;
}
//============================================================================//
public OnPlayerEnterRaceCheckpoint(playerid)
{
	if(RacePlayer[playerid] > -1)
	{
	    PlayerCP[playerid] ++;
		if(PlayerCP[playerid] == 71)
		{
	    	format(str,sizeof(str),"~p~%d~w~/~r~%d",PlayerCP[playerid]-2,cps[RacePlayer[playerid]]-1);
		}
		else
		{
	    	format(str,sizeof(str),"%d~w~/~r~%d",PlayerCP[playerid]-2,cps[RacePlayer[playerid]]-1);
		}
		PlayerTextDrawSetString(playerid,Textdraw22[playerid],str);
		if(Race[RacePlayer[playerid]][CPVeh][PlayerCP[playerid]-1] == -1 || Race[RacePlayer[playerid]][CPVeh][PlayerCP[playerid]-1] >= 400 && Race[RacePlayer[playerid]][CPVeh][PlayerCP[playerid]-1] <= 611)
		{
		    new Float:SX,Float:SY,Float:SZ,Float:X,Float:Y,Float:Z,Float:A;
			GetVehicleZAngle(Ecar[playerid],A);
			GetVehicleVelocity(Ecar[playerid],SX,SY,SZ);
			CreateInfoBox(playerid,"Vozidlo transformovano!",3);
		    DestroyVehicle(Ecar[playerid]);
		    Ecar[playerid] = 0;
		    GetPlayerPos(playerid,X,Y,Z);
		    if(Race[RacePlayer[playerid]][CPVeh][PlayerCP[playerid]-1] != -1)
		    {
				Ecar[playerid] = CreateVehicle(Race[RacePlayer[playerid]][CPVeh][PlayerCP[playerid]-1],X,Y,Z,A,0,0,-1,0);
		    }
   			else
			{
   			 	new vehicles[] = {541,411,402,480,560,562,561,559,429,477,495,502,506,522,558};
				Ecar[playerid] = CreateVehicle(vehicles[random(sizeof(vehicles))],X,Y,Z,A,0,0,-1,0);
			}
			SetPlayerVirtualWorld(playerid,playerid+1);
			SetVehicleVirtualWorld(Ecar[playerid],playerid+1);
			PutPlayerInVehicle(playerid,Ecar[playerid],0);
			SetPlayerVirtualWorld(playerid,1);
			SetVehicleVirtualWorld(Ecar[playerid],1);
			AddVehicleComponent(Ecar[playerid],1010);
			SetVehicleVelocity(Ecar[playerid],SX,SY,SZ);
		}
        new let = Race[RacePlayer[playerid]][CPLetecky];
	    if(PlayerCP[playerid] < cps[RacePlayer[playerid]])
	    {
	        SetPlayerRaceCheckpoint(playerid,(let) ? (3) : (0),Race[RacePlayer[playerid]][CPX][PlayerCP[playerid]],Race[RacePlayer[playerid]][CPY][PlayerCP[playerid]],Race[RacePlayer[playerid]][CPZ][PlayerCP[playerid]],Race[RacePlayer[playerid]][CPX][PlayerCP[playerid]+1],Race[RacePlayer[playerid]][CPY][PlayerCP[playerid]+1],Race[RacePlayer[playerid]][CPZ][PlayerCP[playerid]+1],10);
			PlayerPlaySound(playerid,1139,0.0, 0.0, 0.0);
	    }
		else if(PlayerCP[playerid] == cps[RacePlayer[playerid]])
		{
	        SetPlayerRaceCheckpoint(playerid,(let) ? (4) : (1),Race[RacePlayer[playerid]][CPX][PlayerCP[playerid]],Race[RacePlayer[playerid]][CPY][PlayerCP[playerid]],Race[RacePlayer[playerid]][CPZ][PlayerCP[playerid]],Race[RacePlayer[playerid]][CPX][PlayerCP[playerid]+1],Race[RacePlayer[playerid]][CPY][PlayerCP[playerid]+1],Race[RacePlayer[playerid]][CPZ][PlayerCP[playerid]+1],10);
			PlayerPlaySound(playerid,1139,0.0, 0.0, 0.0);
		}
		else if(PlayerCP[playerid] > cps[RacePlayer[playerid]])
		{
		    pozice[RacePlayer[playerid]]++;
			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
			if(OnEvent[playerid] == false)
			{
				format(str,sizeof(str),"%s "w"%s "sb"dojel závod "w"%s "sb"na "w"%d. "sb"místì v èase: %02d:%02d.",Players(playerid),Jmeno(playerid),Race[RacePlayer[playerid]][CPName],pozice[RacePlayer[playerid]],RaceMinutes[playerid],RaceSeconds[playerid]);
				SCMTA(sblue,str);
				if(pozice[RacePlayer[playerid]] == 1)
				{
				    if(Race[RacePlayer[playerid]][RaceWin] > 0)
					{
						GivePoints(playerid,Race[RacePlayer[playerid]][RaceWin]);
						format(str,sizeof(str),"Vyhrál: "w"%d bodù"sb" (Zápisné: "w"%d bodù"sb").",Race[RacePlayer[playerid]][RaceWin],Race[RacePlayer[playerid]][RaceZapisne]);
						SCMTA(sblue,str);
					}
				}
			}
			else
			{
				format(str,sizeof(str),"%s "w"%s (%d) "r"dojel závod "w"%s "r"na "w"%d. "r"místì v èase: %02d:%02d.",Players(playerid),Jmeno(playerid),playerid,Race[RacePlayer[playerid]][CPName],pozice[RacePlayer[playerid]],RaceMinutes[playerid],RaceSeconds[playerid]);
				SCMTA(red,str);
	            printEx(str);
				if(BotEvent == true)
				{
					if(pozice[RacePlayer[playerid]] <= EventMista)
					{
				        new text[10];
				        format(text,sizeof(text),"%d",playerid);
				        CallLocalFunction("cmd_vyhra","is",botid,text);
					}
				}
			}
			GivePlayerDailyValue(playerid,DAILY_TYPE_RACE,1);
			PlayerPlaySound(playerid,1058,0,0,0);
			DisablePlayerRaceCheckpoint(playerid);
			PlayerCP[playerid] = 0;
			RaceSeconds[playerid] = 0;
			RaceMinutes[playerid] = 0;
			TextDrawHideForPlayer(playerid,Textdraw20);
			PlayerTextDrawHide(playerid,Textdraw22[playerid]);
			PlayerTextDrawHide(playerid,Textdraw23[playerid]);
			TextDrawHideForPlayer(playerid,Textdraw21);
			PlayerTextDrawHide(playerid,Textdraw24[playerid]);
			DisableRemoteVehicleCollisions(playerid,0);
		    RacePlayers[RacePlayer[playerid]]--;
		    DestroyVehicle(Ecar[playerid]);
		    Ecar[playerid] = 0;
		    SetPlayerVirtualWorld(playerid,0);
		    if(pozice[RacePlayer[playerid]] == 1)
		    {
		        GivePlayerDailyValue(playerid,DAILY_TYPE_RACE_WIN,1);
				GivePoints(playerid,1);
			    GiveXP(playerid,60,"Vyhrany zavod");
				RaceWins[playerid] ++;
				format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
				DOF2_SetInt(dfile,"RaceWins",RaceWins[playerid]);
                DOF2_SaveFile();
				if(Achiv[playerid][RACE_1] == 0)
				{
				    if(RaceWins[playerid] >= 1)
				    {
				        SetPlayerAchievement(playerid,RACE_1);
				    }
				}
				if(Achiv[playerid][RACE_25] == 0)
				{
				    if(RaceWins[playerid] >= 25)
				    {
				        SetPlayerAchievement(playerid,RACE_25);
				    }
				}
				if(Achiv[playerid][RACE_50] == 0)
				{
				    if(RaceWins[playerid] >= 50)
				    {
				        SetPlayerAchievement(playerid,RACE_50);
				    }
				}
				TimeToStartSeconds[RacePlayer[playerid]] = 31;
				SetTimerEx("TimeToEndRace",1000,false,"i",RacePlayer[playerid]);
		    }
		    else
		    {
			    GiveXP(playerid,30,"Dokonceny zavod");
		    }
			if(BotEvent == true && EventPlayers == 1)
			{
		        CallLocalFunction("cmd_eventend","is",botid," ");
		        CallLocalFunction("cmd_dann","is",botid," ");
			}
			else
			{
				CancelEvent(playerid);
			    LoadBeforeEventData(playerid);
			}
			RacePlayer[playerid] = -1;
 		}
	}
	return 1;
}
//============================================================================//
public OnPlayerEnterCheckpoint(playerid)
{
	if(pStunt[playerid][sStuntID] != -1 && IsPlayerInAnyVehicle(playerid))
	{
	    pStunt[playerid][sTakeTime] = 3;
	}
	if(Finding[playerid] == 1)
	{
	    DisablePlayerCheckpoint(playerid);
	    Finding[playerid] = 0;
	    CreateInfoBox(playerid,"jste v cili",3);
	}
	if(WorkMission[playerid] == 1)
	{
		new car = GetPlayerVehicleID(playerid),model = GetVehicleModel(car);
		if(model != 515) return CreateInfoBox(playerid,"Dojel si sem ve spatnem vozidle",7);
		if(!IsTrailerAttachedToVehicle(car)) return CreateInfoBox(playerid,"Potrebujes ~r~prives",7);
		MissionTimer[playerid] = SetTimerEx("TruckTimer",1000,false,"i",playerid);
		MissionTimeSeconds[playerid] = 10;
		if(WorkStatus[playerid] == 1)
		{
			CreateCompleteMessage(playerid,"Mission Info","Naklada se..~n~~r~10~n~~w~sekund",1);
		}
		else
		{
			CreateCompleteMessage(playerid,"Mission Info","Vyklada se..~n~~r~10~n~~w~sekund",1);
		}
	}
	else if(WorkMission[playerid] == 2)
	{
		new car = GetPlayerVehicleID(playerid),model = GetVehicleModel(car);
		if(model == 431 || model == 437)
		{
			MissionTimer[playerid] = SetTimerEx("BusTimer",1000,false,"i",playerid);
			MissionTimeSeconds[playerid] = 5;
			CreateCompleteMessage(playerid,"Mission Info","Pockejte~n~~r~5~n~~w~sekund",1);
		}
		else
		{
		    CreateInfoBox(playerid,"Na zastavku musite prijet v ~r~autobusu",5);
			EndMission(playerid,"Dojel si na zastavku v jinem vozidle");
		}
	}
	else if(WorkMission[playerid] == 3)
	{
		if(IsPlayerInAnyVehicle(playerid)) return CreateInfoBox(playerid,"Nesmite byt ve vozidle",5);
		MissionTimer[playerid] = SetTimerEx("TreeTimer",1000,false,"i",playerid);
		MissionTimeSeconds[playerid] = 5;
		TogglePlayerControllable(playerid,0);
		ApplyAnimation(playerid,"CHAINSAW","WEAPON_csaw",4.1,1,0,0,0,0,1);
		GivePlayerWeaponEx(playerid,9,1);
		CreateCompleteMessage(playerid,"Mission Info","Kacis strom...~n~~r~5~n~~w~sekund",1);
	}
	else if(WorkMission[playerid] == 4)
	{
		new car = GetPlayerVehicleID(playerid),model = GetVehicleModel(car);
		if(model == 560 || model == 541 || model == 415)
		{
	        new count = MissionsCount[playerid][4];
	        if(count > 1000) count = 1000;
		    if(WorkStatus[playerid] == 1)
		    {
				MissionPay[playerid] = 75000+GetPlayerMissionLevel(playerid,4)*10000;
			    new Float:X,Float:Y,Float:Z;
			    new rand;
				rand = random(sizeof(KuryrMission));
			    while(rand == PrevMission[playerid])
				{
					rand = random(sizeof(KuryrMission));
				}
				PrevMission[playerid] = rand;
				X = KuryrMission[rand][KuryrX];
				Y = KuryrMission[rand][KuryrY];
				Z = KuryrMission[rand][KuryrZ];
				SetPlayerCheckpointEx(playerid,X,Y,Z,4);
				WorkStatus[playerid] = 2;
				CreateCompleteMessage(playerid,"Mission Info","Jedte odevzdat ~r~zasilku",5);
				PlayerTextDrawShow(playerid,Textdraw25[playerid]);
				format(str,sizeof(str),"~y~Odmena: ~g~%s$~n~~y~body: ~b~+%0.1f",Split(MissionPay[playerid]),MissionPay[playerid]/12500.0);
				PlayerTextDrawSetString(playerid,Textdraw25[playerid],str);
				MissionToEndTime[playerid] += 150;
				GiveXP(playerid,20+GetPlayerMissionLevel(playerid,4)*2,"Pokrok v misi");
                AntiPointsBug[playerid] = 10;
                SetPVarInt(playerid,"MiseTime",gettime());
		    }
		    else
		    {
				if(AntiPointsBug[playerid] > 0)
				{
				    new query[300];
					format(str,sizeof(str),"%s %s byl zabanován za bugování bodù (tp-hack), misi zvládl za %d sekund",Players(playerid),Jmeno(playerid),10-AntiPointsBug[playerid]);
					SendAdminMessage(str);
					printEx(str);
					SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Ban",""dc"Byl jste zabanován (permanentnì) za bugování bodù, pokud si myslíte, e je ban neoprávnìný napite\nna nae forum "SRV_WEB"","Zavøít","");
					mysql_format(mysql,query,sizeof(query),"INSERT INTO `Bans` (`Nick`,`IP`,`Admin`,`Reason`,`Start`,`End`) VALUES ('%e','%s','%e','%e','%d','0')",Jmeno(playerid),GetIP(playerid),BOT_NAME,"Bugování bodù (TP Hack)",gettime());
					mysql_query(mysql,query,false);
					SpecialBan(playerid,BOT_NAME,"Bugování bodù (TP Hack)");
					SetPVarString(playerid,"BanReason","Bugování bodù (TP Hack)");
					BanPlayerAfterTime(playerid,30);
					return 0;
				}
				else
				{
					format(str,sizeof(str),"%s %s splnil misi za %d sekund",Players(playerid),Jmeno(playerid),gettime()-GetPVarInt(playerid,"MiseTime"));
				    printEx(str);
				}
		        format(str,sizeof(str),"Odmena ~g~%s$ ~w~+~b~%0.1f body",Split(MissionPay[playerid]),MissionPay[playerid]/12500.0);
		        CreateCompleteMessage(playerid,"Mise Splnena",str,7);
		        GiveMoney(playerid,MissionPay[playerid],"Splnìná mise");
		        GivePoints(playerid,MissionPay[playerid]/12500.0);
		        GiveXP(playerid,50+GetPlayerMissionLevel(playerid,4)*15,"splnena mise");
		        GivePlayerDailyValue(playerid,DAILY_TYPE_MISSION_KURYR,1);
		        WorkStatus[playerid] = 0;
		        WorkMission[playerid] = 0;
		        MissionPay[playerid] = 0;
		        MissionTimeSeconds[playerid] = 0;
		        KillTimer(MissionTimer[playerid]);
		        MissionTimer[playerid] = 0;
			 	DisablePlayerCheckpoint(playerid);
				PlayerTextDrawHide(playerid,Textdraw25[playerid]);
				MissionAchievement(playerid);
				SetPlayerVirtualWorld(playerid,0);
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),0);
				MiseCompleted[playerid]++;
				format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
				DOF2_SetInt(dfile,"MiseCompleted",MiseCompleted[playerid]);
                DOF2_SaveFile();
                MissionsCount[playerid][4] ++;
				if(MissionTrailer[playerid] > 0)
				{
					SetVehicleVirtualWorld(MissionTrailer[playerid],0);
				}
				MissionVehicle[playerid] = 0;
				MissionTrailer[playerid] = 0;
				EndMissionTimer(playerid);
		    }
		}
		else
		{
		    CreateInfoBox(playerid,"Musite mit vozidlo: ~g~Sultan, Bullet ~w~nebo ~g~Cheetah",5);
			EndMission(playerid,"Dojel si v jinem vozidle");
		}
	}
	else if(WorkMission[playerid] == 5)
	{
		new car = GetPlayerVehicleID(playerid),model = GetVehicleModel(car);
		if(model != 593) return CreateInfoBox(playerid,"Dojel si sem ve spatnem vozidle",7);
		MissionTimer[playerid] = SetTimerEx("PilotTimer",1000,false,"i",playerid);
		MissionTimeSeconds[playerid] = 10;
		if(WorkStatus[playerid] == 1)
		{
			CreateCompleteMessage(playerid,"Mission Info","Nakladaji se dokumenty..~n~~r~10~n~~w~sekund",1);
		}
		else
		{
			CreateCompleteMessage(playerid,"Mission Info","Vykladaji se dokumenty..~n~~r~10~n~~w~sekund",1);
		}
	}
	else if(WorkMission[playerid] == 6)
	{
		if(WorkStatus[playerid] == 2)
		{
			if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
			{
			    new trailer;
			    trailer = GetVehicleTrailer(GetPlayerVehicleID(playerid));
				if(trailer == MissionCar[playerid])
			    {
			        new level = GetPlayerMissionLevel(playerid,6);
					GivePlayerDailyValue(playerid,DAILY_TYPE_MISSION_MECHANIC,1);
					GivePoints(playerid,MissionPay[playerid]/10500.0);
					GivePlayerVyplata(playerid,MissionPay[playerid]);
					GivePlayerJobPoints(playerid,1);
					EndMissionTimer(playerid);
					MissionVehicle[playerid] = 0;
					WorkMission[playerid] = 0;
					WorkStatus[playerid] = 0;
					MissionLine[playerid] = 0;
			        format(str,sizeof(str),"Odmena ~g~%s$ ~w~+~b~%0.1f body",Split(MissionPay[playerid]),MissionPay[playerid]/10500.0);
			        CreateCompleteMessage(playerid,"Mise Splnena",str,7);
			        MissionPay[playerid] = 0;
			        DisablePlayerCheckpoint(playerid);
					MiseCompleted[playerid]++;
					format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
					DOF2_SetInt(dfile,"MiseCompleted",MiseCompleted[playerid]);
                    DOF2_SaveFile();
                    MissionsCount[playerid][6] ++;
					MissionAchievement(playerid);
					SetPlayerVirtualWorld(playerid,0);
					SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),0);
					new count = MissionsCount[playerid][6];
					if(count > 1000) count = 1000;
					GiveXP(playerid,100+level*15,"splnena mise");
				}
				else
				{
				    EndMission(playerid,"Odvezl si sem spatne vozidlo");
				}
			}
			else
			{
			    EndMission(playerid,"Musis sem odvest nepojiznde ~y~vozidlo");
			}
		}
	}
	return 1;
}

forward TruckTimer(playerid);
forward BusTimer(playerid);
forward TreeTimer(playerid);
forward MissionTimeEnd(playerid);
forward PilotTimer(playerid);

public TruckTimer(playerid)
{
	if(MissionTimeSeconds[playerid] > 0)
	{
	    MissionTimer[playerid] = SetTimerEx("TruckTimer",1000,false,"i",playerid);
	    MissionTimeSeconds[playerid]--;
		if(WorkStatus[playerid] == 1)
		{
			format(str,sizeof(str),"Naklada se..~n~~r~%d~n~~w~sekund",MissionTimeSeconds[playerid]);
			CreateCompleteMessage(playerid,"Mission Info",str,1);
		}
		else if(WorkStatus[playerid] == 2)
		{
			format(str,sizeof(str),"Vyklada se..~n~~r~%d~n~~w~sekund",MissionTimeSeconds[playerid]);
			CreateCompleteMessage(playerid,"Mission Info",str,1);
		}
		if(MissionTimeSeconds[playerid] == 0)
		{
		    new TruckerMissionID = GetPVarInt(playerid,"TruckerMissionID"),level = GetPlayerMissionLevel(playerid,1);
			new cash,Float:body,Float:xp,count = MissionsCount[playerid][1];
			if(count > 1000) count = 1000;
			cash = TruckerMission[TruckerMissionID][TPay]+level*15000;
			body = TruckerMission[TruckerMissionID][TBody]+level*0.6;
			xp = 50+level*18;
			if(WorkStatus[playerid] == 1)
			{
			    new Float:TX,Float:TY,Float:TZ;
			    TX = TruckerMission[TruckerMissionID][TFinishX];
			    TY = TruckerMission[TruckerMissionID][TFinishY];
			    TZ = TruckerMission[TruckerMissionID][TFinishZ];
				DisablePlayerCheckpoint(playerid);
			    SetPlayerCheckpointEx(playerid,TX,TY,TZ,8);
			    format(str,sizeof(str),"Dovez naklad do ~r~%s",TruckerMission[TruckerMissionID][TFinishText]);
			    CreateCompleteMessage(playerid,"Mission Info",str,7);
				WorkStatus[playerid] = 2;
				MissionToEndTime[playerid] += 300;
				PlayerTextDrawShow(playerid,Textdraw25[playerid]);
				format(str,sizeof(str),"~y~Odmena: ~g~%s$~n~~y~body: ~b~+%.01f",Split(cash),body);
				PlayerTextDrawSetString(playerid,Textdraw25[playerid],str);
			}
			else if(WorkStatus[playerid] == 2)
			{
				GivePlayerDailyValue(playerid,DAILY_TYPE_MISSION_TRUCKER,1);
			    WorkMission[playerid] = 0;
			    WorkStatus[playerid] = 0;
			    format(str,sizeof(str),"Odmena ~g~%s$ ~w~+~b~%0.1f body",Split(cash),body);
				CreateInfoBox(playerid,"Mise ~g~dokoncena ~w~pro dalsi misi stisknete ~r~+ ~w~nebo ~r~~k~~TOGGLE_SUBMISSIONS~",5);
				DisablePlayerCheckpoint(playerid);
				GiveMoney(playerid,cash,"Splnìná mise");
				GivePoints(playerid,body);
				MiseCompleted[playerid]++;
				MissionsCount[playerid][1] ++;
				format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
				DOF2_SetInt(dfile,"MiseCompleted",MiseCompleted[playerid]);
                DOF2_SaveFile();
				MissionAchievement(playerid);
				SetPlayerVirtualWorld(playerid,0);
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),0);
				if(MissionTrailer[playerid] > 0)
				{
					SetVehicleVirtualWorld(MissionTrailer[playerid],0);
				}
				MissionVehicle[playerid] = 0;
				MissionTrailer[playerid] = 0;
				EndMissionTimer(playerid);
				GiveXP(playerid,xp,"splnena mise");
			}
		}
	}
	return 1;
}

public BusTimer(playerid)
{
	if(MissionTimeSeconds[playerid] > 0)
	{
		MissionTimer[playerid] = SetTimerEx("BusTimer",1000,false,"i",playerid);
		MissionTimeSeconds[playerid] --;
		format(str,sizeof(str),"Pockejte~n~~r~%d~n~~w~sekund",MissionTimeSeconds[playerid]);
		CreateCompleteMessage(playerid,"Mission Info",str,1);
		if(MissionTimeSeconds[playerid] == 0)
		{
		    WorkStatus[playerid]++;
		    new count = MissionsCount[playerid][2],level = GetPlayerMissionLevel(playerid,2);
		    if(count > 1000) count = 1000;
		    MissionPay[playerid] += 15000+level*1000/2;
		    new Float:body = MissionPay[playerid]/12000.0;
			if(MissionLine[playerid] == 1 && WorkStatus[playerid] == sizeof(BusMission) || MissionLine[playerid] == 2 && WorkStatus[playerid] == sizeof(BusMission2))
			{
				GivePlayerDailyValue(playerid,DAILY_TYPE_MISSION_BUS,1);
				GiveMoney(playerid,MissionPay[playerid],"Splnìná mise");
				GivePoints(playerid,body);
				format(str,sizeof(str),"Odmena ~g~%s$ ~w~+~b~%0.1f body",Split(MissionPay[playerid]),body);
				CreateCompleteMessage(playerid,"Mission Info",str,5);
				MissionPay[playerid] = 0;
				WorkMission[playerid] = 0;
				WorkStatus[playerid] = 0;
				PlayerTextDrawHide(playerid,Textdraw25[playerid]);
				KillTimer(MissionTimer[playerid]);
				MissionTimer[playerid] = 0;
				MiseCompleted[playerid]++;
				MissionsCount[playerid][2] ++;
				DisablePlayerCheckpoint(playerid);
				format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
				DOF2_SetInt(dfile,"MiseCompleted",MiseCompleted[playerid]);
				DOF2_SaveFile();
				CreateInfoBox(playerid,"Mise ~g~dokoncena ~w~pro dalsi misi stisknete ~r~+ ~w~nebo ~r~~k~~TOGGLE_SUBMISSIONS~",5);
				MissionAchievement(playerid);
				SetPlayerVirtualWorld(playerid,0);
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),0);
				EndMissionTimer(playerid);
				GiveXP(playerid,60+level*11,"splnena mise");
			}
			else
			{
			    new Float:X,Float:Y,Float:Z;
			    if(MissionLine[playerid] == 1)
			    {
					X = BusMission[WorkStatus[playerid]][BusX];
					Y = BusMission[WorkStatus[playerid]][BusY];
					Z = BusMission[WorkStatus[playerid]][BusZ];
					format(str,sizeof(str),"~y~Zastavek: ~g~%d~y~/~r~%d~n~~y~Odmena: ~g~%s$~n~~y~Body: ~b~+%0.1f",WorkStatus[playerid],sizeof(BusMission),Split(MissionPay[playerid]),body);
				}
				else if(MissionLine[playerid] == 2)
				{
					X = BusMission2[WorkStatus[playerid]][BusX];
					Y = BusMission2[WorkStatus[playerid]][BusY];
					Z = BusMission2[WorkStatus[playerid]][BusZ];
					MissionPay[playerid]+=2000;
					format(str,sizeof(str),"~y~Zastavek: ~g~%d~y~/~r~%d~n~~y~Odmena: ~g~%s$~n~~y~Body: ~b~+%0.1f",WorkStatus[playerid],sizeof(BusMission2),Split(MissionPay[playerid]),body);
				}
				PlayerTextDrawSetString(playerid,Textdraw25[playerid],str);
				MissionToEndTime[playerid] += 35;
				GiveXP(playerid,5+level*0.5,"Pokrok v misi");
				DisablePlayerCheckpoint(playerid);
				SetPlayerCheckpointEx(playerid,X,Y,Z,8);
				CreateCompleteMessage(playerid,"Mission Info","Pokracujte na dalsi ~r~zastavku",5);
			}
		}
	}
	return 1;
}

public TreeTimer(playerid)
{
	if(MissionTimeSeconds[playerid] > 0)
	{
		MissionTimer[playerid] = SetTimerEx("TreeTimer",1000,false,"i",playerid);
		MissionTimeSeconds[playerid] --;
		format(str,sizeof(str),"Kacis strom...~n~~r~%d~n~~w~sekund",MissionTimeSeconds[playerid]);
		CreateCompleteMessage(playerid,"Mission Info",str,1);
		if(MissionTimeSeconds[playerid] == 0)
		{
			DestroyPlayerObject(playerid,MissionObject[playerid]);
		    WorkStatus[playerid]++;
		    new count = MissionsCount[playerid][3],level = GetPlayerMissionLevel(playerid,3);
		    if(count > 1000) count = 1000;
		    MissionPay[playerid] += 14000+level*2*1000;
		    new Float:body = MissionPay[playerid]/13000.0;
		    ClearAnimations(playerid);
		    TogglePlayerControllable(playerid,true);
			if(WorkStatus[playerid] < 5)
			{
			    new Float:X,Float:Y,Float:Z;
			    new rand;
				rand = random(sizeof(TreeMission));
			    while(rand == PrevMission[playerid])
				{
					rand = random(sizeof(TreeMission));
				}
				PrevMission[playerid] = rand;
				X = TreeMission[rand][TreeX];
				Y = TreeMission[rand][TreeY];
				Z = TreeMission[rand][TreeZ];
				SetPlayerCheckpointEx(playerid,X+0.3,Y+0.3,Z,1);
				CreateCompleteMessage(playerid,"Mission Info","Jedte Pokacet ~y~dalsi ~r~strom",5);
				format(str,sizeof(str),"~y~Pokaceno: ~g~%d~y~/~r~5~n~~y~Odmena: ~g~%s$~n~~y~Body: ~b~+%0.1f",WorkStatus[playerid],Split(MissionPay[playerid]),body);
				PlayerTextDrawSetString(playerid,Textdraw25[playerid],str);
				MissionObject[playerid] = CreatePlayerObject(playerid,725,X,Y,Z-5,0,0,0,300);
				MissionToEndTime[playerid] += 60;
				GiveXP(playerid,10+level,"Pokrok v misi");
			}
			else if(WorkStatus[playerid] == 5)
			{
				GiveMoney(playerid,MissionPay[playerid],"Splnìná mise");
				GivePoints(playerid,body);
				format(str,sizeof(str),"Odmena ~g~%s$ ~w~+~b~%0.1f body",Split(MissionPay[playerid]),body);
				CreateCompleteMessage(playerid,"Mise Splnena",str,5);
				GivePlayerDailyValue(playerid,DAILY_TYPE_MISSION_DREVORUBEC,1);
				MissionPay[playerid] = 0;
				WorkMission[playerid] = 0;
				WorkStatus[playerid] = 0;
				PlayerTextDrawHide(playerid,Textdraw25[playerid]);
				KillTimer(MissionTimer[playerid]);
				MissionTimer[playerid] = 0;
				MiseCompleted[playerid]++;
				MissionsCount[playerid][3] ++;
				GiveXP(playerid,30+level*13,"splnena mise");
				DisablePlayerCheckpoint(playerid);
				format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
				DOF2_SetInt(dfile,"MiseCompleted",MiseCompleted[playerid]);
                DOF2_SaveFile();
				CreateInfoBox(playerid,"Mise ~g~dokoncena ~w~pro dalsi misi stisknete ~r~+ ~w~nebo ~r~~k~~TOGGLE_SUBMISSIONS~",5);
				MissionAchievement(playerid);
				SetPlayerVirtualWorld(playerid,0);
				SetVehicleVirtualWorld(MissionVehicle[playerid],0);
				if(MissionTrailer[playerid] > 0)
				{
					SetVehicleVirtualWorld(MissionTrailer[playerid],0);
				}
				MissionVehicle[playerid] = 0;
				MissionTrailer[playerid] = 0;
				EndMissionTimer(playerid);
			}
		}
	}
	return 1;
}

public MissionTimeEnd(playerid)
{
	if(MissionToEndTime[playerid] > 1)
	{
	    MissionToEndTime[playerid] --;
		MissionToEndTimer[playerid] = SetTimerEx("MissionTimeEnd",1000,false,"i",playerid);
		new minutes,seconds;
		minutes = MissionToEndTime[playerid]/60;
		seconds = MissionToEndTime[playerid]%60;
		format(str,sizeof(str),"%02d:%02d",minutes,seconds);
		PlayerTextDrawSetString(playerid,Textdraw26[playerid],str);
	}
	else
	{
	    EndMission(playerid,"dosel vam cas");
	}
	return 1;
}

public PilotTimer(playerid)
{
	if(MissionTimeSeconds[playerid] > 0)
	{
	    MissionTimer[playerid] = SetTimerEx("PilotTimer",1000,false,"i",playerid);
	    MissionTimeSeconds[playerid]--;
		if(WorkStatus[playerid] == 1)
		{
			format(str,sizeof(str),"Nakladaji se dokumenty..~n~~r~%d~n~~w~sekund",MissionTimeSeconds[playerid]);
			CreateCompleteMessage(playerid,"Mission Info",str,1);
		}
		else if(WorkStatus[playerid] == 2)
		{
			format(str,sizeof(str),"Vykladaji se dokumenty..~n~~r~%d~n~~w~sekund",MissionTimeSeconds[playerid]);
			CreateCompleteMessage(playerid,"Mission Info",str,1);
		}
		if(MissionTimeSeconds[playerid] == 0)
		{
		    new PilotMissionID = GetPVarInt(playerid,"PilotMissionID");
		    new cash,Float:body,Float:xp,count = MissionsCount[playerid][5],level = GetPlayerMissionLevel(playerid,5);
		    if(count > 1000) count = 1000;
		    cash = PilotMission[PilotMissionID][PPay]+level*11000;
			body = PilotMission[PilotMissionID][PBody]+level*0.8;
			xp = 50+level*18;
			if(WorkStatus[playerid] == 1)
			{
			    new Float:PX,Float:PY,Float:PZ;
			    PX = PilotMission[PilotMissionID][PFinishX];
			    PY = PilotMission[PilotMissionID][PFinishY];
			    PZ = PilotMission[PilotMissionID][PFinishZ];
				DisablePlayerCheckpoint(playerid);
			    SetPlayerCheckpointEx(playerid,PX,PY,PZ,8);
			    format(str,sizeof(str),"Dovez dokumenty na ~r~%s",PilotMission[PilotMissionID][PFinishText]);
			    CreateCompleteMessage(playerid,"Mission Info",str,7);
				WorkStatus[playerid] = 2;
				MissionToEndTime[playerid] += 180;
				PlayerTextDrawShow(playerid,Textdraw25[playerid]);
				format(str,sizeof(str),"~y~Odmena: ~g~%s$~n~~y~body: ~b~+%0.1f",Split(cash),body);
				PlayerTextDrawSetString(playerid,Textdraw25[playerid],str);
			}
			else if(WorkStatus[playerid] == 2)
			{
			    WorkMission[playerid] = 0;
			    WorkStatus[playerid] = 0;
			    format(str,sizeof(str),"Odmena ~g~%s$ ~w~+~b~%.01f body",Split(cash),body);
				CreateCompleteMessage(playerid,"Mise Splnena",str,7);
				CreateInfoBox(playerid,"Mise ~g~dokoncena ~w~pro dalsi misi stisknete ~r~+ ~w~nebo ~r~~k~~TOGGLE_SUBMISSIONS~",5);
				DisablePlayerCheckpoint(playerid);
				GivePlayerVyplata(playerid,cash);
				GivePlayerJobPoints(playerid,1);
				GivePoints(playerid,body);
				MiseCompleted[playerid]++;
				MissionsCount[playerid][5] ++;
				GivePlayerDailyValue(playerid,DAILY_TYPE_MISSION_PILOT,1);
				GiveXP(playerid,xp,"splnena mise");
				format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
				DOF2_SetInt(dfile,"MiseCompleted",MiseCompleted[playerid]);
                DOF2_SaveFile();
				MissionAchievement(playerid);
				SetPlayerVirtualWorld(playerid,0);
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),0);
				if(MissionTrailer[playerid] > 0)
				{
					SetVehicleVirtualWorld(MissionTrailer[playerid],0);
				}
				MissionVehicle[playerid] = 0;
				MissionTrailer[playerid] = 0;
				EndMissionTimer(playerid);
			}
		}
	}
	return 1;
}
//===========================================================================//
public OnPlayerLeaveCheckpoint(playerid)
{
	if(pStunt[playerid][sStuntID] != -1){
	    pStunt[playerid][sTakeTime] = -1;
	    format(str,sizeof(str),"Stunt %d",pStunt[playerid][sStuntID]+1);
		CreateCompleteMessage(playerid,str,"Vratte se k ~r~checkpointu",3);
	}
	if(WorkMission[playerid] == 2)
	{
	    KillTimer(MissionTimer[playerid]);
		MissionTimer[playerid] = 0;
		MissionTimeSeconds[playerid] = 0;
		CreateCompleteMessage(playerid,"Mission Info","Musite pockat nez vsichni ~g~nastoupi",3);
	}
	if(WorkMission[playerid] == 1)
	{
	    KillTimer(MissionTimer[playerid]);
		MissionTimer[playerid] = 0;
		MissionTimeSeconds[playerid] = 0;
		if(WorkStatus[playerid] == 1)
		{
			CreateCompleteMessage(playerid,"Mission Info","Musite pockat nez se naklad ~g~nalozi",3);
		}
		else
		{
			CreateCompleteMessage(playerid,"Mission Info","Musite pockat nez se naklad ~g~vylozi",3);
		}
	}
	if(WorkMission[playerid] == 5)
	{
	    KillTimer(MissionTimer[playerid]);
		MissionTimer[playerid] = 0;
		MissionTimeSeconds[playerid] = 0;
		if(WorkStatus[playerid] == 1)
		{
			CreateCompleteMessage(playerid,"Mission Info","Musite pockat nez se dokumenty ~g~nalozi",3);
		}
		else
		{
			CreateCompleteMessage(playerid,"Mission Info","Musite pockat nez se dokumenty ~g~vylozi",3);
		}
	}
	return 1;
}
//===========================================================================//
public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	ShowInfo(playerid,clickedplayerid);
	return 1;
}
//============================================================================//
public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{
	for(new i; i < MAX_ZONES; i ++)
	{
		if(IsPlayerInRangeOfPoint(playerid,NoKillZone[i][NRadius],NoKillZone[i][NX],NoKillZone[i][NY],NoKillZone[i][NZ]) && GetPlayerVirtualWorld(playerid) == 0)
		{
		    new Float:Health;
		    if(IsPlayerConnected(issuerid))
		    {
		        format(str,sizeof(str),"Hráè ~g~%s ~w~je v ~r~~h~No-Kill Zonì ~w~nemùete ho zabít~n~~n~~r~-%.1fhp",Jmeno(playerid),amount*2);
				CreateInfoBox(issuerid,str,5);
				GetPlayerHealth(issuerid,Health);
				SetPlayerHealth(issuerid,Health-amount*2);
				if(!IsPlayerInAnyVehicle(issuerid))
				{
				    if(GetPlayerWeapon(issuerid) != 0)
				    {
						ResetPlayerWeapons(issuerid);
				    }
				}
			}
		}
	}

	new Float:Health,Float:Armour,hptext[10];
	GetPlayerHealth(playerid,Health);
	GetPlayerArmour(playerid,Armour);
	if(Health > 100)
	{
		PlayerTextDrawSetString(playerid,Textdraw38[playerid],"N");
	}
	else
	{
		format(hptext,sizeof(hptext),"%.0f",Health);
		PlayerTextDrawSetString(playerid,Textdraw38[playerid],hptext);
	}
	if(Armour == 0)
	{
		PlayerTextDrawSetString(playerid,Textdraw39[playerid],"_");
	}
	else
	{
		format(hptext,sizeof(hptext),"%.0f",Armour);
		PlayerTextDrawSetString(playerid,Textdraw39[playerid],hptext);
	}
    if(issuerid != INVALID_PLAYER_ID)
    {
        if(OnEvent[issuerid] == true && RunEvent == 8)
        {
            if(GetPlayerState(issuerid) == PLAYER_STATE_DRIVER)
            {
                new Float:HP;
                GetPlayerHealth(issuerid,HP);
                SetPlayerHealth(issuerid,HP-amount);
                format(str,sizeof(str),"Car Kill ~r~zakazan~w~!~n~~n~~r~-%0.1f hp",amount);
                CreateInfoBox(issuerid,str,4);
                SetVehicleToRespawn(GetPlayerVehicleID(issuerid));
            }
            else if(GetPlayerState(issuerid) == PLAYER_STATE_PASSENGER)
            {
				if(IsVehicleEmpty(GetPlayerVehicleID(playerid)))
				{
                	CreateInfoBox(issuerid,"G-Bug ~r~zakazan!",4);
				    SetPlayerArmedWeapon(issuerid,0);
				}
            }
        }
		if(PrisonTime[playerid] > 0 && PrisonTime[issuerid] > 0)
		{
		    GameTextForPlayer(issuerid,"~w~~r~+ 15 sekund",3000,3);
		    PrisonTime[issuerid] += 15;
		}
		new bool:no = true;
		if(GetGang(playerid) > 0)
		    if(GetGang(playerid) == GetGang(issuerid) && !IsPlayerInDuel(playerid) && OnEvent[playerid] == false && InDM[playerid] == -1)
		        no = false;
		if(no == true)
		{
			if(HitSound[issuerid] == true)
			{
				PlayerPlaySound(issuerid,17802,0,0,0);
			}
			if(AntiSK[playerid] == 0)
			{
			    Hitted[playerid] = 8;
				HittedPL[playerid] = issuerid;
			}
		}

/*		if(GetGang(playerid) != GetGang(issuerid) || GetGang(playerid) == 0 && GetGang(issuerid) == 0)
		{
			if(weaponid == 34)
			{
			    if(Listening[issuerid] == -1 && MusicTimeMinutes == 0 && MusicTimeSeconds == 0)
			    {
			        if(bodypart == 9)
			        {
						new Float:Health;
						GetPlayerHealth(playerid,Health);
						if(Health <= 100)
						{
				            new headshots[][] =
				            {
				                "http://delete.4fan.cz/hudba/headshot.wav",
				                "http://delete.4fan.cz/hudba/headshot2.wav",
								"http://delete.4fan.cz/hudba/headshot3.wav"
	  			            };
				        	PlayAudioStreamForPlayer(issuerid,headshots[random(sizeof(headshots))]);
						}
					}
				}
		        SetPlayerHealth(playerid,0);
		        format(str,sizeof(str),"Dostal si od hráèe "r"%s "w"HeadShot",Jmeno(issuerid));
		        SM(playerid,str);
			}
		}
*/
    }
    return 0;
}
//============================================================================//
public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	if(weaponid == 24 || weaponid == 27)
		if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
		{
		    SetPlayerArmedWeapon(playerid,0);
		    SM(playerid,"Pouij za spolujezdce jinou zbraò");
		}
	if(IsPlayerInAnyVehicle(playerid))
	{
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 539)
	    {
		    SetPlayerArmedWeapon(playerid,0);
		    SM(playerid,"Z Vortextu je zakázáno støílet");
	    }
	}
	if(weaponid == 38)
	{
	    if(OnEvent[playerid] == false && InDM[playerid] == -1 && dPlayer[playerid][pDuelStatus] == -1)
	    {
	        if(Admin[playerid] < 4)
			{
			    if(Kicked[playerid] == false)
			    {
					format(str,sizeof(str),"Bot "w""BOT_NAME" "r"zabanoval hráèe "w"%s "r"na "w"336 "r"hodin",Jmeno(playerid));
					SCMTA(red,str);
					format(str,sizeof(str),"[ Dùvod: "w"%s "r"]","Minigun");
					SCMTA(red,str);
				    new date = gettime() + 60*60*336,query[300];
		    		mysql_format(mysql,query,sizeof(query),"INSERT INTO `Bans` (`Nick`,`IP`,`Admin`,`Reason`,`Start`,`End`) VALUES ('%e','%s','%e','%e','%d','%d')",Jmeno(playerid),GetIP(playerid),BOT_NAME,"Minigun",gettime(),date);
					mysql_query(mysql,query,false);
					SpecialTBan(playerid,BOT_NAME,"Minigun",date);
					KickPlayerAfterTime(playerid,500);
					Kicked[playerid] = true;
				}
				return 0;
			}
	    }
	}
    if(hittype != BULLET_HIT_TYPE_NONE)
	{
        if(!( -1000.0 <= fX <= 1000.0 ) || !( -1000.0 <= fY <= 1000.0 ) || !( -1000.0 <= fZ <= 1000.0 ))
		{
    		GivePenaltyPoints(Jmeno(playerid),5,BOT_NAME,"Kick","Bullet Crasher");
			format(str,sizeof(str),"Bot "w""BOT_NAME" "r"vyhodil ze serveru hráèe "w"%s"r".",Jmeno(playerid));
			SCMTA(red,str);
			format(str,sizeof(str),"[ Dùvod: "w"%s "r"]","Bullet Crasher");
			SCMTA(red,str);
			SpecialKick(playerid,BOT_NAME,"Bullet Crasher");
			Kick(playerid);
			return 0;
		}
	}
	new Float:SX, Float:SY, Float:SZ;
  	GetPlayerPos(playerid, SX, SY, SZ);
	if (weaponid < 22 || weaponid > 38)
	{
		GivePenaltyPoints(Jmeno(playerid),5,BOT_NAME,"Kick","Bullet Crasher");
		format(str,sizeof(str),"Bot "w""BOT_NAME" "r"vyhodil ze serveru hráèe "w"%s"r".",Jmeno(playerid));
		SCMTA(red,str);
		format(str,sizeof(str),"[ Dùvod: "w"%s "r"]","Bullet Crasher");
		SCMTA(red,str);
		SpecialKick(playerid,BOT_NAME,"Bullet Crasher");
		Kick(playerid);
		return 0;
	}
  	if(!(-20000.0 <= SZ <= 20000.0))
    {
		GivePenaltyPoints(Jmeno(playerid),5,BOT_NAME,"Kick","Bullet Crasher");
		format(str,sizeof(str),"Bot "w""BOT_NAME" "r"vyhodil ze serveru hráèe "w"%s"r".",Jmeno(playerid));
		SCMTA(red,str);
		format(str,sizeof(str),"[ Dùvod: "w"%s "r"]","Bullet Crasher");
		SCMTA(red,str);
		SpecialKick(playerid,BOT_NAME,"Bullet Crasher");
		Kick(playerid);
		return 0;
    }
	AntiFakeBullets[playerid]++;
	SetTimerEx("ResetFakeBullets", 1000, false, "i", playerid);
	if(AntiFakeBullets[playerid] >= 50 && weaponid != 38)
	{
		GivePenaltyPoints(Jmeno(playerid),5,BOT_NAME,"Kick","Bullet Crasher");
		format(str,sizeof(str),"Bot "w""BOT_NAME" "r"vyhodil ze serveru hráèe "w"%s"r".",Jmeno(playerid));
		SCMTA(red,str);
		format(str,sizeof(str),"[ Dùvod: "w"%s "r"]","Rapid Fire");
		SCMTA(red,str);
		SpecialKick(playerid,BOT_NAME,"FakeBullets");
		Kick(playerid);
	}
	if(playerid != INVALID_PLAYER_ID)
	{
		if(OnEvent[playerid] == false)
		{
			if(EB[playerid] == 1)
			{
				if(weaponid != 35 && weaponid != 36 && weaponid != 37 && weaponid > 19 || weaponid < 38)
				{
					if(Naboje[playerid] > 0)
					{
						if(hittype == 0)
						{
							CreateExplosion(fX, fY, fZ, 0, 5);
						}
						else if(hittype == 1)
						{
						    new Float:X,Float:Y,Float:Z;
						    GetPlayerPos(hitid,X,Y,Z);
							CreateExplosion(X, Y, Z, 0, 5);
						}
						else if(hittype == 2)
						{
						    new Float:X,Float:Y,Float:Z;
						    GetVehiclePos(hitid,X,Y,Z);
							CreateExplosion(X, Y, Z, 0, 5);
						}
					  	Naboje[playerid] --;
						format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
						DOF2_SetInt(dfile,"Naboje",Naboje[playerid]);
                        DOF2_SaveFile();
					}
					else if(Naboje[playerid] == 0)
					{
					    SM(playerid,"Doli ti výbuné náboje, dokup si je "g"/ebullets");
						EB[playerid] = 0;
					}
				}
			}
		}
	}
	return 1;
}

forward ResetFakeBullets(playerid);
public ResetFakeBullets(playerid) return AntiFakeBullets[playerid] = 0;

//============================================================================//
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(AFK[playerid] == true)
	{
    	SetPlayerUnAFK(playerid);
	}
	AFKMoving[playerid] = 0;
	#define HOLDING(%0) \
		((newkeys & (%0)) == (%0))
	#define PRESSED(%0) \
	(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
	#define PRESSING(%0,%1) \
		(%0 & (%1))
	if(PRESSED(KEY_SECONDARY_ATTACK))
	{
	    if(dPlayer[playerid][pDuelSpec] != -1 && dPlayer[playerid][pDuelRoom] != -1)
	    {
	        dPlayer[playerid][pDuelSpec] = (dPlayer[playerid][pDuelSpec]+1)%2;
	        dPlayer[playerid][DuelPlayer] = dPlayer[playerid][pDuelSpec];
	        UpdateDuelInfo(playerid);
	        PlayerSpectatePlayer(playerid,Duel[dPlayer[playerid][pDuelRoom]][DuelPlayer][dPlayer[playerid][pDuelSpec]]);
	    }
	    if(ViewMode[playerid])
	    {
	        TogglePlayerSpectating(playerid,false);
			TextDrawHideForPlayer(playerid,Textdraw42);
	        ViewMode[playerid] = 0;
	    }
/*		new propid = GetPVarInt(playerid,"EPropertyID");
		if(propid != -1)
		{
	        new intid = eProps[propid][ePInt];
			if(IsPlayerInRangeOfPoint(playerid,1.5,ElitePropsInteriors[intid][0],ElitePropsInteriors[intid][1],ElitePropsInteriors[intid][2]))
	        {
	            SetPlayerPos(playerid,eProps[propid][ePX],eProps[propid][ePY],eProps[propid][ePZ]);
	            SetPlayerVirtualWorld(playerid,0);
	            SetPVarInt(playerid,"EPropertyID",-1);
	        }
	    }
*/		if(InDM[playerid] == -1)
		{
			new bool: inhouse = false;
			for(new i; i < sizeof(HouseInteriors); i ++)
			{
				if(GetPlayerInterior(playerid) == HouseInteriors[i][HouseIntID])
				{
				    if(IsPlayerInRangeOfPoint(playerid,1.5,HouseInteriors[i][HouseInteriorX],HouseInteriors[i][HouseInteriorY],HouseInteriors[i][HouseInteriorZ]))
				    {
					    new id = GetPVarInt(playerid,"HouseID");
						SetPlayerPos(playerid,House[id][hX],House[id][hY],House[id][hZ]);
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						inhouse = true;
				    }
				}
			}
			if(!IsPlayerInAnyVehicle(playerid))
			{
			    if(GetPlayerVirtualWorld(playerid) == 0 && inhouse == false)
			    {
				    for(new i; i < sizeof(Interiors); i ++)
				    {
				        if(IsPlayerInRangeOfPoint(playerid,1.5,Interiors[i][iX],Interiors[i][iY],Interiors[i][iZ]))
				        {
							new id = GetPVarInt(playerid,"IntEID");
		//					if(InteriorEnters[id][ieExit] == -1)
		//					{
							    SetPlayerPos(playerid,InteriorEnters[id][ieX],InteriorEnters[id][ieY],InteriorEnters[id][ieZ]);
		/*					}
							else
							{
								id = InteriorEnters[i][ieExit];
							    SetPlayerPos(playerid,InteriorEnters[id][ieX],InteriorEnters[id][ieY],InteriorEnters[id][ieZ]);
							}
		*/					SetPlayerInterior(playerid,0);
				        }
				    }
					for(new i; i < MAX_INTERIORS; i ++)
					{
					    if(InteriorEnters[i][ieX] != 0.0 && InteriorEnters[i][ieX] != 0.0 && InteriorEnters[i][ieX] != 0.0)
					    {
			 				if(IsPlayerInRangeOfPoint(playerid,1.5,InteriorEnters[i][ieX],InteriorEnters[i][ieY],InteriorEnters[i][ieZ]))
							{
							    new id = InteriorEnters[i][ieID];
					            SetPlayerPos(playerid,Interiors[id][iX],Interiors[id][iY],Interiors[id][iZ]);
					            SetPlayerInterior(playerid,Interiors[id][iID]);
					            SetPVarInt(playerid,"IntEID",i);
							}
						}
					}
				}
			}
		}
	}
	if(!IsPlayerInAnyVehicle(playerid))
	{
	    if(PRESSED(KEY_WALK))
	    {
	        if(WorkMission[playerid] == 7)
	        {
	            if(GetPlayerWeapon(playerid) != 0)
	            {
	                for(new i; i <= GetPlayerPoolSize(); i ++)
	                {
	                    if(IPC(i) && !IsPlayerNPC(i))
	                    {
	                        if(i != playerid)
	                        {
		                        if(GetPlayerVirtualWorld(i) == 0)
		                        {
		                            if(!IsPlayerInBlockedMission(i))
		                            {
				                        new Float:X,Float:Y,Float:Z;
				                        GetPlayerPos(i,X,Y,Z);
				                        if(IsPlayerInRangeOfPoint(playerid,3,X,Y,Z))
				                        {
											new wl = GetPlayerWantedLevel(i);
											if(wl > 0)
											{
												if(wl > 12) wl = 12;
												EndMission(i,"Byl si zatcen");
												JailPlayer(i,wl*30);
												new count = MissionsCount[playerid][7],level = GetPlayerMissionLevel(playerid,7);
												if(count > 1000) count = 1000;
												new cash = 25000+(1000*wl)+level*9000;
												new Float:body = (3+wl/2)+level*0.9;
											    format(str,sizeof(str),"Odmena ~g~%s$ ~w~+~b~%0.1f body",Split(cash),body);
											    CreateCompleteMessage(playerid,"Hrac zatcen",str,5);
										    	format(str,sizeof(str),"Byl jste zatcen hracem ~r~%s",Jmeno(playerid));
										    	convert_encoding(str);
												CreateCompleteMessage(i,"Vezeni",str,3);
											    GivePoints(playerid,body);
											    GivePlayerVyplata(playerid,cash);
											    GivePlayerJobPoints(playerid,1);
												MissionsCount[playerid][7] ++;
												GiveXP(playerid,50+(wl*10)+(level*18),"zatceni hrace");
												GivePlayerDailyValue(playerid,DAILY_TYPE_MISSION_POLICE,1);
												MiseCompleted[playerid]++;
												format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
												DOF2_SetInt(dfile,"MiseCompleted",MiseCompleted[playerid]);
												MissionAchievement(playerid);
												return 0;
											}
				                        }
									}
								}
							}
	                    }
	                }
	            }
	        }
	        if(WorkMission[playerid] == 8)
	        {
                for(new i; i <= GetPlayerPoolSize(); i ++)
                {
                    if(IPC(i) && !IsPlayerNPC(i))
                    {
                        if(i != playerid)
                        {
                            if(MissionLastCustomer[playerid][i] == false)
                            {
		                        new Float:X,Float:Y,Float:Z;
		                        GetPlayerPos(i,X,Y,Z);
		                        if(IsPlayerInRangeOfPoint(playerid,3,X,Y,Z))
		                        {
									new Float:Health;
									GetPlayerHealth(i,Health);
									if(Health < 100)
									{
										format(str,sizeof(str),"Byl jste uzdraven hracem ~r~%s",Jmeno(playerid));
								    	convert_encoding(str);
										CreateCompleteMessage(i,"Zdravotnik",str,3);
										SetPlayerHealth(i,100);
										new count = MissionsCount[playerid][8],level = GetPlayerMissionLevel(playerid,8);
										if(count > 1000) count = 1000;
										new cash = 25000 + level*9100,Float:points = 8 + level*0.9;
										format(str,sizeof(str),"Odmena ~g~%s$ ~w~+~b~%0.1f body",Split(cash),points);
										CreateCompleteMessage(playerid,"Hrac uzdraven",str,5);
										GivePoints(playerid,points);
									    GivePlayerVyplata(playerid,cash);
									    GivePlayerJobPoints(playerid,1);
										MissionsCount[playerid][8] ++;
										GiveXP(playerid,60+(level*18),"uzdraveni hrace");
										MiseCompleted[playerid]++;
										GivePlayerDailyValue(playerid,DAILY_TYPE_MISSION_MEDIC,1);
										MissionLastCustomer[playerid][i] = true;
										format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
										DOF2_SetInt(dfile,"MiseCompleted",MiseCompleted[playerid]);
										MissionAchievement(playerid);
										return 0;
									}
		                        }
							}
	                    }
					}
	            }
	        }
			for(new i; i < MAX_HOUSES; i ++)
			{
			    if(IsPlayerInRangeOfPoint(playerid,1.5,House[i][hX],House[i][hY],House[i][hZ]) && GetPlayerVirtualWorld(playerid) == 0)
			    {
			        new DIALOG[500];
			        if(IsPlayerHouseOwner(playerid,i))
			        {
			            strcat(DIALOG,"Vejít\n");
						if(strlen(House[i][hPassword]) == 0)
						{
							strcat(DIALOG,"Zamknout\n");
						}
						else
						{
						    strcat(DIALOG,"Odemknout\n");
						}
						strcat(DIALOG,"Prodat\n");
						if(House[i][hPrice] == 0)
						{
						    strcat(DIALOG,"Vystavit dùm na prodej\n");
						}
						else
						{
						    strcat(DIALOG,"Stáhnout dùm z prodeje\n");
						}
			        }
			        else if(strcmp(House[i][hOwner],"-1",false) == 0 || House[i][hPrice] > 0)
			        {
			            strcat(DIALOG,"Koupit\nVejít\n");
			        }
			        else
			        {
			            strcat(DIALOG,"Vejít\n");
			        }
					SPD(playerid,UNNAMED+131,DIALOG_STYLE_LIST,"Dùm",DIALOG,"Vybrat","Zavøít");
					SetPVarInt(playerid,"HouseID",i);
				}
			}
	        for(new i; i < MAX_PROPERTIES; i ++ )
	        {
			    if(IsPlayerInRangeOfPoint(playerid,1.5,Property[i][PropertyX],Property[i][PropertyY],Property[i][PropertyZ]) && GetPlayerVirtualWorld(playerid) == 0)
			    {
					new DIALOG_PROPERTY[1000];
					if(IsPlayerPropertyOwner(playerid,i))
					{
		                strcat(DIALOG_PROPERTY,"Pøejmenovat nemovitost\nVyplatit\nVýdìlek\nUpgrade nemovitosti\nProdlouit pronájem\n\nProdat\n");
		                if(Property[i][PropertyOnSale] == 0)
		                {
		                 	strcat(DIALOG_PROPERTY,"Vystavit nemovitost na prodej");
		                }
		                else
		                {
		                 	strcat(DIALOG_PROPERTY,"Stáhnout nemovitost z prodeje");
		                }
					}
					else
					{
			            if(strcmp(Property[i][PropertyOwner],"-1",false) == 0 || Property[i][PropertyOnSale] > 0)
			            {
						    strcat(DIALOG_PROPERTY,"Koupit\n");
			            }
	                	strcat(DIALOG_PROPERTY,"Vykrást\n");
	                	if(GetPlayerJob(playerid) == 1 || GetPlayerJob(playerid) == 2)
	                	{
	                	    strcat(DIALOG_PROPERTY,"Zabrat\n");
	                	}
					}
					SPD(playerid,UNNAMED+110,DIALOG_STYLE_LIST,Property[i][PropertyName],DIALOG_PROPERTY,"Vybrat","Zavøít");
					SetPVarInt(playerid,"PropertyID",i);
				}
	        }
/*    	    for(new i; i < sizeof(eProps); i ++)
		    {
		        if(IsPlayerInRangeOfPoint(playerid,1.5,eProps[i][ePX],eProps[i][ePY],eProps[i][ePZ]))
				{
				    SetPVarInt(playerid,"EPropertyID",i);
				    new DIALOG[500];
				    if(IsPlayerEPropOwner(playerid,i)){
				        strcat(DIALOG,"Vejít\nProdat");
					}
					else
					    strcat(DIALOG,"Koupit\n");
				    SPD(playerid,UNNAMED+194,DIALOG_STYLE_LIST,ePropsNames[eProps[i][ePInt]],DIALOG,"Vybrat","Zavøít");
				    break;
				}
			}
*/		}
	}
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(PRESSED(KEY_CROUCH))
		{
		    if(IsPlayerInRangeOfPoint(playerid,5,-1973.3783,303.2480,35.1719))
		    {
				new car = GetPlayerVehicleID(playerid), model = GetVehicleModel(car);
				format(str,sizeof(str),"Wang Cars nyni vykupuje vozidlo ~r~%s",GetVehicleNameByCarID(CarSellID));
				if(model != CarSellID) return CreateCompleteMessage(playerid,"Wang Cars",str,5);
				for(new i; i <= GetPlayerPoolSize(); i ++)
				{
					if(IsPlayerInVehicle(playerid,CCAR[i])) return CreateInfoBox(playerid,"Nemuzete prodat ~r~vozidlo z carmenu",5);
				}
				new rand = random(sizeof(CarSellIDS)),castka = 30000+random(20000),points = 1 + random(1);
				CarSellID = CarSellIDS[rand];
				format(str,sizeof(str),"Dostavate odmenu ~g~$%s~w~+ ~b~%d bodu~n~~w~dalsi vozidlo: ~r~%s",Split(castka),points,GetVehicleNameByCarID(CarSellID));
				CreateCompleteMessage(playerid,"Wang Cars",str,5);
				GiveMoney(playerid,castka,"Prodané vozidlo u Wang Cars");
				GivePoints(playerid,points);
				GiveXP(playerid,30+random(20),"Prodane vozidlo");
				GivePlayerDailyValue(playerid,DAILY_TYPE_CARS_SELL,1);
				SetVehicleToRespawn(car);
				DestroyObject(CarSellText);
				CarSellText = CreateObject(1649, -1973.906494, 309.6, 36.331890, 0.000000, 0.000000, 0.000000);
				format(str,sizeof(str),"Wang Cars\n"g"Zatrubte pro prodání vozu\n"w"Vykupujeme "r"%s",GetVehicleNameByCarID(CarSellID));
				SetObjectMaterialText(CarSellText,str,0,OBJECT_MATERIAL_SIZE_512x512,"Arial",45,1,bila,0xFF000000,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
		    }
		}
		if(HOLDING(KEY_FIRE) && !Holding[playerid])
		{
		    Holding[playerid] = true;
		}
		
		if(InSumo[playerid] == false)
		{
	        if(HOLDING(KEY_FIRE) || HOLDING(KEY_ACTION))
	        {
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
					AddVehicleComponent(GetPlayerVehicleID(playerid),1010);
		        }
			}
	        else
	        {
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
				{
	            	RemoveVehicleComponent(GetPlayerVehicleID(playerid),1010);
				}
			}
		}
		if(PRESSED(KEY_SUBMISSION))
		{
			new car = GetPlayerVehicleID(playerid),model = GetVehicleModel(car);
			if(IsPlayerHitted(playerid)) return SM(playerid,"V boji nemùe zaèít dìlat misi");
			if(GetPlayerVirtualWorld(playerid) == 0)
			{
				if(WorkMission[playerid] == 0)
				{
					if(RobTime[playerid] > 0) return SM(playerid,"Kdy vykrádate, nemùete plnit misi");
					if(model == 407)
					{
					    if(GetPlayerJob(playerid) != 8) return SM(playerid,"Pro tuto misi musíte být zamìstnán jako "r"Hasiè");
						CheckZrusMisi(playerid);
						CreateCompleteMessage(playerid,"Mission Info","Jedte uhasit ~r~pozar",5);
		    		    WorkMission[playerid] = 9;
		    		    SetPlayerVirtualWorld(playerid,playerid+500);
						SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),playerid+500);
					    CreateFire(playerid);
					    PlayerTextDrawShow(playerid,Textdraw26[playerid]);
					}
					if(model == 515)
					{
					    if(IsTrailerAttachedToVehicle(car))
					    {
							CheckZrusMisi(playerid);
							new DIALOG_TRUCKER[10000],level = GetPlayerMissionLevel(playerid,1);
							new count = MissionsCount[playerid][1];
							if(count > 1000) count = 1000;
							for(new i; i < sizeof(TruckerMission); i ++)
							{
						    	format(str,sizeof(str),""c"%s"w"\t"y"%s\t"w"[ "g"%s$"w" ]\t[ "r"Body + %0.1f "w"]\n",TruckerMission[i][TStartText],TruckerMission[i][TFinishText],Split(TruckerMission[i][TPay]+level*15000),TruckerMission[i][TBody]+level*0.6);
								strcat(DIALOG_TRUCKER,str);
							}
						    SPD(playerid,UNNAMED+46,DIALOG_STYLE_TABLIST,"Trucker",DIALOG_TRUCKER,"Vybrat","Zavøít");
						}
						else
						{
						    CreateInfoBox(playerid,"Pro plneni teto mise potrebujes ~r~prives",7);
						}
					}
					if(model == 593)
					{
					    if(GetPlayerJob(playerid) != 3) return SM(playerid,"Pro tuto misi musíte být zamìstnán jako "r"Pilot");
						CheckZrusMisi(playerid);
						new DIALOG_PILOT[10000];
						new count = MissionsCount[playerid][5],level = GetPlayerMissionLevel(playerid,5);
						if(count > 1000) count = 1000;
						for(new i; i < sizeof(PilotMission); i ++)
						{
					    	format(str,sizeof(str),""c"%s"w"\t"y"%s\t"w"[ "g"%s$"w" ]\t[ "r"Body + %0.1f "w"]\n",PilotMission[i][PStartText],PilotMission[i][PFinishText],Split(PilotMission[i][PPay]+level*11000),PilotMission[i][PBody]+level*0.8);
							strcat(DIALOG_PILOT,str);
						}
					    SPD(playerid,UNNAMED+49,DIALOG_STYLE_TABLIST,"Pilot",DIALOG_PILOT,"Vybrat","Zavøít");
					}
					else if(model == 437 || model == 431)
					{
						SPD(playerid,UNNAMED+47,DIALOG_STYLE_LIST,"Øidiè Autobusu","Linka 1\nLinka 2","Vybrat","Zavøít");
					}
					else if(model == 495)
					{
					    if(WorkMission[playerid] > 0) return SM(playerid,"U si v misi, pouij "r"/zrusmisi");
						CheckZrusMisi(playerid);
					    new Float:X,Float:Y,Float:Z;
					    new rand;
						rand = random(sizeof(TreeMission));
					    while(rand == PrevMission[playerid])
						{
							rand = random(sizeof(TreeMission));
						}
						PrevMission[playerid] = rand;
						X = TreeMission[rand][TreeX];
						Y = TreeMission[rand][TreeY];
						Z = TreeMission[rand][TreeZ];
						SetPlayerCheckpointEx(playerid,X+0.3,Y+0.3,Z,1);
						WorkMission[playerid] = 3;
						WorkStatus[playerid] = 0;
						CreateCompleteMessage(playerid,"Mission Info","Jedte Pokacet ~r~strom",5);
						SetMissionTimer(playerid,120);
						CreateInfoBox(playerid,"Zacal si plnit misi, misi zrusis prikazem ~r~/zrusmisi",5);
						PlayerTextDrawShow(playerid,Textdraw25[playerid]);
						format(str,sizeof(str),"~y~Pokaceno: ~g~%d~y~/~r~5~n~~y~Odmena: ~g~%s$~n~~y~Body: ~b~+0.0",WorkStatus[playerid],Split(MissionPay[playerid]));
						PlayerTextDrawSetString(playerid,Textdraw25[playerid],str);
						MissionObject[playerid] = CreatePlayerObject(playerid,725,X,Y,Z-5,0,0,0,300);
						SetPlayerVirtualWorld(playerid,4);
						MissionVehicle[playerid] = GetPlayerVehicleID(playerid);
						SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),4);
					}
					else if(model == 560 || model == 541 || model == 415)
					{
					    if(WorkMission[playerid] > 0) return SM(playerid,"U si v misi, pouij "r"/zrusmisi");
						CheckZrusMisi(playerid);
						ChangeVehicleColor(GetPlayerVehicleID(playerid),0,0);
					    new Float:X,Float:Y,Float:Z;
					    new rand;
						rand = random(sizeof(KuryrMission));
					    while(rand == PrevMission[playerid])
						{
							rand = random(sizeof(KuryrMission));
						}
						PrevMission[playerid] = rand;
						X = KuryrMission[rand][KuryrX];
						Y = KuryrMission[rand][KuryrY];
						Z = KuryrMission[rand][KuryrZ];
						SetPlayerCheckpointEx(playerid,X,Y,Z,4);
						WorkMission[playerid] = 4;
						WorkStatus[playerid] = 1;
						PlayerTextDrawShow(playerid,Textdraw25[playerid]);
						format(str,sizeof(str),"~y~Odmena: ~g~0$~n~~y~body: ~b~+0.0");
						PlayerTextDrawSetString(playerid,Textdraw25[playerid],str);
						CreateCompleteMessage(playerid,"Mission Info","Jedte vyzvednout ~r~zasilku",5);
						CreateInfoBox(playerid,"Zacal si plnit misi, misi zrusis prikazem ~r~/zrusmisi",5);
						SetMissionTimer(playerid,240);
						SetPlayerVirtualWorld(playerid,4);
						SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),4);
					}
					else if(model == 525)
					{
					    if(GetPlayerJob(playerid) != 5) return SM(playerid,"Pro tuto misi musíte být zamìstnán jako "r"Mechanik");
					    if(WorkMission[playerid] > 0) return SM(playerid,"U si v misi, pouij "r"/zrusmisi");
						CheckZrusMisi(playerid);
					    new Float:X,Float:Y,Float:Z,Float:A,used,rand = random(sizeof(MechanicMission));
						for(new i; i <= GetPlayerPoolSize(); i ++)
						{
							if(IPC(i) && !IsPlayerNPC(i))
							{
								if(WorkMission[i] == 6)
								{
								    used++;
								}
								if(used >= sizeof(MechanicMission)) return SM(playerid,"Misi dìlá mnoho hráèù, nelze se pøipojit");
							    while(MissionLine[i] == rand)
								{
									rand = random(sizeof(MechanicMission));
								}
							}
						}
						MissionLine[playerid] = rand;
						WorkMission[playerid] = 6;
						WorkStatus[playerid] = 1;
						X = MechanicMission[rand][MX];
						Y = MechanicMission[rand][MY];
						Z = MechanicMission[rand][MZ];
						A = MechanicMission[rand][MA];
						SetMissionTimer(playerid,300);
						new vehicles[] = {559,560,561,562,451,541,415,411,500,402,405,410,419,421,426,429,436,439,445,458,477,480,492,496,506,507};
						MissionCar[playerid] = CreateVehicle(vehicles[random(sizeof(vehicles))],X,Y,Z,A,-1,-1,-1);
						SetPlayerVirtualWorld(playerid,4);
						MissionVehicle[playerid] = GetPlayerVehicleID(playerid);
						SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),4);
						PlayerTextDrawShow(playerid,Textdraw25[playerid]);
						format(str,sizeof(str),"~y~Odmena: ~g~0$~n~~y~body: ~b~+0.0");
						PlayerTextDrawSetString(playerid,Textdraw25[playerid],str);
						SetVehicleVirtualWorld(MissionCar[playerid],4);
						SetVehicleHealth(MissionCar[playerid],350);
                        UpdateVehicleDamageStatus(MissionCar[playerid],1,1,1,random(15));
                        CreateCompleteMessage(playerid,"Mission Info","Dojed pro nepojizdne ~y~vozidlo",5);
						SetPlayerMapIcon(playerid,50,X,Y,Z,0,0xE2C063FF,MAPICON_GLOBAL);
					}
					switch(model)
					{
					    case 497,596..599,523,601,427:
					    {
						    if(GetPlayerJob(playerid) != 7) return SM(playerid,"Pro tuto misi musíte být zamìstnán jako "r"Policista");
						    if(WorkMission[playerid] > 0) return SM(playerid,"U si v misi, pouij "r"/zrusmisi");
							CheckZrusMisi(playerid);
						    if(GetPlayerWantedLevel(playerid) > 0) return SM(playerid,"Jste hledaný, nemùete plnit tuto misi");
						    WorkMission[playerid] = 7;
						    MissionTimeSeconds[playerid] = 60;
						    CreateCompleteMessage(playerid,"Mission Info","Jedte zatykat ~r~hledane ~w~hrace~n~~n~~y~Zatykani: ~g~/zat, ALT~n~~y~Pomucky: ~g~/Wanted",5);
						}
					}
					if(model == 416)
					{
					    if(GetPlayerJob(playerid) != 4) return SM(playerid,"Pro tuto misi musíte být zamìstnán jako "r"Zdravotník");
					    if(WorkMission[playerid] > 0) return SM(playerid,"U si v misi, pouij "r"/zrusmisi");
						CheckZrusMisi(playerid);
					    WorkMission[playerid] = 8;
					    MissionTimeSeconds[playerid] = 60;
					    CreateCompleteMessage(playerid,"Mission Info","Jedte udravovat ~r~zranene ~w~hrace~n~~n~~y~Uzdraveni: ~g~/uzdravit, ALT",5);
					}
				}
			}
		}
		if(PRESSED(KEY_ANALOG_DOWN) || PRESSED(KEY_ANALOG_UP))
		{
		    if(WorkMission[playerid] == 6)
		    {
		        new Float:X,Float:Y,Float:Z;
		        GetVehiclePos(MissionCar[playerid],X,Y,Z);
		        if(IsPlayerInRangeOfPoint(playerid,10,X,Y,Z))
		        {
		            AttachTrailerToVehicle(MissionCar[playerid],GetPlayerVehicleID(playerid));
			        if(WorkStatus[playerid] == 1)
			        {
			            WorkStatus[playerid] = 2;
			            MissionToEndTime[playerid] += 120;
			            new count = MissionsCount[playerid][6],level = GetPlayerMissionLevel(playerid,6);
			            if(count > 1000) count = 1000;
			            MissionPay[playerid] = 12000+level*9000;
						format(str,sizeof(str),"~y~Odmena: ~g~%s$~n~~y~body: ~b~+%0.1f",Split(MissionPay[playerid]),MissionPay[playerid]/10500.0);
						PlayerTextDrawSetString(playerid,Textdraw25[playerid],str);
						SetPlayerCheckpointEx(playerid,-2031.1364,175.0181,28.4625,5);
                        CreateCompleteMessage(playerid,"Mission Info","Dovez nepojizdne vozidlo do ~r~dilny",5);
						RemovePlayerMapIcon(playerid,50);
						GiveXP(playerid,50+level,"Pokrok v misi");
					}
		        }
		    }
		}
		if(PRESSED(KEY_YES))
		{
			if(Admin[playerid] > 0)
			{
				if(GetPlayerVirtualWorld(playerid) > 0)
				{
				    if(RacePlayer[playerid] == -1 && WorkMission[playerid] == 0 && !IsPlayerInAnyGarage(playerid) && pStunt[playerid][sStuntID] == -1 && !IsPlayerSupplyRun(playerid))
				    {
					    new Float:X,Float:Y,Float:Z;
					    new car = GetPlayerVehicleID(playerid);
					    GetVehicleVelocity(car,X,Y,Z);
					    SetVehicleVelocity(car,X,Y,Z+0.3);
					}
				}
			}
		}

 		if(PRESSED(KEY_NO))
		{
			if(Admin[playerid] > 0)
			{
				if(GetPlayerVirtualWorld(playerid) > 0)
				{
				    if(RacePlayer[playerid] == -1 && WorkMission[playerid] == 0 && !IsPlayerInAnyGarage(playerid) && pStunt[playerid][sStuntID] == -1 && !IsPlayerSupplyRun(playerid))
				    {
					    new Float:X,Float:Y,Float:Z;
					    new car = GetPlayerVehicleID(playerid);
					    GetVehicleVelocity(car,X,Y,Z);
					    SetVehicleVelocity(car,X*1.8,Y*1.8,Z*1.8);
					}
				}
			}
		}
  		if(PRESSED(KEY_ANALOG_DOWN))
		{
			if(Admin[playerid] > 0)
			{
				if(GetPlayerVirtualWorld(playerid) > 0)
				{
				    if(RacePlayer[playerid] == -1 && WorkMission[playerid] == 0 && !IsPlayerInAnyGarage(playerid) && pStunt[playerid][sStuntID] == -1)
				    {
					    SetVehicleVelocity(GetPlayerVehicleID(playerid),0,0,0);
						CreateInfoBox(playerid,"Vozidlo ~g~Zastaveno",3);
					}
				}
			}
		}
		if(PRESSED(KEY_NO))
		{
			if(IsPlayerInVehicle(playerid,ACAR[playerid]))
			{
				CreateInfoBox(playerid,"~r~Special Car ~w~uspesne zniceno",3);
				DestroyObject(ObjectOne[playerid]);
				DestroyObject(ObjectTwo[playerid]);
				DestroyObject(ObjectThree[playerid]);
				DestroyObject(ObjectFour[playerid]);
				DestroyObject(ObjectFive[playerid]);
				DestroyVehicle(ACAR[playerid]);
				ACAR[playerid] = 0;
				ObjectOne[playerid] = 0;
				ObjectTwo[playerid] = 0;
				ObjectThree[playerid] = 0;
				ObjectFour[playerid] = 0;
				ObjectFive[playerid] = 0;
			}
		}
		if(OnEvent[playerid] == false && InSumo[playerid] == false)
		{
	        if(PRESSED(KEY_ANALOG_UP))
			{
			    if(bOprava[playerid] == false && !MakesPlayerDrivingSchool(playerid) && RacePlayer[playerid] == -1 && !IsPlayerSupplyRun(playerid))
			    {
					if(AutRepair == 1) return SM(playerid,"Je zaplá automatická oprava");
					if(!IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Musí být ve vozidle");
					if(GetPlayerVehiclePancir(GetPlayerVehicleID(playerid)) > 1000) return SM(playerid,"Vozidlo s pancíøí nelze opravit");
					if(RepairTime[playerid] > 0)
					{
						format(str,sizeof(str),"Opravit vozidlo si znovu mùete za: "g"%02d "w": "g"%02d",RepairTime[playerid]/60,RepairTime[playerid]%60);
						SM(playerid,str);
						return 1;
					}
					if(vip[playerid] == 1)
					{
						RepairTime[playerid] = 30;
					}
					else if(vip[playerid] == 0)
					{
						RepairTime[playerid] = 60;
					}
				    format(str,sizeof(str),"Oprava: ~y~%02d:%02d",RepairTime[playerid]/60,RepairTime[playerid]%60);
				    TextDrawSetString(TDTimery[playerid][0],str);
					if(TD[playerid] == false)
					{
					    TextDrawShowForPlayer(playerid,TDTimery[playerid][0]);
					}
					SetTimerEx("UnBlockRepair",1000,false,"i",playerid);
					CreateInfoBox(playerid,"Vozidlo uspesne opraveno",5);
					RepairVehicle(GetPlayerVehicleID(playerid));
				    format(str,sizeof(str),"~w~%s ~g~%s ~w~si %s vozidlo.",TDPlayers(playerid),Jmeno(playerid),SexWord(playerid,"opravil","opravila"));
					AddStringToTextDraw(str);
				}
				return 0;
			}
			if(PRESSED(KEY_ANALOG_LEFT))
			{
			    if(bFlip[playerid] == false && !MakesPlayerDrivingSchool(playerid) && pStunt[playerid][sStuntID] == -1 && RacePlayer[playerid] == -1)
			    {
					new Float:Angle;
					IsNoVIP(playerid)
					if(!IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Musí být ve vozidle");
					GetVehicleZAngle(GetPlayerVehicleID(playerid),Angle);
					SetVehicleZAngle(GetPlayerVehicleID(playerid),Angle);
					CreateInfoBox(playerid,"Vozidlo uspesne pretoceno zpet na kola",5);
				}
    			return 0;
			}
/*	 		if(PRESSED(KEY_ANALOG_RIGHT))
			{
				IsNoVIP(playerid)
				if(!IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Musí být ve vozidle");
				AddVehicleComponent(GetPlayerVehicleID(playerid),1087);
				CreateInfoBox(playerid,"Uspesne jste si namontoval do vozidla ~r~Hydrauliku",5);
				return 0;
			}
*/		}
    }
	return 1;
}
//============================================================================//
public OnVehicleStreamIn(vehicleid, forplayerid)
{
	if(WorkMission[forplayerid] == 6)
	{
	    if(vehicleid == MissionCar[forplayerid])
	    {
	        SetVehicleParamsForPlayer(MissionCar[forplayerid],forplayerid,1,0);
	    }
	}
    return 1;
}
//============================================================================//
public OnPlayerUpdate(playerid)
{
	if(Spawned[playerid] == true && IsPlayerLogged(playerid))
	{
		if(AFK[playerid] == true)
	    {
	        if(AFKMoving[playerid] == 0)
	        {
				SetPlayerUnAFK(playerid);
			}
		}
		if(AFK[playerid] == false)
		{
			AFKTime[playerid] = 0;
		}
	}
	return 1;
}
//============================================================================//
forward OnPlayerSecondUpdate(playerid);

public OnPlayerSecondUpdate(playerid)
{
	CallRemoteFunction("Player_SecureCheck","i",playerid);
	if(Spawned[playerid] == true && IsPlayerLogged(playerid))
	{
		CallRemoteFunction("PlayerSecondTimer","i",playerid);
		CallRemoteFunction("Tachometr","i",playerid);
		SetPlayerScore(playerid,floatround(Points[playerid]));
		if(Player[playerid][pZrusMisiTime] > 0)
			Player[playerid][pZrusMisiTime] --;
		if(Player[playerid][pHide] > 0 && OnEvent[playerid] == false && InDM[playerid] == -1)
		{
			Player[playerid][pHide] --;
			if(Player[playerid][pHide] == 0)
			    UnhidePlayer(playerid);
		}
		if(GetPVarInt(playerid,"KostkaTime") > 0)
		{
		    SetPVarInt(playerid,"KostkaTime",GetPVarInt(playerid,"KostkaTime")-1);
		    if(GetPVarInt(playerid,"KostkaTime") == 0)
		    {
			    new id = GetPVarInt(playerid,"KostkaID"),text[145];
			    SetPVarInt(playerid,"KostkaID",-1);
			    format(text,sizeof(text),"Nepøíjmul si výzvu od hráèe "w"%s {B2FF00}na hod kostkou, hra se neuskuteèní",Jmeno(id));
			    SCM(playerid,0xB2FF00FF,text);
			    format(text,sizeof(text),"%s "w"%s {B2FF00}nepøíjmul výzvu na hod kostkou, hra se neuskuteèní",Players(playerid),Jmeno(playerid));
			    if(id != -1 && id < MAX_PLAYERS)
			    {
			        SCM(id,0xB2FF00FF,text);
			        SetPVarInt(id,"KostkaID",-1);
			    }
		    }
		}
		if(pStunt[playerid][sStuntID] != -1)
   		{
			if(pStunt[playerid][sTime] > 0 && IsPlayerInAnyVehicle(playerid))
		    {
		        pStunt[playerid][sTime] --;
		    }
		    else if(pStunt[playerid][sTime] <= 0)
		    {
		        LeaveStunt(playerid);
   		        SPD(playerid,UNNAMED+182,DIALOG_STYLE_MSGBOX,"Stunt","Doel vám èas, chcete to zkusit znovu?",""g"Ano","Ne");
		    }
		    if(pStunt[playerid][sTakeTime] > 0)
		    {
		        new name[10];
			    format(str,sizeof(str),"Zabirani~n~~r~%d sekund",pStunt[playerid][sTakeTime]);
			    format(name,sizeof(name),"Stunt %d",pStunt[playerid][sStuntID]+1);
				CreateCompleteMessage(playerid,name,str,3);
		        pStunt[playerid][sTakeTime]--;
		    }
		    else if(pStunt[playerid][sTakeTime] == 0)
		    {
		        new id = pStunt[playerid][sStuntID],text[125];
		     	DisablePlayerCheckpoint(playerid);
				if(pStunt[playerid][sStatus][id] == false)
				{
				    pStunt[playerid][sCompleted] ++;
				    pStunt[playerid][sStatus][id] = true;
				    GivePoints(playerid,10);
				    GiveXP(playerid,50,"Stunt dokoncen");
				    format(text,sizeof(text),"~g~Stunt %d ~w~dokoncen, ziskal jste ~b~10 bodù ~w~a ~y~50 XPù",pStunt[playerid][sStuntID]+1);
				}
				else
				{
				    format(text,sizeof(text),"~g~Stunt %d ~w~dokoncen, ziskal jste ~y~20XPù",pStunt[playerid][sStuntID]+1);
				    GiveXP(playerid,20,"Stunt dokoncen");
				}
				GivePlayerDailyValue(playerid,DAILY_TYPE_STUNTS,1);
				CreateCompleteMessage(playerid,"Stunt Complete",text,3);
				pStunt[playerid][sTotalCompleted]++;
				pStunt[playerid][sEachCompleted][id] ++;
				SetPlayerAchievementEx(playerid,STUNT_1,pStunt[playerid][sCompleted],1);
				SetPlayerAchievementEx(playerid,STUNT_10,pStunt[playerid][sCompleted],10);
				SetPlayerAchievementEx(playerid,STUNT_25,pStunt[playerid][sCompleted],25);
				SetPlayerAchievementEx(playerid,STUNT_50,pStunt[playerid][sCompleted],50);
				//SetPlayerAchievementEx(playerid,STUNT_75,pStunt[playerid][sCompleted],75);
				//SetPlayerAchievementEx(playerid,STUNT_100,pStunt[playerid][sCompleted],100);
				new query[150],Cache:cache;
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Stunts` WHERE `Nick`='%e' AND `StuntID`=%d",Jmeno(playerid),id);
				cache = mysql_query(mysql,query);
				if(!cache_get_row_count(mysql))
				    mysql_format(mysql,query,sizeof(query),"INSERT INTO `Stunts` (`Nick`,`StuntID`,`StuntCompleted`) VALUES ('%e',%d,%d)",Jmeno(playerid),id,pStunt[playerid][sEachCompleted][id]);
				else
					mysql_format(mysql,query,sizeof(query),"UPDATE `Stunts` SET `StuntCompleted`=%d WHERE `Nick`='%e' AND `StuntID` = %d",pStunt[playerid][sEachCompleted][id],Jmeno(playerid),id);
				mysql_query(mysql,query,false);
				cache_delete(cache,mysql);
				format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
				DOF2_SetInt(dfile,"Stunts",pStunt[playerid][sTotalCompleted]);
				DOF2_SaveFile();
				format(str,sizeof(str),"%s ~g~%s ~w~dokoncil ~r~stunt %d~w~.",Players(playerid),Jmeno(playerid),pStunt[playerid][sStuntID]+1);
				AddStringToTextDraw(str);
				LeaveStunt(playerid);
		    }
		}
/*		if(Packages[PackagesState] == true)
		{
		    new status = GetPVarInt(playerid,"PackageState");
			if(GetPlayerVirtualWorld(playerid) == Packages[PackagesVW])
			{
			    if(status == 0)
			    {
					format(str,sizeof(str),"Balicku: ~w~%d/%d",PlayerPackages[playerid][FindPackages],Packages[TotalPackages]);
					PlayerTextDrawSetString(playerid,Textdraw43[playerid],str);
					PlayerTextDrawShow(playerid,Textdraw43[playerid]);
					SetPVarInt(playerid,"PackageState",1);
			    }
			}
			else
			{
			    if(status == 1)
			    {
					PlayerTextDrawHide(playerid,Textdraw43[playerid]);
					SetPVarInt(playerid,"PackageState",0);
			    }
			}
		}
*/
	if(IsPlayerInNoKillZone(playerid))
	{
        if(GetPlayerWeapon(playerid) != 0)
        {
            SetPlayerArmedWeapon(playerid,0);
        }
        new car = GetPlayerVehicleID(playerid), model = GetVehicleModel(car);
		if(IsPlayerInAnyVehicle(playerid))
		{
		    switch(model)
		    {
				case 432,520,425,465,464:
				{
				    SetVehicleToRespawn(car);
				    SetVehiclePos(car,5000,5000,0);
				    CreateInfoBox(playerid,"Toto vozidlo neni v No Kill Zone povoleno, bylo respawnuto",8);
				}
			}
		}
	}
		if(OnEvent[playerid] == true)
		{
		    if(EventRadius > 0)
		    {
		        if(!IsPlayerInEventZone(playerid))
		        {
                    if(BackZoneTime[playerid] == 0)
                    {
                        BackZoneTime[playerid] = 11;
                    }
                    if(BackZoneTime[playerid] > 0)
                    {
                        BackZoneTime[playerid] --;
                        format(str,sizeof(str),"~w~Vrat se zpet do zony!~n~~r~%d",BackZoneTime[playerid]);
                        GameTextForPlayer(playerid,str,1200,4);
                        if(BackZoneTime[playerid] == 0)
                        {
                            CancelEvent(playerid,"Opustil zónu");
                        }
                    }
		        }
		        else
		        {
		            if(BackZoneTime[playerid] > 0){
		                BackZoneTime[playerid] = 0;}
		        }
		    }
		}
	    if(AntiPointsBug[playerid] > 0)
	    {
	        AntiPointsBug[playerid] --;
	    }
		if(HlaskaTime[playerid] > 0)
		{
		    HlaskaTime[playerid] --;
		}
		if(PlayedTimeNS[playerid]%10 == 0)
		{
			new oquery[250],Cache:ocache;
			mysql_format(mysql,oquery,sizeof(oquery),"SELECT * FROM `OnlineUsers` WHERE `Nick`='%e'",Jmeno(playerid));
			ocache = mysql_query(mysql,oquery);
			if(cache_get_row_count(mysql))
			{
			    new Float:X,Float:Y,Float:Z;
			    GetPlayerPos(playerid,X,Y,Z);
			    new car = GetPlayerVehicleID(playerid),model = -1;
			    if(car != 0)
			    {
			        model = GetVehicleModel(car);
			    }
			    mysql_format(mysql,oquery,sizeof(oquery),"UPDATE `OnlineUsers` SET `old_X`=%f,`old_Y`=%f,`X`=%f,`Y`=%f,`Z`=%f,`Money`=%d,`Points`=%f,`Vehicle`=%d,`Skin`=%d WHERE `Nick`='%e'",cache_get_field_content_float(0,"X"),cache_get_field_content_float(0,"Y"),X,Y,Z,GetMoney(playerid),Points[playerid],model,GetPlayerSkinEx(playerid),Jmeno(playerid));
				mysql_query(mysql,oquery,false);
			}
			cache_delete(ocache,mysql);
		}
		if(PropertyTakeTime[playerid] > 0)
		{
		    new pid = PropertyTakeID[playerid];
			if(IsPlayerInRangeOfPoint(playerid,20,Property[pid][PropertyX],Property[pid][PropertyY],Property[pid][PropertyZ]))
			{
			    if(GetPlayerJob(playerid) == 1 || GetPlayerJob(playerid) == 2)
			    {
					PropertyTakeTime[playerid] --;
					format(str,sizeof(str),"%s",SecondsToMinutes(PropertyTakeTime[playerid]));
					PlayerTextDrawSetString(playerid,Textdraw26[playerid],str);
					if(PropertyTakeTime[playerid] == 0)
					{
				        switch(GetPlayerJob(playerid))
				        {
				            case 1: GivePlayerDailyValue(playerid,DAILY_TYPE_MAFIA_TAKE,1);
				            case 2: GivePlayerDailyValue(playerid,DAILY_TYPE_YAKUZA_TAKE,1);
				        }
					    format(str,sizeof(str),"Mafián "w"%s "jc"pøebral pro Vai rodinu podnik "w"%s",Jmeno(playerid),Property[pid][PropertyName]);
					    SendJobMessage(GetPlayerJob(playerid),str);
						if(Property[pid][PropertyMafia] != 0)
						{
						    format(str,sizeof(str),"Mafián "w"%s "jc"pøebral Vaí rodinì podnik "w"%s",Jmeno(playerid),Property[pid][PropertyName]);
						    SendJobMessage(Property[pid][PropertyMafia],str);
						}
						Property[pid][PropertyTaken] = false;
						Property[pid][PropertyMafia] = GetPlayerJob(playerid);
						format(dfile,sizeof(dfile),"UnNamed/Properties/Property%d.txt",pid);
						if(fexist(dfile))
						{
						    DOF2_SetInt(dfile,"Mafia",Property[pid][PropertyMafia]);
						    DOF2_SaveFile();
						}
						UpdatePropertyText(pid);
					    PlayerTextDrawHide(playerid,Textdraw26[playerid]);
						PropertyTakeID[playerid] = 0;
						GivePlayerJobReward(playerid);
						CreateInfoBox(playerid,"Nemovitost úspìnì zabrána pro Vai rodinu",5);
					}
				}
				else
				{
					Property[pid][PropertyTaken] = false;
					PropertyTakeTime[playerid] = 0;
					PropertyTakeID[playerid] = 0;
				    PlayerTextDrawHide(playerid,Textdraw26[playerid]);
				    CreateInfoBox(playerid,"Musíte být zamìstnán u mafie",5);
				}
			}
			else
			{
				Property[pid][PropertyTaken] = false;
				PropertyTakeTime[playerid] = 0;
				PropertyTakeID[playerid] = 0;
			    PlayerTextDrawHide(playerid,Textdraw26[playerid]);
				CreateInfoBox(playerid,"Pøíli jste se vzdálil od nemovitosti",5);
			}
		}
		if(AFK[playerid] == false)
		{
		    if(GetPlayerState(playerid) != PLAYER_STATE_NONE)
		    {
			    PlayedTimeNS[playerid] ++;
			    if(PlayedTimeNS[playerid]%60 == 0)
				    GivePlayerDailyValue(playerid,DAILY_TYPE_TIME,1);
			    if(PlayedTimeNS[playerid] == 60*30)
			    {
			        PlayedTimeNS[playerid] = 0;
			        GiveXP(playerid,100+50*PlayedTimeMultipler[playerid],"odehrany cas");
			        PlayedTimeMultipler[playerid] ++;
			    }
			}
		}
		if(Holding[playerid] == true)
		{
			new keys,up,dwn;
			GetPlayerKeys(playerid,keys,up,dwn);
			if(keys == KEY_FIRE)
			{
				if(WorkMission[playerid] == 9)
				{
					if(IsValidPlayerObject(playerid,MissionObject[playerid]))
					{
						if(IsPlayerInAnyVehicle(playerid))
						{
							if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 407)
							{
							    new Float:X,Float:Y,Float:Z;
							    GetPlayerObjectPos(playerid,MissionObject[playerid],X,Y,Z);
							    if(IsPlayerInRangeOfPoint(playerid,20,X,Y,Z))
							    {
							        if(IsPlayerLookingAtPos(playerid,X,Y,Z))
							        {
							            if(WorkStatus[playerid] < 90)
							            {
								            WorkStatus[playerid] +=10;
								            format(str,sizeof(str),"Haseni.. ~r~%d ~w~%%",WorkStatus[playerid]);
								            CreateCompleteMessage(playerid,"Mission Info",str,2,false);
										}
										else
										{
										    WorkStatus[playerid] = 0;
										    DestroyPlayerObject(playerid,MissionObject[playerid]);
										    DisablePlayerCheckpoint(playerid);
										    MissionObject[playerid] = 0;
										    new Float:points = (MissionPay[playerid]/12500.0),cash = MissionPay[playerid];
										    format(str,sizeof(str),"Mise dokoncena, dostavate odmenu: ~g~%s$ ~w~+ ~b~%0.1f bodu~n~~w~pokracujte k dalsimu ~r~pozaru",Split(cash),points);
								            CreateCompleteMessage(playerid,"Mise Splnena",str,5,false);
								            GivePlayerDailyValue(playerid,DAILY_TYPE_MISSION_HASIC,1);
								            GivePlayerVyplata(playerid,cash);
								            GivePlayerJobPoints(playerid,1);
								            GivePoints(playerid,points);
								            CreateFire(playerid);
								            new count = MissionsCount[playerid][9];
								            if(count > 1000) count = 1000;
								            GiveXP(playerid,60+GetPlayerMissionLevel(playerid,9)*19,"splena mise: ~w~pozarnik");
											MiseCompleted[playerid]++;
											format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
											DOF2_SetInt(dfile,"MiseCompleted",MiseCompleted[playerid]);
							                DOF2_SaveFile();
							                MissionsCount[playerid][9] ++;
						                	MissionAchievement(playerid);
										}
							        }
							    }
							}
						}
					}
				}
			}
		}
		if(GetPlayerState(playerid) == PLAYER_STATE_WASTED)
		{
			PlayerTextDrawSetString(playerid,Textdraw38[playerid],"_");
			PlayerTextDrawSetString(playerid,Textdraw39[playerid],"_");
		}
		if(WorkMission[playerid] == 9)
		{
		    MissionTimeSeconds[playerid] --;
		    PlayerTextDrawSetString(playerid,Textdraw26[playerid],SecondsToMinutes(MissionTimeSeconds[playerid]));
		    if(MissionTimeSeconds[playerid] == 0)
		    {
		        EndMission(playerid,"dosel vam cas");
		    }
		}
		if(DMRoundKillTime[playerid] > 0)
		{
		    DMRoundKillTime[playerid] --;
		    if(DMRoundKillTime[playerid] == 0)
		    {
		        DMRoundKills[playerid] = 0;
		    }
		}
		if(MusicLenght[playerid] > 0)
		{
		    MusicLenght[playerid] --;
			if(MusicLenght[playerid] == 0)
			{
			    MusicID[playerid] = 0;
			    if(AutoPlay[playerid] == 1)
			    {
					new query[100],Cache:cache;
					mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Music` WHERE `MUSIC_HIDE` IS NULL ORDER BY `MUSIC_PLAYED` DESC, `MUSIC_TIME` DESC");
					cache = mysql_query(mysql,query);
					PlaySong(playerid,random(cache_get_row_count(mysql)));
					cache_delete(cache,mysql);
			    }
			}
		}
		if(AFK[playerid] == false)
		{
			if(XPBoostSeconds[playerid] > 0)
			{
			    XPBoostSeconds[playerid] --;
			    if(XPBoostSeconds[playerid] == 60*60)
			    {
			        SM(playerid,"Do konce XP boostu zbývá 1 hodina");
			    }
			    if(XPBoostSeconds[playerid] == 60*30)
			    {
			        SM(playerid,"Do konce XP boostu zbývá 30 minut");
			    }
			    if(XPBoostSeconds[playerid] == 60*15)
			    {
			        SM(playerid,"Do konce XP boostu zbývá 15 minut");
			    }
			    if(XPBoostSeconds[playerid] == 60*5)
			    {
			        SM(playerid,"Do konce XP boostu zbývá 5 minut");
			    }
			    if(XPBoostSeconds[playerid] == 60)
			    {
			        SM(playerid,"Do konce XP boostu zbývá 1 minuta");
			    }
			    if(XPBoostSeconds[playerid] == 0)
			    {
					SM(playerid,"Vá XP Boost vyprel");
					XPBoostSeconds[playerid] = 0;
					XPBoostPercent[playerid] = 0;
			    }
			}
		}
		if(AFK[playerid] == true)
		{
		    if(AFKTime[playerid] == 60*MAX_AFK_TIME)
		    {
		        SetPlayerUnAFK(playerid);
		        format(str,sizeof(str),"%s "w"%s "r"byl vyhozen za %d minut neaktivity",Players(playerid),Jmeno(playerid),MAX_AFK_TIME);
		        SCMTA(red,str);
				KickPlayerAfterTime(playerid,30);
		    }
		}
		if(GetPlayerState(playerid) != PLAYER_STATE_WASTED)
		{
			if(OnEvent[playerid] == false)
			{
				switch(GetPlayerState(playerid))
				{
				    case 1..3,9:
				    {
					    if(IsPlayerInRangeOfPoint(playerid,2,AFKPos[playerid][0],AFKPos[playerid][1],AFKPos[playerid][2]))
					    {
					        AFKTime[playerid] ++;
							if(AFK[playerid] == false)
							{
								if(RobTime[playerid] <= 0)
								{
				        			AFKMoving[playerid] ++;
								}
							}
						}
					    else
					    {
					        AFKMoving[playerid] = 0;
					    }
						if(AFKMoving[playerid] == 60)
						{
						    if(AFK[playerid] == false)
						    {
						        AFKTime[playerid] = 60;
								SetPlayerAFK(playerid);
						    }
						}
				        if(AFKTime[playerid] == 10)
				        {
							if(AFK[playerid] == false)
							{
								SetPlayerAFK(playerid);
								AFKMoving[playerid] = 0;
							}
						}
					    GetPlayerPos(playerid,AFKPos[playerid][0],AFKPos[playerid][1],AFKPos[playerid][2]);
					}
				}
			}
		    if(SpectatePlayer[playerid] != -1)
		    {
		        new id = SpectatePlayer[playerid],text[500],string[145],country[MAX_COUNTRY_NAME],Float:HP,Float:AM,Float:vHP;
		        if(IPC(id))
		        {
		            format(string,sizeof(string),Jmeno(id));
		            FixTextDrawFont2(string);
		        	PlayerTextDrawSetString(playerid,Textdraw40[playerid],string);
	    	        GetPlayerCountry(id,country,sizeof(country));
		        	format(string,sizeof(string),"~w~IP:~r~ %s~n~",GetIP(id));
		        	strcat(text,string);
		        	format(string,sizeof(string),"~w~Stat:~r~ %s~n~",country);
		        	strcat(text,string);
					format(string,sizeof(string),"~w~Pocet uctu:~r~ %d~n~",TotalAccounts[id]);
		        	strcat(text,string);
		        	format(string,sizeof(string),"~w~Status:~r~ %s~n~",GetPlayerStatus(id));
		        	strcat(text,string);
		        	format(string,sizeof(string),"~w~Virtual World:~r~ %d~n~",GetPlayerVirtualWorld(id));
		        	strcat(text,string);
		        	GetPlayerHealth(id,HP);
		        	GetPlayerArmour(id,AM);
		        	new hptext[10];
		        	if(GOD[id] == true) hptext = "GOD";
		        	else if(AntiSK[id] > 0) hptext = "Anti SK";
		        	else format(hptext,sizeof(hptext),"%0.1f",HP);
		        	format(string,sizeof(string),"~w~Zivoty:~r~ %s~n~~w~Vesta:~r~ %0.1f~n~~n~",hptext,AM);
		        	strcat(text,string);
		        	if(GetPlayerInterior(id) != SpectateInt[playerid])
		        	{
		        	    SetPlayerInterior(playerid,GetPlayerInterior(id));
		        	    SpectateInt[playerid] = GetPlayerInterior(id);
						PlayerSpectatePlayerEx(playerid,id);
					}
					if(GetPlayerVirtualWorld(id) != SpectateVW[playerid])
					{
					    SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
					    SpectateVW[playerid] = GetPlayerVirtualWorld(id);
						PlayerSpectatePlayerEx(playerid,id);
					}
		        	if(IsPlayerInAnyVehicle(id))
		        	{
		        	    GetVehicleHealth(GetPlayerVehicleID(id),vHP);
		        	    format(string,sizeof(string),"~w~Vozidlo: ~r~%s~n~~w~Stav vozidla: ~r~%0.1f %~n~~w~Rychlost: ~r~%d KM/H",GetVehicleNameByCarID(GetVehicleModel(GetPlayerVehicleID(id))),vHP/10,GetPlayerSpeed(id));
						strcat(text,string);
						if(SpectatePlayerType[playerid] == 0)
						{
							PlayerSpectatePlayerEx(playerid,id);
						}
					}
					else
					{
					    if(SpectatePlayerType[playerid] == 1)
					    {
							PlayerSpectatePlayerEx(playerid,id);
					    }
					}
					TextDrawDiakritika(text);
		        	PlayerTextDrawSetString(playerid,Textdraw41[playerid],text);
				}
				else
				{
				    CallLocalFunction("cmd_specoff","i",playerid);
				}
			}
		    if(OnEvent[playerid] == true)
		    {
		        if(RunEvent == 6)
		        {
		            new Float:Pos[3];
		            GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
		            if(Pos[2] <= 33-5 || !IsPlayerInRangeOfPoint(playerid,75,2387.9773,1123.2028,33.9812))
		            {
		                LoadBeforeEventData(playerid);
		                CancelEvent(playerid,SexWord(playerid,"Vypadl","Vypadla"));
		            }
		        }
		    }
		    for(new x; x <= GetPlayerPoolSize(); x ++)
		    {
		        if(IPC(x))
		        {
				    for(new i; i < MAX_SLOTS; i ++)
				    {
				        if(IsPlayerInVehicle(playerid,SavedCar[x][i]))
				        {
				            if(ParkInfo[x][i][pPancir] > 1000)
				            {
				                new Float:vHealth;
				                GetVehicleHealth(SavedCar[x][i],vHealth);
			                    if(vHealth < 250)
			                    {
			                        ParkInfo[x][i][pPancir] -= 249.0;
			                    }
								else
								{
								    ParkInfo[x][i][pPancir] = vHealth;
								}
								RepairVehicle(SavedCar[x][i]);
								SetVehicleHealth(SavedCar[x][i],ParkInfo[x][i][pPancir]);
							}
				            break;
				        }
				    }
				}
			}
			new Float:Pos[3];
			GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
			if(AntiSK[playerid] > 1)
			{
				if(!IsPlayerInRangeOfPoint(playerid,5,SpawnPos[playerid][0],SpawnPos[playerid][1],SpawnPos[playerid][2]))
				{
				    AntiSK[playerid] --;
				    if(AntiSK[playerid] == 1)
				    {
						CancelAntiSK(playerid,true);
						for(new i; i < 3; i ++)
						{
						    SpawnPos[playerid][i] = 0.0;
						}
					}
				}
			}
			if(AntiSK[playerid] == 10)
			{
			    GetPlayerPos(playerid,SpawnPos[playerid][0],SpawnPos[playerid][1],SpawnPos[playerid][2]);
			}
			new Float:Health,Float:Armour,hptext[10];
			GetPlayerHealth(playerid,Health);
			GetPlayerArmour(playerid,Armour);
			if(Hitted[playerid] > 0)
			{
			    Hitted[playerid] --;
				if(Hitted[playerid] <= 0)
					HittedPL[playerid] = -1;
			}
			else
			{
			    if(InDM[playerid] != -1)
			    {
					if(Health < 100)
					{
						new rand = 2 + random(3);
						if(Health + rand > 100)
						{
							SetPlayerHealth(playerid,100);
						}
	     				else
						{
						 	SetPlayerHealth(playerid,Health+rand);
						}
					}
			    }
			}
			if(Health > 100)
			{
				PlayerTextDrawSetString(playerid,Textdraw38[playerid],"N");
			}
			else
			{
				format(hptext,sizeof(hptext),"%.0f",Health);
				PlayerTextDrawSetString(playerid,Textdraw38[playerid],hptext);
			}
			if(Armour == 0)
			{
				PlayerTextDrawSetString(playerid,Textdraw39[playerid],"_");
			}
			else
			{
				format(hptext,sizeof(hptext),"%.0f",Armour);
				PlayerTextDrawSetString(playerid,Textdraw39[playerid],hptext);
			}
			if(InDM[playerid] != -1)
			{
			    format(str,sizeof(str),"~g~Zabiti: ~w~%d ~y~ / ~r~Umrti: ~w~%d",DMKills[playerid],DMDeaths[playerid]);
			    PlayerTextDrawSetString(playerid,Textdraw33[playerid],str);
			    format(str,sizeof(str),"Pocet hracu: ~y~%d",DM[InDM[playerid]][DMPlayers]);
			    PlayerTextDrawSetString(playerid,Textdraw34[playerid],str);
			    format(str,sizeof(str),"Score: ~y~%d",DMScore[playerid]);
			    PlayerTextDrawSetString(playerid,Textdraw37[playerid],str);
			}
		    if(WorkMission[playerid] == 7 || WorkMission[playerid] == 8)
		    {
				MissionTimeSeconds[playerid] --;
				if(MissionTimeSeconds[playerid] == 0)
				{
				    EndMission(playerid,"Vystoupil jste z vozidla");
				}
				if(IsPlayerInAnyVehicle(playerid))
		        {
		    		new model = GetVehicleModel(GetPlayerVehicleID(playerid));
					if(WorkMission[playerid] == 7)
					{
					    switch(model)
					    {
					        case 497,596..599,523,601,427:
					        {
					            MissionTimeSeconds[playerid] = 30;
		                    }
					    }
					}
					else if(WorkMission[playerid] == 8)
					{
					    if(model == 416)
					    {
				            MissionTimeSeconds[playerid] = 30;
					    }
					}
				}
			}
			if(PrisonTime[playerid] > 0)
		    {
		        PrisonTime[playerid] --;
		        if(PrisonTime[playerid] > 0)
		        {
			        format(str,sizeof(str),"%02d:%02d",PrisonTime[playerid]/60,PrisonTime[playerid]%60);
			        PlayerTextDrawSetString(playerid,Textdraw26[playerid],str);
				}
				else if(PrisonTime[playerid] == 0)
				{
					PlayerTextDrawHide(playerid,Textdraw26[playerid]);
					SetPlayerPos(playerid,2289.9192,2429.6807,10.8203);
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					CreateInfoBox(playerid,"Byl jste propusten z vezeni",5);
				}
				if(!IsPlayerInRangeOfPoint(playerid,5,264.6310,77.4839,1001.0391))
				{
					SetPlayerWantedLevel(playerid,0);
				    SetPlayerPos(playerid,264.6310,77.4839,1001.0391);
				    SetPlayerInterior(playerid,6);
				    SetPlayerVirtualWorld(playerid,10);
				}
		    }
		    if(AntiSK[playerid] > 0)
		    {
		        if(GetPlayerWeapon(playerid) != 0)
		        {
					SetPlayerArmedWeapon(playerid,0);
		        }
		    }
			if(GetPlayerSpeed(playerid) - PlayerSpeed[playerid] > 80)
			{
				if(Admin[playerid] == 0)
				{
				    if(GetPlayerSpeed(playerid) != GetPlayerSpeed(playerid)-PlayerSpeed[playerid])
				    {
				        if(AFK[playerid] == false)
				        {
						    format(str,sizeof(str),"{9800FF}%s "w"%s (%d) {9800ff}má pravdìpodobnì Speed-Hack [ "w"%d KM/H | Zrychlení: %d KM/H {9800ff}]",Players(playerid),Jmeno(playerid),playerid,GetPlayerSpeed(playerid),GetPlayerSpeed(playerid) - PlayerSpeed[playerid]);
							SendAdminMessage(str);
						}
					}
				}
			}
			PlayerSpeed[playerid] = GetPlayerSpeed(playerid);
			if(EventDL[playerid] == true)
			{
				if(OnEvent[playerid] == true)
				{
			    	SetPlayerDrunkLevel(playerid,50000);
				}
			}
			if(IsPlayerInAnyVehicle(playerid))
			{
				if(AutRepair == 1 || AR[playerid] == true || GOD[playerid] == true)
				{
				    if(GOD[playerid] == true)
				    {
		    		    SetPlayerHealth(playerid,100000);
					    SetPlayerArmedWeapon(playerid,0);
				    }
				    if(GetPlayerVehiclePancir(GetPlayerVehicleID(playerid)) < 1000)
				    {
						RepairVehicle(GetPlayerVehicleID(playerid));
						SetVehicleHealth(GetPlayerVehicleID(playerid),10000);
					}
				}
				if(RacePlayer[playerid] > -1)
				{
				    if(Race[RacePlayer[playerid]][CPAR] == 1)
				    {
						RepairVehicle(GetPlayerVehicleID(playerid));
						SetVehicleHealth(GetPlayerVehicleID(playerid),10000);
				    }
				}
			}
			if(OnEvent[playerid] == false && InDM[playerid] == -1)
			{
			    new color = GetPlayerColor(playerid);
				if(vip[playerid] > 0)
				{
					if(FlashNick[playerid] == false)
					{
						if(Color[playerid] != 0)
						{
						    color = Color[playerid];
						    SetPlayerColor(playerid,color);
						}
					}
					else
					{
					    if(Player[playerid][pHide] <= 0)
					    {
							new colors[] =
							{
							    red,yellow,green,cyan,blue,0xFF0077FF,0x0065FFFF,0xCCFF00FF,0xFF3200FF,0xBF00FFFF
							};
							color = colors[random(sizeof(colors))];
						}
					}
				}
				for(new i; i <= GetPlayerPoolSize(); i ++)
				{
				    if(IPC(i) && !IsPlayerNPC(i))
				    {
				        if(i != playerid)
				        {
				            if(Player[i][pHide] <= 0)
				            {
							    if(WorkMission[i] == 7)
							    {
							        if(GetPlayerWantedLevel(playerid) > 0)
							        {
							            SetPlayerMarkerForPlayer(i,playerid,red);
							        }
/*							        else
							        {
							            SetPlayerMarkerForPlayer(i,playerid,green);
							        }
*/							    }
							    else if(WorkMission[i] == 8)
							    {
							        new Float:HP;
							        GetPlayerHealth(playerid,HP);
							        if(HP < 100.0 && MissionLastCustomer[i][playerid] == false)
							        {
							            SetPlayerMarkerForPlayer(i,playerid,red);
							        }
/*									else
									{
							            SetPlayerMarkerForPlayer(i,playerid,green);
									}
*/							    }
							    else
							    {
				                	SetPlayerMarkerForPlayer(i,playerid,color);
								}
							}
		 				}
					}
				}
			}
		}
	}
	return 1;
}
//============================================================================//
public OnPlayerExitVehicle(playerid, vehicleid)
{
	if(InSumo[playerid] == true)
	{
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid,X,Y,Z);
		SetPlayerPos(playerid,X,Y,Z+3);
		PutPlayerInVehicle(playerid,SumoVehicle[playerid],0);
	}
	if(WorkMission[playerid] > 0 && WorkMission[playerid] != 3 && WorkMission[playerid] != 7 && WorkMission[playerid] != 8)
	{
		EndMission(playerid,"vystoupil si z vozidla");
		Player[playerid][pZrusMisiTime] = 30;
	}
	if(RacePlayer[playerid] > -1)
	{
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid,X,Y,Z);
		SetPlayerPos(playerid,X,Y,Z+3);
		PutPlayerInVehicle(playerid,Ecar[playerid],0);
	}
	if(OnEvent[playerid] == true)
	{
	    if(RunEvent != 7 && RunEvent != 8 && RunEvent != 12)
	    {
		    LoadBeforeEventData(playerid);
			CancelEvent(playerid,SexWord(playerid,"Vystoupil z vozidla","Vystoupila z vozidla"));
		}
	}
	return 1;
}
//============================================================================//
public OnVehicleDeath(vehicleid,killerid)
{
	if(Locked[vehicleid] > -1)
	{
	    Locked[vehicleid] = -1;
	}
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
		if(IPC(i) && !IsPlayerNPC(i))
		{
/*
		    for(new x; x < MAX_SLOTS; x ++)
		    {
		        if(vehicleid == SavedCar[i][x])
		        {
					if(ParkInfo[i][x][pPancir] > 1000)
					{
					    ParkInfo[i][x][pPancir] = 0.0;
					}
		        }
		    }
*/
		    if(PLocked[i] == vehicleid)
		    {
		        PLocked[i] = -1;
		    }
		    if(WorkMission[i] == 6)
		    {
				if(vehicleid == MissionCar[i])
				{
				    EndMission(i,"Vozidlo vybuchlo");
				}
		    }
		}
	}
	return 1;
}
//============================================================================//
public OnVehicleSpawn(vehicleid)
{
	if(Locked[vehicleid] > -1)
	{
	    Locked[vehicleid] = -1;
	}
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
		if(IPC(i))
		{
		    if(PLocked[i] == vehicleid)
		    {
		        PLocked[i] = -1;
		    }
			for(new x; x < MAX_SLOTS; x ++)
			{
				if(vehicleid == SavedCar[i][x])
				{
					if(strlen(ParkInfo[i][x][SPZ]) != 0)
					{
						SetVehicleNumberPlate(SavedCar[i][x],ParkInfo[i][x][SPZ]);
					}
					TuneCar(i,x);
				}
			}
		}
	}
	if(vehicleid == SumoCar[0] || vehicleid == SumoCar[1])
	{
		SetVehicleVirtualWorld(SumoCar[0],1);
		SetVehicleVirtualWorld(SumoCar[1],1);
	}
	if(Neony[vehicleid] == 1)
	{
		DestroyObject(Neon1[vehicleid]);
		DestroyObject(Neon2[vehicleid]);
        Neon1[vehicleid] = 0;
        Neon2[vehicleid] = 0;
		Neony[vehicleid] = 0;
	}
	return 1;
}
//============================================================================//
public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	for(new i; i < MAX_SLOTS; i ++)
	{
	    if(IsPlayerInVehicle(playerid,SavedCar[playerid][i]))
	    {
			ParkInfo[playerid][i][PaintJob] = paintjobid;
		}
	}
	return 1;
}
//============================================================================//
public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	for(new i; i < MAX_SLOTS; i ++)
	{
	    if(IsPlayerInVehicle(playerid,SavedCar[playerid][i]))
	    {
			ParkInfo[playerid][i][Color1] = color1;
			ParkInfo[playerid][i][Color2] = color2;
		}
	}
	return 1;
}
//============================================================================//
public OnVehicleSirenStateChange(playerid,vehicleid,newstate)
{
	if(IsPlayerInVehicle(playerid,ACAR[playerid]))
	{
		if(newstate)
		{
			DestroyObject(ObjectOne[playerid]);
			ObjectOne[playerid] = 0;
			ObjectOne[playerid] = CreateObject(11701, 0, 0, 0, 0, 0, 0);
			AttachObjectToVehicle(ObjectOne[playerid],GetPlayerVehicleID(playerid) , 0.000000, -0.5, 0.59, 0.000000, 0.000000, 0.000000); //Object Model: 19419 |
		}
		else
		{
			DestroyObject(ObjectOne[playerid]);
			ObjectOne[playerid] = 0;
			ObjectOne[playerid] = CreateObject(11702, 0, 0, 0, 0, 0, 0);
			AttachObjectToVehicle(ObjectOne[playerid],GetPlayerVehicleID(playerid) , 0.000000, -0.5, 0.59, 0.000000, 0.000000, 0.000000); //Object Model: 19419 |
		}
	}
	return 1;
}
//============================================================================//
public OnVehicleMod(playerid,vehicleid,componentid)
{
	AntiCrasher[playerid] ++;
	if(AntiCrasher[playerid] == 1)
	{
	    SetTimerEx("UnloadCrasher",1000,false,"i",playerid);
	}
	else if(AntiCrasher[playerid] >= 10)
	{
		format(str,sizeof(str),"[ Anti - Cheat ] %s "w"%s "r"byl vyhozen ze serveru za "w"Crasher",Players(playerid),Jmeno(playerid));
		SCMTA(red,str);
		SpecialKick(playerid,BOT_NAME,"Crasher");
		Kick(playerid);
	}
	return 1;
}
//============================================================================//
forward UnloadCrasher(playerid);

public UnloadCrasher(playerid)
{
	AntiCrasher[playerid] = 0;
	return 1;
}
//============================================================================//
public OnPlayerSpawn(playerid)
{
	if(playerid == botid)
		printf("bot spawned");
	if(PlayerWeather[playerid] != -1)
	    SetPlayerWeather(playerid,PlayerWeather[playerid]);
	else
	    SetPlayerWeather(playerid,serverweather);
	if(IsPlayerNPC(playerid))
 	{
	    if(strcmp(Jmeno(playerid),BOT_NAME,false) == 0)
		{
		    SetPlayerSkin(playerid,185);
		    SetPlayerPos(playerid,1311.8816,725.3036,10.8525);
		    SetPlayerFacingAngle(playerid,268.5599);
		    GivePlayerWeapon(playerid,38,1000);
		}
	}
	Hitted[playerid] = 0;
	HittedPL[playerid] = -1;
	new query[500],rows,Cache:cache;
	if(OnEvent[playerid] == true)
	{
	    if(RunEvent != 10 && RunEvent != 11)
			CancelEvent(playerid,"Smrt");
	}
	if(RacePlayer[playerid] > -1)
	{
		PlayerCP[playerid] = 0;
		RaceSeconds[playerid] = 0;
		RaceMinutes[playerid] = 0;
		TextDrawHideForPlayer(playerid,Textdraw20);
		PlayerTextDrawHide(playerid,Textdraw22[playerid]);
		PlayerTextDrawHide(playerid,Textdraw23[playerid]);
		TextDrawHideForPlayer(playerid,Textdraw21);
		PlayerTextDrawHide(playerid,Textdraw24[playerid]);
		DisableRemoteVehicleCollisions(playerid,0);
	    RacePlayers[RacePlayer[playerid]]--;
	    DestroyVehicle(Ecar[playerid]);
	    Ecar[playerid] = 0;
	    SetPlayerVirtualWorld(playerid,0);
		DisablePlayerRaceCheckpoint(playerid);
	    if(RacePlayers[RacePlayer[playerid]] <= 0)
	    {
			pozice[RacePlayer[playerid]] = 0;
			RaceReady[RacePlayer[playerid]] = false;
			RaceStart[RacePlayer[playerid]] = false;
			RacePlayers[RacePlayer[playerid]] = 0;
			TimeToStartSeconds[RacePlayer[playerid]] = 0;
	    }
	    SpawnPlayer(playerid);
		RacePlayer[playerid] = -1;
		format(str,sizeof(str),"%s "w"%s "sb"%s závod "g"[ Smrt ]"sb".",Players(playerid),Jmeno(playerid),SexWord(playerid,"opustil","opustila"));
		SCMTA(sblue,str);
	}
	if(!IsPlayerLogged(playerid) && !IsPlayerNPC(playerid))
	{
	    SM(playerid,"Prosím pøihlate se pøes dialog");
	    return 0;
	}
	if(Spawned[playerid] == false)
	{
		new Nazev[50],bool:soutez = true;
	    cache = mysql_query(mysql,"SELECT * FROM `Soutez` WHERE `Active` = 1");
		cache_get_field_content(0,"Nazev",Nazev,mysql,sizeof(Nazev));
		if(strcmp(Nazev,"NULL",true) == 0 || gettime() < cache_get_field_content_int(0,"Start",mysql) || gettime() > cache_get_field_content_int(0,"End",mysql))
		{
			soutez = false;
		}
		if(soutez == true)
		{
		    format(str,sizeof(str),"[ TIP ] {C700FF}Právì probíhá soutì "g"%s {C700FF}pøipojte se "g"/soutez.",Nazev);
			SCM(playerid,yellow,str);
		}
		cache_delete(cache,mysql);

	    PlayerTextDrawShow(playerid,Textdraw38[playerid]);
	    PlayerTextDrawShow(playerid,Textdraw39[playerid]);
	    mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Vybava` WHERE `nick`='%e'",Jmeno(playerid));
	    cache = mysql_query(mysql,query);
		rows = cache_get_row_count(mysql);
		if(rows)
		{
		    for(new i; i < rows; i ++)
		    {
		        new vybavaid = cache_get_field_content_int(i,"vybava");
		        cache_get_field_content(i,"vybava_nazev",pVybava[playerid][vybavaid][vybName],mysql,24);
		        for(new x; x < MAX_VYBAVA_SLOTS; x ++)
		        {
	                if(!IsVybavaSlotBlocked(x))
	                {
						new text[10];
						format(text,sizeof(text),"slot%d",x);
						pVybava[playerid][vybavaid][vybID][x] = cache_get_field_content_int(i,text);
					}
				}
		    }
		}
		else
		{
		    DefaultSpawnEquip(playerid);
		}
	    cache_delete(cache,mysql);
/*		mysql_format(mysql,query,sizeof(query),"SELECT * FROM `EliteProps` WHERE `Nick`='%e' LIMIT %d",Jmeno(playerid),MAX_EPROP_PER_PLAYER);
		cache = mysql_query(mysql,query);
		for(new i; i <cache_get_row_count(mysql); i ++)
		{
			Player[playerid][eProp][i] = cache_get_field_content_int(i,"ElitePropID",mysql);
		}
		cache_delete(cache,mysql);
*/		new file2[50];
		format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
		format(file2,sizeof(file2),"%s.txt",Jmeno(playerid));
		if(fexist(dfile))
		{
			DOF2_SetString(dfile,"IP",GetIP(playerid));
			format(Hodnost[playerid],sizeof(Hodnost),"%s",DOF2_GetString(dfile,"Hodnost"));
			Points[playerid] = DOF2_GetFloat(dfile,"Body");
			Admin[playerid] = DOF2_GetInt(dfile,"Admin Level");
			vip[playerid] = DOF2_GetInt(dfile,"VIP");
			Naboje[playerid] = DOF2_GetInt(dfile,"Naboje");
			Kicks[playerid] = DOF2_GetInt(dfile,"LastKickID");
			Bans[playerid] = DOF2_GetInt(dfile,"LastBanID");
			TBans[playerid] = DOF2_GetInt(dfile,"LastTBanID");
			Vars[playerid] = DOF2_GetInt(dfile,"Vars");
			WinPostrehy[playerid] = DOF2_GetInt(dfile,"WinPostrehy");
			EventsWins[playerid] = DOF2_GetInt(dfile,"Vyhry");
		    Kills[playerid] = DOF2_GetInt(dfile,"Kills");
			Deaths[playerid] = DOF2_GetInt(dfile,"Deaths");
		    DuelWins[playerid] = DOF2_GetInt(dfile,"DuelWins");
			DuelLose[playerid] = DOF2_GetInt(dfile,"DuelLose");
			MiseCompleted[playerid] = DOF2_GetInt(dfile,"MiseCompleted");
			BlockedStream[playerid] = DOF2_GetInt(dfile,"Stream");
			SumoWins[playerid] = DOF2_GetInt(dfile,"SumoWins");
			SumoLose[playerid] = DOF2_GetInt(dfile,"SumoLose");
			RaceWins[playerid] = DOF2_GetInt(dfile,"RaceWins");
			Donate[playerid] = DOF2_GetFloat(dfile,"Donate");
			Robs[playerid] = DOF2_GetInt(dfile,"Vykradl");
			XP[playerid] = DOF2_GetInt(dfile,"XP");
			Level[playerid] = DOF2_GetInt(dfile,"Level");
			SpawnType[playerid] = DOF2_GetInt(dfile,"SpawnType");
			PMSounds[playerid] = DOF2_GetBool(dfile,"PMSounds");
			Sex[playerid] = DOF2_GetInt(dfile,"Sex");
			bOprava[playerid] = DOF2_GetBool(dfile,"bOprava");
			bFlip[playerid] = DOF2_GetBool(dfile,"bFlip");
			HitSound[playerid] = DOF2_GetBool(dfile,"HitSound");
			BlockedKostka[playerid] = DOF2_GetBool(dfile,"bKostka");
			AutoBank[playerid] = DOF2_GetBool(dfile,"AutoBank");
			RealnyTime[playerid] = DOF2_GetBool(dfile,"RealTime");
			UseLastPos[playerid] = DOF2_GetBool(dfile,"LastPos");
			LastX[playerid] = DOF2_GetFloat(dfile,"LastX");
			LastY[playerid] = DOF2_GetFloat(dfile,"LastY");
			LastZ[playerid] = DOF2_GetFloat(dfile,"LastZ");
			LastInt[playerid] = DOF2_GetInt(dfile,"LastInt");
			PrisonTime[playerid] = DOF2_GetInt(dfile,"Jail");
			DMKillsTotal[playerid] = DOF2_GetInt(dfile,"DMKills");
			DMDeathsTotal[playerid] = DOF2_GetInt(dfile,"DMDeaths");
			DMScore[playerid] = DOF2_GetInt(dfile,"DMScore");
			XPBoostPercent[playerid] = DOF2_GetInt(dfile,"XPBoostPercent");
			XPBoostSeconds[playerid] = DOF2_GetInt(dfile,"XPBoostSeconds");
			Legend[playerid] = DOF2_GetBool(dfile,"Legend");
			pStunt[playerid][sTotalCompleted] = DOF2_GetInt(dfile,"Stunts");
			MinceWin[playerid] = DOF2_GetInt(dfile,"MinceWin");
			MinceLose[playerid] = DOF2_GetInt(dfile,"MinceLose");
			NextHod[playerid] = DOF2_GetInt(dfile,"NextHod");
			Player[playerid][pAFKTimeTotal] = DOF2_GetInt(dfile,"AFK");
			format(Player[playerid][pMail],50,DOF2_GetString(dfile,"Mail"));
			Player[playerid][pZrusMisiTime] = DOF2_GetInt(dfile,"ZrusMisiTime");
			Player[playerid][pHide] = DOF2_GetInt(dfile,"Hide");
			Player[playerid][pDailyDone] = DOF2_GetInt(dfile,"DailyDone");
			if(DOF2_GetInt(dfile,"DailyID") != DailyID)
			{
                ResetPlayerDaily(playerid);
			}
			sscanf(DOF2_GetString(dfile,"DailyIDs"),"iii",Player[playerid][pDaily][0],Player[playerid][pDaily][1],Player[playerid][pDaily][2]);
			new comp;
			for(new i; i<3; i ++)
			    if(Player[playerid][pDaily][i] >= DailyChallenges[ActiveDailyIDs[i]][dailyValue])
					comp++;

			if(comp >= 3)
			{
				Player[playerid][pDailyComp] = true;
			}
			else SCM(playerid,yellow,"Dnes si jetì nesplnil denní výzvy: "r"/daily");
			if(vip[playerid] == 1 && Player[playerid][pHide] > 0)
			{
			    format(str,sizeof(str),"Automaticky skryt na mape na dobu ~g~%s",SecondsToMinutes(Player[playerid][pHide]));
			    CreateInfoBox(playerid,str,5);
			    HidePlayer(playerid,Player[playerid][pHide]);
			}
			for(new i; i < MAX_TREZORS; i ++)
			{
			    new trezor[11];
			    format(trezor,sizeof(trezor),"Trezor%d",i);
				Trezor[playerid][i] = DOF2_GetInt(dfile,trezor);
			}
			if(Level[playerid] >= 50 && GetPlayerPlayedTime(playerid)/60/60 >= 500)
			{
       			Elite[playerid] = true;
    		}
    		if(Level[playerid] >= 100 && GetPlayerPlayedTime(playerid)/60/60 >= 1000)
    		{
    		    Legend[playerid] = true;
    		}
			format(str,sizeof(str),"~y~BODY:~w~ %0.1f",Points[playerid]);
			new tecka = strfind(str,".",false,0);
			strins(str,"~r~",tecka);
			strins(str,"~w~",tecka+4);
			TextDrawSetString(Textdraw1[playerid],str);
			for(new i = 1; i < sizeof(Missions); i ++)
			{
			    new key[15],fajl[50];
			    format(fajl,sizeof(fajl),USER_FILES,Jmeno(playerid));
			    format(key,sizeof(key),"Mission%d",i);
			    MissionsCount[playerid][i] = DOF2_GetInt(fajl,key);
			}
			SecondTimer[playerid] = SetTimerEx("OnPlayerSecondUpdate",1000,true,"i",playerid);
	        if(RealnyTime[playerid] == true)
	        {
				new hour,minute;
				gettime(hour,minute);
				format(str,sizeof(str),"~g~~h~%02d~w~:~g~~h~%02d",hour,minute);
	            PlayerTextDrawSetString(playerid,TDTime[playerid],str);
	            SetPlayerTime(playerid,hour,minute);
	        }
	        else
	        {
				format(str,sizeof(str),"~g~~h~%02d~w~:~g~~h~%02d",hodiny,minuty);
	            PlayerTextDrawSetString(playerid,TDTime[playerid],str);
	            SetPlayerTime(playerid,hodiny,minuty);
	        }
			PlayerTextDrawShow(playerid,TDTime[playerid]);
			if(Level[playerid] == 0)
			{
			    Level[playerid] = 1;
			}
			PropSlots[playerid] = 1;
			if(DOF2_GetInt(dfile,"PropertySlots") > 0)
			{
			    PropSlots[playerid] = DOF2_GetInt(dfile,"PropertySlots");
			    if(PropSlots[playerid] > MAX_PROPERTIES_PER_PLAYER){
			        DOF2_SetInt(dfile,"PropertySlots",MAX_PROPERTIES_PER_PLAYER);
			        DOF2_SaveFile();
			        PropSlots[playerid] = MAX_PROPERTIES_PER_PLAYER;
			    }
			}
			LoadTitul(playerid);
			mysql_format(mysql,query,sizeof(query),"SELECT * FROM `GameAchievs` WHERE `Nick`='%e'",Jmeno(playerid));
			cache = mysql_query(mysql,query);
			rows = cache_get_row_count(mysql);
			if(!rows)
			{
			    format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
			    if(fexist(dfile))
			    {
					for(new i; i < MAX_ACHIEVEMENTS; i ++)
					{
					    format(str,sizeof(str),"Achievement[%d]",i);
						new datum[20];
						format(datum,sizeof(datum),"AchievementDate[%d]",i);
						if(DOF2_GetInt(dfile,str) == 2)
					    {
					        mysql_format(mysql,query,sizeof(query),"INSERT INTO `GameAchievs` (`Nick`,`AchievID`,`Date`) VALUES ('%e',%d,'%e')",Jmeno(playerid),i,DOF2_GetString(dfile,datum));
						    mysql_query(mysql,query,false);
							DOF2_Unset(dfile,str);
							DOF2_Unset(dfile,datum);
						}
					    DOF2_SaveFile();
					}
				}
			}
			cache_delete(cache,mysql);
			mysql_format(mysql,query,sizeof(query),"SELECT * FROM `GameAchievs` WHERE `Nick`='%e'",Jmeno(playerid));
			cache = mysql_query(mysql,query);
			rows = cache_get_row_count(mysql);
			for(new i; i < rows; i ++)
			{
			    new datum[20];
			    cache_get_field_content(i,"Date",datum);
			    if(strlen(datum) && strcmp(datum,"0",false) != 0)
			    {
			        new id = cache_get_field_content_int(i,"AchievID");
			        if(id >= 0 && id < MAX_ACHIEVEMENTS)
			        {
			       		Achiv[playerid][id] = 1;
					}
				}
			}
			cache_delete(cache,mysql);
			for(new i; i < MAX_SLOTS; i ++)
			{
			    format(str,sizeof(str),"Slots[%d]",i);
			    Slots[playerid][i] = DOF2_GetInt(dfile,str);
			}
			if(Kills[playerid] == 0 || Deaths[playerid] == 0)
			{
			    Kills[playerid] = DOF2_GetInt(file2,"Kills");
				Deaths[playerid] = DOF2_GetInt(file2,"Deaths");
			}
			if(vip[playerid] == 1)
			{
				Color[playerid] = HexToInt(DOF2_GetString(dfile,"BarvaNicku"));
				if(strlen(DOF2_GetString(dfile,"BarvaNicku")) == 0)
				{
					new DIALOG_COLORS[1000];
					for(new i; i < sizeof(ChatColors); i ++)
					{
					    new color[255],color2[255];
					    format(color,sizeof(color),"TextColor[%d]",i);
					    format(color2,sizeof(color2),"ColorName[%d]",i);
						if(strlen(DOF2_GetString(CONFIG,color)) > 0)
						{
							format(str,sizeof(str),"{%s}%s\n",DOF2_GetString(CONFIG,color),DOF2_GetString(CONFIG,color2));
							strcat(DIALOG_COLORS,str);
						}
					}
					SPD(playerid,UNNAMED+4,DIALOG_STYLE_LIST,"Barva Nicku",DIALOG_COLORS,"Zmìnit","Zavøít");
				}
			}
			new DIALOG[1000],points;
			strcat(DIALOG,"Pøi pøechodu na verzi 0.3.7 musely být odstranìny nové skiny, proto Vám vracíme utracené body\n\nZakoupené skiny:\n");
			mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Skins` WHERE `Nick`='%e'",Jmeno(playerid));
			cache = mysql_query(mysql,query);
			for(new i; i < cache_get_row_count(mysql); i ++)
			{
			    new id = cache_get_field_content_int(i,"SkinID",mysql);
				for(new x; x < sizeof(CustomSkin); x ++)
				{
				    if(CustomSkin[x][sSkinID] == id && CustomSkin[x][sSkinPrice] != 0)
				    {
						GivePoints(playerid,CustomSkin[x][sSkinPrice]);
				        points += CustomSkin[x][sSkinPrice];
				        format(str,sizeof(str),""g"%s"w", vráceno: "sb"%d bodù\n",CustomSkin[x][sSkinName],CustomSkin[x][sSkinPrice]);
				        strcat(DIALOG,str);
					    break;
				    }
				}
			}
			cache_delete(cache,mysql);
			mysql_format(mysql,query,sizeof(query),"DELETE FROM `Skins` WHERE `Nick`='%e'",Jmeno(playerid));
			mysql_query(mysql,query,false);
			if(points > 0)
			{
			    format(str,sizeof(str),"\n"w"Celkem vráceno "g"%d bodù"w".",points);
			    strcat(DIALOG,str);
			    SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Vrácení bodù",DIALOG,"Zavøít","");
			}
			else
			    ShowPlayerInfo(playerid,playerid);

    		Spawned[playerid] = true;

/*			if(strcmp(GetIP(playerid),"78.102.20.9") == 0)
			{
				for(new x; x < sizeof(TextKOpsani); x ++)
				{
				    strcat(TextKOpsani,PostrehZnaky[random(sizeof(PostrehZnaky))]);
				}
				format(str,sizeof(str),"Opite prosím bezpeènostní kód:\n\n"g"%s",TextKOpsani);
			    SPD(playerid,UNNAMED+138,DIALOG_STYLE_INPUT,"Opi text",str,"Zadat","");
			}
*/		}
		if(NewBie[playerid] == true)
		{
		    Color[playerid] = -1;
			SPD(playerid,UNNAMED+8,DIALOG_STYLE_MSGBOX,"Tutorial","Autor Scriptu: "g"DeLeTe\n"w"Verze: "g"2.0\n"w"Web serveru: {0088FF}"SRV_WEB"\n\n"w"Script Obsahuje:\n"g"VIP Systém\nAdmin Systém\nEvent Systém\nBodovací Systém\nGará Systém\nMission Systém\nHouse Systém\nProperty Systém\nAnti Cheat\nCarMenu\nNové pøíkazy /cmds\nNové warpy /warpy","Dalí","");
		    HidePlayer(playerid,60*60*10);
		}
		TextDrawHideForPlayer(playerid,Textdraw11);
		for(new i; i < MAX_PROPERTIES; i ++)
		{
		    if(strcmp(Property[i][PropertyOwner],"0",false) != 0)
		    {
			    if(IsPlayerPropertyOwner(playerid,i))
			    {
			        POwner[playerid] ++;
			    }
			}
		}
	    LoadData(playerid);
	    for(new x; x < MAX_SLOTS; x ++)
	    {
			SpawnCar(playerid,x);
			TuneCar(playerid,x);
		}
		OdehranoTimer[playerid] = SetTimerEx("Odehrano",60000,true,"i",playerid);
		TextDrawShowForPlayer(playerid,Textdraw1[playerid]);
		format(str,sizeof(str),"%d XP / %d XP~n~~w~Level %d",XP[playerid],floatround((Level[playerid]*100)*1.5),Level[playerid]);
		PlayerTextDrawSetString(playerid,Textdraw29[playerid],str);
		PlayerTextDrawShow(playerid,Textdraw29[playerid]);
		StopAudioStreamForPlayer(playerid);
		if(vip[playerid] == 1)
		{
			if(Admin[playerid] == 0)
			{
			    if(Legend[playerid] == false)
					format(str,sizeof(str),"%s "c"%s "g"(ID: "c"%d"g") se "c"%s"g".",Players(playerid),Jmeno(playerid),playerid,SexWord(playerid,"pøihlásil","pøihlásila"));
				else
					format(str,sizeof(str),"%s "c"%s "g"(ID: "c"%d"g") se "c"%s"g".","Legenda",Jmeno(playerid),playerid,SexWord(playerid,"pøihlásil","pøihlásila"));
				SCMTA(green,str);
			}
			else
			{
   				format(str,sizeof(str),"%s "w"%s "r"(ID: "w"%d"r") se %s.",Players(playerid),Jmeno(playerid),playerid,SexWord(playerid,"pøihlásil","pøihlásila"));
				SCMTA(red,str);
			}
		}
		GetOnlinePlayers();
	    if(Achiv[playerid][BE_MEMBER] == 0)
	    {
	        if(GetGang(playerid) > 0)
	        {
	            SetPlayerAchievement(playerid,BE_MEMBER);
	        }
	    }
		if(Achiv[playerid][BUSINESS_1] == 0)
		{
		    if(POwner[playerid] >= 1)
		    {
		        SetPlayerAchievement(playerid,BUSINESS_1);
		    }
		}
		PlayerLogged(playerid);
	}
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Notifications` WHERE `Nick` = '%e' AND `Readed` = 0",Jmeno(playerid));
	cache = mysql_query(mysql,query);
	rows = cache_get_row_count(mysql);
	if(rows)
	{
		format(str,sizeof(str),"Máte %s %d oznámení ({0077FF}/oznameni"w")",PluralWord(rows,"nepøeèteno","nepøeètena","nepøeètených"),rows);
		SCM(playerid,-1,str);
	}
	cache_delete(cache,mysql);
	return 1;
}
//============================================================================//
function Spawn(playerid)
{
	if(OnEvent[playerid] == false)
	{
		if(UseLastPos[playerid] == true && PrisonTime[playerid] == 0 && dPlayer[playerid][pDuelStatus] == -1)
		{
			if(LastInt[playerid] == 0 && LastX[playerid] != 0 && LastY[playerid] != 0 && LastY[playerid] != 0)
			{
			    SetPlayerPos(playerid,LastX[playerid],LastY[playerid],LastZ[playerid]);
			}
		}
		if(PrisonTime[playerid] > 0)
		{
			SetPlayerInterior(playerid,6);
			SetPlayerPos(playerid,264.6310,77.4839,1001.0391);
			SetPlayerVirtualWorld(playerid,10);
			SetPlayerWantedLevel(playerid,0);
			format(str,sizeof(str),"%02d:%02d",PrisonTime[playerid]/60,PrisonTime[playerid]%60);
			PlayerTextDrawSetString(playerid,Textdraw26[playerid],str);
			PlayerTextDrawShow(playerid,Textdraw26[playerid]);
			ResetPlayerWeaponsEx(playerid);
		}
		if(dPlayer[playerid][pDuelStatus] != -1)
		{
			new player[2],room = dPlayer[playerid][pDuelRoom],duelpl = dPlayer[playerid][DuelPlayer];
			if(Duel[room][DuelStatus] == DUEL_STATUS_STARTED)
			{
				Duel[room][DuelStatus] = DUEL_STATUS_WAIT;
			    for(new i; i < 2; i ++)
			    {
			        player[i] = Duel[room][DuelPlayer][i];
				    SetPlayerPos(player[i],DuelPos[i][0],DuelPos[i][1],DuelPos[i][2]);
				    SetPlayerFacingAngle(player[i],DuelPos[i][3]);
				    TogglePlayerControllable(player[i],false);
				    SetCameraBehindPlayer(player[i]);
				    SetPlayerVirtualWorld(player[i],DUEL_WORLD+room);
				    ResetPlayerWeapons(player[i]);
				    SetPlayerHealth(player[i],100);
				    SetPlayerArmour(player[i],0);
				    GivePlayerWeapon(player[i],Duel[room][DuelWeapon],10000*2);
				    if(GetGang(player[i]) != 0)
				        SetGang(player[i],255);
				}
			    Duel[room][DuelOdp] = 3;
			    SetTimerEx("DuelOdpocet",1000,false,"i",room);
			}
			else
			{
			    SetPlayerPos(playerid,DuelPos[duelpl][0],DuelPos[duelpl][1],DuelPos[duelpl][2]);
			    SetPlayerFacingAngle(playerid,DuelPos[duelpl][3]);
			    TogglePlayerControllable(playerid,false);
			    SetCameraBehindPlayer(playerid);
			    SetPlayerVirtualWorld(playerid,DUEL_WORLD+room);
			    ResetPlayerWeapons(playerid);
			    SetPlayerHealth(playerid,100);
			    SetPlayerArmour(playerid,0);
			    GivePlayerWeapon(playerid,Duel[room][DuelWeapon],10000*2);
			    if(GetGang(playerid) != 0)
			        SetGang(playerid,255);
			}
		}
		LastX[playerid] = 0;
		LastY[playerid] = 0;
		LastZ[playerid] = 0;
		LastInt[playerid] = 0;
		if(PrisonTime[playerid] == 0)
		{
			if(InDM[playerid] != -1)
			{
			    RandomDMSpawn(playerid,InDM[playerid]);
			    SetPlayerHealth(playerid,100);
			}
		}
	}
	else
	{
	    if(RunEvent == 10)
	    {
			new rand = random(sizeof(EventDMPos));
			while(EventDMPos[rand][0] == 0.0)
				rand = random(sizeof(EventDMPos));
		    SetPlayerPos(playerid,EventDMPos[rand][0]-2+random(4),EventDMPos[rand][1]-2+random(4),EventDMPos[rand][2]);
			ResetPlayerWeapons(playerid);
			if(EventStarted == true)
				GivePlayerWeapon(playerid,GunGameGuns[Player[playerid][pGunGameState]],15000);
			SetPlayerVirtualWorld(playerid,EventWorld);
	    }
	    else if(RunEvent == 11)
	    {
			new rand = random(sizeof(EventDMPos));
			while(EventDMPos[rand][0] == 0.0)
				rand = random(sizeof(EventDMPos));
			SetPlayerVirtualWorld(playerid,EventWorld);
		    SetPlayerPos(playerid,EventDMPos[rand][0]-2+random(4),EventDMPos[rand][1]-2+random(4),EventDMPos[rand][2]);
			SetPlayerHealth(playerid,100);
			ResetPlayerWeapons(playerid);
		    for(new i; i < sizeof(EventGuns); i ++)
		        if(EventGuns[i] != 0)
		            GivePlayerWeapon(playerid,EventGuns[i],15000);
	    }
	    else CancelEvent(playerid,"");
	}
	return 1;
}
//============================================================================//
function GetPlayerKillerID(playerid)
{
	return HittedPL[playerid];
}

public OnPlayerDeath(playerid,killerid,reason)
{
	if(reason > 255) reason = 255;
	if(GetPlayerKillerID(playerid) != -1 && IPC(GetPlayerKillerID(playerid)))
	    killerid = GetPlayerKillerID(playerid);
	if(pStunt[playerid][sStuntID] != -1)
	    LeaveStunt(playerid);
	Hitted[playerid] = 0;
	HittedPL[playerid] = -1;
	if(OnEvent[playerid] == true && RunEvent == 8)
	    DropWeapons(playerid,0,.world = EventWorld);
	else if(GetPlayerVirtualWorld(playerid) == 0)
	    DropWeapons(playerid);
	if(killerid != INVALID_PLAYER_ID)
	{
	    GivePlayerDailyValue(killerid,DAILY_TYPE_KILLS,1);
	    if(!IsPlayerOnMiniEvent(killerid))
			SetPlayerWantedLevel(killerid,GetPlayerWantedLevel(killerid)+1);
		for(new i; i < MAX_ZONES; i ++)
		{
			if(IsPlayerInRangeOfPoint(killerid,NoKillZone[i][NRadius],NoKillZone[i][NX],NoKillZone[i][NY],NoKillZone[i][NZ]) && IsPlayerInRangeOfPoint(playerid,NoKillZone[i][NRadius],NoKillZone[i][NX],NoKillZone[i][NY],NoKillZone[i][NZ]))
			{
				format(str,sizeof(str),"Bot "w"%s "r"vyhodil ze serveru hráèe "w"%s"r".",BOT_NAME,Jmeno(killerid));
				SCMTA(red,str);
				format(str,sizeof(str),"[ Dùvod: "w"%s "r"]","Zabití hráèe v NKZ");
				SCMTA(red,str);
				GivePenaltyPoints(Jmeno(killerid),5,BOT_NAME,"Kick","Zabití hráèe v NKZ");
				SpecialKick(killerid,BOT_NAME,"Zabití hráèe v NKZ");
			    break;
			}
		}
	    if(dPlayer[playerid][pDuelStatus] != -1 && dPlayer[killerid][pDuelStatus] != -1 && dPlayer[playerid][pDuelRoom] == dPlayer[killerid][pDuelRoom])
	    {
	        new room = dPlayer[killerid][pDuelRoom];
			GivePlayerDailyValue(killerid,DAILY_TYPE_DUEL,1);
	        KillTimer(Duel[room][DuelTimer]);
			Duel[room][DuelTimer]= 0;
			Duel[room][DuelKills][dPlayer[killerid][pDuelStatus]]++;
			Duel[room][DuelRound] ++;
			for(new i; i <= GetPlayerPoolSize(); i ++)
			{
			    if(IPC(i) && dPlayer[i][pDuelSpec] != -1 && GetPlayerState(Duel[dPlayer[i][pDuelRoom]][DuelPlayer][(dPlayer[i][pDuelSpec]+1)%2]) != PLAYER_STATE_WASTED)
			    {
			        dPlayer[i][pDuelSpec] = (dPlayer[i][pDuelSpec]+1)%2;
			        dPlayer[i][DuelPlayer] = dPlayer[i][pDuelSpec];
			        UpdateDuelInfo(i);
			        PlayerSpectatePlayer(i,Duel[dPlayer[i][pDuelRoom]][DuelPlayer][dPlayer[i][pDuelSpec]]);
				}
			}
			for(new i; i < 2; i ++)
			{
			    if(Duel[room][DuelPlayer][i] != -1)
					UpdateDuelInfo(Duel[room][DuelPlayer][i]);
			}
	        Duel[room][DuelRoundTime] = 0;
			if(Duel[room][DuelRound] == Duel[room][DuelRounds])
			    ResetDuel(room);

			DuelLose[playerid] ++;
			DuelWins[killerid] ++;
			format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
			DOF2_SetInt(dfile,"DuelLose",DuelLose[playerid]);
			format(dfile,sizeof(dfile),USER_FILES,Jmeno(killerid));
			DOF2_SetInt(dfile,"DuelWins",DuelWins[killerid]);
			DOF2_SaveFile();

			if(Achiv[killerid][DUEL_1] == 0)
			{
			    if(DuelWins[killerid] >= 1)
			    {
			        SetPlayerAchievement(killerid,DUEL_1);
			    }
			}
			if(Achiv[killerid][DUEL_50] == 0)
			{
			    if(DuelWins[killerid] >= 50)
			    {
			        SetPlayerAchievement(killerid,DUEL_50);
			    }
			}
			if(Achiv[killerid][DUEL_100] == 0)
			{
			    if(DuelWins[killerid] >= 100)
			    {
			        SetPlayerAchievement(killerid,DUEL_100);
			    }
			}
			if(Achiv[killerid][DUEL_200] == 0)
			{
			    if(DuelWins[killerid] >= 200)
			    {
			        SetPlayerAchievement(killerid,DUEL_200);
			    }
			}
	    }
		format(str,sizeof(str),""r"%s killed %s [ Weapon: %s ] [ Money: %s ]",Jmeno(killerid),Jmeno(playerid),WeaponsNames(reason),Split(GetPlayerMoney(playerid)));
		printEx(str);
		if(InDM[playerid] != -1 && killerid != INVALID_PLAYER_ID && InDM[killerid] != -1)
		{
		    GivePlayerDailyValue(killerid,DAILY_TYPE_DM_KILLS,1);
			DMRoundKills[playerid] = 0;
			DMRoundKillTime[playerid] = 0;
			DMRoundKillTime[killerid] = 20;
		    DMKills[killerid] ++;
		    DMKillsTotal[killerid] ++;
			DMDeaths[playerid] ++;
			DMDeathsTotal[playerid] ++;
			DMRoundKills[killerid] ++;
        	SetPlayerAchievementEx(killerid,DM_100,DMKillsTotal[killerid],100);
        	SetPlayerAchievementEx(killerid,DM_500,DMKillsTotal[killerid],500);
        	SetPlayerAchievementEx(killerid,DM_1000,DMKillsTotal[killerid],1000);
        	SetPlayerAchievementEx(killerid,DM_2000,DMKillsTotal[killerid],2000);
			new dmid = InDM[killerid];
			if(DMRoundKills[killerid] == 2)
			{
		        switch(random(2))
		        {
                	case 0: PlayDMVoice(dmid,"http://delete.4fan.cz/hudba/voices/doublekill.wav");
                	case 1: PlayDMVoice(dmid,"http://delete.4fan.cz/hudba/voices/doublekill2.wav");
				}
            	GivePlayerDMScore(killerid,playerid,"doublekill",10);
			}
			else if(DMRoundKills[killerid] == 3)
			{
		        PlayDMVoice(dmid,"http://delete.4fan.cz/hudba/voices/triplekill.wav");
            	GivePlayerDMScore(killerid,playerid,"triplekill",15);
		    }
			else if(DMRoundKills[killerid] == 4)
		    {
		        PlayDMVoice(dmid,"http://delete.4fan.cz/hudba/voices/ultrakill.wav");
            	GivePlayerDMScore(killerid,playerid,"ultrakill",20);
		    }
			else if(DMRoundKills[killerid] == 5)
		    {
		        PlayDMVoice(dmid,"http://delete.4fan.cz/hudba/voices/megakill.wav");
            	GivePlayerDMScore(killerid,playerid,"megakill",25);
		    }
			else
			{
			    format(str,sizeof(str),"zabil %s",Jmeno(playerid));
		    	convert_encoding(str);
				if(DMRoundKills[killerid] > 5)
				{
				    PlayDMVoice(dmid,"http://delete.4fan.cz/hudba/voices/unstoppable.wav");
				    GivePlayerDMScore(killerid,playerid,str,30);
				}
				else
				{
				    GivePlayerDMScore(killerid,playerid,str,5);
				}
			}
		}
	}
	Hitted[playerid] = 0;
	HittedPL[playerid]= -1;
	if(InDM[playerid] == -1)
	{
		GameTextForPlayer(playerid,"~r~Wasted",10,0);
	}
	if(WorkMission[playerid] > 0)
	{
		EndMission(playerid,"zemrel si");
	}
	if(killerid != INVALID_PLAYER_ID)
	{
		if(GetPlayerState(killerid) != PLAYER_STATE_DRIVER)
		{
			GivePoints(killerid,1);
			GiveXP(killerid,15+random(15),"Zabiti hrace");
			if(Hitman[playerid] > 0)
			{
				format(str,sizeof(str),"%s "w"%s{80D100} %s hráèe "w"%s",Players(killerid),Jmeno(killerid),SexWord(killerid,"zabil","zabila"),Jmeno(playerid));
				SCMTA(0x80D100FF,str);
				format(str,sizeof(str),"a %s odmìnu za zabití "w"%d %s{80D100}.",SexWord(killerid,"získal","získala"),Hitman[playerid],PluralWord(Hitman[playerid],"bod","body","bodù"));
				SCMTA(0x80D100FF,str);
			    GivePoints(killerid,Hitman[playerid]);
			    Hitman[playerid] = 0;
			    GiveXP(killerid,30,"Zabiti hrace s vypsanou odmenou");
			}
		}
		else
		{
		    SM(killerid,"Pouil si Car/Heli/Bike kill, nebyl ti pøièten bod a body XP");
			if(Hitman[playerid] > 0)
			{
			    SCM(killerid,0x80D100FF,"Na tohoto hráèe byla vypsána odmìna, za "w"car/heli/bike kill {80D100}vám odmìna nebyla udìlena.");
			}
		}
	}
	if(GOD[playerid] == true)
	{
		GOD[playerid] = false;
	}
	AntiFakeKill[playerid]++;
	if(AntiFakeKill[playerid] == 1)
	{
	    SetTimerEx("UnloadFakeKill",1000,false,"i",playerid);
	}
	else if(AntiFakeKill[playerid] > 3)
	{
		format(str,sizeof(str),"[ Anti - Cheat ]%s "w"%s "r"byl vyhozen ze serveru za "w"Fake Kill",Players(playerid),Jmeno(playerid));
		SCMTA(red,str);
		SpecialKick(playerid,BOT_NAME,"Fake Kill");
		Kick(playerid);
	}
	if(killerid != INVALID_PLAYER_ID)
	{
		Kills[killerid] ++;
		format(dfile,sizeof(dfile),USER_FILES,Jmeno(killerid));
		DOF2_SetInt(dfile,"Kills",Kills[killerid]);
		DOF2_SaveFile();
	}
	Deaths[playerid] ++;
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	DOF2_SetInt(dfile,"Deaths",Deaths[playerid]);
    DOF2_SaveFile();
	if(killerid != INVALID_PLAYER_ID)
	{
		if(Achiv[killerid][KILLS_1] == 0)
		{
			if(Kills[killerid] >= 1)
			{
				SetPlayerAchievement(killerid,KILLS_1);
			}
		}
		if(Achiv[killerid][KILLS_100] == 0)
		{
		    if(Kills[killerid] >= 100)
		    {
				SetPlayerAchievement(killerid,KILLS_100);
		    }
		}
		if(Achiv[killerid][KILLS_500] == 0)
		{
		    if(Kills[killerid] >= 500)
		    {
				SetPlayerAchievement(killerid,KILLS_500);
		    }
		}
		if(Achiv[killerid][KILLS_1000] == 0)
		{
		    if(Kills[killerid] >= 1000)
		    {
				SetPlayerAchievement(killerid,KILLS_1000);
		    }
		}
		SetPlayerAchievementEx(killerid,KILLS_5000,Kills[killerid],5000);
		SetPlayerAchievementEx(killerid,KILLS_10000,Kills[killerid],10000);
	}
	if(RunEvent != 10 && RunEvent != 11)
		CancelEvent(playerid,"Smrt");
	else if(RunEvent == 10)
	{
		if(EventStarted == true)
		{
		    if(killerid != INVALID_PLAYER_ID)
		    {
		        if(OnEvent[playerid] == true && OnEvent[killerid] == true)
				{
			        Player[killerid][pEventKills] ++;
					GunGamePosition();
			        if(Player[killerid][pEventKills] % 2 == 0)
			        {
			            Player[killerid][pGunGameState] ++;
			            if(Player[killerid][pGunGameState] == sizeof(GunGameGuns))
			            {
			                eventwinpos ++;
			                format(str,sizeof(str),"%s "w"%s (%d) "r"skonèil na eventu GunGame na "w"%d. "r"místì.",Players(killerid),Jmeno(killerid),killerid,eventwinpos);
			                SCMTA(red,str);
			                printEx(str);
			                CancelEvent(killerid,"");
	                		LoadBeforeEventData(killerid);
							if(BotEvent == true)
							{
						        new text[10];
						        format(text,sizeof(text),"%d",killerid);
						        CallLocalFunction("cmd_vyhra","is",botid,text);
		                		if(eventwinpos >= EventMista)
		                		{
							        CallLocalFunction("cmd_eventend","is",botid," ");
							        CallLocalFunction("cmd_dann","is",botid," ");
								}
							}
			            }
						else
						{
							ResetPlayerWeapons(killerid);
							GivePlayerWeapon(killerid,GunGameGuns[Player[killerid][pGunGameState]],15000);
							if(Player[killerid][pGunGameState]+1 < sizeof(GunGameGuns))
								format(str,sizeof(str),"Nová zbraò: ~g~%s~w~ dalí zbraò: ~g~%s",WeaponsNames(GunGameGuns[Player[killerid][pGunGameState]]),WeaponsNames(GunGameGuns[Player[killerid][pGunGameState]+1]));
							else
								format(str,sizeof(str),"Nová zbraò: ~g~%s",WeaponsNames(GunGameGuns[Player[killerid][pGunGameState]]));
							CreateInfoBox(killerid,str,10);
						}
			        }
				}
		    }
		}
	}
	else if(RunEvent == 11)
	{
		if(EventStarted == true)
		{
		    if(killerid != INVALID_PLAYER_ID)
		    {
		        if(OnEvent[playerid] == true && OnEvent[killerid] == true)
				{
			        Player[killerid][pEventKills] ++;
					new id = -1;
			        for(new i; i <= GetPlayerPoolSize(); i ++)
			            if(IPC(i) && !IsPlayerNPC(i) && OnEvent[i] == true)
			            {
			                if(id == -1)
			                    id = i;
							if(Player[i][pEventKills] > Player[id][pEventKills])
							    id = i;
						}
				    format(str,sizeof(str),"Zabití: ~r~%d~w~, nejlepí hráè: ~r~%s",Player[killerid][pEventKills],Jmeno(id));
			        FixTextDrawFont2(str);
			        CreateInfoBox(killerid,str,5);
				}
			}
		}
	}
	return 1;
}
//============================================================================//

forward UnloadFakeKill(playerid);

public UnloadFakeKill(playerid) return AntiFakeKill[playerid] = 0;
//============================================================================//
/*public OnRconLoginAttempt(ip[],password[],success)
{
	if(success)
	{
		new allowedip[][] = {"127.0.0.1","77.78.89.162","90.178.233.101","95.103.130.1","89.177.38.67"};
		for(new i; i <= GetPlayerPoolSize(); i ++)
		{
		    if(strcmp(GetIP(i),ip,false) == 0)
		    {
				new bool: canuse = false;
				for(new x; x < sizeof(allowedip); x ++)
				{
				    if(strcmp(GetIP(i),allowedip[x],false) == 0)
				    {
				        canuse = true;
						break;
					}
				}
				if(canuse == false)
				{
				    format(str,sizeof(str),""r"%s %s [%s] byl vyhozen za nepovolené pøihláení na RCON!",Players(i),Jmeno(i),GetIP(i));
				    SendAdminMessage(str);
				    Kick(i);
				}
		    }
		}
	}
	return 1;
}
*///============================================================================//
public OnRconCommand(cmd[])
{
	rcmd(unban,5,cmd);
	rcmd(say,3,cmd);
	rcmd(stream,6,cmd);
	rcmd(tban,4,cmd);
//	rcmd(odpoved,7,cmd);
	return 1;
}
//============================================================================//
rcmd_unban(params[])
{
	new ip[150],query[200],rows,fields,Cache:cache,adminname[24];
	if(!sscanf(params,"zz",adminname,ip))
	{
		if(strlen(ip) < 16)
		{
			mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Bans` WHERE `IP` = '%s'",ip);
			cache = mysql_query(mysql,query);
			cache_get_data(rows,fields,mysql);
			if(rows)
			{
				mysql_format(mysql,query,sizeof(query),"DELETE FROM `Bans` WHERE `IP` = '%s'",ip);
				mysql_query(mysql,query,false);
				format(str,sizeof(str),"unbanip %s",ip);
				SendRconCommand(str);
				SendRconCommand("reloadbans");
				new fajl[50];
				format(fajl,sizeof(fajl),"UnNamed/Bany/%s.ban",ip);
				if(fexist(fajl))
				{
				    DOF2_RemoveFile(fajl);
				}
				format(str,sizeof(str),"{7FFF00}[ ONLINE ADMIN ] "w"Administrátor "r"%s "w"odbanoval ip "g"%s",adminname,ip);
				SendAdminMessage(str);
			}
			cache_delete(cache,mysql);
		}
	}
	return 1;
}

rcmd_tban(params[])
{
	new id,duvod[144],hodina,query[800],adminname[24];
	if(!sscanf(params,"iziz",id,adminname,hodina,duvod))
	{
		if(IsPlayerConnected(id))
		{
		    if(hodina > 0 && hodina < 1000)
		    {
				if(strlen(duvod) < 100)
				{
					if(Admin[id] == 0)
					{
						new date = gettime()+60*60*hodina;
						format(dfile,sizeof(dfile),"UnNamed/Bany/%s.ban",GetIP(id));
						if(!fexist(dfile))
						{
							DOF2_CreateFile(dfile);
						}
						DOF2_SetInt(dfile,"Hodin",date);
						DOF2_SetString(dfile,"Nick",Jmeno(id));
						DOF2_SetString(dfile,"Duvod",duvod);
						DOF2_SetString(dfile,"IP",GetIP(id));
						DOF2_SetString(dfile,"Admin",adminname);
						DOF2_SetString(dfile,"Datum",DATE(gettime()));
                        DOF2_SaveFile();
						mysql_format(mysql,query,sizeof(query),"INSERT INTO `Bans` (`Nick`,`IP`,`Admin`,`Reason`,`Start`,`End`) VALUES ('%e','%s','%e','%e','%d','%d')",Jmeno(id),GetIP(id),adminname,duvod,gettime(),gettime()+60*60*hodina);
						mysql_query(mysql,query,false);
			    		format(str,sizeof(str),"{7FFF00}[ ONLINE ] "r"Administrátor "w"%s "r"zabanoval hráèe "w"%s "r"na "w"%d "r"hodin",adminname,Jmeno(id),hodina);
						SCMTA(red,str);
						format(str,sizeof(str),"[ Dùvod: "w"%s "r"]",duvod);
						SCMTA(red,str);
						SpecialTBan(id,adminname,duvod,date);
						KickPlayerAfterTime(id,500);
					}
				}
			}
		}
	}
	return 1;
}

rcmd_stream(params[])
{
    if(sscanf(params,"z",url)) return 0;
	KillTimer(TimerStream);
	TimerStream = 0;
    for(new i; i <= GetPlayerPoolSize(); i ++)
    {
		if(IPC(i) && !IsPlayerNPC(i))
		{
		    if(Listening[i] == -1 && BlockedStream[i] == 0)
		    {
		        PlayAudioStreamForPlayer(i,url);
		    }
			else if(Listening[i] != -1)
			{
	  			SM(i,"Má zaplé radio, pokud chce pøehrát audio stream");
			    SM(i,"Pouij pøíkaz: "c"/prehrat");
			}
			else if(BlockedStream[i] == 1)
			{
			    SM(i,"Má bloknutý stream, pokud chce pøehrát tento stream,");
			    SM(i,"Pouij pøíkaz: "c"/prehrat");
			}
		}
	}
	MusicTimeMinutes = 4;
	MusicTimeSeconds = 0;
	TimerStream = SetTimer("UnBlockMusic",1000,false);
	return 1;
}
//============================================================================//
rcmd_say(params[])
{
	new text[255];
    if(sscanf(params,"z",text)) return 0;
    SCMTA(green,text);
	return 1;
}
//============================================================================//
function HTTP_City(playerid,response_code,data[])
{
	if(response_code == 200)
		SetPVarString(playerid,"PlayerCity",data);
	else
		SetPVarString(playerid,"PlayerCity","Unknown");
    format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	if(fexist(dfile))
	{
	    DOF2_SetString(dfile,"City",GetPlayerCity(playerid));
		DOF2_SaveFile();
	}
	return 1;
}
function HTTP_CountryName(playerid,response_code,data[])
{
/*	if(data[0] == ' '){
		SendAdminMessage(data);
	    format(data,128,"Unknown");
 	}
*/
//	if(response_code == 200)
//		SetPVarString(playerid,"PlayerCountry",data);
//	else
		SetPVarString(playerid,"PlayerCountry","Unknown");
	if(IPC(playerid))
	{
		new query[200],Cache:cache,country[MAX_COUNTRY_NAME];
		GetPlayerCountry(playerid,country,sizeof(country));
		mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Accounts` WHERE `IP`='%s'",GetIP(playerid));
		cache = mysql_query(mysql,query);
		TotalAccounts[playerid] = cache_get_row_count(mysql);
		cache_delete(cache,mysql);
		format(str,sizeof(str),"%s "w": "g"%s "w": "g"%s "w": "g"%d úètù",Jmeno(playerid),GetIP(playerid),country,TotalAccounts[playerid]);
		for(new i; i <= GetPlayerPoolSize(); i ++)
		{
		    if(Admin[i] > 0)
		    {
				SCM(i,green,str);
			}
		}
		new serial[128];
		gpci(playerid,serial,sizeof(serial));
		if(!IsPlayerNPC(playerid)){
			mysql_format(mysql,query,sizeof(query),"INSERT INTO `OnlineUsers` (`ID`,`Nick`,`IP`,`Connect`,`Country`,`GPCI`) VALUE ('%d','%e','%s','%d','%e','%e')",playerid,Jmeno(playerid),GetIP(playerid),gettime(),country,serial);
			mysql_query(mysql,query,false);
		}
        format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
		if(fexist(dfile))
		{
		    DOF2_SetString(dfile,"Country",country);
			DOF2_SaveFile();
			new bool:canplay;
			if(DOF2_GetBool(dfile,"CountryAll") == true)
				canplay = true;
			format(str,sizeof(str),""g"[%s] %s (%d) se pøipojil na server [%s].",GetIP(playerid),Jmeno(playerid),playerid,country);
			printEx(str);
			if(!canplay)
			{
				new allowedcountries[][] =
				{
				    "Czechia","Slovakia","Slovak Republic","Unknown"
				};
				for(new i; i < sizeof(allowedcountries); i ++)
				{
				    if(strcmp(country,allowedcountries[i],true) == 0)
				    {
						canplay = true;
				        break;
				    }
				}
				if(canplay == false)
				{
			        Player[playerid][pBanned] = 1;
				    new DIALOG[500];
			        format(str,sizeof(str),"This server is CZ/SK, you are from "r"%s, "w"so you can't play on this server.\n",country);
			        strcat(DIALOG,str);
			        strcat(DIALOG,"Pokud si Èech nebo Slovák a zobrazuje se ti tato zpráva kontaktuj Nás na webu\n"SRV_WEB"");
					SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Only Czech/Slovak Players",DIALOG,"Quit","");
			        KickPlayerAfterTime(playerid,50);
					return 0;
				}
				else
				{
				    if(Player[playerid][pBanned] == 0 && Spawned[playerid] == false)
				    {
						format(str,sizeof(str),"Hráè %s pøiel na server (ID: %d)",Jmeno(playerid),playerid);
						SCMTA(0xAFAFAFFF,str);
				        format(str,sizeof(str),"%s ~g~%s~w~ (ID:~y~%d~w~) se pripojil na server.",TDPlayers(playerid),Jmeno(playerid),playerid);
						AddStringToTextDraw(str);
					}
				}
			}
		}
	}
	return 1;
}
//============================================================================//
public OnPlayerConnect(playerid)
{
	if(!IsPlayerNPC(playerid))
 	{
	    if(strcmp(Jmeno(playerid),BOT_NAME,false) == 0)
			Kick(playerid);
	}
	joins++;
	if(joins == 3)
	    SetTimerEx("JoinSpamTimer",4000,false,"i",joins);
	if(joins > 3)
	{
	    Player[playerid][pBanned] = 1;
	}
	printf("%s connecting",Jmeno(playerid));
	for(new i; i < MAX_PLAYERS; i ++)
		MutePlayers[playerid][i] = false;
	connections ++;
	if(strcmp(Jmeno(playerid),"[AFK]",false,5) == 0)
	{
     	SM(playerid,"Neplatný nick");
	    KickPlayerAfterTime(playerid,30);
	    return 0;
	}
	if(IsNickSame(Jmeno(playerid)))
	{
	    format(str,sizeof(str),""r"%s - Kopírování nicku",Jmeno(playerid));
	    SendAdminMessage(str);
		SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Secure",""dc"Byl jste vyhozen za kopírování nicku, pokud si myslíte e se jedná o omyl\nnapite prosím na forum ("SRV_WEB""dc") nebo email "SRV_MAIL"","Zavøít","");
        KickPlayerAfterTime(playerid,30);
        return 0;
	}
	for(new i; i<MAX_ACHIEVEMENTS; i ++)
		Achiv[playerid][i] = 0;
    Player[playerid][pPMHightLight] = -1;
	new query[600],rows,fields,Cache:cache,serial[128];
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Accounts` WHERE `IP`='%s' AND `Updated`>%d",GetIP(playerid),gettime()-5);
	cache = mysql_query(mysql,query);
	if(cache_get_row_count(mysql) >= 3)
	{
	    Player[playerid][pBanned] = 1;
	    BanEx(playerid,"Connect Flood");
	}
	cache_delete(cache);
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Accounts` WHERE `IP`='%s'",GetIP(playerid));
	cache = mysql_query(mysql,query);
	TotalAccounts[playerid] = cache_get_row_count(mysql);
	cache_delete(cache,mysql);
	MapEdit[playerid] = -1;
	SetPVarInt(playerid,"KostkaID",-1);
	new urladr[100];
	format(urladr,sizeof(urladr),"delete.4fan.cz/ipapi/?ip=%s&params=country",GetIP(playerid));
	HTTP(playerid,HTTP_GET,urladr,"","HTTP_CountryName");
	format(urladr,sizeof(urladr),"delete.4fan.cz/ipapi/?ip=%s&params=city",GetIP(playerid));
	HTTP(playerid,HTTP_GET,urladr,"","HTTP_City");

	format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	if(!fexist(dfile))
	{
	    DOF2_CreateFile(dfile);
	    NewBie[playerid] = true;
		SetDefaultTitul(playerid);
	}
	for(new i; ENUM_PlayerStuntData:i < ENUM_PlayerStuntData; i ++)
	{
	    pStunt[playerid][ENUM_PlayerStuntData:i] = 0;
	}
	pStunt[playerid][sStuntID] = -1;
	pStunt[playerid][sTakeTime] = -1;
	SetPVarInt(playerid,"InviteID",-1);
	dPlayer[playerid][pDuelStatus] = -1;
	dPlayer[playerid][pDuelRoom] = -1;
	dPlayer[playerid][pDuelSpec] = -1;
	dPlayer[playerid][DuelPlayer] = -1;
	for(new i; i < MAX_EPROP_PER_PLAYER; i ++)
		Player[playerid][eProp][i] = -1;

    SetPVarInt(playerid,"EPropertyID",-1);
	for(new i; i < MAX_DUEL_TD; i ++)
	{
		DuelTD[playerid][i] = CreatePlayerTextDraw(playerid,618.000000, 230+i*12, "_");
		PlayerTextDrawAlignment(playerid,DuelTD[playerid][i], 3);
		PlayerTextDrawBackgroundColor(playerid,DuelTD[playerid][i], 255);
		PlayerTextDrawFont(playerid,DuelTD[playerid][i], 2);
		PlayerTextDrawLetterSize(playerid,DuelTD[playerid][i], 0.320000, 1.299998);
		PlayerTextDrawColor(playerid,DuelTD[playerid][i], -1);
		PlayerTextDrawSetOutline(playerid,DuelTD[playerid][i], 1);
		PlayerTextDrawSetProportional(playerid,DuelTD[playerid][i], 1);
		PlayerTextDrawSetSelectable(playerid,DuelTD[playerid][i], 0);
	}

	pHours[playerid] = -1;
	pMinutes[playerid] = -1;
	SetPVarInt(playerid,"PMID",-1);
	TotalGifts[playerid] = 0;
	for(new i; i < sizeof(GiftsPos); i ++)
	{
		PickedGifts[playerid][i] = 0;
	}
	for(new i; i < sizeof(GiftsPos); i ++)
	{
	    new giftquery[100],Cache:cachegift;
	    mysql_format(mysql,giftquery,sizeof(giftquery),"SELECT * FROM `Gifts` WHERE `Nick` = '%e' AND `gift_id` = %d LIMIT 1",Jmeno(playerid),i);
		cachegift = mysql_query(mysql,giftquery);
		if(cache_get_row_count(mysql))
		{
		    PickedGifts[playerid][i] = 1;
		    TotalGifts[playerid] ++;
		}
		cache_delete(cachegift,mysql);
	}
	HittedPL[playerid] = INVALID_PLAYER_ID;
	SetPlayerTeam(playerid,255);
	PlayerTeam[playerid] = -1;
	Listening[playerid] = -1;
	SpectateInt[playerid] = -1;
	SpectateVW[playerid] = -1;
    SpectatePlayer[playerid] = -1;
	EventPlayer[playerid] = -1;
	PlayerHouse[playerid] = -1;
	InDM[playerid] = -1;
	MusicID[playerid] = -1;
	RaceEdit[playerid] = -1;
	RacePlayer[playerid] = -1;
	Finding[playerid] = 0;
    if(hlasovani == 1)
	{
		TextDrawShowForPlayer(playerid,Textdraw28);
	}
	if(IsPlayerNPC(playerid))
	{
	    if(strcmp(Jmeno(playerid),BOT_NAME,false) == 0)
	    {
			botid = playerid;
			SetPlayerColor(playerid,0xFFFFFF00);
			Admin[playerid] = 99;
			CallRemoteFunction("OnPlayerSpawn","i",playerid);
			SpawnPlayer(playerid);
		}
		new ip_addr_npc[64+1];
	    new ip_addr_server[64+1];
	    GetServerVarAsString("bind",ip_addr_server,64);
	    GetPlayerIp(playerid,ip_addr_npc,64);
		if(!strlen(ip_addr_server)) {
		    ip_addr_server = "127.0.0.1";
		}
		if(strcmp(ip_addr_npc,ip_addr_server,true) != 0) {
		    printf("NPC: Got a remote NPC connecting from %s and I'm kicking it.",ip_addr_npc);
		    Kick(playerid);
		    return 0;
		}
	}
	gpci(playerid,serial,sizeof(serial));
	rows = 0; fields = 0;
	for(new i; i < MAX_PLAYERS; i ++)
	{
    	MissionLastCustomer[playerid][i] = false;
	}
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	if(fexist(dfile))
	{
		Mute[playerid] = DOF2_GetInt(dfile,"Mute");
		CBLOCK[playerid] = DOF2_GetInt(dfile,"Cblock");
		Hitman[playerid] = DOF2_GetInt(dfile,"Hitman");
		BuildSaw[playerid] = DOF2_GetInt(dfile,"Build");
		if(Mute[playerid] > 0)
		{
			MuteTimer[playerid] = SetTimerEx("TMute",1000,false,"i",playerid);
		}
		if(CBLOCK[playerid] > 0)
		{
			CBlockTimer[playerid] = SetTimerEx("TCblock",1000,false,"i",playerid);
		}
	}
	for(new i; i < MAX_HOUSES; i ++)
	{
	    if(IsPlayerHouseOwner(playerid,i))
	    {
			PlayerHouse[playerid] = i;
			break;
		}
	}
	new hquery[150],Cache:hcache;
	mysql_format(mysql,hquery,sizeof(hquery),"SELECT * FROM `Houses` WHERE `Owner`='%e'",Jmeno(playerid));
	hcache = mysql_query(mysql,hquery);
	if(cache_get_row_count(mysql))
	{
		mysql_format(mysql,hquery,sizeof(hquery),"UPDATE `Houses` SET `OwnerActivity`=%d WHERE `Owner`='%e'",gettime(),Jmeno(playerid));
		mysql_tquery(mysql,hquery,"","");
	}
	cache_delete(hcache,mysql);
	PLocked[playerid] = -1;
	for(new i; i < MAX_BLOCKED; i ++)
	{
	    BlockedPMs[playerid][i] = INVALID_PLAYER_ID;
	}
	for(new i; i < MAX_PROPERTIES_PER_PLAYER; i ++)
	{
        PlayerProps[playerid][i] = -1;
	}
	GetPlayerIp(playerid,pIP[playerid],16);
	pTime[playerid] = gettime();
	if(!IsPlayerNPC(playerid))
	{
		mysql_format(mysql,query,sizeof(query),"INSERT INTO `LoginLog` (`Nick`,`IP`,`Text`,`Time`) VALUES ('%e','%s','{00FF00}Pøíchod','%d')",Jmeno(playerid),GetIP(playerid),gettime());
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Accounts` WHERE `IP`='%s' AND `Nick` = '%e'",GetIP(playerid),Jmeno(playerid));
		cache = mysql_query(mysql,query);
		cache_get_data(rows,fields,mysql);
		if(!rows)
		{
		    mysql_format(mysql,query,sizeof(query),"INSERT INTO `Accounts` (`Nick`,`IP`,`Created`,`Updated`,`GPCI`) VALUES ('%e','%s','%d','%d','%e')",Jmeno(playerid),GetIP(playerid),gettime(),gettime(),serial);
			mysql_query(mysql,query,false);
		}
		else
		{
		    mysql_format(mysql,query,sizeof(query),"UPDATE `Accounts` SET `Updated`='%d', `GPCI`='%e' WHERE `IP`='%s' AND `Nick`='%e'",gettime(),serial,GetIP(playerid),Jmeno(playerid));
			mysql_query(mysql,query,false);
		}
		cache_delete(cache,mysql);
 	}
		rows = 0; fields = 0;
	InfoBoxConnect(playerid);
	if(!IsPlayerNPC(playerid))
	{
		TDTime[playerid] = CreatePlayerTextDraw(playerid,582.000000, 13.000000, "~g~~h~07~w~:~g~~h~05");
		PlayerTextDrawBackgroundColor(playerid,TDTime[playerid], 255);
		PlayerTextDrawFont(playerid,TDTime[playerid], 2);
		PlayerTextDrawLetterSize(playerid,TDTime[playerid], 0.329997, 1.400000);
		PlayerTextDrawColor(playerid,TDTime[playerid], 7864319);
		PlayerTextDrawSetOutline(playerid,TDTime[playerid], 1);
		PlayerTextDrawSetProportional(playerid,TDTime[playerid], 1);
		PlayerTextDrawSetSelectable(playerid,TDTime[playerid], 0);

		Textdraw22[playerid] = CreatePlayerTextDraw(playerid,609.000000, 281.000000, "100~w~/~r~100");
		PlayerTextDrawAlignment(playerid,Textdraw22[playerid], 2);
		PlayerTextDrawBackgroundColor(playerid,Textdraw22[playerid], 255);
		PlayerTextDrawFont(playerid,Textdraw22[playerid], 2);
		PlayerTextDrawLetterSize(playerid,Textdraw22[playerid], 0.229998, 1.599998);
		PlayerTextDrawColor(playerid,Textdraw22[playerid], 16711935);
		PlayerTextDrawSetOutline(playerid,Textdraw22[playerid], 1);
		PlayerTextDrawSetProportional(playerid,Textdraw22[playerid], 1);
		PlayerTextDrawSetSelectable(playerid,Textdraw22[playerid], 0);

		Textdraw23[playerid] = CreatePlayerTextDraw(playerid,609.000000, 270.000000, "22/22");
		PlayerTextDrawAlignment(playerid,Textdraw23[playerid], 2);
		PlayerTextDrawBackgroundColor(playerid,Textdraw23[playerid], 255);
		PlayerTextDrawFont(playerid,Textdraw23[playerid], 3);
		PlayerTextDrawLetterSize(playerid,Textdraw23[playerid], 0.229998, 1.299998);
		PlayerTextDrawColor(playerid,Textdraw23[playerid], -1);
		PlayerTextDrawSetOutline(playerid,Textdraw23[playerid], 1);
		PlayerTextDrawSetProportional(playerid,Textdraw23[playerid], 1);
		PlayerTextDrawSetSelectable(playerid,Textdraw23[playerid], 0);

		Textdraw24[playerid] = CreatePlayerTextDraw(playerid,609.000000, 295.000000, "59:59");
		PlayerTextDrawAlignment(playerid,Textdraw24[playerid], 2);
		PlayerTextDrawBackgroundColor(playerid,Textdraw24[playerid], 255);
		PlayerTextDrawFont(playerid,Textdraw24[playerid], 3);
		PlayerTextDrawLetterSize(playerid,Textdraw24[playerid], 0.289999, 1.399999);
		PlayerTextDrawColor(playerid,Textdraw24[playerid], -65281);
		PlayerTextDrawSetOutline(playerid,Textdraw24[playerid], 1);
		PlayerTextDrawSetProportional(playerid,Textdraw24[playerid], 1);
		PlayerTextDrawSetSelectable(playerid,Textdraw24[playerid], 0);

		Textdraw25[playerid] = CreatePlayerTextDraw(playerid,500.000000, 276.000000, "_");
		PlayerTextDrawBackgroundColor(playerid,Textdraw25[playerid], 255);
		PlayerTextDrawFont(playerid,Textdraw25[playerid], 2);
		PlayerTextDrawLetterSize(playerid,Textdraw25[playerid], 0.229998, 1.099997);
		PlayerTextDrawColor(playerid,Textdraw25[playerid], -1);
		PlayerTextDrawSetOutline(playerid,Textdraw25[playerid], 1);
		PlayerTextDrawSetProportional(playerid,Textdraw25[playerid], 1);
		PlayerTextDrawUseBox(playerid,Textdraw25[playerid], 1);
		PlayerTextDrawBoxColor(playerid,Textdraw25[playerid], 70);
		PlayerTextDrawTextSize(playerid,Textdraw25[playerid], 688.000000, 144.000000);
		PlayerTextDrawSetSelectable(playerid,Textdraw25[playerid], 0);

		Textdraw26[playerid] = CreatePlayerTextDraw(playerid,572.000000, 262.000000, "00:30");
		PlayerTextDrawAlignment(playerid,Textdraw26[playerid], 2);
		PlayerTextDrawBackgroundColor(playerid,Textdraw26[playerid], 255);
		PlayerTextDrawFont(playerid,Textdraw26[playerid], 3);
		PlayerTextDrawLetterSize(playerid,Textdraw26[playerid], 0.319997, 1.099997);
		PlayerTextDrawColor(playerid,Textdraw26[playerid], -10419969);
		PlayerTextDrawSetOutline(playerid,Textdraw26[playerid], 1);
		PlayerTextDrawSetProportional(playerid,Textdraw26[playerid], 1);
		PlayerTextDrawUseBox(playerid,Textdraw26[playerid], 1);
		PlayerTextDrawBoxColor(playerid,Textdraw26[playerid], 70);
		PlayerTextDrawTextSize(playerid,Textdraw26[playerid], 688.000000, 144.000000);
		PlayerTextDrawSetSelectable(playerid,Textdraw26[playerid], 0);

		Textdraw29[playerid] = CreatePlayerTextDraw(playerid,89.000000, 318.000000, "_");
		PlayerTextDrawAlignment(playerid,Textdraw29[playerid], 2);
		PlayerTextDrawBackgroundColor(playerid,Textdraw29[playerid], 255);
		PlayerTextDrawFont(playerid,Textdraw29[playerid], 3);
		PlayerTextDrawLetterSize(playerid,Textdraw29[playerid], 0.220000, 1.100000);
		PlayerTextDrawColor(playerid,Textdraw29[playerid], 989855743);
		PlayerTextDrawSetOutline(playerid,Textdraw29[playerid], 1);
		PlayerTextDrawSetProportional(playerid,Textdraw29[playerid], 1);
		PlayerTextDrawSetSelectable(playerid,Textdraw29[playerid], 0);

		Textdraw30[playerid] = CreatePlayerTextDraw(playerid,89.000000, 307.000000, "_");
		PlayerTextDrawAlignment(playerid,Textdraw30[playerid], 2);
		PlayerTextDrawBackgroundColor(playerid,Textdraw30[playerid], 255);
		PlayerTextDrawFont(playerid,Textdraw30[playerid], 3);
		PlayerTextDrawLetterSize(playerid,Textdraw30[playerid], 0.220000, 1.100000);
		PlayerTextDrawColor(playerid,Textdraw30[playerid], -788528897);
		PlayerTextDrawSetOutline(playerid,Textdraw30[playerid], 1);
		PlayerTextDrawSetProportional(playerid,Textdraw30[playerid], 1);
		PlayerTextDrawSetSelectable(playerid,Textdraw30[playerid], 0);
		Textdraw31[playerid] = CreatePlayerTextDraw(playerid,610.000000, 102.000000, "]]]]]]");
		PlayerTextDrawAlignment(playerid,Textdraw31[playerid], 3);
		PlayerTextDrawBackgroundColor(playerid,Textdraw31[playerid], 255);
		PlayerTextDrawFont(playerid,Textdraw31[playerid], 2);
		PlayerTextDrawLetterSize(playerid,Textdraw31[playerid], 0.529999, 2.299999);
		PlayerTextDrawColor(playerid,Textdraw31[playerid], -1872621313);
		PlayerTextDrawSetOutline(playerid,Textdraw31[playerid], 1);
		PlayerTextDrawSetProportional(playerid,Textdraw31[playerid], 1);
		PlayerTextDrawSetSelectable(playerid,Textdraw31[playerid], 0);

		Textdraw33[playerid] = CreatePlayerTextDraw(playerid,582.000000, 270.000000, "_");
		PlayerTextDrawAlignment(playerid,Textdraw33[playerid], 2);
		PlayerTextDrawBackgroundColor(playerid,Textdraw33[playerid], 255);
		PlayerTextDrawFont(playerid,Textdraw33[playerid], 2);
		PlayerTextDrawLetterSize(playerid,Textdraw33[playerid], 0.169997, 0.899995);
		PlayerTextDrawColor(playerid,Textdraw33[playerid], -1);
		PlayerTextDrawSetOutline(playerid,Textdraw33[playerid], 1);
		PlayerTextDrawSetProportional(playerid,Textdraw33[playerid], 1);
		PlayerTextDrawUseBox(playerid,Textdraw33[playerid], 1);
		PlayerTextDrawBoxColor(playerid,Textdraw33[playerid], 70);
		PlayerTextDrawTextSize(playerid,Textdraw33[playerid], 688.000000, 144.000000);
		PlayerTextDrawSetSelectable(playerid,Textdraw33[playerid], 0);

		Textdraw34[playerid] = CreatePlayerTextDraw(playerid,582.000000, 283.000000, "Pocet Hracu: ~y~5");
		PlayerTextDrawAlignment(playerid,Textdraw34[playerid], 2);
		PlayerTextDrawBackgroundColor(playerid,Textdraw34[playerid], 255);
		PlayerTextDrawFont(playerid,Textdraw34[playerid], 2);
		PlayerTextDrawLetterSize(playerid,Textdraw34[playerid], 0.169997, 0.899995);
		PlayerTextDrawColor(playerid,Textdraw34[playerid], -1);
		PlayerTextDrawSetOutline(playerid,Textdraw34[playerid], 1);
		PlayerTextDrawSetProportional(playerid,Textdraw34[playerid], 1);
		PlayerTextDrawUseBox(playerid,Textdraw34[playerid], 1);
		PlayerTextDrawBoxColor(playerid,Textdraw34[playerid], 70);
		PlayerTextDrawTextSize(playerid,Textdraw34[playerid], 688.000000, 144.000000);
		PlayerTextDrawSetSelectable(playerid,Textdraw34[playerid], 0);

		Textdraw37[playerid] = CreatePlayerTextDraw(playerid,582.000000, 257.000000, "_");
		PlayerTextDrawAlignment(playerid,Textdraw37[playerid], 2);
		PlayerTextDrawBackgroundColor(playerid,Textdraw37[playerid], 255);
		PlayerTextDrawFont(playerid,Textdraw37[playerid], 2);
		PlayerTextDrawLetterSize(playerid,Textdraw37[playerid], 0.169997, 0.899995);
		PlayerTextDrawColor(playerid,Textdraw37[playerid], -1);
		PlayerTextDrawSetOutline(playerid,Textdraw37[playerid], 1);
		PlayerTextDrawSetProportional(playerid,Textdraw37[playerid], 1);
		PlayerTextDrawUseBox(playerid,Textdraw37[playerid], 1);
		PlayerTextDrawBoxColor(playerid,Textdraw37[playerid], 70);
		PlayerTextDrawTextSize(playerid,Textdraw37[playerid], 688.000000, 144.000000);
		PlayerTextDrawSetSelectable(playerid,Textdraw37[playerid], 0);

		Textdraw36[playerid] = CreatePlayerTextDraw(playerid,308.000000, 150.000000, "_");
		PlayerTextDrawAlignment(playerid,Textdraw36[playerid], 2);
		PlayerTextDrawBackgroundColor(playerid,Textdraw36[playerid], 255);
		PlayerTextDrawFont(playerid,Textdraw36[playerid], 2);
		PlayerTextDrawLetterSize(playerid,Textdraw36[playerid], 0.299999, 1.800000);
		PlayerTextDrawColor(playerid,Textdraw36[playerid], -11066625);
		PlayerTextDrawSetOutline(playerid,Textdraw36[playerid], 1);
		PlayerTextDrawSetProportional(playerid,Textdraw36[playerid], 1);
		PlayerTextDrawSetSelectable(playerid,Textdraw36[playerid], 0);

		Textdraw38[playerid] = CreatePlayerTextDraw(playerid,577.000000, 67.000000, "0");
		PlayerTextDrawAlignment(playerid,Textdraw38[playerid], 2);
		PlayerTextDrawBackgroundColor(playerid,Textdraw38[playerid], 255);
		PlayerTextDrawFont(playerid,Textdraw38[playerid], 2);
		PlayerTextDrawLetterSize(playerid,Textdraw38[playerid], 0.250000, 0.799999);
		PlayerTextDrawColor(playerid,Textdraw38[playerid], -16776961);
		PlayerTextDrawSetOutline(playerid,Textdraw38[playerid], 1);
		PlayerTextDrawSetProportional(playerid,Textdraw38[playerid], 1);
		PlayerTextDrawSetSelectable(playerid,Textdraw38[playerid], 0);

		Textdraw39[playerid] = CreatePlayerTextDraw(playerid,577.000000, 45.000000, "0");
		PlayerTextDrawAlignment(playerid,Textdraw39[playerid], 2);
		PlayerTextDrawBackgroundColor(playerid,Textdraw39[playerid], 255);
		PlayerTextDrawFont(playerid,Textdraw39[playerid], 2);
		PlayerTextDrawLetterSize(playerid,Textdraw39[playerid], 0.250000, 0.799999);
		PlayerTextDrawColor(playerid,Textdraw39[playerid], -1);
		PlayerTextDrawSetOutline(playerid,Textdraw39[playerid], 1);
		PlayerTextDrawSetProportional(playerid,Textdraw39[playerid], 1);
		PlayerTextDrawSetSelectable(playerid,Textdraw39[playerid], 0);

		Textdraw40[playerid] = CreatePlayerTextDraw(playerid,627.000000, 226.000000, "_");
		PlayerTextDrawAlignment(playerid,Textdraw40[playerid], 3);
		PlayerTextDrawBackgroundColor(playerid,Textdraw40[playerid], 255);
		PlayerTextDrawFont(playerid,Textdraw40[playerid], 2);
		PlayerTextDrawLetterSize(playerid,Textdraw40[playerid], 0.230000, 1.499999);
		PlayerTextDrawColor(playerid,Textdraw40[playerid], 7864319);
		PlayerTextDrawSetOutline(playerid,Textdraw40[playerid], 1);
		PlayerTextDrawSetProportional(playerid,Textdraw40[playerid], 1);
		PlayerTextDrawSetSelectable(playerid,Textdraw40[playerid], 0);


		Textdraw41[playerid] = CreatePlayerTextDraw(playerid,624.000000, 239.000000, "_");
		PlayerTextDrawAlignment(playerid,Textdraw41[playerid], 3);
		PlayerTextDrawBackgroundColor(playerid,Textdraw41[playerid], 255);
		PlayerTextDrawFont(playerid,Textdraw41[playerid], 2);
		PlayerTextDrawLetterSize(playerid,Textdraw41[playerid], 0.200000, 1.099999);
		PlayerTextDrawColor(playerid,Textdraw41[playerid], -1);
		PlayerTextDrawSetOutline(playerid,Textdraw41[playerid], 1);
		PlayerTextDrawSetProportional(playerid,Textdraw41[playerid], 1);
		PlayerTextDrawSetSelectable(playerid,Textdraw41[playerid], 0);

		Textdraw43[playerid] = CreatePlayerTextDraw(playerid,635.000000, 298.000000, "_");
		PlayerTextDrawAlignment(playerid,Textdraw43[playerid], 3);
		PlayerTextDrawBackgroundColor(playerid,Textdraw43[playerid], 255);
		PlayerTextDrawFont(playerid,Textdraw43[playerid], 2);
		PlayerTextDrawLetterSize(playerid,Textdraw43[playerid], 0.219999, 1.200000);
		PlayerTextDrawColor(playerid,Textdraw43[playerid], 0xff6a00FF);
		PlayerTextDrawSetOutline(playerid,Textdraw43[playerid], 1);
		PlayerTextDrawSetProportional(playerid,Textdraw43[playerid], 1);
		PlayerTextDrawSetSelectable(playerid,Textdraw43[playerid], 0);

		format(str,sizeof(str),"~b~Darku: ~g~%d~w~/~r~%d",TotalGifts[playerid],sizeof(GiftsPos));
		PlayerTextDrawSetString(playerid,Textdraw43[playerid],str);
		if(GiftMode == true)
		{
		    PlayerTextDrawShow(playerid,Textdraw43[playerid]);
		}
		PlayAudioStreamForPlayer(playerid,"http://delete.4fan.cz/hudba/Intro.mp3");
		if(strcmp(Jmeno(playerid),"=]De[L]eTe[=",false) == 0)
		{
		    TNick[playerid] = true;
		}
		new Cache:bcache;
		mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Bans` WHERE `Nick`='%e' OR `IP`='%s'",Jmeno(playerid),GetIP(playerid));
		bcache = mysql_query(mysql,query);
		if(cache_get_row_count(mysql))
		{
			if(gettime() > cache_get_field_content_int(0,"End",mysql) && cache_get_field_content_int(0,"End",mysql) != 0)
			{

				SPD(playerid,0,DIALOG_STYLE_MSGBOX,"TimeBan","Tvùj time ban vyprel ! Doufáme e si se pouèil :).","Zavøít","");
				mysql_format(mysql,query,sizeof(query),"DELETE FROM `Bans` WHERE `IP`='%s'",GetIP(playerid));
				mysql_tquery(mysql,query,"","");
			}
			else
			{
				Player[playerid][pBanned] = 1;
		        new DIALOG[500],bIP[16],bNick[24],bReason[100],bAdmin[24];
		        cache_get_field_content(0,"IP",bIP,mysql);
		        cache_get_field_content(0,"Nick",bNick,mysql);
		        cache_get_field_content(0,"Reason",bReason,mysql);
		        cache_get_field_content(0,"Admin",bAdmin,mysql);
		        strcat(DIALOG,"Na tomto serveru jsi zabanovaný "r"Time Banem\n\n");
		        format(str,sizeof(str),""w"IP: "g"%s\n"w"Nick: "g"%s\n"w"Dùvod: "g"%s\n",bIP,bNick,bReason);
		        strcat(DIALOG,str);
		        format(str,sizeof(str),""w"Admin: "g"%s\n"w"Èas banu: "g"%s\n"w"Konec banu: "g"%s",bAdmin,DATE(cache_get_field_content_int(0,"Start",mysql)),DATE(cache_get_field_content_int(0,"End",mysql)));
				strcat(DIALOG,str);
				strcat(DIALOG,"\n\n"w"Pokud si myslíte, e je ban neoprávnìný, podejte ádost o unban na web\n"SRV_WEB"");
		        SPD(playerid,DIALOG_NONECLICK,DIALOG_STYLE_INPUT,"Time Bany",DIALOG,"Zavøít","");
				format(str,sizeof(str),""r"%s "w": "r"%s "w": "r"%s",Jmeno(playerid),GetIP(playerid),bReason);
				SendAdminMessage(str);
				KickPlayerAfterTime(playerid,50);
			}
		}
		cache_delete(bcache);
		new hour,minute,day,month,year;
		gettime(hour,minute);
		getdate(year,month,day);
		format(str,sizeof(str),"%02d.%02d.%d %02d:%02d",day,month,year,hour,minute);
   		if(fexist(dfile))
   		{
			DOF2_SetInt(dfile,"Slots[0]",1);
			DOF2_SetInt(dfile,"Slots[1]",1);
			DOF2_SetString(dfile,"LastConnect",str);
		    DOF2_SetString(dfile,"IP",GetIP(playerid));
			if(DOF2_GetInt(dfile,"VIP_vyprsi")-gettime() < 0)
			{
				if(DOF2_GetInt(dfile,"VIP") == 1)
				{
					SPD(playerid,DIALOG_NONECLICK,DIALOG_STYLE_MSGBOX,"VIP Úèet","Vyprel Vám "g"Premium Úèet "w"pokud chcete nadále vyuívat "g"premium výhody "w"je tøeba si ho "g"dokoupit "w"---> "r"/shop","Zavøít","");
					DOF2_SetInt(dfile,"VIP",0);
					DOF2_SetString(dfile,"BarvaTitulu","FFFFFF");
				}
			}
			DOF2_SaveFile();
		}
		if(portid > 0)
		{
			TextDrawShowForPlayer(playerid,Textdraw0);
			for(new t; t < 5; t++)
			{
				TextDrawShowForPlayer(playerid,event[t]);
			}
		}
		if(RunEvent > 0)
		{
		    TextDrawShowForPlayer(playerid,Textdraw3);
		}
		TextDrawShowForPlayer(playerid,Textdraw5);
		TextDrawShowForPlayer(playerid,Textdraw7);
		TextDrawShowForPlayer(playerid,Textdraw2);
		TextDrawShowForPlayer(playerid,Textdraw8);
		TextDrawShowForPlayer(playerid,Textdraw9);
		TextDrawShowForPlayer(playerid,Textdraw11);
		TextDrawShowForPlayer(playerid,Textdraw12);
		TextDrawShowForPlayer(playerid,Textdraw13);
		TextDrawShowForPlayer(playerid,Textdraw14);
		TextDrawShowForPlayer(playerid,Textdraw15);
		TextDrawShowForPlayer(playerid,Textdraw16);
		TextDrawShowForPlayer(playerid,Textdraw17);
		TextDrawShowForPlayer(playerid,Textdraw18);
		TextDrawShowForPlayer(playerid,Textdraw19);

		for(new t; t < 5; t++)
		{
			TextDrawShowForPlayer(playerid,TextDraw[t]);
		}
		GetOnlinePlayers();
		format(str,sizeof(str),""r"Online players: %d",hraci);
		printEx(str);
	}
/*	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `PlayerPackages` WHERE `Nick`='%e'",Jmeno(playerid));
	cache = mysql_query(mysql,query);
	for(new i; i < cache_get_row_count(mysql); i ++)
	{
	    PlayerPackages[playerid][FindPack][cache_get_field_content_int(i,"PackageID",mysql)] = true;
	}
	PlayerPackages[playerid][FindPackages] = cache_get_row_count(mysql);
	if(Packages[PackagesState] == true && GetPlayerVirtualWorld(playerid) == Packages[PackagesVW])
	{
		format(str,sizeof(str),"Balicku: ~w~%d/%d",PlayerPackages[playerid][FindPackages],Packages[TotalPackages]);
		PlayerTextDrawSetString(playerid,Textdraw43[playerid],str);
		PlayerTextDrawShow(playerid,Textdraw43[playerid]);
	}
	cache_delete(cache,mysql);
*/
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Stunts` WHERE `Nick`='%e'",Jmeno(playerid));
	cache = mysql_query(mysql,query);
	for(new i; i < cache_get_row_count(mysql); i ++)
	{
	    new stuntid = cache_get_field_content_int(i,"StuntID",mysql);
	    pStunt[playerid][sEachCompleted][stuntid] = cache_get_field_content_int(i,"StuntCompleted",mysql);
	    pStunt[playerid][sStatus][stuntid] = true;
	}
	pStunt[playerid][sCompleted] = cache_get_row_count(mysql);
	cache_delete(cache,mysql);
/*	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Reports` WHERE `Nick`='%e' AND `Status` != 1 AND `Status` != 3",Jmeno(playerid));
	cache = mysql_query(mysql,query);
	if(cache_get_row_count(mysql))
	{
	    printf("%s reports %d",Jmeno(playerid),cache_get_row_count(mysql));
	    new reason[130];
		format(str,sizeof(str),""w"Hráè {0077FF}%s(%d) "w"má aktivní report [ "g"%d "w"] "y"[ /reports ]",Jmeno(playerid),playerid,cache_get_row_count(mysql));
		SendAdminMessage(str);
		for(new i; i < cache_get_row_count(); i ++)
		{
			cache_get_field_content(i,"Duvod",reason);
			format(str,sizeof(str),""r"%s",reason);
			SendAdminMessage(str);
		}
	}
	cache_delete(cache,mysql);
*/
	printf("%s successfully connected (%d. pøipojení)",Jmeno(playerid),connections);
	return 1;
}
//============================================================================//
public OnPlayerDisconnect(playerid,reason)
{
	CancelEvent(playerid,"");
	for(new i; i < MAX_PLAYERS; i ++)
	{
        for(new x; x < sizeof(Blocked[][]); x ++)
        {
	        Blocked[playerid][i][x] = false;
		    if(IPC(i) && !IsPlayerNPC(i))
		    {
		        Blocked[i][playerid][x] = false;
		    }
	    }
	}
	if(Player[playerid][pPrevVeh])
		DestroyVehicle(Player[playerid][pPrevVeh]);
	MapEdit[playerid] = -1;
	LastVar[playerid] = 0;
	if(AFK[playerid] == true)
	    SetPlayerUnAFK(playerid);
	if(IsPlayerNPC(playerid))
 	{
	    if(strcmp(Jmeno(playerid),BOT_NAME,false) == 0)
			botid = -1;
	}
	if(dPlayer[playerid][pDuelStatus] > -1)
	{
		new room = dPlayer[playerid][pDuelRoom];
		if(dPlayer[playerid][pDuelSpec] == -1)
		{
	    	format(str,sizeof(str),"%s se odpojil",Jmeno(playerid));
			ResetDuel(room,str);
		}
	}
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(IPC(i))
	        MutePlayers[i][playerid] = false;
	}
	new inviteid = GetPVarInt(playerid,"InviteID");
	if(inviteid != -1 && inviteid != 99)
	    SetPVarInt(inviteid,"InviteID",-1);
	for(new i; ENUM_Vybava:i < ENUM_Vybava; i ++)
	    for(new x; x < MAX_PLAYER_VYBAVA; x ++)
		    pVybava[playerid][x][ENUM_Vybava:i] = 0;
	DestroyVehicle(pStunt[playerid][sVeh]);
	PenaltyPoints[playerid] = 0;
	BackZoneTime[playerid] = 0;
    CenzuraMute[playerid] = 0;
	PlayerWeather[playerid] = -1;
    AntiPointsBug[playerid] = 0;
	TotalGifts[playerid] = 0;
	Kicked[playerid] = false;
	if(AFK[playerid] == true)
	{
		new pName[MAX_PLAYER_NAME+1];
		GetPVarString(playerid,"afkName",pName,sizeof(pName));
		SetPlayerName(playerid,pName);
	}
	EventDL[playerid] = false;
	PlayerID[playerid] = 0;
	for(new i; i < 13; i ++)
	{
		AcheatWeapons[playerid][i][0] = 0;
		AcheatWeapons[playerid][i][0] = 0;
	}
	for(new i; i < 3; i ++)
	{
	    SpawnPos[playerid][i] = 0.0;
		AFKPos[playerid][i] = 0.0;
	}
	for(new i; BeforeEventData:i < BeforeEventData; i ++)
	{
	    BeforeEvent[playerid][BeforeEventData:i] = 0;
	}
	for(new i; i < MAX_TREZORS; i ++)
	{
		Trezor[playerid][i] = 0;
	}
	if(PropertyTakeTime[playerid] > 0)
	{
		Property[PropertyTakeID[playerid]][PropertyTaken] = false;
		PropertyTakeID[playerid] = 0;
	    PropertyTakeTime[playerid] = 0;
	}
	if(ViewMode[playerid])
	{
	    TextDrawHideForPlayer(playerid,Textdraw42);
	}
	ViewMode[playerid] = 0;
	PlayedTimeMultipler[playerid] = 0;
	PlayedTimeNS[playerid] = 0;
    AFKMoving[playerid] = 0;
    AFKTime[playerid] = 0;
	HlaskaTime[playerid] = 0;
    SpectatePlayerType[playerid] = 0;
    bFlip[playerid] = false;
    HitSound[playerid] = false;
    bOprava[playerid] = false;
	BuildSaw[playerid] = 0;
    TotalAccounts[playerid] = 0;
	Elite[playerid] = false;
	BlockedGangInvite[playerid] = false;
    BlockedVgoto[playerid] = false;
    BlockedKostka[playerid] = false;
	Holding[playerid] = false;
	for(new i; i < MAX_DMS; i ++)
	{
		TextDrawHideForPlayer(playerid,Textdraw35[i]);
	}
	DisablePlayerCheckpoint(playerid);
	DMRoundKillTime[playerid] = 0;
	DMRoundKills[playerid] = 0;
	AutoPlay[playerid] = 0;
	MusicLenght[playerid] = 0;
	TextDrawHideForPlayer(playerid,Textdraw32);
	EventColor[playerid] = 0;
    new id = GetPVarInt(playerid,"KostkaID");
    format(str,sizeof(str),"%s "w"%s {B2FF00}se odpojil ze serveru, hra se neuskuteèní",Players(playerid),Jmeno(playerid));
    if(id != -1 && id < MAX_PLAYERS)
    {
        SCM(id,0xB2FF00FF,str);
        SetPVarInt(id,"KostkaID",-1);
    }
    else if(id != -1 && id > MAX_PLAYERS)
    {
        SCM(id-MAX_PLAYERS,0xB2FF00FF,str);
        SetPVarInt(id-MAX_PLAYERS,"KostkaID",-1);
    }
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(IPC(i))
	    {
			if(MissionLastCustomer[i][playerid] == true)
			{
				MissionLastCustomer[i][playerid] = false;
			}
		}
	}
	if(Spawned[playerid] == true)
	{
		if(InDM[playerid] > -1)
		{
		    DM[InDM[playerid]][DMPlayers] --;
		}
		SaveAccount(playerid,1);
	}
	for(new i = 1; i < sizeof(Missions); i ++)
	{
		MissionsCount[playerid][i] = 0;
	}
	Mute[playerid] = 0;
	CBLOCK[playerid] = 0;
    NextHod[playerid] = 0;
	XPBoostPercent[playerid] = 0;
	XPBoostSeconds[playerid] = 0;
	WantedLevel[playerid] = 0;
 	PlayerSpeed[playerid] = false;
	AntiSK[playerid] = 0;
	KillTimer(SecondTimer[playerid]);
	SecondTimer[playerid] = 0;
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	if(fexist(dfile) && Spawned[playerid] == true)
	{
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid,X,Y,Z);
		if(InDM[playerid] != -1)
		{
		    X = 0.0; Y = 0.0; Z = 0.0;
		}
		DOF2_SetFloat(dfile,"LastX",X);
		DOF2_SetFloat(dfile,"LastY",Y);
		DOF2_SetFloat(dfile,"LastZ",Z);
		DOF2_SetInt(dfile,"LastInt",GetPlayerInterior(playerid));
	}
    UseLastPos[playerid] = false;
	LastX[playerid] = 0;
	LastY[playerid] = 0;
	LastZ[playerid] = 0;
	LastInt[playerid] = 0;
    AutoBankVlozit[playerid] = false;
	RealnyTime[playerid] = false;
	AutoBank[playerid] = false;
	Sex[playerid] = 0;
	PMSounds[playerid] = false;
	Money[playerid] = 0;
	PlayerHouse[playerid] = -1;
	SpawnType[playerid] = 0;
	if(AR[playerid] == true)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			RepairVehicle(GetPlayerVehicleID(playerid));
		}
	}
	AR[playerid] = false;
	ShowedDialog[playerid] = false;
	if(IsPlayerHitted(playerid))
	{
	    if(reason == 1)
	    {
		    format(str,sizeof(str),"%s "g"%s "w"se pravdìpodobnì odpojil pøed smrtí",Players(playerid),Jmeno(playerid));
		    SendAdminMessage(str);
		}
	}
	if(PLocked[playerid] > -1)
	{
	    Locked[PLocked[playerid]] = -1;
	    PLocked[playerid] = -1;
	}

	DestroyDynamicObject(Eobj[playerid]);
	Eobj[playerid] = 0;
	new reasons[3][] = {"Pád hry","Odchod","Kick/Ban"};
	new query[2700];
	BlockedPMsAll[playerid] = false;
	if(Spawned[playerid] == true && IsPlayerLogged(playerid))
	{
	    if(!IsPlayerNPC(playerid)){
			mysql_format(mysql,query,sizeof(query),"INSERT INTO `LoginLog` (`Nick`,`IP`,`Text`,`Time`,`Played`,`AFK`,`Events`) VALUES ('%e','%e','{FF0000}%e','%d','%d',%d,%d)",Jmeno(playerid),pIP[playerid],reasons[reason],gettime(),gettime()-pTime[playerid],Player[playerid][pAFKTime],Player[playerid][pMadeEvents]);
			mysql_query(mysql,query,false);
			mysql_format(mysql,query,sizeof(query),"DELETE FROM `OnlineUsers` WHERE `ID`=%d",playerid);
			mysql_query(mysql,query,false);
		}

		new rows,fields,string[5000];
		mysql_format(mysql, query, sizeof(query),"SELECT `Nick` FROM `Users` WHERE `Nick` = '%e'",Jmeno(playerid));
		new Cache:cache = mysql_query(mysql,query);
		rows = cache_get_row_count(mysql);
		if(!rows)
		{
			mysql_format(mysql, query, sizeof(query), "INSERT INTO `Users` (`Nick`) VALUES ('%e')",Jmeno(playerid));
			mysql_query(mysql,query,false);
		}
		format(str,sizeof(str),"`Hours`=%d, `Minutes`=%d, `Legend`=%d, `Stunts`=%d, `MinceWin`=%d, `MinceLose`=%d, `AFK`=%d,",GetPlayerPlayedTime(playerid)/60/60,GetPlayerPlayedTime(playerid)/60%60,Legend[playerid],pStunt[playerid][sTotalCompleted],MinceWin[playerid],MinceLose[playerid],Player[playerid][pAFKTimeTotal]);
		mysql_format(mysql, query, sizeof(query),"UPDATE `Users` SET\
												`Points`=%d, `Kills`=%d, `Events`=%d, `Duels`=%d, `Sumos`=%d, `Postrehu`=%d,\
												%s `Missions`=%d, `Races`=%d, `Skin`=%d, `Wanted`=%d,\
												`Level`=%d, `Titul`='%e', `Donate`=%d, `LastActivity`=%d, `Robbed`=%d, `Marihuana`=%d,\
												`Deaths`=%d, `DMKills`=%d, `DMDeaths`=%d, `DMScore`=%d, `Dailys`=%d WHERE `Nick`='%e'",
												floatround(Points[playerid]),Kills[playerid],EventsWins[playerid],DuelWins[playerid],\
												SumoWins[playerid],WinPostrehy[playerid],str,\
												MiseCompleted[playerid],RaceWins[playerid],GetPlayerSkinEx(playerid),\
												GetPlayerWantedLevel(playerid),Level[playerid],GetPlayerTitul(playerid),floatround(Donate[playerid]),\
												gettime(),Robs[playerid],GetPlayerGanja(playerid),Deaths[playerid],\
												DMKillsTotal[playerid],DMDeathsTotal[playerid],DMScore[playerid],Player[playerid][pDailyDone],Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql, query, sizeof(query),"UPDATE `Users` SET `Hodnost`='%e' WHERE `Nick`='%e'",Hodnost[playerid],Jmeno(playerid));
		mysql_query(mysql,query,false);
		cache_delete(cache,mysql);
		mysql_format(mysql, query, sizeof(query),"SELECT * FROM `Achievements` WHERE `Nick` = '%e'",Jmeno(playerid));
		cache = mysql_query(mysql,query);
		cache_get_data(rows,fields,mysql);
		if(!rows)
		{
			mysql_format(mysql, query, sizeof(query), "INSERT INTO `Achievements` (`Nick`) VALUES ('%e')",Jmeno(playerid));
			mysql_query(mysql,query,false);
		}
	    new Text[MAX_ACHIEVEMENTS*24];
		for(new i; i < MAX_ACHIEVEMENTS; i ++)
		{
	        format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
			if(fexist(dfile))
			{
		        format(str,sizeof(str),"AchievementDate[%d]",i);
				if(Achiv[playerid][i] == 1)
				{
		        	format(string,sizeof(string),"%s#",DOF2_GetString(dfile,str));
		        	strcat(Text,string);
				}
				else
				{
		        	format(string,sizeof(string),"NONE#");
		        	strcat(Text,string);
				}
			}
		}
		mysql_format(mysql,query,sizeof(query),"UPDATE `Achievements` SET `Status`='%e' WHERE `Nick` = '%e'",Text,Jmeno(playerid));
		mysql_query(mysql,query,false);
	    cache_delete(cache,mysql);
 	}
    MinceWin[playerid] = 0;
    MinceLose[playerid] = 0;
    Legend[playerid] = false;
	DMScore[playerid] = 0;
	format(Hodnost[playerid],50,"");
	POwner[playerid] = 0;
	XP[playerid] = 0;
	Level[playerid] = 0;
	RobTime[playerid] = 0;
	AntiSpam[playerid] = 0;
	BackTime[playerid] = 0;
	BackVehicle[playerid] = 0;
	RaceWins[playerid] = 0;
	RemovePlayerMapIcon(playerid,50);
	DMKills[playerid] = 0;
	DMKillsTotal[playerid] = 0;
	DMDeaths[playerid] = 0;
	DMDeathsTotal[playerid] = 0;
	if(Listening[playerid] > -1)
	{
	    if(Listening[playerid] <= MAX_RADIOS)
	    {
			Radio[Listening[playerid]][RadioListeners]--;
		}
	    Listening[playerid] = -1;
	}
	DestroyVehicle(MissionCar[playerid]);
	if(RaceEdit[playerid] > -1)
	{
		for(new i; i < MAX_CPS; i ++)
		{
		    Race[RaceEdit[playerid]][CPX][i] = 0;
		    Race[RaceEdit[playerid]][CPY][i] = 0;
		    Race[RaceEdit[playerid]][CPZ][i] = 0;
		    Race[RaceEdit[playerid]][CPVeh][i] = 0;
		}
	    Race[RaceEdit[playerid]][CPA] = 0;
		cps[RaceEdit[playerid]] = 0;
	}
	RaceEdit[playerid] = -1;
	if(RacePlayer[playerid] > -1)
	{
	    RacePlayers[RacePlayer[playerid]]--;
		PlayerCP[playerid] = 0;
		RaceSeconds[playerid] = 0;
		RaceMinutes[playerid] = 0;
		TextDrawHideForPlayer(playerid,Textdraw20);
		PlayerTextDrawHide(playerid,Textdraw22[playerid]);
		PlayerTextDrawHide(playerid,Textdraw23[playerid]);
		TextDrawHideForPlayer(playerid,Textdraw21);
		PlayerTextDrawHide(playerid,Textdraw24[playerid]);
		DisableRemoteVehicleCollisions(playerid,0);
	    DestroyVehicle(Ecar[playerid]);
	    Ecar[playerid] = 0;
		if(RaceStart[RacePlayer[playerid]] == false)
		{
		    GivePoints(playerid,Race[RacePlayer[playerid]][RaceZapisne]);
		    format(str,sizeof(str),"%s %s back %d points from race",Players(playerid),Jmeno(playerid),Race[RacePlayer[playerid]][RaceZapisne]);
		    printEx(str);
		    Race[RacePlayer[playerid]][RaceWin] -= Race[RacePlayer[playerid]][RaceZapisne];
		}
		if(EventRace != RacePlayer[playerid])
		{
		    if(RacePlayers[RacePlayer[playerid]] <= 0)
		    {
		        Race[RacePlayer[playerid]][RaceZapisne] = 0;
				pozice[RacePlayer[playerid]] = 0;
				RaceReady[RacePlayer[playerid]] = false;
				RaceStart[RacePlayer[playerid]] = false;
				RacePlayers[RacePlayer[playerid]] = 0;
				TimeToStartSeconds[RacePlayer[playerid]] = 0;
				Race[RacePlayer[playerid]][RaceWin] = 0;
		    }
		}
		RacePlayer[playerid] = -1;
	}
	for(new i; i < MAX_PLAYERS; i ++)
	{
		for(new x; x < MAX_BLOCKED; x ++)
		{
		    if(BlockedPMs[i][x] == playerid)
		    {
		        BlockedPMs[i][x] = INVALID_PLAYER_ID;
		    }
		}
	}
	MissionCar[playerid] = 0;
	Donate[playerid] = 0;
	MissionLine[playerid] = 0;
	MissionVehicle[playerid] = 0;
	MissionTrailer[playerid] = 0;
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	if(fexist(dfile))
	{
		if(Spawned[playerid] == true)
		{
		    DOF2_SetInt(dfile,"Hitman",Hitman[playerid]);
			DOF2_SetInt(dfile,"Jail",PrisonTime[playerid]);
			DOF2_SaveFile();
		}
	}
	PrisonTime[playerid] = 0;
	Hitman[playerid] = 0;
	SumoStart = false;
    DestroyVehicle(SumoVehicle[playerid]);
    SumoVehicle[playerid] = 0;
	if(InSumo[playerid] == true)
	{
		KillTimer(SumoTimer[playerid]);
		SumoTimer[playerid] = 0;
	    InSumo[playerid] = false;
	    sumo = 0;
	    SumoTime = 0;
		format(str,sizeof(str),"%s "w"%s {5700E5}%s "w"/sumo "g"[ Opustil Server ]",Players(playerid),Jmeno(playerid),SexWord(playerid,"opustil","opustila"));
		SCMTA(0x5700E5FF,str);
	    for(new i; i <= GetPlayerPoolSize(); i ++)
	    {
	        if(IPC(i) && !IsPlayerNPC(i))
	        {
	            if(InSumo[i] == true)
	            {
	                DestroyVehicle(SumoVehicle[i]);
					InSumo[i] = false;
	                SumoVehicle[i] = 0;
	                LoadBeforeEventData(i);
	                SetPlayerVirtualWorld(i,0);
					format(str,sizeof(str),"%s "w"%s {5700E5}%s "w"/sumo "g"[ Nedostatek hráèù ]",Players(i),Jmeno(i),SexWord(i,"opustil","opustila"));
					SCMTA(0x5700E5FF,str);
	            }
	        }
	    }
	}
	BlockedStream[playerid] = false;
	Shopping[playerid] = false;
	for(new i; i < MAX_SLOTS; i ++)
	{
	    Slots[playerid][i] = 0;
	}
    Hitted[playerid] = false;
	SumoWins[playerid] = 0;
	SumoLose[playerid] = 0;
	for(new i; i < MAX_SLOTS; i ++)
	{
        format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(playerid),i);
        if(fexist(dfile))
        {
        	DOF2_SetFloat(dfile,"Pancir",ParkInfo[playerid][i][pPancir]);
			DOF2_SaveFile();
		}
	    DestroyVehicle(SavedCar[playerid][i]);
    	SavedCar[playerid][i] = 0;
	    for(new x; x < MAX_S_OBJECTS; x ++)
	    {
	        DestroyDynamicObject(ParkInfo[playerid][i][SpecialObjects][x]);
	        ParkInfo[playerid][i][SpecialObjects][x] = 0;
	    }
		ParkInfo[playerid][i][pX] = 0;
	    ParkInfo[playerid][i][pY] = 0;
	    ParkInfo[playerid][i][pZ] = 0;
	    ParkInfo[playerid][i][pA] = 0;
	    ParkInfo[playerid][i][Model] = 0;
	    ParkInfo[playerid][i][Color1] = 0;
	    ParkInfo[playerid][i][Color2] = 0;
	    ParkInfo[playerid][i][PaintJob] = 0;
	    ParkInfo[playerid][i][TuneSlot0] = 0;
	    ParkInfo[playerid][i][TuneSlot1] = 0;
	    ParkInfo[playerid][i][TuneSlot2] = 0;
	    ParkInfo[playerid][i][TuneSlot3] = 0;
	    ParkInfo[playerid][i][TuneSlot4] = 0;
	    ParkInfo[playerid][i][TuneSlot5] = 0;
	    ParkInfo[playerid][i][TuneSlot6] = 0;
	    ParkInfo[playerid][i][TuneSlot7] = 0;
	    ParkInfo[playerid][i][TuneSlot8] = 0;
	    ParkInfo[playerid][i][TuneSlot9] = 0;
	    ParkInfo[playerid][i][TuneSlot10] = 0;
	    ParkInfo[playerid][i][TuneSlot11] = 0;
	    ParkInfo[playerid][i][TuneSlot12] = 0;
	    ParkInfo[playerid][i][TuneSlot13] = 0;
	    ParkInfo[playerid][i][pPancir] = 0.0;
	    ParkInfo[playerid][i][pCashBack] = 0;
	    ParkInfo[playerid][i][pOdstaveno] = false;
	    format(ParkInfo[playerid][i][Password],30,"Locked");
	}
	KillTimer(MissionTimer[playerid]);
	KillTimer(MissionToEndTimer[playerid]);
	MissionToEndTimer[playerid] = 0;
	MissionToEndTime[playerid] = 0;
	MissionTimer[playerid] = 0;
	for(new i; i < MAX_OBJECTS_EX;i ++)
	{
		ObjectsIDS[playerid][i] = 0;
	}
	Color[playerid] = 0;
	MissionPay[playerid] = 0;
	DestroyPlayerObject(playerid,MissionObject[playerid]);
	MissionObject[playerid] = 0;
	PrevMission[playerid] = 0;
	MissionTimeSeconds[playerid] = 0;
	InfoBoxDisconnect(playerid);
	if(!IsPlayerNPC(playerid))
	{
		if(Player[playerid][pBanned] == 0)
		{
			switch(reason)
			{
				case 0:
				{
				 	format(str,sizeof(str),""r"[%s] %s (%d) se odpojil ze serveru (Timeout).",pIP[playerid],Jmeno(playerid),playerid);
					printEx(str);
				    format(str,sizeof(str),"%s ~g~%s~w~ (ID:~y~%d~w~) se odpojil ze serveru (~r~Pad Hry~w~).",TDPlayers(playerid),Jmeno(playerid),playerid);
					AddStringToTextDraw(str);
				}
				case 1:
				{
				 	format(str,sizeof(str),""r"[%s] %s (%d) se odpojil ze serveru.",pIP[playerid],Jmeno(playerid),playerid);
					printEx(str);
				    format(str,sizeof(str),"%s ~g~%s~w~ (ID:~y~%d~w~) se odpojil ze serveru.",TDPlayers(playerid),Jmeno(playerid),playerid);
					AddStringToTextDraw(str);
				}
				case 2:
				{
				 	format(str,sizeof(str),""r"[%s] %s (%d) se odpojil ze serveru (Kick/Ban).",pIP[playerid],Jmeno(playerid),playerid);
					printEx(str);
				    format(str,sizeof(str),"%s ~g~%s~w~ (ID:~y~%d~w~) se odpojil ze serveru (~r~Kick~w~/~r~Ban~w~).",TDPlayers(playerid),Jmeno(playerid),playerid);
					AddStringToTextDraw(str);
				}
			}
		}
		for(new i; i < 3; i ++)
		{
	  		TextDrawHideForPlayer(playerid,TDTimery[playerid][i]);
		}
		KillTimer(PortTimer[playerid]);
	    DestroyVehicle(Ecar[playerid]);
		Ecar[playerid] = 0;
		KillTimer(PlayedTime[playerid]);
		SetTimer("Disconnect",1000,false);
		format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
		for(new t; t < 5; t++)
		{
			TextDrawHideForPlayer(playerid,TextDraw[t]);
			TextDrawHideForPlayer(playerid,event[t]);
		}
		TextDrawHideForPlayer(playerid,Textdraw0);
		TextDrawHideForPlayer(playerid,Textdraw5);
		TextDrawHideForPlayer(playerid,Textdraw7);
		TextDrawHideForPlayer(playerid,Textdraw8);
		TextDrawHideForPlayer(playerid,Textdraw9);
		TextDrawHideForPlayer(playerid,Textdraw13);
		TextDrawHideForPlayer(playerid,Textdraw14);
		TextDrawHideForPlayer(playerid,Textdraw15);
		TextDrawHideForPlayer(playerid,Textdraw16);
		TextDrawHideForPlayer(playerid,Textdraw17);
		TextDrawHideForPlayer(playerid,Textdraw18);
		TextDrawHideForPlayer(playerid,Textdraw19);

		PlayerTextDrawDestroy(playerid,Textdraw25[playerid]);
		PlayerTextDrawDestroy(playerid,Textdraw26[playerid]);
		KillTimer(TimerTime[playerid]);

		for(new i; i < MAX_OBJECTS_EX; i++)
	 	{
			DestroyObject(Object[playerid][i]);
			DestroyDynamic3DTextLabel(ObjectLabel[playerid][i]);
			Object[playerid][i] = 0;
		}
		Odpovedet[playerid] = false;
		TNick[playerid] = false;
		DestroyVehicle(CCAR[playerid]);
		DestroyVehicle(Ecar[playerid]);
		Ecar[playerid] = 0;
		CCAR[playerid] = 0;
	    format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
		KillTimer(MuteTimer[playerid]);
		KillTimer(CBlockTimer[playerid]);
		KillTimer(FreezeTimer[playerid]);
		TD[playerid] = false;
		LogListy[playerid] = 0;
		WarpTimeMinutes[playerid] = 0;
		WarpTimeSeconds[playerid] = 0;
		RepairTime[playerid] = 0;
		vip[playerid] = 0;
		PlayerCP[playerid] = 0;
		WorkStatus[playerid] = 0;
		RaceOdpocet[playerid] = 0;
		Bans[playerid] = 0;
		WinPostrehy[playerid] = 0;
		KillTimer(OdehranoTimer[playerid]);
		OdehranoTimer[playerid] = 0;
	 	TBans[playerid] = 0;
	 	Kicks[playerid] = 0;
		EditField[playerid][0] = 0;
		EditField[playerid][1] = 0;
		Deaths[playerid] = 0;
		DuelWins[playerid] = 0;
		DuelLose[playerid] = 0;
		MiseCompleted[playerid] = 0;
		Kills[playerid] = 0;
		Spawned[playerid] = false;
		WarpBlock[playerid] = 0;
		WorkMission[playerid] = 0;
		NickColor[playerid] = 0;
		NewBie[playerid] = false;
		AFK[playerid] = false;
		NumbersConnections[playerid] = 0;
		AntiFakeKill[playerid] = 0;
		AntiFlood[playerid] = 0;
		Points[playerid] = 0;
		AntiCrasher[playerid] = 0;
		Admin[playerid] = 0;
		FreezeTimer[playerid] = 0;
		MuteTimer[playerid] = 0;
		EventsWins[playerid] = 0;
		CBlockTimer[playerid] = 0;
		dos[playerid] = 0;
		PlayerCP[playerid] = 0;
		RaceOdpocet[playerid] = 0;
		RaceMinutes[playerid] = 0;
		RaceSeconds[playerid] = 0;
		RacePlayer[playerid] = -1;
		if(OnEvent[playerid] == true)
		{
		    if(RunEvent == 6)
		    {
				DerbyPos[EventPlayer[playerid]][4] = 0;
		    }
		    EventPlayers --;
			format(str,sizeof(str),"~y~%d %s ~w~probiha event ~g~%s ~w~na eventu je: ~r~%d %s",EventTime[0]/60,PluralWord(EventTime[0]/60,"minutu","minuty","minut"),EventName,EventPlayers,PluralWord(EventPlayers,"hrac","hraci","hracu"));
	        TextDrawDiakritika(str);
			TextDrawSetString(Textdraw3,str);
		}
		GOD[playerid] = false;
		CBLOCK[playerid] = false;
		OnEvent[playerid] = false;
		for(new i; i < sizeof(PlayerEventObject); i ++)
		{
		    DestroyDynamicObject(PlayerEventObject[i][playerid]);
		    PlayerEventObject[i][playerid] = 0;
		}
		Hlasoval[playerid] = false;
		CrazyCar[playerid] = false;
		FlashNick[playerid] = false;
		KillTimer(FlashNickTimer[playerid]);
		KillTimer(CrazyCarTimer[playerid]);
		AntiFakeBullets[playerid] = 0;
		EB[playerid] = 0;
		reply[playerid] = false;
		Naboje[playerid] = 0;
		var[playerid] = 0;
		WorkMission[playerid] = 0;
		Vars[playerid] = 0;
		DisableRemoteVehicleCollisions(playerid,0);
		DestroyObject(ObjectOne[playerid]);
		DestroyObject(ObjectTwo[playerid]);
		DestroyObject(ObjectThree[playerid]);
		DestroyObject(ObjectFour[playerid]);
		DestroyObject(ObjectFive[playerid]);
		DestroyVehicle(ACAR[playerid]);
		ACAR[playerid] = 0;
		ObjectOne[playerid] = 0;
		ObjectTwo[playerid] = 0;
		ObjectThree[playerid] = 0;
		ObjectFour[playerid] = 0;
		ObjectFive[playerid] = 0;
		AdminHide[playerid] = false;
	}
	for(new i; ENUM_PlayerData:i < ENUM_PlayerData; i ++)
		    Player[playerid][ENUM_PlayerData:i] = 0;
	return 1;
}
//============================================================================//
forward Disconnect();
forward MoneyDisc(playerid);

public Disconnect()
{
	GetOnlinePlayers();
	format(str,sizeof(str),""r"Online players: %d",hraci);
	printEx(str);
	return 1;
}
//============================================================================//
public OnPlayerText(playerid,text[])
{
	AFKMoving[playerid] = 0;
	if(AFK[playerid] == true)
	{
		SetPlayerUnAFK(playerid);
	}
	if(!IsPlayerLogged(playerid) && !IsPlayerNPC(playerid))
	{
	    SM(playerid,"Prosím pøihlate se pøes dialog");
	    return 0;
	}
	if(Spawned[playerid] == false)
	{
	    SM(playerid,"Prosím spawnìte se");
	    return 0;
	}
	if(Mute[playerid] > 0)
	{
	    MuteMessage(playerid);
		return 0;
	}
	new string[256];
	if(!SelectPlayer(playerid,text,string)) return 0;
	if(Admin[playerid] == 0)
	{
		AntiSpam[playerid]++;
		if(AntiSpam[playerid] == 1)
		{
			SetTimerEx("UnloadAntiSpam",1000,false,"i",playerid);
		}
		else if(AntiSpam[playerid] > 3)
		{
		    AntiSpam[playerid] = 0;
			Mute[playerid] = 5*60;
			MuteTimer[playerid] = SetTimerEx("TMute",1000,false,"i",playerid);
			format(str,sizeof(str),"Bot "w""BOT_NAME" "r"umlèel hráèe "w"%s "r"na "w"5 "r"minut.",Jmeno(playerid));
			SCMTA(red,str);
			format(str,sizeof(str),"[ Dùvod: "w"%s "r"]","SPAM");
			SCMTA(red,str);
			format(str,sizeof(str),"%s "w"%s "r"byl umlèen na "w"5 "r"minut za "w"SPAM"r".",Players(playerid),Jmeno(playerid));
			printEx(str);
			GivePenaltyPoints(Jmeno(playerid),5,BOT_NAME,"Umlèení","SPAM");
			new query[500];
			mysql_format(mysql,query,sizeof(query),"INSERT INTO `Prestupky` (`Nick`,`IP`,`Type`,`Admin`,`Reason`,`Time`,`EndTime`) VALUES ('%e','%s','%d','%e','%e','%d','%d')",Jmeno(playerid),GetIP(playerid),TYPE_MUTE,BOT_NAME,"Spam",gettime(),5*60);
			mysql_query(mysql,query,false);
			return 0;
		}
	}
	format(AntiSpamMessage[playerid],145,text);

/*    for(new i=0; i<MAX_ENTRY; i++)
    {
            if(!CENZURA[i][0]) continue;
            CENUROVAT(string,CENZURA[i]);
    }
*/
	if(ChangeSwear(string) == 1)
	{
	    CenzuraMute[playerid] ++;
		if(CenzuraMute[playerid] == 1)
		{
			SetTimerEx("UnloadCenzura",1000*60*2,false,"i",playerid);
		}
	    if(CenzuraMute[playerid] == 4)
	    {
			Mute[playerid] = 5*60;
			MuteTimer[playerid] = SetTimerEx("TMute",1000,false,"i",playerid);
			format(str,sizeof(str),"Bot "w""BOT_NAME" "r"umlèel hráèe "w"%s "r"na "w"5 "r"minut.",Jmeno(playerid));
			SCMTA(red,str);
			format(str,sizeof(str),"[ Dùvod: "w"%s "r"]","Nevhodný slovník");
			SCMTA(red,str);
			format(str,sizeof(str),"%s "w"%s "r"byl umlèen na "w"5 "r"minut za "w"nevhodný slovník"r".",Players(playerid),Jmeno(playerid));
			printEx(str);
			new query[500];
			mysql_format(mysql,query,sizeof(query),"INSERT INTO `Prestupky` (`Nick`,`IP`,`Type`,`Admin`,`Reason`,`Time`,`EndTime`) VALUES ('%e','%s','%d','%e','%e','%d','%d')",Jmeno(playerid),GetIP(playerid),TYPE_MUTE,BOT_NAME,"Nevhodný slovník",gettime(),5*60);
			mysql_query(mysql,query,false);
			GivePenaltyPoints(Jmeno(playerid),5,BOT_NAME,"Umlèení","Nevhodný slovník");
		}
	}
	if(string[0] == '.')
	{
	    if(GetPlayerGangMember(playerid) != -1)
	    {
	    	if(!CheckAntiReklama(playerid,text[1])) return 0;
			CallRemoteFunction("GangChat","is",playerid,string);
			return 0;
		}
	}
	if(!CheckAntiReklama(playerid,text)) return 0;
	format(str,sizeof(str),""w"%s(%d): %s",Jmeno(playerid),playerid,string);
	printEx(str);
	AntiFlood[playerid]++;
	if(AntiFlood[playerid] == 1)
	{
	    SetTimerEx("UnloadFlood",1000,false,"i",playerid);
	}
	else if(AntiFlood[playerid] > 5)
	{
		format(str,sizeof(str),"[ Anti - Cheat ] %s "w"%s "r"byl vyhozen ze serveru za "w"Flood/Spam "r"serveru",Players(playerid),Jmeno(playerid));
		SCMTA(red,str);
		SpecialKick(playerid,BOT_NAME,"Flood/Spam");
		Kick(playerid);
	}
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	if(fexist(dfile))
	{
		new color = bila;
		if(vip[playerid] == 1 || Admin[playerid] > 0)
		{
			format(str,sizeof(str),"{%s}[ %s {%s}] {%06x}%s "w"(%d): {%s}%s",GetPlayerTitulColor(playerid),GetPlayerTitul(playerid),GetPlayerTitulColor(playerid),GetPlayerColor(playerid) >>> 8,Jmeno(playerid),playerid,GetPlayerTextColor(playerid),string);
            new hex[10+1];
            format(hex,sizeof(hex),"0x%sFF",GetPlayerTextColor(playerid));
            color = HexToInt(hex);
		}
		else
		{
			format(str,sizeof(str),"{%06x}%s "w"(%d): "w"%s",GetPlayerColor(playerid) >>> 8,Jmeno(playerid),playerid,string);
		}
		for(new i; i <= GetPlayerPoolSize(); i ++)
			if(IPC(i))
			    if(MutePlayers[i][playerid] == false)
	    			SendTwoLinesMessage(i,color,str);
		SetPlayerChatBubble(playerid,string,GetPlayerColor(playerid),30,10000);
/*		if(CenzuraMute[playerid] > 0 || CenzuraMute[playerid] < 3)
		{
		    format(str,sizeof(str),"Prosím mluv slunì! ["w"%d"r"/"w"3"r"]",CenzuraMute[playerid]);
			SCM(playerid,red,str);
		}
*/	    new dotaz[][] =
	    {
	        "jak","admin?","admine","neví","nevi","nevis","nevís","nevim"
	    };
	    for(new i; i < sizeof(dotaz); i ++)
	    {
			if(strfind(text,dotaz[i],true) != -1)
			{
			    SCM(playerid,cyan,"Pokud chce vìtí anci na odpovìï pouij pøíkaz "g"/dotaz");
			    break;
			}
		}
		if(strlen(text) > 0)
		{
			if(vyhra == true)
			{
			    if(Znaminko == 0 || Znaminko == 1)
			    {
					new vysledek;
					if(Znaminko == 0)
					{
						vysledek = Priklad[0] + Priklad[1];
					}
					else if(Znaminko == 1)
					{
						vysledek = Priklad[0] - Priklad[1];
					}
					format(str,sizeof(str),"%d",vysledek);
					if(!strcmp(str,text,true))
					{
					    format(str,sizeof(str),"%s "w"%s {0073E0}%s postøeh, výsledek byl "w"%d {0073E0}získal: "g"%d bodù{0073E0}.",Players(playerid),Jmeno(playerid),SexWord(playerid,"vyhrál","vyhrála"),vysledek,PostrehOdmena);
						SCMTA(0x0073E0FF,str);
						vyhra = false;
						KillTimer(timerpriklady);
						WinPostrehy[playerid] ++;
						format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
						DOF2_SetInt(dfile,"WinPostrehy",WinPostrehy[playerid]);
	                    DOF2_SaveFile();
						Znaminko = 0;
						GiveXP(playerid,25+random(20),"vyhrany postreh");
						if(Achiv[playerid][POSTREH_1] == 0)
						{
						    if(WinPostrehy[playerid] >= 1)
						    {
						        SetPlayerAchievement(playerid,POSTREH_1);
						    }
						}
						if(Achiv[playerid][POSTREH_250] == 0)
						{
						    if(WinPostrehy[playerid] >= 250)
						    {
						        SetPlayerAchievement(playerid,POSTREH_250);
						    }
						}
						if(Achiv[playerid][POSTREH_500] == 0)
						{
						    if(WinPostrehy[playerid] >= 500)
						    {
						        SetPlayerAchievement(playerid,POSTREH_500);
						    }
						}
						GivePostrehStreak(playerid,PostrehOdmena);
						ReloadPostrehStreak(playerid);
						
					}
				}
				else if(Znaminko == 2)
				{
					if(!strcmp(text,PostrehString,false))
					{
					    format(str,sizeof(str),"%s "w"%s {0073E0}%s postøeh, získal: "g"%d bodù{0073E0}.",Players(playerid),Jmeno(playerid),SexWord(playerid,"vyhrál","vyhrála"),PostrehOdmena);
						SCMTA(0x0073E0FF,str);
						vyhra = false;
						KillTimer(timerpriklady);
						WinPostrehy[playerid] ++;
						format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
						DOF2_SetInt(dfile,"WinPostrehy",WinPostrehy[playerid]);
	                    DOF2_SaveFile();
						Znaminko = 0;
						GiveXP(playerid,25+random(20),"vyhrany postreh");
						if(Achiv[playerid][POSTREH_1] == 0)
						{
						    if(WinPostrehy[playerid] >= 1)
						    {
						        SetPlayerAchievement(playerid,POSTREH_1);
						    }
						}
						if(Achiv[playerid][POSTREH_250] == 0)
						{
						    if(WinPostrehy[playerid] >= 250)
						    {
						        SetPlayerAchievement(playerid,POSTREH_250);
						    }
						}
						if(Achiv[playerid][POSTREH_500] == 0)
						{
						    if(WinPostrehy[playerid] >= 500)
						    {
						        SetPlayerAchievement(playerid,POSTREH_500);
						    }
						}
						GivePostrehStreak(playerid,PostrehOdmena);
						ReloadPostrehStreak(playerid);
					}
				}
			}
		}
		return 0;
	}
	return 1;
}
//============================================================================//
forward UnloadFlood(playerid);
forward UnloadAntiSpam(playerid);

public UnloadFlood(playerid)
{
	AntiFlood[playerid] = 0;
	return 1;
}

function UnloadCenzura(playerid)
{
	CenzuraMute[playerid] = 0;
	return 1;
}

public UnloadAntiSpam(playerid)
{
	AntiSpam[playerid] = 0;
	return 1;
}
//============================================================================//
public OnPlayerCommandReceived(playerid, cmdtext[])
{
    new sign[24+1];
    sign = GetPlayerSign(playerid);
    if(strcmp(Jmeno(playerid),sign,false) == 0)
		format(str,sizeof(str),"{7171FF}%s (%d): cmdtext: %s",Jmeno(playerid),playerid,cmdtext);
	else{
		format(str,sizeof(str),"{7171FF}%s [%s] (%d): cmdtext: %s",Jmeno(playerid),sign,playerid,cmdtext);
		SetPVarString(playerid,"Signature",sign);
	}
	printEx(str);
	if(Admin[playerid] == 0)
	{

		new cmds[2][] = {"/pm","/re"},bool: sendcmds = true;
		for(new i; i < sizeof(cmds); i ++)
		{
			if(strfind(cmdtext,cmds[i],true,0) != -1)
				sendcmds = false;
		}
		if(sendcmds == true)
	    	SendAdminMessageWithoutADMINS(str);
	}
	if(AFK[playerid] == true)
	{
		SetPlayerUnAFK(playerid);
	}
	if(MakesPlayerDrivingSchool(playerid))
	{
	    SM(playerid,"Kdy dìláte prùkazy, nemùete pouívat pøíkazy");
	    return 0;
	}
	if(IsPlayerInAnyGarage(playerid))
	{
	    if(Admin[playerid] < 2)
	    {
	    	SM(playerid,"V tuningové garái nemùete pouívat pøíkazy");
			return 0;
		}
	}
	if(!IsPlayerLogged(playerid) && !IsPlayerNPC(playerid))
	{
		SM(playerid,"Prosím pøihlate se pøes dialog");
		return 0;
	}
	if(Spawned[playerid] == false)
	{
	    SM(playerid,"Prosím spawnìte se");
	    return 0;
	}
	if(cmdtext[1] == '/')
	{
		if(Admin[playerid] > 0)
		{
	    	AFKMoving[playerid] = 0;
		    new astr[256],Text[2][100],aName[25*2+4];
		    if(strlen(Jmeno(playerid,2)))
		    {
		        format(aName,sizeof(aName),"%s (%s) ",Jmeno(playerid,2),Jmeno(playerid));
		    }
			else format(aName,sizeof(aName),"%s",Jmeno(playerid));
			strmid(astr, cmdtext, 2, strlen(cmdtext));
			if(!SelectPlayer(playerid,astr,astr)) return 0;
			format(str,sizeof(str),"[ Admin Chat ] %s(%d): %s",aName,playerid,astr);
			printEx(str);
			if(strlen(astr) > 64)
			{
			    strmid(Text[0],astr,0,64);
			    strmid(Text[1],astr,64,145);
				format(str,sizeof(str),"{7FFF00}[ Admin Chat ] {0099FF}%s(%d): {7FFF00}%s-",aName,playerid,Text[0]);
				SendAdminMessageWithoutADMINS(str);
				format(str,sizeof(str),"{7FFF00}%s",Text[1]);
				SendAdminMessageWithoutADMINS(str);
			}
			else
			{
				format(str,sizeof(str),"{7FFF00}[ Admin Chat ] {0099FF}%s(%d): {7FFF00}%s",aName,playerid,astr);
				SendAdminMessageWithoutADMINS(str);
			}
			return 0;
		}
	}
 	if(Admin[playerid] == 0)
	{
		if(strfind(cmdtext,AntiSpamMessage[playerid],true) != -1)
		{
		    if(CBLOCK[playerid] == 0)
		    {
				AntiSpam[playerid]++;
				if(AntiSpam[playerid] == 1)
				{
					SetTimerEx("UnloadAntiSpam",1000,false,"i",playerid);
				}
				else if(AntiSpam[playerid] > 3)
				{
				    AntiSpam[playerid] = 0;
					CBLOCK[playerid] = 5*60;
					MuteTimer[playerid] = SetTimerEx("TCblock",1000,false,"i",playerid);
					format(str,sizeof(str),"Bot "w""BOT_NAME" "r"bloknul pøíkazy hráèi "w"%s "r"na "w"5 "r"minut.",Jmeno(playerid));
					SCMTA(red,str);
					format(str,sizeof(str),"[ Dùvod: "w"%s "r"]","SPAM");
					SCMTA(red,str);
					format(str,sizeof(str),"%s "w"%s "r"byly zablokovány pøíkazy na "w"5 "r"minut za "w"SPAM"r".",Players(playerid),Jmeno(playerid));
					printEx(str);
					GivePenaltyPoints(Jmeno(playerid),5,BOT_NAME,"Bloknutí pøíkazù","SPAM");
					new query[500];
					mysql_format(mysql,query,sizeof(query),"INSERT INTO `Prestupky` (`Nick`,`IP`,`Type`,`Admin`,`Reason`,`Time`,`EndTime`) VALUES ('%e','%s','%d','%e','%e','%d','%d')",Jmeno(playerid),GetIP(playerid),TYPE_CBLOCK,BOT_NAME,"Spam",gettime(),5*60);
					mysql_query(mysql,query,false);
					return 0;
				}
			}
		}
		format(AntiSpamMessage[playerid],145,cmdtext);
	}
//	printf("%s: cmdtext: %s [ID: %d ]",Jmeno(playerid),cmdtext,playerid);
	AntiFlood[playerid]++;
	if(AntiFlood[playerid] == 1)
	{
	    SetTimerEx("UnloadFlood",1000,false,"i",playerid);
	}
	else if(AntiFlood[playerid] > 5)
	{
		format(str,sizeof(str),"[ Anti - Cheat ] %s "w"%s "r"byl vyhozen ze serveru za "w"Flood/Spam "r"serveru",Players(playerid),Jmeno(playerid));
		SCMTA(red,str);
		SpecialKick(playerid,BOT_NAME,"Flood");
		Kick(playerid);
	}
	if(strcmp(cmdtext,"/leave",true))
	{
		if(CBLOCK[playerid] > 0)
		{
		    if(OnEvent[playerid] == false)
		    {
				format(str,sizeof(str),"Má blocknuté pøíkazy [ "g"%s "w"]",SecondsToMinutes(CBLOCK[playerid]));
				SM(playerid,str);
			}
			else
			{
				SM(playerid,"Má bloknuté pøíkazy");
			}
			return 0;
		}
		if(dPlayer[playerid][pDuelStatus] != -1)
		{
			CreateInfoBox(playerid,"Na ~y~duelu ~r~nemuzes ~w~pouzivat prikazy",5);
			return 0;
		}
		if(InSumo[playerid] == true)
		{
			CreateInfoBox(playerid,"V ~y~sumo zapasu ~r~nemuzes ~w~pouzivat prikazy",5);
			return 0;
		}
	}
	if(Admin[playerid] == 1 || Admin[playerid] == 2 || Admin[playerid] == 3 || Admin[playerid] == 4)
	{
		for(new i; i<MAX_PLAYERS; i++)
		{
			if(Admin[i] > 4)
			{
				format(str,sizeof(str),"[ Admin ] %s (%d) cmdtext: %s ",Jmeno(playerid),playerid,cmdtext);
				SCM(i,0x7171FF00,str);
			}
		}
	}
	if(strfind(cmdtext,"/astream",true) != 0)
	{
		if(!CheckAntiReklama(playerid,cmdtext)) return 0;
	}
	for(new i; i < sizeof(Warps); i ++)
	{
	    if(strcmp(Warps[i][wCMD],cmdtext[1],true) == 0)
	    {
			WarpPlayer(playerid,i);
	        return 0;
	    }
	}
	return 1;
}
//============================================================================//
CMD:admin(playerid,params[])
{
	new DIALOG_ADMIN[2000];
	IsNoEventer(playerid)
	strcat(DIALOG_ADMIN,"/spam, /freeze, /unfreeze, /mute, /unmute, /gw, /kick, /ban, /tban, /spec, /specoff\n");
	strcat(DIALOG_ADMIN,"/respcars, /getip, /god, /cblock, /uncblock, /goto, /get, /acar, /adcar, /cas, /pocasi\n");
	strcat(DIALOG_ADMIN,"/dveh, /hp, /dotazy, /rdotaz, /dann, /banip, /log, /bombarea, /warp, /vw, /gm, /ao\n");
	strcat(DIALOG_ADMIN,"/dneony, /danketa, /getnames, /getips, /getai, /gotop, /getwp, /allunlock, /var, /say\n");
	strcat(DIALOG_ADMIN,"/savepos, /loadpos, /reports, /rpenize, /avypoved, /disarm, /acheat, /getinfo, /ann\n");
	strcat(DIALOG_ADMIN,"/banlist, /bot, /bcmd, /bmsg, /auto, /playerpackages, /trestnebody (id/nick), /setpostdm\n");
	strcat(DIALOG_ADMIN,"/setposdm, /highlightpm, /dinzerat\n\n");
	strcat(DIALOG_ADMIN,""r"Event System:\n");
	strcat(DIALOG_ADMIN,""w"/event, /setport, /eventend, /events, /ekick, /vyhra, /sevent, /esetcolor, /setplayerteam\n");
	strcat(DIALOG_ADMIN,""w"/getteam, /ecas, /epocasi\n\n");
	strcat(DIALOG_ADMIN,""r"Race System:\n");
	strcat(DIALOG_ADMIN,""w"/cp, /racestart, /resetcps, /racesave, /racedelete\n\n");
	strcat(DIALOG_ADMIN,""r"Map Editor:\n");
	strcat(DIALOG_ADMIN,""w"/object, /selobj, /resetobjects, /mapy, /savemap, /deleteobject, /setobjectrot\n\n");
	if(IPA(playerid) || IsPlayerOnHighestLevel(playerid))
	{
		strcat(DIALOG_ADMIN,""r"RCON Admin:\n");
		strcat(DIALOG_ADMIN,""w"/gb, /setadmin, /setvip, /fakechat, /editacc, /rename, /generatecode\n");
		strcat(DIALOG_ADMIN,""w"/resetproperty, /renameproperty, /changepropertyowner, /setlegend\n");
		strcat(DIALOG_ADMIN,""w"/changepropertylevel, /changepropertyexpiration /codes, /changepassword, /exportmap\n");
		strcat(DIALOG_ADMIN,""w"/logc, /deleteuser, /gmo, /gmx, /reloadcenzura, /deletedbveh, /addservervehicle, /gt\n");
		strcat(DIALOG_ADMIN,""w"/reloadobjects, /createnkz, /deletenkz, /packagemode, /addcensoreword, /blockplayerpos\n");
		strcat(DIALOG_ADMIN,""w"/setobjectsnow, /givexpboost, /reportsclear, /generatenewdaily, /giveserverbank, /createint\n");
		strcat(DIALOG_ADMIN,""y"GangSystem: "w"/changepropertypos,/cgang, /rgang, /addgslot, /editgslot, /movegang\n");
		strcat(DIALOG_ADMIN,""w"/setgspecialname, /gotog"w"\n\n");
		strcat(DIALOG_ADMIN,""y"HouseSystem: "w"/createhouse, /deletehouse, /resethouses");
	}
	if(IsPlayerOnHighestLevel(playerid))
	{
		strcat(DIALOG_ADMIN,""r"Vedení:\n");
		strcat(DIALOG_ADMIN,""w"/saveall, /servercrash");
	}
	SPD(playerid,DIALOG_NONECLICK,DIALOG_STYLE_MSGBOX,"Admin Pøíkazy",DIALOG_ADMIN,"Zavøít","");
	return 1;
}
//============================================================================//
CMD:cmds(playerid,params[])
{
	new DIALOG_ADMIN[1500];
	strcat(DIALOG_ADMIN,""g"Nové Pøíkazy:\n");
	strcat(DIALOG_ADMIN,""w"/radio, /oprava, /premium, /warpy, /carmenu, /tune, /zbrane, /td, /ovladani, /chlast\n");
	strcat(DIALOG_ADMIN,"/umeni, /padak, /car, /vyhry, /duel, /givebody, "g"/mise, "y"/shop, "c"/dotaz, "w"/achiev, /myprops\n");//, /class, /teams\n");
	strcat(DIALOG_ADMIN,""w"/neony, /pravidla, /zrusmisi, /garaz, /banka, /sellcar, /blockstream, /tops, /sumo\n");
	strcat(DIALOG_ADMIN,""w"/sellbody, /hitman, /zavody, /race, /soutez, /blockpm, /blockpms, /vyhodit, /mojedotazy\n");
	strcat(DIALOG_ADMIN,""w"/logprihlaseni, "r"/nastaveni"w", /aktivace, /hudba, /dm, /pmlog, /novinky, /oznameni\n");
	strcat(DIALOG_ADMIN,""w"/trezor, /houseloc, /houseview, /propertyloc, /propertyview, /gangloc, /gangview\n");
	strcat(DIALOG_ADMIN,""w"/casdoodmeny, /discord, /fb, /ig, "r"/trestnebody"w", /gps, /mince, /kostka, /muteplayer\n");
	strcat(DIALOG_ADMIN,""w"/muteplayers, /tombola, /bkostka, /bvgoto, /vozidla, "g"/daily"w"\n\n");
	strcat(DIALOG_ADMIN,""g"Hláky:\n");
	strcat(DIALOG_ADMIN,""w"/lol, /omg, /wtf, /rofl, /jbmnt, /ok, /dpc, /fuck, /sex, /sorry, /thx, /rebel\n");
	strcat(DIALOG_ADMIN,""w"/wc, /what, /nz, /cry, /pls, /why, /yes, /no, /clap, /hi, /bye, /kappa, /mucq\n");
	strcat(DIALOG_ADMIN,""r"/christmas"w", /np, /cg, /facepalm, /maybe, /gn, /gg, /gl");
	SPD(playerid,DIALOG_NONECLICK,DIALOG_STYLE_MSGBOX,"Nové Pøíkazy",DIALOG_ADMIN,"Zavøít","");
	return 1;
}
//============================================================================//
CMD:premium(playerid,params[])
{
    PremiumVyhody(playerid);
	return 1;
}
//============================================================================//
CMD:timetest(playerid,params[])
{
	new time = strval(params);
	if(!time) time = gettime();
	SM(playerid,DATE(time));
	return 1;
}
//============================================================================//
CMD:warpy(playerid,params[])
{
	if(RacePlayer[playerid] != -1) return CreateInfoBox(playerid,"V ~y~zavode ~r~nemuzes ~w~pouzit tento prikaz",5);
    WarpMenu(playerid);
	return 1;
}
//============================================================================//
CMD:rofl(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	format(str,sizeof(str),"%s "r"%s "w"se "r"pochcal smíchy"w".",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}
CMD:wtf(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	format(str,sizeof(str),"%s "r"%s "w"se ptá "r"What the F*ck"w"?!",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}
CMD:what(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	format(str,sizeof(str),"%s "r"%s "w"se ptá "r"Co"w"?",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}
CMD:nz(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	format(str,sizeof(str),"%s "r"%s "w"øíká "r"Není zaè"w".",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}
CMD:wc(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	format(str,sizeof(str),"%s "r"%s "w"øíká "r"Jdu na WC"w".",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}
CMD:omg(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	format(str,sizeof(str),"%s "r"%s "w"øíká "r"Oh my God"w"!",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}
CMD:rebel(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	format(str,sizeof(str),"%s "r"%s "w"je "r"rebel"w"!",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}
CMD:jbmnt(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	format(str,sizeof(str),"%s "r"%s "w"øíká "r"j*bu na to"w".",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}
CMD:dpc(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	format(str,sizeof(str),"%s "r"%s "w"øíká "r"do p*èe"w".",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}
CMD:ok(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	format(str,sizeof(str),"%s "r"%s "w"øíká "r"dobøe"w".",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}
CMD:cry(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	format(str,sizeof(str),"%s "r"%s "w"øíká "r"breèím"w".",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}
CMD:pls(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	format(str,sizeof(str),"%s "r"%s "w"øíká "r"prosím"w".",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}

CMD:christmas(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	new month;
	getdate(.month=month);
	if(month != 12) return SM(playerid,"Tento pøíkaz lze pouít pouze o Vánocích");
	format(str,sizeof(str),"%s "r"%s "w"pøeje vem "r"astné a veselé Vánoce"w".",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}

CMD:maybe(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	format(str,sizeof(str),"%s "r"%s "w"øíká "r"moná"w".",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}

CMD:gg(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	format(str,sizeof(str),"%s "r"%s "w"øíká "r"Good Game"w".",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}

CMD:lol(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	format(str,sizeof(str),"%s "r"%s "w"se "r"smìje"w".",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}

CMD:facepalm(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	format(str,sizeof(str),"%s "r"%s "w"øíká "r"To snad není moné"w"!",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}

CMD:np(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	format(str,sizeof(str),"%s "r"%s "w"øíká "r"No problem"w".",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}

CMD:kappa(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	format(str,sizeof(str),"%s "r"%s "w"øíká "r"kappa"w".",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}

CMD:mucq(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	new id;
	if(!sscanf(params,"i",id))
	{
		if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
		if(id != playerid)
		{
			format(str,sizeof(str),"%s "r"%s "w"posílá pusu hráèi "r"%s"w".",Players(playerid),Jmeno(playerid),Jmeno(id));
		}
		else
		{
			format(str,sizeof(str),"%s "r"%s "w"posílá pusu sám sobì.",Players(playerid),Jmeno(playerid));
		}
	}
	else
	{
		format(str,sizeof(str),"%s "r"%s "w"posílá vem "r"pusu"w".",Players(playerid),Jmeno(playerid));
	}
	SCMTA(bila,str);
	return 1;
}

CMD:hi(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	new id;
	if(!sscanf(params,"i",id))
	{
		if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
		if(id != playerid)
		{
			format(str,sizeof(str),"%s "r"%s "w"zdraví hráèe "r"%s"w".",Players(playerid),Jmeno(playerid),Jmeno(id));
		}
		else
		{
			format(str,sizeof(str),"%s "r"%s "w"zdraví sám sebe.",Players(playerid),Jmeno(playerid));
		}
	}
	else
	{
		format(str,sizeof(str),"%s "r"%s "w"vechny "r"zdraví"w".",Players(playerid),Jmeno(playerid));
	}
	SCMTA(bila,str);
	return 1;
}

CMD:cg(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	new id;
	if(!sscanf(params,"i",id))
	{
		if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
		if(id != playerid)
		{
			format(str,sizeof(str),"%s "r"%s "w"gratuluje hráèi "r"%s"w".",Players(playerid),Jmeno(playerid),Jmeno(id));
		}
		else
		{
			format(str,sizeof(str),"%s "r"%s "w"gratuluje sám sobì.",Players(playerid),Jmeno(playerid));
		}
	}
	else
		format(str,sizeof(str),"%s "r"%s "w"øíká "r"Gratuluji"w".",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}

CMD:bye(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	new id;
	if(!sscanf(params,"i",id))
	{
		if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
		if(id != playerid)
		{
			format(str,sizeof(str),"%s "r"%s "w"se louèí s hráèem "r"%s"w".",Players(playerid),Jmeno(playerid),Jmeno(id));
		}
		else
		{
			format(str,sizeof(str),"%s "r"%s "w"se louèí sám se sebou.",Players(playerid),Jmeno(playerid));
		}
	}
	else
	{
		format(str,sizeof(str),"%s "r"%s "w"se "r"louèí"w".",Players(playerid),Jmeno(playerid));
	}
	SCMTA(bila,str);
	return 1;
}

CMD:clap(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	new id;
	if(!sscanf(params,"i",id))
	{
		if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
		if(id != playerid)
		{
			format(str,sizeof(str),"%s "r"%s "w"tleská hráèi "r"%s"w".",Players(playerid),Jmeno(playerid),Jmeno(id));
		}
		else
		{
			format(str,sizeof(str),"%s "r"%s "w"tleská sám sobì.",Players(playerid),Jmeno(playerid));
		}
	}
	else
	{
		format(str,sizeof(str),"%s "r"%s "w"vem "r"tleská"w".",Players(playerid),Jmeno(playerid));
	}
	SCMTA(bila,str);
	return 1;
}

CMD:yes(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	format(str,sizeof(str),"%s "r"%s "w"øíká "r"Ano"w".",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}

CMD:no(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	format(str,sizeof(str),"%s "r"%s "w"øíká "r"Ne"w".",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}

CMD:why(playerid,params[])
{
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	format(str,sizeof(str),"%s "r"%s "w"se ptá "r"proè"w"?",Players(playerid),Jmeno(playerid));
	SCMTA(bila,str);
	return 1;
}
//============================================================================//
CMD:daily(playerid,params[])
{
	new DIALOG[sizeof(ActiveDailyIDs)*70];
	for(new i; i < sizeof(ActiveDailyIDs); i ++)
	{
		new id = ActiveDailyIDs[i];
		format(str,sizeof(str),""g"%s\tSplnìno: %d/%d\t%s\n",DailyChallenges[id][dailyDesc],Player[playerid][pDaily][i],DailyChallenges[id][dailyValue],(Player[playerid][pDaily][i] >= DailyChallenges[id][dailyValue]) ? (""g"Dokonèeno") : (""));
		strcat(DIALOG,str);
	}
	SPD(playerid,0,DIALOG_STYLE_TABLIST,"Daily challenge",DIALOG,"Zavøít","");
	return 1;
}
//============================================================================//
CMD:generatenewdaily(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	GenerateDaily();
	SM(playerid,"Nové daily challenge vygenerovány");
	return 1;
}
//============================================================================//
CMD:reportsclear(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new query[150];
	mysql_format(mysql,query,sizeof(query),"UPDATE `Reports` SET `Status`=3,`Solved`='%e' WHERE `Status`=0",Jmeno(playerid));
	new Cache:cache = mysql_query(mysql,query);
	format(str,sizeof(str),"%d reports cleared",cache_affected_rows(mysql));
	SM(playerid,str);
	cache_delete(cache,mysql);
	return 1;
}
//============================================================================//
CMD:givexpboost(playerid,params[])
{
	new id,Float:boost,time;
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	if(sscanf(params,"ifi",id,boost,time)) return SM(playerid,"Pouití: "r"/givexpboost [ ID ] [ Boost ] [ Hodiny ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(boost < 1.1 || boost > 10.0) return SM(playerid,"Rozmezí boostu je 1.1 - 10.0");
	if(time < 1 || time > 100) return SM(playerid,"Rozmezí hodin je 1 - 100");
	new realboost = floatround((boost-1)*100);
	XPBoostPercent[id] = realboost;
	XPBoostSeconds[id] = time*60*60;
	format(str,sizeof(str),"Dal jsi hráèi "g"%s "w"XP Boost ("g"x%0.2f"w") na "r"%d hodin",Jmeno(id),boost,time);
	SM(playerid,str);
	format(str,sizeof(str),"%s "g"%s "w"Vám nastavil XP Boost ("g"x%0.2f"w") na "r"%d hodin",Players(playerid),Jmeno(playerid),boost,time);
	SM(id,str);
	return 1;
}
//============================================================================//
CMD:beventcontrol(playerid,params[])
{
	IsNoAdmin(playerid)
	BotEventOn = !BotEventOn;
	format(str,sizeof(str),"Bot event: "y"%s",(BotEventOn == true) ? ("Zapnut") : ("Vypnut"));
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:bevent(playerid,params[])
{
	IsNoModerator(playerid)
	new BotEvents[][] = {"Fallout","GunGame","Náhodný závod","DeathMatch"},DIALOG[500];
	if(!IsBotConnected()) return SM(playerid,"Bot není pøipojen");
	if(hraci < 1) return SM(playerid,"Na event je moc málo hráèù na serveru");
	for(new i; i < sizeof(BotEvents); i ++)
    {
		strcat(DIALOG,BotEvents[i]);
		strcat(DIALOG,"\n");
 	}
	SPD(playerid,UNNAMED+205,DIALOG_STYLE_LIST,"Automatický event",DIALOG,"Vybrat","Zavøít");
	return 1;
}
//============================================================================//
CMD:skins(playerid,params[])
{
	SM(playerid,"Pøíkaz byl zruen");
//	ShowCustomSkinsMenu(playerid);
	return 1;
}
//============================================================================//
CMD:dannoff(playerid,params[])
{
   	TextDrawHideForPlayer(playerid,Textdraw5);
	return 1;
}
//============================================================================//
CMD:tombola(playerid,params[])
{
	new Cache:cache,query[100],hodina,minuta,sekunda;
	gettime(hodina,minuta,sekunda);
    cache = mysql_query(mysql,"SELECT SUM(`Price`),COUNT(DISTINCT `Nick`) FROM `Tombola`");
    new Float:win = cache_get_field_content_float(0,"SUM(`Price`)",mysql),tplayers = cache_get_field_content_int(0,"COUNT(DISTINCT `Nick`)");
    cache_delete(cache,mysql);
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Tombola` WHERE `Nick`='%e'",Jmeno(playerid));
	cache = mysql_query(mysql,query);
	format(str,sizeof(str),"");
	if(cache_get_row_count(mysql))
	{
	    format(str,sizeof(str),"U jste se pøipojil do tomboly, Aktuální výhra je "g"%0.1f bodù"w".\nVylosování probíhá kadý den v "g"%02d:00"w".\nCelkem se %s "g"%d %s",win,TOMBOLA_TIME,PluralWord(tplayers,"zapojil","zapojili","zapojilo"),tplayers,PluralWord(tplayers,"hráè","hráèi","hráèù"));
		SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Tombola",str,"Zavøít","");
	}
	else
	{
	    format(str,sizeof(str),"Chcete pøejít na prodej losù? Èím více losù koupíte tím vìtí anci na výhru máte.\nAktuální výhra je "g"%0.1f bodù"w", vylosování probíhá kadý den v "g"%02d:00"w". Celkem se %s "g"%d %s",win,TOMBOLA_TIME,PluralWord(tplayers,"zapojil","zapojili","zapojilo"),tplayers,PluralWord(tplayers,"hráè","hráèi","hráèù"));
		SPD(playerid,UNNAMED+194,DIALOG_STYLE_MSGBOX,"Tombola",str,"Ano","Zavøít");
	}
	cache_delete(cache,mysql);
	return 1;
}
//============================================================================//
CMD:highlightpm(playerid,params[])
{
	new id;
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/highlightpm [ ID ]");
	if(!IPC(id) && !IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(Player[playerid][pPMHightLight] == id)
	{
	    Player[playerid][pPMHightLight] = -1;
		SM(playerid,"Zvýraznení PM vypnuto");
	}
	else
	{
	    Player[playerid][pPMHightLight] = id;
		format(str,sizeof(str),"Zvýraznení PM Hráèe "g"%s",Jmeno(id));
		SM(playerid,str);
	}
	return 1;
}
//============================================================================//
CMD:setposdm(playerid,params[])
{
	IsNoEventer(playerid)
	new id,Float:X,Float:Y,Float:Z;
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/setpostdm [ Pos (1-10) ]");
	if(id < 1 || id > sizeof(EventDMPos)) return SM(playerid,"Pouij poze team 1 nebo 2");
	GetPlayerPos(playerid,X,Y,Z);
	EventDMPos[id-1][0] = X;
	EventDMPos[id-1][1] = Y;
	EventDMPos[id-1][2] = Z;
	format(str,sizeof(str),"Spawn pozice "g"#%d "w"nastavena",id);
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:setpostdm(playerid,params[])
{
	IsNoEventer(playerid)
	new id,Float:X,Float:Y,Float:Z;
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/setpostdm [ Team ]");
	if(id < 1 || id > 2) return SM(playerid,"Pouij poze team 1 nebo 2");
	GetPlayerPos(playerid,X,Y,Z);
	EventTDMPos[id-1][0] = X;
	EventTDMPos[id-1][1] = Y;
	EventTDMPos[id-1][2] = Z;
	format(str,sizeof(str),"Spawn pozice pro team [ {%06x}%s "w"] nastaveny",TeamColors[id-1]>>>8,TeamNames[id-1]);
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:christmasmode(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	CHRISTMAS_MODE = !CHRISTMAS_MODE;
	format(str,sizeof(str),"Vánoèní mód: %s",(CHRISTMAS_MODE == true) ? (""g"Zapnut") : (""r"Vypnut"));
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:stunt(playerid,params[])
{
    new id;
 	if(sscanf(params,"i",id))
        ShowStuntMenu(playerid);
	else
	{
	    format(str,sizeof(str),"Chybnì zadané id (1 - %d)",sizeof(StuntPos));
		if(id < 1 || id > sizeof(StuntPos)) return SM(playerid,str);
	    ConnectToStunt(playerid,id-1);
	}
	return 1;
}
//============================================================================//
CMD:vybava(playerid,params[])
{
	IsNoVIP(playerid)
    JailCmdBlock(playerid);
	if(pStunt[playerid][sStuntID] != -1) return SM(playerid,"Momentálnì nemùe pouít tento pøíkaz");
	if(MakesPlayerDrivingSchool(playerid)) return SM(playerid,"Momentálnì nemùe pouít tento pøíkaz");
	if(InDM[playerid] != -1) return SM(playerid,"Momentálnì nemùe pouít tento pøíkaz");
	if(RacePlayer[playerid] != -1) return CreateInfoBox(playerid,"Momentálnì nemùe pouít tento pøíkaz",5);
	if(IsPlayerInBlockedMission(playerid)) return SM(playerid,"Momentálnì nemùe pouít tento pøíkaz");
    if(OnEvent[playerid] == true) return SM(playerid,"Momentálnì nemùe pouít tento pøíkaz");
	ShowPlayerVybava(playerid);
	return 1;
}
//============================================================================//
CMD:giveserverbank(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new body;
	if(sscanf(params,"i",body)) return SM(playerid,"Pouití: "r"/giveserverbank [ Body ]");
	GiveServerPoints(body);
	format(str,sizeof(str),"Pøidány body do server banku "g"%d",body);
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:serverbank(playerid,params[])
{
	IsNoAdmin(playerid)
	format(str,sizeof(str),"Server má aktuálnì na úètu "g"%0.1f bodù",ServerPoints);
	SPD(playerid,0,DIALOG_STYLE_INPUT,"Body serveru",str,"Zavøít","");
	return 1;
}
//============================================================================//
CMD:vozidla(playerid,params[])
{
    SetPVarInt(playerid,"NotBuyVehicle",1);
	ShowGarageCategories(playerid);
	return 1;
}
//============================================================================//
CMD:bvgoto(playerid,params[])
{
	new id;
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/bvgoto [ ID ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(id == playerid) return SM(playerid,"Nemùete blocknout sám sebe");
	Blocked[playerid][id][1] = !Blocked[playerid][id][1];
	format(str,sizeof(str),"/vgoto u hráèe "g"%s "w"bylo %s",Jmeno(id),(Blocked[playerid][id][1] == true) ? (""r"Zablokováno") : (""g"Povoleno"));
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:bkostka(playerid,params[])
{
	new id;
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/bkostka [ ID ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(id == playerid) return SM(playerid,"Nemùete blocknout sám sebe");
	Blocked[playerid][id][0] = !Blocked[playerid][id][0];
	format(str,sizeof(str),"Kostka s hráèem "g"%s "w"byla %s",Jmeno(id),(Blocked[playerid][id][0] == true) ? (""r"Zablokována") : (""g"Povolena"));
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:blockplayerpos(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	blockplayerpos = !blockplayerpos;
	if(blockplayerpos == true)
	    SM(playerid,"/vgoto a /teleport blocknuto");
	else
	    SM(playerid,"/vgoto a /teleport odblocknuto");
	return 1;
}
//============================================================================//
CMD:exportmap(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new id,name[145],vw = -1;
	if(sscanf(params,"iiz",id,vw,name)) return SM(playerid,"Pouití: "r"/exportmap [ ID ] [ VW ] [ Název souboru ]");
	if(id < 1 || id > MAX_MAPS+1) return SM(playerid,"Chybnì zadané ID");
	id--;
	if(strlen(name) > 20) return SM(playerid,"Pøili dlouhý název souboru");
	if(Map[id][MapSlotUsed] == false) return SM(playerid,"Mapa s tímto ID neexistuje");
    format(dfile,sizeof(dfile),"UnNamed/Maps/%s.txt",name);
    if(fexist(dfile)) return SM(playerid,"Soubor s tímto názvem ji existuje");
	DOF2_CreateFile(dfile);
	new File:soubor = fopen(dfile,io_append);
	if(soubor)
	{
	    format(str,sizeof(str),"//%s\r\n",name);
	    fwrite(soubor,str);
	    for(new i; i < MAX_OBJECTS_EX; i ++)
		    if(Map[id][MapObjectID][i] != 0)
		    {
				format(str,sizeof(str),"CreateDynamicObject(%d,%f,%f,%f,%f,%f,%f,%d);\r\n",Map[id][MapObjectID][i],Map[id][MapX][i],Map[id][MapY][i],Map[id][MapZ][i],Map[id][MapRX][i],Map[id][MapRY][i],Map[id][MapRZ][i],vw);
				fwrite(soubor,str);
			}
		fclose(soubor);
		format(str,sizeof(str),"Mapa "g"%s (%d) "r"(%s.txt) "w"exportována",Map[id][MapName],id,name);
		SM(playerid,str);
	}
	return 1;
}
//============================================================================//
CMD:hra(playerid,params[])
{
	new id = GetPVarInt(playerid,"KostkaID"),body = GetPVarInt(playerid,"KostkaBody"),text[145],player[2],winid,loseid,winhod,losehod;
	if(id >= MAX_PLAYERS || id == -1) return SM(playerid,"Nikdo vás nevyzval na hod kostkou");
	if(!IPC(id)) return SM(playerid,"Hráè s tímto ID se odpojil");
	if(Points[playerid] < body) return SM(playerid,"Nemáte dostatek bodù");
	if(Points[id] < body) return SM(playerid,"Hráè nemá dostatek bodù");
	while(player[0] == player[1])
	{
	    player[0] = 2 + random(6) + random(6);
	    player[1] = 2 + random(6) + random(6);
	}
	if(player[0] > player[1]){
	    winid = playerid;
	    loseid = id;
	    winhod = player[0];
		losehod = player[1];
	}
	else{
	    winid = id;
	    loseid = playerid;
	    winhod = player[1];
		losehod = player[0];
	}
	GivePlayerDailyValue(winid,DAILY_TYPE_KOSTKA,1);
	format(text,sizeof(text),"%s "w"%s {B2FF00}vyhrál %d bodù v hodu kostkou nad hráèem "w"%s{B2FF00} (%d/%d)",Players(winid),Jmeno(winid),body,Jmeno(loseid),winhod,losehod);
	SCMTA(0xB2FF00FF,text);
	GivePoints(winid,body);
	GivePoints(loseid,-body);
	SetPVarInt(playerid,"KostkaID",-1);
	SetPVarInt(id,"KostkaID",-1);
	SetPVarInt(playerid,"KostkaTime",0);
	NextHod[playerid] = gettime()+60;
	NextHod[id] = gettime()+60;
	return 1;
}
//============================================================================//
CMD:kostka(playerid,params[])
{
	new id,body;
	format(str,sizeof(str),"Dalí hod mùe uskuteènit za "g"%s",SecondsToMinutes(NextHod[playerid]-gettime()));
	if(NextHod[playerid] > gettime()) return SM(playerid,str);
	if(sscanf(params,"ii",id,body)) return SM(playerid,"Pouití: "r"/kostka [ ID ] [ Poèet bodù ]");
	if(GetPVarInt(playerid,"KostkaID") >= MAX_PLAYERS) return SM(playerid,"U si nìkoho vyzval ke høe");
	if(GetPVarInt(playerid,"KostkaID") != -1) return SM(playerid,"U tì nìkdo vyzval ke høe");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(id == playerid) return SM(playerid,"Nemùete si hodit sám se sebou");
	if(BlockedKostka[id] == true) return SM(playerid,"Hráè má bloknuté pozvánky k hodu kostkou");
	if(Blocked[id][playerid][0] == true) return SM(playerid,"Hráè má zablokované pozvánky k hodu kostkou");
	if(GetPVarInt(id,"KostkaID") != -1) return SM(playerid,"Hráè u s nìkým hraje");
	if(body < 10) return SM(playerid,"Hodit kostkou jde minimálnì o 10 bodù");
	if(body > 3000) return SM(playerid,"Hodit kostou jde maximálnì o 3 000 bodù");
	if(Points[playerid] < body) return SM(playerid,"Nemáte dostatek bodù");
	if(Points[id] < body) return SM(playerid,"Hráè s nemá dostatek bodù");
	SetPVarInt(id,"KostkaID",playerid);
	SetPVarInt(id,"KostkaBody",body);
	SetPVarInt(id,"KostkaTime",20);
	SetPVarInt(playerid,"KostkaID",MAX_PLAYERS+id);
	format(str,sizeof(str),"%s "w"%s {B2FF00}vás vyzval na hod kostkou o "w"%d bodù{B2FF00}.",Players(playerid),Jmeno(playerid),body);
	SCM(id,0xB2FF00FF,str);
	SCM(id,0xB2FF00FF,"Hru pøíjíme pøíkazem "w"/hra{B2FF00}.");
	format(str,sizeof(str),"Vyzval jste hráèe "w"%s {B2FF00}na hod kostkou o "w"%d bodù{B2FF00}, vyèkej na odpovìï",Jmeno(id),body);
	SCM(playerid,0xB2FF00FF,str);
	return 1;
}
//============================================================================//
CMD:gps(playerid,params[])
{
	ShowPlayerNavigation(playerid);
	return 1;
}
//============================================================================//
CMD:mince(playerid,params[])
{
	SetPVarInt(playerid,"Page",0);
	format(str,sizeof(str),"Dalí hod mùe uskuteènit za "g"%s",SecondsToMinutes(NextHod[playerid]-gettime()));
	if(NextHod[playerid] > gettime()) return SM(playerid,str);
	SPD(playerid,UNNAMED+188,DIALOG_STYLE_LIST,"Hod mincí","Panna\nOrel","Dalí","Zavøít");
	return 1;
}
//============================================================================//
CMD:muteplayers(playerid,params[])
{
	new DIALOG[800],mplayers,players;
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(IPC(i))
	    {
	        if(MutePlayers[i][playerid] == true)
	        {
	            if(players == 0)
	            	strcat(DIALOG,"Hráèi, kteøí Vás mají umlèeného v chatu, nevidí vae zprávy:"dc"\n\n");
	            format(str,sizeof(str),"%s(%d)\n",Jmeno(i),i);
	            strcat(DIALOG,str);
	            players++;
	        }
	    }
	}
	for(new i; i < MAX_PLAYERS; i ++)
	{
	    if(IPC(i))
	    {
			if(MutePlayers[playerid][i] == true)
			{
			    if(mplayers == 0)
			        strcat(DIALOG,"Hráèi, které máte umlèené v chatu, nevidíte jejich zprávy"dc"\n\n");
	            format(str,sizeof(str),"%s(%d)\n",Jmeno(i),i);
	            strcat(DIALOG,str);
	            mplayers++;
			}
	    }
	}
	if(players > 0 || mplayers > 0) SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Kdo vás má umlèeného",DIALOG,"Zavøít","");
	else SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Kdo vás má umlèeného","Nikdo si vás neumlèel","Zavøít","");
	return 1;
}
//============================================================================//
CMD:muteplayer(playerid,params[])
{
	new id;
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/muteplayer [ ID ]");
	if(!IPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(id == playerid) return SM(playerid,"Nemùe umlèet sám sebe");
	if(Admin[id] > 0 && AdminHide[playerid] == false) return SM(playerid,"Administrátora nemùe umlèet");
	MutePlayers[playerid][id] = !MutePlayers[playerid][id];
	format(str,sizeof(str),"%s sis hráèe "r"%s"w", nyní %s jeho zprávy v chatu",(MutePlayers[playerid][id] == true) ? ("Umlèel") : ("Odmlèel"),Jmeno(id),(MutePlayers[playerid][id] == true) ? ("neuvidí") : ("uvidí"));
	SM(playerid,str);
	format(str,sizeof(str),"%s "g"%s"w" si vás %s, nyní %s vae zprávy",Players(playerid),Jmeno(playerid),(MutePlayers[playerid][id] == true) ? ("umlèel") : ("odmlèel"),(MutePlayers[playerid][id] == true) ? ("neuvidí") : ("uvidí"));
	SM(id,str);
	return 1;
}
//============================================================================//
CMD:tb(playerid,params[]) return cmd_trestnebody(playerid,params);
CMD:trestnebody(playerid,params[])
{
	new player[145];
	format(player,sizeof(playerid),Jmeno(playerid));
	if(Admin[playerid] > 1)
	    if(!sscanf(params,"z",player))
	        if(IsNumeric(player))
				if(IPC(strval(player)))
				    player = Jmeno(strval(player));
				else
					return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(strcmp(player,Jmeno(playerid),false) == 0)
		ShowPlayerPenaltyPoints(playerid);
	else
	    ShowPenaltyPointsForAdmins(playerid,player,0);
	return 1;
}
//============================================================================//
CMD:fakevote(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return 0;
	}
	new id,amount;
	if(hlasovani == 0) return SM(playerid,"Nyní neprobíha ádné hlasování");
	if(sscanf(params,"ii",id,amount)) return SM(playerid,"Pouití: "r"/fakevote [ 0 - 2 ] [ Poèet hlasù ]");
	if(id < 0 || id > 2) return SM(playerid,"Chybnì zadaný druhý parametr");
	if(amount < 1 || amount > 100) return SM(playerid,"Min 1 hlas, Max 100 hlasù");
	switch(id)
	{
	    case 0: ano += amount;
	    case 1: ne += amount;
	    case 2: nevim += amount;
	}
	new Text[400];
	format(Text,sizeof(Text),"~p~] ~r~Anketa ~p~]~n~~y~%s~n~~b~Ano: ~r~%d ~w~/ ~b~Ne: ~r~%d ~w~/ ~b~Nevim: ~r~%d",atext,ano,ne,nevim);
	TextDrawSetString(Textdraw28,Text);
	return 1;
}
//============================================================================//
CMD:deletenkz(playerid,params[])
{
	new id;
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/deletenkz [ ID ]");
	format(dfile,sizeof(dfile),NKZ_FILE,id);
	if(!fexist(dfile)) return SM(playerid,"Zona s tímto ID neexistuje");
	DOF2_RemoveFile(dfile);
	format(str,sizeof(str),"Zona ID "g"%d"w" smazana",id);
	SM(playerid,str);
	DestroyDynamic3DTextLabel(NoKillZone[id][NText]);
	DestroyDynamicPickup(NoKillZone[id][NPickup]);
	NoKillZone[id][NX] = 0;
	NoKillZone[id][NY] = 0;
	NoKillZone[id][NZ] = 0;
	NoKillZone[id][NRadius] = 0;
	NoKillZone[id][ZoneUsed] = false;
	return 1;
}
//============================================================================//
CMD:createnkz(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new Float:X,Float:Y,Float:Z,Float:radius;
	if(sscanf(params,"f",radius)) return SM(playerid,"Pouití: "r"/createnkz [ Radius ]");
	GetPlayerPos(playerid,X,Y,Z);
	CreateNoKillZone(X,Y,Z,radius);
	format(str,sizeof(str),""w"NoKillZone: "g"%d\n"w"X: "g"%0.4f\n"w"Y: "g"%0.4f\n"w"Z: "g"%0.4f\n",lastzone,X,Y,Z);
	ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX," ",str,"Zavøít","");
	return 1;
}
//============================================================================//
CMD:bot(playerid,params[])
{
	if(Admin[playerid] >= 3)
	{
	    new DIALOG[1000];
		strcat(DIALOG,"Pøíkazy které bot umí:\n");
		for(new i; i < sizeof(BotCommands); i ++)
		{
		    format(str,sizeof(str),"/%s\n",BotCommands[i]);
		    strcat(DIALOG,str);
		}
		SPD(playerid,0,DIALOG_STYLE_MSGBOX,"BOT",DIALOG,"Zavøít","");
		return 1;
	}
	return 0;
}
//============================================================================//
CMD:bcmd(playerid,params[])
{
	IsNoAdmin(playerid)
	if(!IsBotConnected()) return SM(playerid,""BOT_NAME" není pøipojen na serveru");
	new msg[145],bool:canuse;
	if(sscanf(params,"z",msg)) return SM(playerid,"Pouití: "r"/bcmd [ CMD ]");
	for(new i; i < sizeof(BotCommands); i ++)
	{
	    if(strfind(msg[1],BotCommands[i],true) == 0)
	        canuse = true;
	}
	if(canuse == false) return SM(playerid,"Tento pøíkaz nemùe bot vykonat :(");
	if(msg[0] != '/') return SM(playerid,"patné zadání pøíkazu");
	SetPVarString(GetBotID(),"Signature",Jmeno(playerid));
	CallRemoteFunction("OnPlayerCommandText","is",GetBotID(),msg);
	return 1;
}
//============================================================================//
CMD:bmsg(playerid,params[])
{
	IsNoAdmin(playerid)
	if(!IsBotConnected()) return SM(playerid,""BOT_NAME" není pøipojen na serveru");
	new msg[145];
	if(sscanf(params,"z",msg)) return SM(playerid,"Pouití: "r"/bmsg [ MSG ]");
	CallRemoteFunction("OnPlayerText","is",GetBotID(),msg);
	return 1;
}
//============================================================================//
CMD:login(playerid,params[])
{
	if(Admin[playerid] == 0)
	{
		new query[200];
		mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Users` WHERE `IP`='%e' AND",GetIP(playerid));
		strcat(query," `Hodnost` LIKE '%a%' LIMIT 1");
		new Cache:cache = mysql_query(mysql,query);
		new Nick[24+1],soubor[50],rows = cache_get_row_count(mysql);
		if(rows)
		{
			cache_get_field_content(0,"Nick",Nick,mysql);
			format(str,sizeof(str),"/login %s nick found [ %s ]",Jmeno(playerid),Nick);
			printEx(str);
			format(soubor,sizeof(soubor),USER_FILES,Nick);
			if(fexist(soubor))
			{
			    format(str,sizeof(str),"Admin úèet "g"%s "w"nalezen, "r"Zadejte heslo",Nick);
			    SPD(playerid,UNNAMED+154,DIALOG_STYLE_PASSWORD,"Heslo",str,"Pøihlásit","Zavøít");
			}
			else SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Heslo","Admin úèet nenalezen, kontaktujte správce scriptu","Zavøít","");
			return 1;
		}
		cache_delete(cache,mysql);
	}
	return 0;
}
//============================================================================//
CMD:deletehouse(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new id,query[200],Cache:cache;
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/deletehouse [ è.p domu ]");
	if(id < 1 || id > MAX_HOUSES+1) return SM(playerid,"Chybnì zadané è.p. domu");
	id --;
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Houses` WHERE `ID`='%d'",House[id][hID]);
	cache = mysql_query(mysql,query);
	if(cache_get_row_count(mysql))
	{
	    mysql_format(mysql,query,sizeof(query),"DELETE FROM `Houses` WHERE `ID`='%d'",House[id][hID]);
		mysql_query(mysql,query,false);
		format(str,sizeof(str),"Dùm è.p "g"%d "w"(ID: "g"%d"w") byl odstranìn",id+1,House[id][hID]);
		SM(playerid,str);
		DestroyDynamicPickup(House[id][hPickup]);
		DestroyDynamicMapIcon(House[id][hMapIcon]);
		DestroyDynamic3DTextLabel(House[id][hText]);
		for(new i; i <= GetPlayerPoolSize(); i ++)
		    if(IPC(i))
		        if(IsPlayerHouseOwner(i,id))
		            PlayerHouse[i] = -1;
		        
		for(new i; HouseData:i < HouseData; i ++)
		{
		    House[id][HouseData:i] = 0;
		}
	}
	else SM(playerid,"Tento dùm není vytvoøen");
	cache_delete(cache,mysql);
	return 1;
}
//============================================================================//
CMD:resethouses(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new query[200],Cache:cache;
	mysql_format(mysql,query,sizeof(query),"UPDATE `Houses` SET `Owner`='-1', `Name`='Dùm na prodej', `Price`=0, `OwnerActivity`=NULL WHERE `Owner` != -1 AND `OwnerActivity` <= %d",gettime()-60*60*24*30);
	cache = mysql_query(mysql,query);
	format(str,sizeof(str),"Úspìnì restartováno "g"%d "w"neaktivních domù",cache_get_row_count());
	SM(playerid,str);
	cache_delete(cache,mysql);
	return 1;
}
//============================================================================//
CMD:banlist(playerid,params[])
{
	IsNoModerator(playerid)
	ShowBanList(playerid,0);
	return 1;
}
//============================================================================//
CMD:test(playerid,params[])
{
	if(IsPlayerOnHighestLevel(playerid))
	{
	    new id,amount;
	    if(!sscanf(params,"ii",id,amount))
	    {
			GivePlayerDailyValue(playerid,id,amount);
			return 1;
		}
		return 0;
	}
	return 0;
}
//============================================================================//
CMD:servercrash(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid)) return SM(playerid,"Na tento pøíkaz je tøeba mít nejvyí oprávnìní");
	SCM(playerid,0xADADADFF,"Done");
	SCMTA(-1,"%s");
	return 1;
}
//============================================================================//
CMD:getinfo(playerid,params[])
{
	new id;
	IsNoModerator(playerid)
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/getinfo [ ID ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	ShowPlayerInfo(playerid,id);
	return 1;
}
//============================================================================//
CMD:acheat(playerid,params[])
{
	new id;
	IsNoModerator(playerid)
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/acheat [ ID ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(Admin[playerid] < 4)
	{
		if(Admin[id] >= 2) return SM(playerid,"Administrátora nemùe testovat na nesmrtelnost");
	}
	if(IsPlayerNPC(id)) return SM(playerid,"NPC nelze otestovat");
	if(AFK[id] == true) return SM(playerid,"AFK hráè nemùe otestovat");
	if(ViewMode[playerid]) return SM(playerid,"Hráè je v reimu náhledu");
	switch(GetPlayerState(id))
	{
		case PLAYER_STATE_WASTED: return SM(playerid,"Hráè je mrtvý, nelze ho otestovat");
		case PLAYER_STATE_SPECTATING: return SM(playerid,"Hráè je ve sledovacím modu, nelze ho otestovat");
		case PLAYER_STATE_NONE: return SM(playerid,"Hráè není spawnutý");
	}
	format(str,sizeof(str),"%s "w"%s "r"testuje hráèe "w"%s "r"na nesmrtelnost.",Players(playerid),Jmeno(playerid),Jmeno(id));
	SCMTA(red,str);
	new Float:Pos[3],Float:Health,Float:Armor,vehid = 0,seatid;
	CancelAntiSK(id);
	GetPlayerPos(id,Pos[0],Pos[1],Pos[2]);
	GetPlayerHealth(id,Health);
	GetPlayerArmour(id,Armor);
	SetPlayerHealth(id,100);
	SetPlayerArmour(id,0);
	for(new i; i < 13; i ++)
	{
		GetPlayerWeaponData(id,i,AcheatWeapons[id][i][0],AcheatWeapons[id][i][1]);
	}
	ResetPlayerWeaponsEx(id);
	if(IsPlayerInAnyVehicle(id))
	{
	    vehid = GetPlayerVehicleID(id);
	    seatid = GetPlayerVehicleSeat(id);
	    SetVehicleVelocity(vehid,0,0,0);
	}
	SetPlayerPos(id,Pos[0],Pos[1],Pos[2]+40);
	CreateExplosion(Pos[0],Pos[1],Pos[2]+40,6,20);
	SetTimerEx("CheckCheat",1000,false,"ifffffii",id,Pos[0],Pos[1],Pos[2],Health,Armor,vehid,seatid);
	return 1;
}

function CheckCheat(playerid,Float:X,Float:Y,Float:Z,Float:Health,Float:Armor,vehicleid,seatid)
{
	new Float:HP;
	GetPlayerHealth(playerid,HP);
	if(HP < 100)
	{
	    SetPlayerPos(playerid,X,Y,Z);
		SetPlayerHealth(playerid,Health);
		SetPlayerArmour(playerid,Armor);
		for(new i; i < 13; i ++)
		{
			GivePlayerWeaponEx(playerid,AcheatWeapons[playerid][i][0],AcheatWeapons[playerid][i][1]);
		}
		if(vehicleid != 0)
		{
		    PutPlayerInVehicle(playerid,vehicleid,seatid);
		}
		format(str,sizeof(str),"%s "w"%s "r"je smrtelný.",Players(playerid),Jmeno(playerid));
		SCMTA(red,str);
	}
	else
	{
		format(str,sizeof(str),"%s "w"%s "r"byl vyhozen za nesmrtelnost.",Players(playerid),Jmeno(playerid));
		SCMTA(red,str);
        SpecialKick(playerid,BOT_NAME,"Nesmrtelnost");
	}
	return 1;
}
//============================================================================//
CMD:disarm(playerid,params[])
{
	new id;
	IsNoModerator(playerid)
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/disarm [ ID ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	format(str,sizeof(str),"%s "w"%s "r"odebral zbranì hráèi "w"%s"r".",Players(playerid),Jmeno(playerid),Jmeno(id));
	SCMTA(red,str);
	ResetPlayerWeaponsEx(id);
	return 1;
}
//============================================================================//
CMD:auto(playerid,params[])
{
	new id;
	IsNoModerator(playerid)
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/auto [ ID ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(!IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Hráè není ve vozidle");
	RepairVehicle(GetPlayerVehicleID(id));
	format(str,sizeof(str),"Vozidlo hráèe "g"%s "w"opraveno",Jmeno(id));
	SM(playerid,str);
	format(str,sizeof(str),"%s "g"%s "w"Vám opravil vozidlo",Players(playerid),Jmeno(playerid));
	SM(id,str);
	return 1;
}
//============================================================================//
CMD:avypoved(playerid,params[])
{
	new id,reason[145];
	IsNoModerator(playerid)
	if(sscanf(params,"iz",id,reason)) return SM(playerid,"Pouití: "r"/avypoved [ ID ] [ Dùvod ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(strlen(reason) > 100) return SM(playerid,"Zadal jste pøíli dlouhý dùvod");
	format(str,sizeof(str),"%s "w"%s "r"vyhodil hráèe "w"%s "r"z povolání",Players(playerid),Jmeno(playerid),Jmeno(id));
	SCMTA(red,str);
	if(strlen(reason))
	{
	    format(str,sizeof(str),"[ Dùvod: "w"%s "r"]",reason);
	    SCMTA(red,str);
	}
	SetPlayerJob(id,0);
	return 1;
}
//============================================================================//
CMD:playerpackages(playerid,params[])
{
	IsNoEventer(playerid)
	mysql_tquery(mysql,"SELECT `Nick`, COUNT(*) FROM `PlayerPackages` GROUP BY `Nick` ORDER BY COUNT(*)  DESC","AllPlayersPackages","i",playerid);
	return 1;
}

function AllPlayersPackages(playerid)
{
	new DIALOG[5000];
	strcat(DIALOG,"Nick\t"w"Poèet balíèkù\n");
	for(new i; i < cache_get_row_count(mysql); i ++)
	{
	    new NICK[MAX_PLAYER_NAME+1];
	    cache_get_field_content(i,"Nick",NICK,mysql);
	    format(str,sizeof(str),"%s\t"g"%d\n",NICK,cache_get_field_content_int(i,"COUNT(*)",mysql));
	    strcat(DIALOG,str);
	}
	if(cache_get_row_count(mysql)) SPD(playerid,0,DIALOG_STYLE_TABLIST_HEADERS,"Seznam hráèù",DIALOG,"Zavøít","");
	else SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Seznam hráèù","Nikdo nenalezl ádný balíèek","Zavøít","");
	return 1;
}
/*
CMD:packagemode(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new vwid = strval(params);
	switch(Packages[PackagesState])
	{
		case 0:
		{
		    Packages[PackagesState] = true;
		    Packages[PackagesVW] = vwid;
		    for(new i; i < MAX_PACKAGES; i ++)
		    {
		        if(Package[i][pX] != 0.0 && Package[i][pY] != 0.0 && Package[i][pZ] != 0.0){
			        Package[i][Pickup] = CreateDynamicPickup(1279,23,Package[i][pX],Package[i][pY],Package[i][pZ],.worldid = vwid);
			        format(str,sizeof(str),"Nalezeno: "w"%dx",Package[i][Finded]);
			        Package[i][Label] = CreateDynamic3DTextLabel(str,0x0077FFFF,Package[i][pX],Package[i][pY],Package[i][pZ],15,.worldid = vwid);
				}
		    }
		    for(new i; i <= GetPlayerPoolSize(); i ++)
		    {
		        if(IPC(i) && !IsPlayerNPC(i) && GetPlayerVirtualWorld(i) == vwid)
		        {
					format(str,sizeof(str),"Balicku: ~w~%d/%d",PlayerPackages[i][FindPackages],Packages[TotalPackages]);
					PlayerTextDrawSetString(i,Textdraw43[i],str);
					PlayerTextDrawShow(i,Textdraw43[i]);
					SetPVarInt(i,"PackageState",1);
				}
			}
			format(str,sizeof(str),"Package mode zapnut pro world %d",vwid);
			SM(playerid,str);
		}
		case 1:
		{
		    Packages[PackagesState] = false;
		    for(new i; i < MAX_PACKAGES; i ++)
		    {
				DestroyDynamic3DTextLabel(Package[i][Label]);
				DestroyDynamicPickup(Package[i][Pickup]);
			}
		    for(new i; i <= GetPlayerPoolSize(); i ++)
		    {
		        if(IPC(i) && !IsPlayerNPC(i))
		        {
					PlayerTextDrawHide(i,Textdraw43[i]);
					SetPVarInt(i,"PackageState",0);
				}
			}
			SM(playerid,"Package mode vypnut");
		}
	}
	return 1;
*/
//============================================================================//
CMD:giftmode(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	GiftMode = !GiftMode;
	if(GiftMode == true)
	{
	    SM(playerid,"GiftMode Aktivován");
	    for(new i; i <= GetPlayerPoolSize(); i ++)
	    {
	        if(IPC(i) && !IsPlayerNPC(i))
	        {
	            PlayerTextDrawShow(i,Textdraw43[i]);
	        }
	    }
	}
	else
	{
	    SM(playerid,"GiftMode Deaktivován");
	    for(new i; i <= GetPlayerPoolSize(); i ++)
	    {
	        if(IPC(i) && !IsPlayerNPC(i))
	        {
	            PlayerTextDrawShow(i,Textdraw43[i]);
	            PlayerTextDrawHide(i,Textdraw43[i]);
	        }
	    }
	}
	return 1;
}
//============================================================================//
CMD:deletedbveh(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	if(!IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Nejsi v ádném vozidle");
	if(DBVeh[GetPlayerVehicleID(playerid)][dbvID] == 0) return SM(playerid,"Toto vozidlo není v databázi");
	new query[200];
	mysql_format(mysql,query,sizeof(query),"DELETE FROM `ServerVehicles` WHERE `ID`=%d",DBVeh[GetPlayerVehicleID(playerid)][dbvID]);
	mysql_query(mysql,query,false);
	format(str,sizeof(str),"Vozidlo "g"%s "w"("r"%d"w") úspìnì smazáno",GetVehicleNameByCarID(GetVehicleModel(GetPlayerVehicleID(playerid))),DBVeh[GetPlayerVehicleID(playerid)][dbvID]);
	SM(playerid,str);
	DBVeh[GetPlayerVehicleID(playerid)][dbvID] = 0;
	DestroyVehicle(GetPlayerVehicleID(playerid));
	return 1;
}
//============================================================================//
CMD:rpenize(playerid,params[])
{
	new id;
	IsNoModerator(playerid)
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/rpenize [ ID ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	format(str,sizeof(str),"%s "r"%s "w"restartoval hráèi "g"%s "w"peníze",Players(playerid),Jmeno(playerid),Jmeno(id));
	SendAdminMessage(str);
	CallRemoteFunction("ResetMoney","i",id);
	return 1;
}
//============================================================================//
CMD:eb(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	eb = !eb;
	format(str,sizeof(str),"EB: %d",eb);
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:reloadobjects(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	if(!fexist("UnNamed/Objects.txt")) return SM(playerid,"ERROR #FILE_NOT_EXISTS");
	objectlist = LoadModelSelectionMenu("UnNamed/Objects.txt");
	if(objectlist) SM(playerid,"Objects reloaded");
	else SM(playerid,"Vyskytla se neznámá chyba");
	return 1;
}
//============================================================================//
CMD:addcensoreword(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new word[145];
	if(sscanf(params,"z",word)) return SM(playerid,"Pouití: "r"/addcensoreword [ Sprosté Slovo ]");
	if(strlen(word) > 25) return SM(playerid,"Pøíli dlouhé slovo");
	new File:soubor = fopen(CENSOREDFILE,io_append);
	format(str,sizeof(str),"%s\r\n",word);
	if(soubor){
		fwrite(soubor,str);
		fclose(soubor);
	}
	format(str,sizeof(str),"Slovo "g"%s "w"pøidáno do cenzury -> "r"/reloadcenzura",word);
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:reloadcenzura(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
    if(fexist(CENSOREDFILE))
    {
        new File:myFile,
                line[MAX_LEN],
                index=0;

        myFile=fopen(CENSOREDFILE,filemode:io_read);

        while(fread(myFile,line,sizeof line) && (index != MAX_ENTRY))
        {
                if(strlen(line)>MAX_LEN) continue;
                StripNewLine(line);
                strmid(CENZURA[index],line,0,strlen(line),sizeof line);
                index++;
        }
        format(str,sizeof(str),"Cenzura pøenaètena [ {0077FF}%d slov "w"]",index);
		SM(playerid,str);
	}
	else
	{
	    SM(playerid,"Soubor s cenzurou neexistuje");
	}
	return 1;
}
//============================================================================//
CMD:casdoodmeny(playerid,params[])
{
	SCMTOAA("casdoodmeny")
	format(str,sizeof(str),"Do dalí odmìny zbývá: "g"%s "w"( "c"%d XP "w")",SecondsToMinutes(1800-PlayedTimeNS[playerid]),100+50*PlayedTimeMultipler[playerid]);
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:gmx(playerid,params[])
{
	SCMTOAA("gmx")
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
		if(AFK[i] == true)
		{
			new pName[MAX_PLAYER_NAME+1];
			GetPVarString(i,"afkName",pName,sizeof(pName));
			SetPlayerName(i,pName);
		}
	}
	SendRconCommand("gmx");
	return 1;
}
//============================================================================//
CMD:odstavit(playerid,params[])
{
	IsNoModerator(playerid)
	new id,duvod[145];
	if(sscanf(params,"iz",id,duvod)) return SM(playerid,"Pouití: "r"/odstavit [ ID ] [ Dùvod ]");
	if(!strlen(duvod)) return SM(playerid,"Pouití: "r"/odstavit [ ID ] [ Slot ID ] [ Dùvod ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(strlen(duvod) > 50) return SM(playerid,"Pøíli dlouhý dùvod");
	for(new i; i < MAX_SLOTS; i ++)
	{
		format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(id),i);
		if(fexist(dfile) && ParkInfo[id][i][pOdstaveno] == false)
		{
			ParkInfo[id][i][pOdstaveno] = true;
			DOF2_SetBool(dfile,"Odstaveno",ParkInfo[id][i][pOdstaveno]);
			SetVehicleToRespawn(SavedCar[id][i]);
		}
	}
	format(str,sizeof(str),"Gará hráèe "g"%s"w" odstavena",Jmeno(id));
	SM(playerid,str);
	format(str,sizeof(str),"%s "g"%s "dc"Vám odstavil gará\nDùvod: "g"%s\n"dc"Vozidla bude stále moné pouívat, odstavení se zruí po pøeparkování",Players(playerid),Jmeno(playerid),duvod);
	SendPlayerNotification(Jmeno(id),"Odstavení garáe",str);
	return 1;
}
//============================================================================//
CMD:houseloc(playerid,params[])
{
	new id;
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/houseloc [ Èíslo domu ]");
	if(id < 1 || id > MAX_HOUSES) return SM(playerid,"Chybnì zadané èíslo domu");
	if(strcmp(House[id-1][hOwner],"0",false) == 0) return SM(playerid,"Chybnì zadané èíslo domu");
	NavigatePlayerToPos(playerid,House[id-1][hX],House[id-1][hY],House[id-1][hZ]);
	format(str,sizeof(str),"Dùm {0077FF}%s "w"(è.p: %d) vyznaèen na mapì",House[id-1][hName],id);
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:houseview(playerid,params[])
{
	new id;
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/houseview [ Èíslo domu ]");
	if(id < 1 || id > MAX_HOUSES) return SM(playerid,"Chybnì zadané èíslo domu");
	if(strcmp(House[id-1][hOwner],"0",false) == 0) return SM(playerid,"Chybnì zadané èíslo domu");
	SetPlayerCameraAtPos(playerid,House[id-1][hX],House[id-1][hY],House[id-1][hZ]);
	return 1;
}
//============================================================================//
CMD:propertyloc(playerid,params[])
{
	new id;
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/propertyloc [ IÈO ]");
	if(id < 1 || id > MAX_PROPERTIES) return SM(playerid,"Chybnì zadané IÈO");
	if(strcmp(Property[id][PropertyOwner],"0",false) == 0) return SM(playerid,"Chybnì zadané IÈO");
	NavigatePlayerToPos(playerid,Property[id][PropertyX],Property[id][PropertyY],Property[id][PropertyZ]);
	format(str,sizeof(str),"Nemovitost {0077FF}%s "w"(IÈO: %d) vyznaèen na mapì",Property[id][PropertyName],id);
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:propertyview(playerid,params[])
{
	new id;
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/propertyview [ IÈO ]");
	if(id < 1 || id > MAX_PROPERTIES) return SM(playerid,"Chybnì zadané IÈO");
	if(strcmp(Property[id][PropertyOwner],"0",false) == 0) return SM(playerid,"Chybnì zadané IÈO");
	SetPlayerCameraAtPos(playerid,Property[id][PropertyX],Property[id][PropertyY],Property[id][PropertyZ]);
	return 1;
}
//============================================================================//
CMD:gmo(playerid,params[])
{
	SCMTOAA("gmo")
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new account[145],duvod[145],cash;
	if(sscanf(params,"ziz",account,cash,duvod)) return SM(playerid,"Pouití: "r"/gmo [ Úèet ] [ Èástka ] [ Dùvod ]");
	if(strlen(duvod) > 100) return SM(playerid,"Moc dlouhý dùvod");
	if(!strlen(duvod)) return SM(playerid,"Pouití: "r"/gmo [ Úèet ] [ Èástka ] [ Dùvod ]");
	if(cash < 1 || cash > 2000000000) return SM(playerid,"Chybnì zadaná èástka");
	format(dfile,sizeof(dfile),USER_FILES,account);
	if(!fexist(dfile)) return SM(playerid,"Tento úèet neexistuje");
	GivePlayerMoneyToTrezor(account,cash);
	format(str,sizeof(str),"%s "g"%s "dc"Vám poslal "g"%s$ "dc"do Vaeho trezoru (/trezor)\nDùvod: "g"%s",Players(playerid),Jmeno(playerid),Split(cash),duvod);
	SendPlayerNotification(account,"Peníze od Administrátora",str);
	format(str,sizeof(str),"Hráè "r"%s "w"od vás obdrel "g"%s$",account,Split(cash));
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:cheat(playerid,params[])
{
	SCMTOAA("cheat")
	SM(playerid,"Prosím pouíjte pøíkaz: "r"/report");
	return 1;
}
//============================================================================//
CMD:reports(playerid,params[])
{
	SCMTOAA("reports")
	IsNoModerator(playerid)
	ShowReports(playerid,0);
	return 1;
}
//============================================================================//
CMD:report(playerid,params[])
{
	SCMTOAA("report")
	new id,DIALOG[500];
	if(ahraci == 0) return SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Report",""dc"Na serveru není online ádný administrátor, prosím vytvoøte dùkaz o pøestupku a\nNahlate hráèe na forum "w""SRV_WEB" "dc",dìkujeme","Zavøít","");
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/report [ ID ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(playerid == id) return SM(playerid,"Nemùete nahlásit sám sebe");
	if(Admin[playerid] > 2) return SM(playerid,"Admin nemùe nahlásit hráèe");
    new query[300],Cache:cache;
    mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Reports` WHERE `Reporter`='%e' AND `Nick`='%e' AND `Status`=0",Jmeno(playerid),Jmeno(id));
    cache = mysql_query(mysql,query);
    if(!cache_get_row_count(mysql))
    {
		SetPVarInt(playerid,"ReportID",id);
		for(new i; i < sizeof(ReportReasons); i ++)
		{
		    format(str,sizeof(str),"%s\n",ReportReasons[i]);
		    strcat(DIALOG,str);
		}
		strcat(DIALOG,"{0077FF}Vlastní dùvod");
		SPD(playerid,UNNAMED+163,DIALOG_STYLE_LIST,"Report",DIALOG,"Vybrat","Zavøít");
	}
	else
	{
	    SM(playerid,"Tohoto hráèe si u nahlásil");
	}
	cache_delete(cache,mysql);
	return 1;
}
//============================================================================//
CMD:trezor(playerid,params[])
{
	SCMTOAA("trezor")
	new DIALOG[1000];
	format(str,sizeof(str),"Bankovní Trezor:\t"g"%s$\n",Split(GetPlayerBankMoney(playerid)));
	strcat(DIALOG,str);
	for(new i; i < MAX_TREZORS; i ++)
	{
	    if(Trezor[playerid][i] != 0)
	    {
		    format(str,sizeof(str),"Záloní Trezor %d:\t"g"%s$\n",i+1,Split(Trezor[playerid][i]));
			strcat(DIALOG,str);
		}
	}
	SPD(playerid,UNNAMED+159,DIALOG_STYLE_TABLIST,"Seznam vaich trezorù",DIALOG,"Vybrat","Zavøít");
	return 1;
}
//============================================================================//
CMD:oznameni(playerid,params[])
{
	SCMTOAA("oznameni")
	ShowNotifications(playerid,0);
	return 1;
}
//============================================================================//
CMD:deleteuser(playerid,params[])
{
	SCMTOAA("deleteuser")
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new account[145];
	if(sscanf(params,"z",account)) return SM(playerid,"Pouití: "r"/deleteuser [ Název Úètu ]");
	new id = GetPlayerIdFromName(account),soubor[50];
	if(IPC(id)) return SM(playerid,"Hráè nesmí být pøipojen na serveru");
	format(soubor,sizeof(soubor),USER_FILES,account);
	if(!fexist(soubor)) return SM(playerid,"Tento úèet neexistuje");
	if(DOF2_GetInt(soubor,"Admin Level") > 0) return SM(playerid,"Nemùe smazat Administrátorský úèet");
	DeleteUser(account);
	format(str,sizeof(str),"Úèet "r"%s"w" úspìnì smazán",account);
	SM(playerid,str);
	return 1;
}
CMD:changepassword(playerid,params[])
{
	SCMTOAA("changepassword")
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new account[145],password[145],id;
	if(!sscanf(params,"iz",id,password))
	{
	    if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	    format(account,sizeof(account),Jmeno(id));
		if(strlen(password) < 3 || strlen(password) > 30) return SM(playerid,"Chbnì zadané heslo");
		format(dfile,sizeof(dfile),"%s.txt",account);
		if(!fexist(dfile)) return SM(playerid,"Tento úèet neexistuje");
        ChangePassword(account,password);
		format(str,sizeof(str),"Heslo úètu: "r"%s "w"zmìnìno na: "g"%s",account,password);
		SM(playerid,str);
		new query[200];
		mysql_format(mysql,query,sizeof(query),"UPDATE `Users` SET `Password`=PASSWORD('%e') WHERE `Nick`='%e'",password,account);
		mysql_tquery(mysql,query,"","");
	}
	else if(!sscanf(params,"zz",account,password))
	{
	    if(strlen(account) < 3 || strlen(account) > 20) return SM(playerid,"Chybnì zadaný úèet");
	    format(account,sizeof(account),account);
		if(strlen(password) < 3 || strlen(password) > 30) return SM(playerid,"Chbnì zadané heslo");
		format(dfile,sizeof(dfile),"%s.txt",account);
		if(!fexist(dfile)) return SM(playerid,"Tento úèet neexistuje");
        ChangePassword(account,password);
		format(str,sizeof(str),"Heslo úètu: "r"%s "w"zmìnìno na: "g"%s",account,password);
		SM(playerid,str);
		new query[200];
		mysql_format(mysql,query,sizeof(query),"UPDATE `Users` SET `Password`=PASSWORD('%e') WHERE `Nick`='%e'",password,account);
		mysql_tquery(mysql,query,"","");
	}
	else
	{
	    SM(playerid,"Pouzií: "r"/changepassword [ ID/Úèet ] [ Nové heslo ]");
	}
	return 1;
}
//============================================================================//
CMD:novinky(playerid,params[])
{
	SCMTOAA("novinky")
	ShowNews(playerid,0);
	return 1;
}
//============================================================================//
CMD:pmlog(playerid,params[])
{
	SCMTOAA("pmlog")
	new page = strval(params);
	ShowPMLog(playerid,Jmeno(playerid),page);
	return 1;
}
//============================================================================//
CMD:dm(playerid,params[])
{
	SCMTOAA("dm")
	new DIALOG[2000];
	JailCmdBlock(playerid);
	if(IsPlayerInGangWar(playerid)) return SM(playerid,"V Gang Waru se nemùe portnout na DM");
	if(OnEvent[playerid] == true) return SM(playerid,"Na eventu se nemùe pøipojit do DM");
	if(InDM[playerid] != -1) return SM(playerid,"Ji si v DM "r"/leave");
	if(WorkMission[playerid] > 0) return SM(playerid,"U má nìco na práci "r"/zrusmisi");
	if(RacePlayer[playerid] > -1) return SM(playerid,"Teï nemùe pouít tento pøíkaz");
	if(IsPlayerHitted(playerid)) return SM(playerid,"V boji se nemùe pøipojit do DM");
	if(pStunt[playerid][sStuntID] != -1) return SM(playerid,"Kdy plní stunt, nemùe se pøipojit do DM");
	if(IsPlayerSupplyRun(playerid)) return SM(playerid,"Právì plní misi, nemùe vykonat tuto akci");

	for(new i; i < sizeof(DM); i ++)
	{
	    format(str,sizeof(str),"%s\t{adadad}Poèet hráèù: "y"%d\t"w"| ",DM[i][DMName],DM[i][DMPlayers]);
	    strcat(DIALOG,str);
		for(new x; x < MAX_DM_WEAPONS; x ++)
		{
		    if(DM[i][DMWeapon][x] != 0)
		    {
		    	format(str,sizeof(str),""r"%s "w"| ",WeaponsNames(DM[i][DMWeapon][x]));
				strcat(DIALOG,str);
			}
			if(x == MAX_DM_WEAPONS-1)
			{
			    strcat(DIALOG,"\n");
			}
		}
	}
	SPD(playerid,UNNAMED+148,DIALOG_STYLE_TABLIST,"DeathMatch",DIALOG,"Vybrat","Zavøít");
	return 1;
}
//============================================================================//
CMD:hudba(playerid,params[])
{
	SM(playerid,"Mimo provoz");
//	ShowMusicList(playerid,0);
//	SetPVarInt(playerid,"Pages",0);
	return 1;
}
//============================================================================//
CMD:kill(playerid,params[])
{
	if(InDM[playerid] != -1) return SM(playerid,"Na DM nemùe pouít tento pøíkaz");
	if(Hitted[playerid] > 0) return SM(playerid,"V boji nemùe pouít tento pøíkaz");
	if(IsPlayerInNoKillZone(playerid) && GetPlayerVirtualWorld(playerid) == 0) return SM(playerid,"V no Kill zonì nemùete pouít tento pøíkaz");
	SetPlayerHealth(playerid,0);
	return 1;
}
//============================================================================//
CMD:mysqldbr(playerid,params[])
{
    if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	mysql_reconnect_ex();
	return 1;
}
//============================================================================//
CMD:logc(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	if(LogActions == false)
	{
	    LogActions = true;
		SM(playerid,"Log vypnut");
	}
	else
	{
	    LogActions = false;
		SM(playerid,"Log zapnut");
	}
	return 1;
}
//============================================================================//
CMD:codes(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new rows,fields,Cache:cache,DIALOG[5000];
	cache = mysql_query(mysql,"SELECT * FROM `Codes` ORDER BY `CODE_TIME` DESC LIMIT 0,30");
	cache_get_data(rows,fields,mysql);
	strcat(DIALOG,""dc"Kód\tAutor\tObsah\tPouil\n");
	if(rows)
	{
		strcat(DIALOG,""r"Dalí stránka\n \n");
	    for(new i; i < rows; i ++)
	    {
		    new cNick[30],cAutor[24],cVIP,cBody,cXP,cVehicle,cCode[50];
		    cache_get_field_content(i,"CODE",cCode,mysql);
		    cache_get_field_content(i,"CODE_PICKER",cNick,mysql);
		    cache_get_field_content(i,"CODE_AUTHOR",cAutor,mysql);
		    cVIP = cache_get_field_content_int(i,"CODE_VIP",mysql);
		    cBody = cache_get_field_content_int(i,"CODE_BODY",mysql);
		    cXP = cache_get_field_content_int(i,"CODE_XP",mysql);
		    cVehicle = cache_get_field_content_int(i,"CODE_VEHICLE",mysql);
		    new obsah[100];
		    if(cBody > 0)
		    {
		        format(str,sizeof(str),"Body: %d ",cBody);
		        strcat(obsah,str);
		    }
		    if(cVIP > 0)
		    {
		        format(str,sizeof(str),"VIP: %d ",cVIP);
		        strcat(obsah,str);
		    }
		    if(cXP > 0)
		    {
		        format(str,sizeof(str),"XP: %d ",cXP);
		        strcat(obsah,str);
		    }
		    if(cVehicle > 0)
		    {
		        format(str,sizeof(str),"Vozidlo: %s ",GetVehicleNameByCarID(cVehicle));
		        strcat(obsah,str);
		    }
		    if(strcmp(cNick,"NULL",false) == 0)
		    {
		        format(cNick,24,""g"Doposud nepouito");
		    }
		    format(str,sizeof(str),"%d. {0088FF}%s\t%s\t%s\t%s\n",i+1,cCode,cAutor,obsah,cNick);
		    strcat(DIALOG,str);
		    SetPVarInt(playerid,"Pages",1);
	    }
		SPD(playerid,UNNAMED+145,DIALOG_STYLE_TABLIST_HEADERS,"Aktivaèní kódy",DIALOG,"Vybrat","Zavøít");
	}
	else
	{
	    SM(playerid,"ádné kódy nejsou k dispozici");
	}
	cache_delete(cache,mysql);
	return 1;
}
//============================================================================//
CMD:generatecode(playerid,params[])
{
	new body,lenght,prefix[144],query[200],rows,fields,Cache:cache;
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	if(sscanf(params,"iiz",body,lenght,prefix)) return SM(playerid,"Pouití: "r"/generatecode [ Body ] [ Délka ] [ Prefix ]");
	if(body < 1 || body > Points[playerid]) return SM(playerid,"Chybnì zadané body");
	if(lenght < 10 || lenght > 20) return SM(playerid,"Chybnì zadaná délka");
	if(strlen(prefix) > 10) return SM(playerid,"Chybná délka prefixu");
	there:
	new code[20];
	lenght = lenght - strlen(prefix);
	for(new i; i < lenght; i ++)
	{
	    new rand = random(sizeof(PostrehZnaky));
	    strcat(code,PostrehZnaky[rand]);
	}
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Codes` WHERE `CODE`='%e%e'",prefix,code);
	cache = mysql_query(mysql,query);
	printf("%s",query);
	cache_get_data(rows,fields,mysql);
	if(rows)
	{
	    goto there;
	    cache_delete(cache,mysql);
	}
	else
	{
	    mysql_format(mysql,query,sizeof(query),"INSERT INTO `Codes` (`CODE`,`CODE_AUTHOR`,`CODE_TIME`,`CODE_BODY`) VALUES ('%e%e','%e',%d,%d)",prefix,code,Jmeno(playerid),gettime(),body);
	    mysql_query(mysql,query,false);
	    printf("%s",query);
	}
	cache_delete(cache,mysql);
	format(str,sizeof(str),"Kód vygenerován: "g"%s%s (lenght: %d/%d)",prefix,code,lenght,lenght+strlen(prefix));
	SM(playerid,str);
	GivePoints(playerid,-body);
	format(str,sizeof(str),"Kód na {0088FF}%d %s "w"vygenerován: "g"%s%s",body,PluralWord(body,"bod","body","bodù"),prefix,code);
	SPD(playerid,0,DIALOG_STYLE_INPUT,"Aktivaèní kód",str,"Zavøít","");
	return 1;
}
//============================================================================//
CMD:aktivace(playerid,params[])
{
	new DIALOG[500],Cache:cache;
	cache = mysql_query(mysql,"SELECT * FROM `Codes` WHERE `CODE_PICKER` IS NOT NULL ORDER BY `CODE_ID` DESC LIMIT 3");
	for(new i; i < cache_get_row_count(mysql); i ++)
	{
	    if(i == 0)
	    {
			format(str,sizeof(str),""dc"Poslední %d pouité aktivaèní kódy\n",cache_get_row_count(mysql));
			strcat(DIALOG,str);
		}
		new code[25];
		cache_get_field_content(i,"CODE",code,mysql);
		format(str,sizeof(str),""r"%s\n",code);
		strcat(DIALOG,str);
	}
	cache_delete(cache,mysql);
	strcat(DIALOG,"\n"w"Zadejte aktivaèní kód:");
	SPD(playerid,UNNAMED+144,DIALOG_STYLE_INPUT,"Aktivaèní kód",DIALOG,"Zadat","Zavøít");
	return 1;
}
//============================================================================//
CMD:nastaveni(playerid,params[])
{
	SCMTOAA("nastaveni")
	ShowPlayerSettings(playerid);
	return 1;
}
//============================================================================//
CMD:savepos(playerid,params[])
{
	new name[144];
	SCMTOAA("savepos")
	IsNoModerator(playerid)
	if(sscanf(params,"z",name)) return SM(playerid,"Pouití: "r"/savepos [ Název ]");
	if(strlen(name) > 24) return SM(playerid,"Pøili dlouhý název");
	new query[200],Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	if(IsPlayerInAnyVehicle(playerid))
	{
	    GetVehiclePos(GetPlayerVehicleID(playerid),X,Y,Z);
	}
	mysql_format(mysql,query,sizeof(query),"INSERT INTO `Positions` (`X`,`Y`,`Z`,`VW`,`INTERIOR`,`Name`,`Nick`) VALUES ('%f','%f','%f','%d','%d','%e','%e')",X,Y,Z,GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid),name,Jmeno(playerid));
	mysql_query(mysql,query);
	format(str,sizeof(str),"Admin pozice "g"%s "w"úspìnì uloena",name);
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:loadpos(playerid,params[])
{
	SCMTOAA("loadpos")
	IsNoEventer(playerid)
	new rows,fields,Cache:cache;
	cache = mysql_query(mysql,"SELECT * FROM `Positions`");
	cache_get_data(rows,fields,mysql);
	if(rows)
	{
	    new name[24],nick[24],DIALOG[1000*2];
		strcat(DIALOG,""dc"Název\tAutor\n");
		for(new i; i < rows; i ++)
	    {
		    cache_get_field_content(i,"Name",name,mysql);
		    cache_get_field_content(i,"Nick",nick,mysql);
		    format(str,sizeof(str),"{0088FF}%d. "w"%s\t{0088FF}%s\n",i+1,name,nick);
		    strcat(DIALOG,str);
		}
		SPD(playerid,UNNAMED+140,DIALOG_STYLE_TABLIST_HEADERS,"Naètení pozice",DIALOG,"Vybrat","Zavøít");
	}
	else
	{
	    SM(playerid,"Nejsou k dispozici ádné pozice");
	}
	cache_delete(cache,mysql);
	return 1;
}
//============================================================================//
CMD:logprihlaseni(playerid,params[])
{
	SCMTOAA("logprihlaseni")
	new id = playerid,name[144];
	format(name,sizeof(name),Jmeno(playerid));
	if(Admin[playerid] > 1)
	{
	    if(!sscanf(params,"i",id))
	    {
	        if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	        format(name,sizeof(name),Jmeno(id));
	    }
	    else if(!sscanf(params,"z",name))
	    {

	    }
	}
	ShowLoginLog(playerid,name);
	return 1;
}
CMD:crosshands(playerid,params[])
{
	SCMTOAA("crosshands")
	new id;
	if(IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Nesmí být ve vozidle");
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/crosshands [ 0 - 1 ]");
	switch(id)
	{
	    case 0: ApplyAnimation(playerid, "OTB", "wtchrace_loop", 4.1, 0, 1, 1, 1, 1, 1);
	    case 1: ApplyAnimation(playerid, "DEALER", "DEALER_IDLE", 4.1, 0, 1, 1, 1, 1, 1);
		default: SM(playerid,"Pouití: "r"/crosshands [ 0 - 1 ]");
	}
	return 1;
}
//============================================================================//
CMD:changepropertypos(playerid,params[])
{
	new id,file[50];
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	if(IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Nesmíte být ve vozidle");
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/changepropertypos [ ID ]");
	if(id < 0 || id > MAX_PROPERTIES) return SM(playerid,"Chybnì zadané ID");
	format(file,sizeof(file),"UnNamed/Properties/Property%d.txt",id);
	if(!fexist(file)) return SM(playerid,"Nemovitost neexistuje");
	format(str,sizeof(str),"Pozice nemovitosti "r"%s "w" zmìnìna na vai aktuální pozici",Property[id][PropertyName]);
	SM(playerid,str);
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	Property[id][PropertyX] = X;
	Property[id][PropertyY] = Y;
	Property[id][PropertyZ] = Z;
	DOF2_SetFloat(file,"X",X);
	DOF2_SetFloat(file,"Y",Y);
	DOF2_SetFloat(file,"Z",Z);
	DOF2_SaveFile();
	UpdateProperty(id);
	return 1;
}

//============================================================================//
CMD:changepropertyexpiration(playerid,params[])
{
	new id,file[50],time;
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	if(sscanf(params,"ii",id,time)) return SM(playerid,"Pouití: "r"/changepropertyexpiration [ ID ] [ Hodiny ]");
	if(id < 0 || id > MAX_PROPERTIES) return SM(playerid,"Chybnì zadané ID");
	if(time < 1 || time > 720) return SM(playerid,"Chybnì zadaný LVL");
	format(file,sizeof(file),"UnNamed/Properties/Property%d.txt",id);
	if(!fexist(file)) return SM(playerid,"Nemovitost neexistuje");
	format(str,sizeof(str),"Pronájem nemovitosti "r"%s "w" zmìnìna na "r"%d hodin",Property[id][PropertyName],time);
	SM(playerid,str);
	Property[id][PropertyTime] = time;
	DOF2_SetInt(file,"Hours",time);
	DOF2_SaveFile();
	UpdatePropertyText(id);
	return 1;
}
//============================================================================//
CMD:clearproperties(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new props,file[50];
	for(new i; i < MAX_PROPERTIES; i ++)
	{
		format(file,sizeof(file),"UnNamed/Properties/Property%d.txt",i);
		if(fexist(file))
		{
		    if(strlen(Property[i][PropertyName]))
		    {
		        if(strcmp(Property[i][PropertyOwner],"-1",false) == 0)
		        {
		            if(Property[i][PropertyLevel] == 50)
		            {
		                Property[i][PropertyLevel] = 1;
		                Property[i][PropertyCashLevel] = 1;
						Property[i][PropertyPrice] = Property[i][PropertyLevel]*PROPERTY_DPRICE+Property[i][PropertyCashLevel]*PROPERTY_DPRICE;
						DOF2_SetInt(file,"Level",1);
						DOF2_SetInt(file,"CashLevel",1);
						DOF2_SaveFile();
						UpdatePropertyText(i);
						props++;
					}
		        }
		    }
		}
	}
	format(str,sizeof(str),"Vyèitìno %d nemovitostí",props);
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:changepropertyowner(playerid,params[])
{
	SCMTOAA("changepropertyowner")
	new id,file[50],name[144];
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	if(sscanf(params,"iz",id,name)) return SM(playerid,"Pouití: "r"/changepropertyowner [ ID ] [ Nick ]");
	if(id < 0 || id > MAX_PROPERTIES) return SM(playerid,"Chybnì zadané ID");
	if(strlen(name) > 20) return SM(playerid,"Pøili dlouhý nick");
	format(file,sizeof(file),"UnNamed/Properties/Property%d.txt",id);
	if(!fexist(file)) return SM(playerid,"Nemovitost neexistuje");
	format(str,sizeof(str),"Majitel nemovitosti "r"%s "w"zmìnìn na "r"%s",Property[id][PropertyName],name);
	SM(playerid,str);
	if(strcmp(Property[id][PropertyOwner],"-1",false) == 0)
	{
		Property[id][PropertyTime] = 168*2;
	}
	format(Property[id][PropertyOwner],24,name);
	Property[id][PropertyEarning] = 0;
	DOF2_SetString(file,"Owner",name);
	DOF2_SetInt(file,"Earning",0);
	DOF2_SetInt(file,"Hours",168);
	DOF2_SaveFile();
	UpdatePropertyText(id);
	return 1;
}
//============================================================================//
CMD:changepropertylevel(playerid,params[])
{
	SCMTOAA("changepropertylevel")
	new id,file[50],lvl,lvl2;
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	if(sscanf(params,"iii",id,lvl,lvl2)) return SM(playerid,"Pouití: "r"/changepropertylevel [ ID ] [ Level Produkce ] [ Level Kasy ]");
	if(id < 0 || id > MAX_PROPERTIES) return SM(playerid,"Chybnì zadané ID");
	if(lvl < 1 || lvl > MAX_PROPERTY_LEVEL) return SM(playerid,"Chybnì zadaný LVL");
	if(lvl2 < 1 || lvl2 > MAX_PROPERTY_LEVEL) return SM(playerid,"Chybnì zadaný LVL");
	format(file,sizeof(file),"UnNamed/Properties/Property%d.txt",id);
	if(!fexist(file)) return SM(playerid,"Nemovitost neexistuje");
	format(str,sizeof(str),"Level nemovitosti "r"%s "w"zmìnìn na "r"%d, %d",Property[id][PropertyName],lvl,lvl2);
	SM(playerid,str);
	Property[id][PropertyLevel] = lvl;
	Property[id][PropertyCashLevel] = lvl2;
	Property[id][PropertyPrice] = lvl*PROPERTY_DPRICE+Property[id][PropertyCashLevel]*PROPERTY_DPRICE;
	DOF2_SetInt(file,"Level",lvl);
	DOF2_SetInt(file,"CashLevel",lvl2);
	DOF2_SaveFile();
	UpdatePropertyText(id);
	return 1;
}
//============================================================================//
CMD:renameproperty(playerid,params[])
{
	SCMTOAA("renameproperty")
	new id,file[50],name[144];
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	if(sscanf(params,"iz",id,name)) return SM(playerid,"Pouití: "r"/renameproperty [ ID ] [ Název ]");
	if(id < 0 || id > MAX_PROPERTIES) return SM(playerid,"Chybnì zadané ID");
	if(strlen(name) > 24) return SM(playerid,"Pøili dlouhý název");
	format(file,sizeof(file),"UnNamed/Properties/Property%d.txt",id);
	if(!fexist(file)) return SM(playerid,"Nemovitost neexistuje");
	format(str,sizeof(str),"Název nemovitosti "r"%s "w"zmìnìn na "r"%s",Property[id][PropertyName],name);
	SM(playerid,str);
	format(Property[id][PropertyName],24,name);
	DOF2_SetString(file,"Name",name);
	DOF2_SaveFile();
	UpdatePropertyText(id);
	return 1;
}
//============================================================================//
CMD:resetproperty(playerid,params[])
{
	SCMTOAA("resetproperty")
	new id,file[50];
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/resetproperty [ ID ]");
	if(id < 0 || id > MAX_PROPERTIES) return SM(playerid,"Chybnì zadané ID");
	format(file,sizeof(file),"UnNamed/Properties/Property%d.txt",id);
	if(!fexist(file)) return SM(playerid,"Nemovitost neexistuje");
	DOF2_SetString(file,"Owner","-1");
	DOF2_SetInt(file,"Level",1);
	DOF2_SetInt(file,"Earnings",0);
	DOF2_SaveFile();
	Property[id][PropertyLevel] = 1;
	format(Property[id][PropertyOwner],24,"-1");
	Property[id][PropertyEarning] = 0;
	format(str,sizeof(str),"Nemovitost "r"%s "w"(%d) restartována",Property[id][PropertyName],id);
	SM(playerid,str);
	UpdatePropertyText(id);
	return 1;
}
//============================================================================//
CMD:createint(playerid,params[])
{
	SCMTOAA("createint")
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new DIALOG[2000];
	for(new i; i < sizeof(Interiors); i ++)
	{
	    format(str,sizeof(str),"{0088FF}%d. "w"%s\n",i+1,Interiors[i][iName]);
	    strcat(DIALOG,str);
	}
	SPD(playerid,UNNAMED+141,DIALOG_STYLE_LIST,"Vytvoøení interiéru",DIALOG,"Vybrat","Zavøít");
	return 1;
}
//============================================================================//
CMD:createhouse(playerid,params[])
{
	SCMTOAA("createhouse")
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new DIALOG[2000],needhours;
	if(!sscanf(params,"i",needhours))
	{
		if(needhours < 0 || needhours > 500) return SM(playerid,"Rozmezí hodin 0 - 500");
	    SetPVarInt(playerid,"HouseHours",needhours);
	}
	else
	{
	    SetPVarInt(playerid,"HouseHours",10);
	}
	for(new i; i < sizeof(HouseInteriors); i ++)
	{
	    format(str,sizeof(str),"{0088FF}%d. "w"%s\t{0088FF}%d bodù\t"g"%s$\n",i+1,HouseInteriors[i][HouseInteriorName],HouseInteriors[i][HouseInteriorPriceB],Split(HouseInteriors[i][HouseInteriorPrice]));
	    strcat(DIALOG,str);
	}
	SPD(playerid,UNNAMED+142,DIALOG_STYLE_TABLIST,"Vytvoøení domu - Interiér",DIALOG,"Vybrat","Zavøít");
	return 1;
}
//============================================================================//
CMD:creategift(playerid,params[])
{
	SCMTOAA("creategift")
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new month;
	getdate(.month=month);
	if(month != 12) return SM(playerid,"Tento pøíkaz lze pouít pouze o vánocích");
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	CreateGift(X,Y,Z);
	SM(playerid,"Dárek vytvoøen");
	return 1;
}
//============================================================================//
/*CMD:createegg(playerid,params[])
{
	IsNoAdmin(playerid)
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new month;
	getdate(.month=month);
	if(month != 3) return SM(playerid,"Tento pøíkaz lze pouít pouze o Velikonocích");
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	CreateGift(X,Y,Z);
	SetPlayerPos(playerid,X,Y,Z+0.6);
	SM(playerid,"Velikonoèní vajíèko vytvoøeno");
	return 1;
}
*///============================================================================//
CMD:getid(playerid,params[])
{
	SCMTOAA("getid")
	new nick[144],finded = 0,DIALOG[2500];
	if(sscanf(params,"z",nick)) return SM(playerid,"Pouití: "r"/getid [ Nick / Èást nicku ]");
	if(strlen(nick) < 1 || strlen(nick) > MAX_PLAYER_NAME) return SM(playerid,"Minimálnì lze pouít 1 znak a maximálnì 24 znakù");
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
		if(IPC(i) && !IsPlayerNPC(i))
		{
		    if(strfind(Jmeno(i),nick,true) != -1)
		    {
		        format(str,sizeof(str),"%s\t[ID:"g" %d"w"]\n",Jmeno(i),i);
		        strcat(DIALOG,str);
		        finded++;
		    }
		}
	}
	if(finded)
	{
		SPD(playerid,0,DIALOG_STYLE_TABLIST,"GetID",DIALOG,"Zavøít","");
	}
	else
	{
	    SM(playerid,"Nebyli nalezeni ádní hráèi");
	}
	return 1;
}
//============================================================================//
CMD:fakecmd(playerid,params[])
{
	SCMTOAA("fakecmd")
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new id,cmd[144];
	if(sscanf(params,"iz",id,cmd)) return SM(playerid,"Pouití: "r"/fakecmd [ ID ] [ Pøíkaz ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(cmd[0] != '/') return SM(playerid,"patné zadání pøíkazu");
	if(strlen(cmd) > 128) return SM(playerid,"Zadejte kratí pøíkaz");
	if(!IsPlayerOnHighestLevel(playerid))
	{
	    if(Admin[id] > 0) return SM(playerid,"Nemùete pouít tento pøíkaz na administrátorovi");
	}
	CallLocalFunction("OnPlayerCommandText","is",id,cmd);
	SM(playerid,"Pøíkaz vyvolán");
	return 1;
}
//============================================================================//
CMD:allunlock(playerid,params[])
{
	SCMTOAA("allunlock")
	IsNoModerator(playerid)
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
		if(PLocked[i] > -1)
		{
		    Locked[PLocked[i]] = -1;
		    PLocked[i] = -1;
		}
	}
	format(str,sizeof(str),"%s "w"%s "r"odemknul vechna vozidla na serveru.",Players(playerid),Jmeno(playerid));
	SCMTA(red,str);
	return 1;
}
//============================================================================//
CMD:lock(playerid,params[])
{
	SCMTOAA("lock")
	new car = GetPlayerVehicleID(playerid);
	if(!IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Musíte být ve vozidle");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SM(playerid,"Musíte být øidiè");
	if(Locked[car] > -1) return SM(playerid,"Vozidlo u je zamknuto");
	if(PLocked[playerid] > -1)
	{
	    CreateInfoBox(playerid,"Vozidlo ~r~zamknuto~w~, predchozi vozidlo bylo ~g~odemknuto",8);
		Locked[PLocked[playerid]] = -1;
	}
	else
	{
	    CreateInfoBox(playerid,"Vozidlo ~r~zamknuto",8);
	}
	Locked[car] = playerid;
	PLocked[playerid] = car;
	return 1;
}
//============================================================================//
CMD:unlock(playerid,params[])
{
	SCMTOAA("unlock")
	new car = GetPlayerVehicleID(playerid);
	if(!IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Musíte být ve vozidle");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SM(playerid,"Musíte být øidiè");
	if(Locked[car] == -1) return SM(playerid,"Vozidlo není zamknuto");
	if(PLocked[playerid] != car) return SM(playerid,"Toto vozidlo jste nezamknul vy");
    CreateInfoBox(playerid,"Vozidlo ~g~odemknuto",8);
	Locked[car] = -1;
	PLocked[playerid] = -1;
	return 1;
}
//============================================================================//
CMD:vyhodit(playerid,params[])
{
	SCMTOAA("vyhodit")
	new id,car = GetPlayerVehicleID(playerid);
	if(!IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Musíte být ve vozidle");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SM(playerid,"Musíte být øidiè");
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/vyhodit [ ID ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(id == playerid) return SM(playerid,"Nemùete vyhodit sám sebe");
	if(!IsPlayerInVehicle(id,car)) return SM(playerid,"Hráè není ve Vaem vozidle");
	format(str,sizeof(str),"Vyhodil si hrace~r~ %s ~w~z vozidla",Jmeno(id));
	CreateInfoBox(playerid,str,5);
	format(str,sizeof(str),"%s~r~ %s ~w~te vyhodil z vozidla",TDPlayers(playerid),Jmeno(playerid));
	CreateInfoBox(id,str,5);
	RemovePlayerFromVehicle(id);
	return 1;
}
//============================================================================//
CMD:blockpms(playerid,params[])
{
	SCMTOAA("blockpms")
	if(BlockedPMsAll[playerid] == false)
	{
	    BlockedPMsAll[playerid] = true;
	    SM(playerid,"PM Blocknuty");
	}
	else
	{
	    BlockedPMsAll[playerid] = false;
	    SM(playerid,"PM Odblocknuty");
	}
	return 1;
}
//============================================================================//
CMD:blockpm(playerid,params[])
{
	SCMTOAA("blockpm")
	new id,blocked = -1;
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/blockpm [ ID ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	for(new i; i < MAX_BLOCKED; i ++)
	{
	    if(BlockedPMs[playerid][i] != -1)
	    {
	        blocked ++;
		}
	    if(BlockedPMs[playerid][i] == id)
	    {
            BlockedPMs[playerid][i] = INVALID_PLAYER_ID;
            format(str,sizeof(str),"%s "r"%s "w"Vám mùe znovu posílat PM Zprávy",Players(id),Jmeno(id));
            SM(playerid,str);
            break;
	    }
	    else
	    {
			if(blocked >= MAX_BLOCKED) return SM(playerid,"U má blocknuto maximální poèet lidí");
			if(BlockedPMs[playerid][i] == INVALID_PLAYER_ID)
			{
				BlockedPMs[playerid][i] = id;
	            format(str,sizeof(str),"%s "r"%s "w"Vám nemùe posílat PM Zprávy",Players(id),Jmeno(id));
	            SM(playerid,str);
				break;
			}
	    }
	}
	return 1;
}
//============================================================================//
CMD:givecar(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new id,carid,name[128],slots;
	if(!sscanf(params,"ii",id,carid))
	{

	}
	else if(!sscanf(params,"iz",id,name))
	{
	    carid = GetVehicleIDFromName(name);
		if(carid < 400 || carid > sizeof(VehicleNames)+400) return SM(playerid,"Neplatný název vozidla");
	}
	else
	{
	    return SM(playerid,"Pouití: "r"/givecar [ ID ] [ ID / Název vozidla ]");
	}
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	for(new i = MAX_SLOTS-MAX_SPECIAL_SLOTS; i < MAX_SLOTS; i ++)
	{
	    format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(id),i);
	    if(fexist(dfile))
	    {
	        slots++;
	    }
	}
	if(slots >= MAX_SPECIAL_SLOTS) return SM(playerid,"Hráè má plnou gará");
	format(str,sizeof(str),"Rozmezí ID aut je 400 - %d",sizeof(VehicleNames)+399);
	if(carid < 400 || carid > sizeof(VehicleNames)+399) return SM(playerid,str);
	switch(carid)
	{
		case 435,449,450,537,538,569,570,584,590,591,606,607,608:
		return SM(playerid,"Toto vozidlo nemùe dát hráèi");
	}
	AddVehicleToGarage(id,carid);
	format(str,sizeof(str),"%s "w"%s "r"pøidal hráèi "w"%s "r"vozidlo "w"%s "r"do garáe.",Players(playerid),Jmeno(playerid),Jmeno(id),GetVehicleNameByCarID(carid));
	SCMTA(red,str);
	return 1;
}
//============================================================================//
CMD:uzdravit(playerid,params[])
{
	new id,Float:Health;
	if(WorkMission[playerid] != 8) return SM(playerid,"Musíte plnit misi u "r"Zdravotník "w" -> "g"/mise");
	if(IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Nesmíte být ve vozidle");
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/uzdravit [ ID ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(MissionLastCustomer[playerid][id] == true) return SM(playerid,"Tohoto hráèe si u uzdravil");
	if(id == playerid) return SM(playerid,"Nemùete uzdravit sám sebe");
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(id,X,Y,Z);
	GetPlayerHealth(id,Health);
	if(!IsPlayerInRangeOfPoint(playerid,3,X,Y,Z)) return SM(playerid,"Musíte být blízko tohoto hráèe");
	if(Health == 100) return SM(playerid,"Hráè není zranìný");
	format(str,sizeof(str),"Byl jste uzdraven hracem ~r~%s",Jmeno(playerid));
	convert_encoding(str);
	CreateCompleteMessage(id,"Zdravotnik",str,3);
	SetPlayerHealth(id,100);
	new count = MissionsCount[playerid][8],level = GetPlayerMissionLevel(playerid,8);
	if(count > 1000) count = 1000;
	new cash = 25000 + level*9100,Float:points = 8 + level*0.9;
    format(str,sizeof(str),"Odmena ~g~%s$ ~w~+~b~%0.1f body",Split(cash),points);
    CreateCompleteMessage(playerid,"Hrac uzdraven",str,5);
    GivePoints(playerid,points);
    GivePlayerVyplata(playerid,cash);
    GivePlayerJobPoints(playerid,1);
	MissionsCount[playerid][8] ++;
	MissionLastCustomer[playerid][id] = true;
	GiveXP(playerid,60+(level*18),"uzdraveni hrace");
	MiseCompleted[playerid]++;
	GivePlayerDailyValue(playerid,DAILY_TYPE_MISSION_MEDIC,1);
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	DOF2_SetInt(dfile,"MiseCompleted",MiseCompleted[playerid]);
	MissionAchievement(playerid);
	return 1;
}
//============================================================================//
CMD:zat(playerid,params[])
{
	new id,wl;
	if(WorkMission[playerid] != 7) return SM(playerid,"Musíte plnit misi u "b"Policie "w" -> "g"/mise");
	if(IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Nesmíte být ve vozidle");
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/zat [ ID ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(id == playerid) return SM(playerid,"Nemùete zatknout sám sebe");
	if(GetPlayerWeapon(playerid) == 0) return SM(playerid,"Musíte mít v ruce zbraò");
	wl =  GetPlayerWantedLevel(id);
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(id,X,Y,Z);
	if(!IsPlayerInRangeOfPoint(playerid,3,X,Y,Z)) return SM(playerid,"Musíte být blízko tohoto hráèe");
	if(wl == 0) return SM(playerid,"Hráè není hledaný");
	if(IsPlayerInBlockedMission(id)) return SM(playerid,"Tento hráè plní misi nemùete ho zatknout");
	if(GetPlayerVirtualWorld(playerid) > 0) return SM(playerid,"Hráè nesmí být ve virtualním svìtì");
	if(wl > 12) wl = 12;
	EndMission(id,"Byl si zatcen");
	format(str,sizeof(str),"Byl jste zatcen hracem ~r~%s",Jmeno(playerid));
	convert_encoding(str);
	CreateCompleteMessage(id,"Vezeni",str,3);
	JailPlayer(id,wl*30);
	new count = MissionsCount[playerid][7],level = GetPlayerMissionLevel(playerid,7);
	if(count > 1000) count = 1000;
	new cash = 25000+(1000*wl)+level*9000;
	new Float:body = (3+wl/2)+level*0.9;
    format(str,sizeof(str),"Odmena ~g~%s$ ~w~+~b~%0.1f body",Split(cash),body);
    CreateCompleteMessage(playerid,"Hrac zatcen",str,5);
    GivePoints(playerid,body);
    GivePlayerVyplata(playerid,cash);
    GivePlayerJobPoints(playerid,1);
	MissionsCount[playerid][7] ++;
	GiveXP(playerid,50+(wl*10)+(level*18),"zatceni hrace");
	GivePlayerDailyValue(playerid,DAILY_TYPE_MISSION_POLICE,1);
	MiseCompleted[playerid]++;
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	DOF2_SetInt(dfile,"MiseCompleted",MiseCompleted[playerid]);
	MissionAchievement(playerid);
	return 1;
}
//============================================================================//
CMD:addservervehicle(playerid,params[])
{
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	if(!IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Musí být ve vozidle");
	new vehicleid = GetPlayerVehicleID(playerid),model = GetVehicleModel(vehicleid),Float:X,Float:Y,Float:Z,Float:A,query[200];
	GetVehiclePos(vehicleid,X,Y,Z);
	GetVehicleZAngle(vehicleid,A);
	mysql_format(mysql,query,sizeof(query),"INSERT INTO `ServerVehicles` (`ModelID`,`X`,`Y`,`Z`,`A`) VALUES (%d,%f,%f,%f,%f)",model,X,Y,Z,A);
	mysql_tquery(mysql,query,"");
	AddStaticVehicle(model,X,Y,Z,A,-1,-1);
	format(str,sizeof(str),"Vozidlo "g"%s "w"pøidáno na server",GetVehicleName(vehicleid));
	SM(playerid,str);
	return 1;
}
//============================================================================//
/*CMD:nastream(playerid,params[])
{
	new nazev[145];
	SCMTOAA("nastream")
	IsNoVIP(playerid)
	if(Admin[playerid] < 3)
	{
		if(DOF2_GetInt(CONFIG,"SBLOCK") == 1) return SM(playerid,"Pøíkaz je bloknutý správcem serveru");
	}
	if(Admin[playerid] < 5)
	{
	    if(Admin[playerid] > 2)
	    {
			format(str,sizeof(str),"Dalí stream lze spustit za: "g"%02d "w": "g"%02d",MusicTimeMinutes-3,MusicTimeSeconds);
			if(MusicTimeMinutes > 3) return SM(playerid,str);
		}
		else
		{
			format(str,sizeof(str),"Dalí stream lze spustit za: "g"%02d "w": "g"%02d",MusicTimeMinutes,MusicTimeSeconds);
			if(MusicTimeSeconds > 0 || MusicTimeMinutes > 0) return SM(playerid,str);
		}
	}
	if(sscanf(params,"z",nazev)) return SM(playerid,"Pouití: "r"/nastream [ Název písnièky ]");
	format(url,sizeof(url),"http://6t.pe/?song=%s",nazev);
	if(Admin[playerid] == 0)
	{
		format(str,sizeof(str),"%s "c"%s "g"spustil "c"Audio Stream"g".",Players(playerid),Jmeno(playerid));
		SCMTA(green,str);
	}
	else if(Admin[playerid] > 0)
	{
		format(str,sizeof(str),"%s "w"%s "r"spustil "w"Audio Stream"r".",Players(playerid),Jmeno(playerid));
		SCMTA(red,str);
	}
	new players;
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(Listening[i] == -1 && BlockedStream[i] == 0 && MusicLenght[i] < 1)
		{
			StopAudioStreamForPlayer(i);
			PlayAudioStreamForPlayer(i,url);
			players ++;
		}
		else if(Listening[i] != -1)
		{
			format(str,sizeof(str),"Má zaplé radio, pokud chce pøehrát audio stream od hráèe "g"%s",Jmeno(playerid));
		    SM(i,str);
		    SM(i,"pouij pøíkaz: "c"/prehrat");
		}
		else if(BlockedStream[i] == 1)
		{
			format(str,sizeof(str),"Má bloknutý stream, pokud chce tento stream od hráèe "g"%s "w"pøehrát,",Jmeno(playerid));
		    SM(i,str);
		    SM(i,"Pouij pøíkaz: "c"/prehrat");
		}
		else if(MusicLenght[i] > 0)
		{
			format(str,sizeof(str),"Má zaplou hudbu, pokud chce tento stream od hráèe "g"%s "w"pøehrát,",Jmeno(playerid));
		    SM(i,str);
		    SM(i,"Pouij pøíkaz: "c"/prehrat");
		}
		else
		{
		    if(i != playerid)
		    {
				SM(playerid,"Pokud vám audio streamy obtìují pouijte pøíkaz "r"/blockstream");
			}
		}
	}
	format(str,sizeof(str),"{0077FF}Audio Stream byl sputìn pro "w"%d {0077FF}hráèù.",players);
	SCM(playerid,bila,str);
	if(DOF2_GetInt(CONFIG,"SBLOCK") == 1)
	{
	 	SM(playerid,""r"WARNING: "w"Pøíkaz je pro hráèe bloknutý");
	}
	KillTimer(TimerStream);
	TimerStream = 0;
	MusicTimeMinutes = 4;
	MusicTimeSeconds = 0;
	TimerStream = SetTimer("UnBlockMusic",1000,false);
	return 1;
}
*/
//============================================================================//
CMD:getwp(playerid,params[])
{
	SCMTOAA("getwp")
	IsNoModerator(playerid)
	new id,weapons[13][2],DIALOG[800],wep;
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/getwp [ ID ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	for(new i; i < 13; i ++)
	{
	    GetPlayerWeaponData(id,i,weapons[i][0],weapons[i][1]);
		if(weapons[i][0] != 0 && weapons[i][1] != 0)
		{
			wep++;
		    format(str,sizeof(str),""w"%s\t"sb"%d Ammo "w"\n",WeaponsNames(weapons[i][0]),weapons[i][1]);
			strcat(DIALOG,str);
		}
	}
	if(wep == 0) return SM(playerid,"Hráè nemá u sebe ádné zbranì");
	format(str,sizeof(str),"Zbranì hráèe "w"%s",Jmeno(id));
	SPD(playerid,0,DIALOG_STYLE_TABLIST,str,DIALOG,"Zavøít","");
	return 1;
}
//============================================================================//
CMD:rename(playerid,params[])
{
	SCMTOAA("rename")
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new name[144],id;
	if(sscanf(params,"iz",id,name)) return SM(playerid,"Pouití: "r"/rename [ ID ] [ Nick ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(strlen(name) < 3) return SM(playerid,"Musíte pouít minimálnì 3 znaky");
	if(strlen(name) > 20) return SM(playerid,"Mùete pouít maximálnì 20 znakù");
	if(IsNickSame(name)) return SM(playerid,"Tento nick u nìkdo pouívá");
	for(new i; i < MAX_PLAYER_NAME; i ++)
	{
	    if(name[i] < 48 && name[i] != 36 && name[i] != 0 && name[i] != 46 && name[i] != 41 && name[i] != 40 || name[i] > 57 && name[i] < 65 && name[i] != 61 || name[i] > 90 && name[i] < 97 && name[i] != 95 && name[i] != 91 && name[i] != 93 || name[i] > 122) return SM(playerid,"Nový nick obsahuje nepovolené znaky");
	}
	format(dfile,sizeof(dfile),USER_FILES,name);
	if(fexist(dfile)) return SM(playerid,"Tento nick u nìkdo pouívá");
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(IPC(i) && !IsPlayerNPC(i))
	    {
	        if(i != playerid)
	        {
	        	if(strcmp(name,Jmeno(i),true) == 0) return SM(playerid,"Tento nick u nìkdo pouívá");
			}
	    }
	}
	if(id != playerid)
	{
		format(str,sizeof(str),"Zmìnil si hráèi "r"%s "w"nick, jeho nový nick je "g"%s",Jmeno(id),name);
		SM(playerid,str);
		format(str,sizeof(str),"%s "r"%s "w"ti zmìnil nick, tvùj nový nick je "g"%s",Players(playerid),Jmeno(playerid),name);
		SM(id,str);
	}
	else
	{
		format(str,sizeof(str),"Zmìnil jsis nick, tvùj nový nick je "g"%s",name);
		SM(playerid,str);
	}
	ChangeName(id,name);
	return 1;
}
//============================================================================//
CMD:gotop(playerid,params[])
{
	SCMTOAA("gotop")
	IsNoAdmin(playerid)
	new id = strval(params);
	if(IsPlayerInSpecialProperty(playerid)) return SM(playerid,"V nemovitosti se nemùete odwarpovat");
	if(!strlen(params)) return SM(playerid,"Pouití: "r"/gotop [ ID Nemovitosti ]");
	if(id < 0 || id > MAX_PROPERTIES) return SM(playerid,"Chybnì zadané ID");
	if(strcmp(Property[id][PropertyOwner],"0",false) == 0) return SM(playerid,"Tato nemovitost není vytvoøena");
	if(strcmp(Property[id][PropertyOwner],Jmeno(playerid),false) == 0) return SM(playerid,"Nemùe se portnout ke své nemovitosti");
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		SetVehiclePos(GetPlayerVehicleID(playerid),Property[id][PropertyX],Property[id][PropertyY],Property[id][PropertyZ]);
		SetPlayerInterior(GetPlayerVehicleID(playerid),0);
		SetPlayerInterior(playerid,0);
		LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
	}
	else
	{
	    SetPlayerPos(playerid,Property[id][PropertyX],Property[id][PropertyY],Property[id][PropertyZ]);
		SetPlayerInterior(playerid,0);
	}
	format(str,sizeof(str),"Portnul si se k nemovitosti "sb"%s",Property[id][PropertyName]);
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:properties(playerid,params[])
{
	SCMTOAA("properties")
	IsNoModerator(playerid)
	new DIALOG_PROP[10000];
	strcat(DIALOG_PROP,"Název\t"w"Majitel\t"w"Vyprí\t"w"Obsah kasy\n");
	strcat(DIALOG_PROP,"Hledat podle vlastníka/názvu\nDalí stránka\n \n");
	for(new i; i < 40; i ++)
	{
	    if(strcmp(Property[i][PropertyOwner],"0",false) != 0)
	    {
	        if(strcmp(Property[i][PropertyOwner],"-1",false) != 0)
	        {
		    	format(str,sizeof(str),"%d. %s"w" [ P: %d, K: %d ]\t%s\t"g"%d Hodin\t"g"%s$"w" / "r"%s$\n",i,Property[i][PropertyName],Property[i][PropertyLevel],Property[i][PropertyCashLevel],Property[i][PropertyOwner],Property[i][PropertyTime],Split(Property[i][PropertyEarning]),Split(Property[i][PropertyCashLevel]*CASH_PER_LEVEL));
			}
			else
			{
		    	format(str,sizeof(str),"%d. %s"w" [ P: %d, K: %d ]\tNikdo\t"g"Nikdy\t"g"%s$\n",i,Property[i][PropertyName],Property[i][PropertyLevel],Property[i][PropertyCashLevel],Split(Property[i][PropertyEarning]));
			}
			strcat(DIALOG_PROP,str);
		}
	}
	SetPVarInt(playerid,"PropPage",1);
	SPD(playerid,UNNAMED+115,DIALOG_STYLE_TABLIST_HEADERS,"Vechny Nemovitosti",DIALOG_PROP,"Vybrat","Zavøít");
	return 1;
}
//============================================================================//
CMD:myprops(playerid,params[])
{
	SCMTOAA("myprops")
	new DIALOG_PROP[1500],props;
	strcat(DIALOG_PROP,"Název\t"w"Level\t"w"Vyprí\t"w"Obsah kasy\n");
	strcat(DIALOG_PROP,""r"Nemovitosti:\n");
	for(new i; i < MAX_PROPERTIES; i ++)
	{
	    if(strcmp(Property[i][PropertyOwner],"0",false) != 0)
	    {
			if(IsPlayerPropertyOwner(playerid,i))
			{
			    format(str,sizeof(str),"%s {adadad}[ IÈO: %d]\tP:%d,K:%d\t"g"%d Hodin\t"g"%s$"w" / "r"%s$\n",Property[i][PropertyName],i,Property[i][PropertyLevel],Property[i][PropertyCashLevel],Property[i][PropertyTime],Split(Property[i][PropertyEarning]),Split(Property[i][PropertyCashLevel]*CASH_PER_LEVEL));
			    strcat(DIALOG_PROP,str);
			    PlayerProps[playerid][props] = i;
			    props++;
			}
		}
	}
	for(new i = POwner[playerid]; i < PropSlots[playerid]; i ++)
	{
	    strcat(DIALOG_PROP,"{898989}Volný slot\t-\t-\t-\n");
	}
	if(PropSlots[playerid] < MAX_PROPERTIES_PER_PLAYER)
	{
	    strcat(DIALOG_PROP,"Pøidat slot [ "g"1000 Bodù "w"]");
	}
	strcat(DIALOG_PROP,"\n"r"Domy:\n");
	if(PlayerHouse[playerid] != -1)
		format(str,sizeof(str),"%s {adadad}[ è.p.: %d ]\t \t \t \n",House[PlayerHouse[playerid]][hName],PlayerHouse[playerid]+1);
	else 
		format(str,sizeof(str),"{898989}Volný slot\t \t \t \n");
	strcat(DIALOG_PROP,str);
	strcat(DIALOG_PROP,"\n"r"Speciální nemovitost\n");
	if(GetPlayerSpecialProperty(playerid) != -1)
		format(str,sizeof(str),"Výrobna zbraní\t \t \t \n");
	else
	    format(str,sizeof(str),"{898989}Volný slot\t \t \t \n");
	strcat(DIALOG_PROP,str);
	SPD(playerid,UNNAMED+116,DIALOG_STYLE_TABLIST_HEADERS,"Moje Nemovitosti",DIALOG_PROP,"Vybrat","Zavøít");
	return 1;
}
//============================================================================//
CMD:createproperty(playerid,params[])
{
	SCMTOAA("createproperty")
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Musíte se pøihlásit pøes "r"RCON");
	}
	new lvl,name[145],color[145];
	if(sscanf(params,"izz",lvl,color,name)) return SM(playerid,"Pouití: "r"/createproperty [ Level ] [ Barva ] [ Název ]");
	if(strlen(color) > 6 || strlen(color) < 6) return SM(playerid,"Chybnì zadaná barva");
	if(lvl < 1 || lvl > MAX_PROPERTY_LEVEL) return SM(playerid,"Chybnì zadaný level");
	if(strlen(name) < 3 || strlen(name) > 24) return SM(playerid,"Chybnì zadaný název");
	format(name,sizeof(name),"{%s}%s",color,name);
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	CreateProperty(X,Y,Z,lvl,name);
	format(str,sizeof(str),"Nemovitost [ "g"%d "w"] %s "w"úspìnì vytvoøena",propertyid,Property[propertyid][PropertyName]);
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:getplayerteam(playerid,params[])
{
	IsNoAdmin(playerid)
	new id;
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/getplayerteam [ ID ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	format(str,sizeof(str),""g"%s "w": {0077FF}Team - "y"%d",Jmeno(id),GetPlayerTeam(id));
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:startrace(playerid,params[])
{
	SCMTOAA("startrace")
	if(OnEvent[playerid] == true) return SM(playerid,"Na eventu nelze pouít tento pøíkaz");
	if(RacePlayer[playerid] == -1) return SM(playerid,"Nejsi pøipojen v závodì");
	if(RaceStart[RacePlayer[playerid]] == true) return SM(playerid,"Závod u je odstartován");
	if(RacePlayers[RacePlayer[playerid]] < 2) return SM(playerid,"Pro start závodu jsou zapotøebí minimálnì 2 hráèi");
	new raceid = RacePlayer[playerid];
	format(str,sizeof(str),"Závod "w"%s "sb"byl odstartován.",Race[raceid][CPName]);
    SCMTA(0x0055FFFF,str);
    RaceStart[raceid] = true;
	TimeToStartSeconds[raceid] = 0;
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
		if(RacePlayer[i] == raceid)
		{
			DisablePlayerRaceCheckpoint(i);
			TogglePlayerControllable(i,false);
   			SetTimerEx("raceOdpocet",1000,false,"i",i);
			PlayerPlaySound(i,1056,0.0,0.0,0.0);
			RaceOdpocet[i] = 5;
			SetCameraBehindPlayer(i);
			RaceSeconds[i] = 0;
			RaceMinutes[i] = 0;
			format(str,sizeof(str),"~y~%d",RaceOdpocet[i]);
			GameTextForPlayer(i,str,1000,3);
		}
	}
	return 1;
}
//============================================================================//
CMD:race(playerid,params[])
{
	new id;
	JailCmdBlock(playerid);
	if(pStunt[playerid][sStuntID] != -1) return SM(playerid,"Kdy plní stunt, nemùe se pøipojit do závodu");
	if(InDM[playerid] != -1) return SM(playerid,"V DeathMatchi se nemùe pøipojit do závodu "r"/leave");
	if(IsPlayerSupplyRun(playerid)) return SM(playerid,"Právì plní misi, nemùe vykonat tuto akci");
	if(IsPlayerHitted(playerid)) return SM(playerid,"V boji se nemùe pøipojit do závodu");
	if(WorkMission[playerid] > 0) return SM(playerid,"U má nìco na práci "r"/zrusmisi");
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/race [ ID Závodu ]");
	if(id < 0 || id > MAX_RACES) return SM(playerid,"Chybnì zadané ID");
	if(strlen(Race[id][CPName]) == 0) return SM(playerid,"Tento závod neexistuje");
	if(RacePlayer[playerid] > -1) return SM(playerid,"U si pøipojen v závodì");
	if(RaceReady[id] == false) return SM(playerid,"Závod není zaloen "g"/zavody");
	if(RaceStart[id] == true) return SM(playerid,"Tento závod u je odstartován");
	if(EventRace == id) return SM(playerid,"Tento závod u je zaloený jako Event závod");
	if(Race[id][RaceZapisne] > 0)
	{
		if(Points[playerid] < Race[id][RaceZapisne]) return SM(playerid,"Nemáte dostatek bodù pro pøipojení");
	    SetPVarInt(playerid,"RaceID",id);
	    format(str,sizeof(str),"Pro pøipojení do tohoto závodu zaplatíte zápisné v hodnotì "g"%d bodù"w". Pøijímáte výzvu?\n\n"r"! V pøípadì oputìní serveru, pádu hry jsou body nevratné !",Race[id][RaceZapisne]);
	    SPD(playerid,UNNAMED+198,DIALOG_STYLE_MSGBOX,"Pøipojení do závodu",str,"Ano","Ne");
	}
	else
	{
		CancelAntiSK(playerid);
	    SaveBeforeEventData(playerid);
		ConnectToRace(playerid,id);
		format(str,sizeof(str),"%s "w"%s "sb"se pøipojil do závodu "w"%s"sb".",Players(playerid),Jmeno(playerid),Race[id][CPName]);
		SCMTA(0x0055FFFF,str);
		format(str,sizeof(str),"Pro pøipojení pouij: "w"/race %d"sb".",id);
		SCMTA(0x0055FFFF,str);
	}
	return 1;
}
//============================================================================//
CMD:zavody(playerid,params[])
{
	SCMTOAA("zavody")
	new DIALOG_RACES[2000],races = 0;
	if(InDM[playerid] != -1) return SM(playerid,"V DeathMatchi se nemùe pøipojit do závodu "r"/leave");
	if(IsPlayerSupplyRun(playerid)) return SM(playerid,"Právì plní misi, nemùe vykonat tuto akci");
	JailCmdBlock(playerid);
	if(IsPlayerHitted(playerid)) return SM(playerid,"V boji se nemùe pøipojit do závodu");
	if(WorkMission[playerid] > 0) return SM(playerid,"U má nìco na práci "r"/zrusmisi");
	if(pStunt[playerid][sStuntID] != -1) return SM(playerid,"Kdy plní stunt, nemùe se pøipojit do závodu");
	for(new i; i < MAX_RACES; i ++)
	{
		if(strlen(Race[i][CPName]) > 0)
		{
		    if(Race[i][CPHide] == 0)
		    {
			    races++;
			    if(i == EventRace)
			    {
			        format(str,sizeof(str),""r"%s "w"[ Event Race ]\n",Race[i][CPName]);
			        strcat(DIALOG_RACES,str);
			    }
			    else if(RaceStart[i] == true)
			    {
			        format(str,sizeof(str),""r"%s\n",Race[i][CPName]);
			        strcat(DIALOG_RACES,str);
			    }
			    else if(RaceReady[i] == true)
			    {
			        format(str,sizeof(str),""y"%s "w"[ Pøipojených Hráèù : %d ] [ "g"Zápisné: %d bodù "w"]\n",Race[i][CPName],RacePlayers[i],Race[i][RaceZapisne]);
			        strcat(DIALOG_RACES,str);
			    }
			    else
			    {
			        format(str,sizeof(str),""g"%s\n",Race[i][CPName]);
			        strcat(DIALOG_RACES,str);
			    }
			}
		}
	}
	if(races == 0) SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Závody","Na serveru není ádný závod","Zavøít","");
	else SPD(playerid,UNNAMED+75,DIALOG_STYLE_LIST,"Závody",DIALOG_RACES,"Vybrat","Zavøít");
	return 1;
}
//============================================================================//
CMD:wanted(playerid,params[])
{
	SCMTOAA("wanted")
	new DIALOG_WANTED[1000],bool:wanted;
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(IPC(i) && !IsPlayerNPC(i))
	    {
	        if(GetPlayerWantedLevel(i) > 0)
	        {
				wanted = true;
	            format(str,sizeof(str),"%s\t"r"Wanted level: %d\n",Jmeno(i),GetPlayerWantedLevel(i));
	            strcat(DIALOG_WANTED,str);
	        }
	        if(Hitman[i] > 0)
	        {
	            wanted = true;
	            format(str,sizeof(str),"%s\t"c"Odmìna: %d %s\n",Jmeno(i),Hitman[i],PluralWord(Hitman[i],"bod","body","bodù"));
	            strcat(DIALOG_WANTED,str);
	        }
	    }
	}
	if(wanted == true) SPD(playerid,0,DIALOG_STYLE_TABLIST,"Hledaní hráèi",DIALOG_WANTED,"Zavøít","");
	else SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Hledaní hráèi","Na serveru není nikdo hledaný","Zavøít","");
	return 1;
}
//============================================================================//
CMD:hitman(playerid,params[])
{
	SCMTOAA("hitman")
	new reward,id;
	if(sscanf(params,"ii",id,reward)) return SM(playerid,"Pouití: "r"/hitman [ ID ] [ Body ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(reward > Points[playerid]) return SM(playerid,"Nemá tolik bodù");
	if(reward < 1) return SM(playerid,"Minimálnì mùe vypsat 1 $");
	Hitman[id] += reward;
	GivePoints(playerid,-reward);
	format(str,sizeof(str),"%s "w"%s{80D100} vypsal odmìnu "w"%d %s {80D100}na hráèe "w"%s",Players(playerid),Jmeno(playerid),reward,PluralWord(reward,"bod","body","bodù"),Jmeno(id));
	SCMTA(0x80D100FF,str);
	format(str,sizeof(str),"Celková odmìna za zabití: "w"%d %s{80D100}.",Hitman[id],PluralWord(Hitman[id],"bod","body","bodù"));
	SCMTA(0x80D100FF,str);
	return 1;
}
//============================================================================//
CMD:sellbody(playerid,params[])
{
	SCMTOAA("sellbody")
	new id,amount,price;
	if(sscanf(params,"iii",id,amount,price)) return SM(playerid,"Pouití: "r"/sellbody [ ID ] [ Mnoství ] [ Cena ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(id,X,Y,Z);
	if(!IsPlayerInRangeOfPoint(playerid,10,X,Y,Z)) return SM(playerid,"Musí být blízko hráèe");
	if(id == playerid) return SM(playerid,"Nemùe prodat body sám sobì");
	if(Spawned[id] == false) return SM(playerid,"Hráè není spawnutý nemùete mu prodat body");
	if(Shopping[id] == true) return SM(playerid,"Hráè u nìco nakupuje");
	if(OnEvent[id] == true) return SM(playerid,"Hráè je na eventu");
	if(dPlayer[id][pDuelStatus] != -1) return SM(playerid,"Hráè je v duelu");
	if(InSumo[id] == true) return SM(playerid,"Hráè je v sumo zápasu");
	if(amount < 1) return SM(playerid,"Chybnì zadané mnoství");
	if(amount > Points[playerid]) return SM(playerid,"Nemáte tolik bodù");
	if(price < 0 || price > 900000000) return SM(playerid,"Chybnì zadaná cena");
	if(GetMoney(id) < price) return SM(playerid,"Hráè nemá u sebe tolik penìz");
	new DIALOG_TEXT[500];
	format(DIALOG_TEXT,sizeof(DIALOG_TEXT),""r"Varování:\nNìkdy se stane e se peníze restartují, proto bìhem obchodu screenujte/natáèejte nebo si seeòte dohled Administrátora\nBez dùkazu a ID Transakce vám peníze nebudou vráceny!\n\n");
	format(str,sizeof(str),""w"Opravdu si pøejete prodat hráèi "g"%s "w"body ? [ "g"Poèet: %d "w"] [ "g"Cena: %s$ "w"]\n\nID Transakce: "g"%04d "r"Toto ID si zapamatujte/vyscreennujte! pouívá se pøi restartování penìz!",Jmeno(id),amount,Split(price),transactionid);
	strcat(DIALOG_TEXT,str);
	SPD(playerid,UNNAMED+101,DIALOG_STYLE_MSGBOX,"Potvrzení prodeje",DIALOG_TEXT,"Ano","Ne");
	SetPVarInt(playerid,"ShoppingID",id);
	SetPVarInt(playerid,"ShoppingAmount",amount);
	SetPVarInt(playerid,"ShoppingPrice",price);
	SetPVarInt(playerid,"TransactionID",transactionid);
	Shopping[playerid] = true;
	return 1;
}
//============================================================================//
CMD:sumo(playerid,params[])
{
	JailCmdBlock(playerid);
	if(IsPlayerInTuneMenu(playerid)) return SM(playerid,"Kdy si tuní auto, nemùe jít na sumo");
	if(IsPlayerSupplyRun(playerid)) return SM(playerid,"Právì plní misi, nemùe vykonat tuto akci");
	if(InDM[playerid] != -1) return SM(playerid,"V DeathMatchi se nemùe pøipojit do sumo zápasu "r"/leave");
	if(RacePlayer[playerid] > -1) return SM(playerid,"Teï nemùe pouít tento pøíkaz");
	if(IsPlayerHitted(playerid)) return SM(playerid,"V boji se nemùe pøipojit do sumo zápasu");
	if(WorkMission[playerid] > 0) return SM(playerid,"U má nìco na práci "r"/zrusmisi");
	if(pStunt[playerid][sStuntID] != -1) return SM(playerid,"Kdy plní stunt, nemùe se pøipojit do Sumo zápasu");
	if(sumo >= 2) return SM(playerid,"Sumo u probíhá, poèkej a skonèí");
	SaveBeforeEventData(playerid);
	if(sumo == 0)
	{
		SumoVehicle[playerid] = CreateVehicle(495,1815.3168,-1548.9612,39.3096,84.4850,0,0,-1);
		format(str,sizeof(str),"%s "w"%s {5700E5}%s "w"/sumo {5700E5}zápas.",Players(playerid),Jmeno(playerid),SexWord(playerid,"zaloil","zaloila"));
		SCMTA(0x5700E5FF,str);
		SCM(playerid,0x5700E5FF,"Pro odchod pouij "g"/leave{5700E5}.");
        CancelAntiSK(playerid);
	}
	else
	{
		SumoVehicle[playerid] = CreateVehicle(495,1776.2126,-1544.9221,39.3075,263.8455,0,0,-1);
		format(str,sizeof(str),"%s "w"%s {5700E5}se pøipojil do "w"/sumo {5700E5}zápasu.",Players(playerid),Jmeno(playerid));
		SCMTA(0x5700E5FF,str);
		SumoTime = 6;
		SetTimer("SumoOdpocet",1000,false);
		SumoStart = true;
        CancelAntiSK(playerid);
	}
	sumo++;
    InSumo[playerid] = true;
	PutPlayerInVehicle(playerid,SumoVehicle[playerid],0);
	SetVehicleVirtualWorld(SumoVehicle[playerid],3);
	SetPlayerVirtualWorld(playerid,3);
	TogglePlayerControllable(playerid,false);
	ResetPlayerWeaponsEx(playerid);
	SetPlayerInterior(playerid,0);
	return 1;
}

forward SumoOdpocet();
forward SumoCheck(playerid);

public SumoOdpocet()
{
	SumoTime--;
	if(SumoTime > -1)
	{
		SetTimer("SumoOdpocet",1000,false);
		for(new i; i <= GetPlayerPoolSize(); i ++)
		{
		    if(IPC(i) && !IsPlayerNPC(i))
		    {
		        if(InSumo[i] == true)
		        {
		            if(SumoTime > 0)
		            {
		            	format(str,sizeof(str),"~r~%d",SumoTime);
						PlayerPlaySound(i,1056,0,0,0);
					}
					else if(SumoTime == 0)
					{
		            	format(str,sizeof(str),"~g~START !!");
		            	TogglePlayerControllable(i,true);
		            	SumoTimer[i] = 0;
		            	SumoTimer[i] = SetTimerEx("SumoCheck",500,true,"i",i);
						PlayerPlaySound(i,1057,0,0,0);
					}
					GameTextForPlayer(i,str,1100,3);
		        }
		    }
		}
	}
	return 1;
}

public SumoCheck(playerid)
{
	if(!IsPlayerInRangeOfPoint(playerid,42,1795.4233,-1546.4757,38+38))
	{
		new fajl[50];
		InSumo[playerid] = false;
		DestroyVehicle(SumoVehicle[playerid]);
		SumoVehicle[playerid] = 0;
		sumo = 0;
		LoadBeforeEventData(playerid);
		SetPlayerVirtualWorld(playerid,0);
		KillTimer(SumoTimer[playerid]);
		SumoTimer[playerid] = 0;
		format(fajl,sizeof(fajl),USER_FILES,Jmeno(playerid));
		SumoLose[playerid] ++;
		DOF2_SetInt(fajl,"SumoLose",SumoLose[playerid]);
        DOF2_SaveFile();
		SumoStart = false;
	    for(new i; i <= GetPlayerPoolSize(); i ++)
	    {
	        if(IPC(i) && !IsPlayerNPC(i))
	        {
				if(InSumo[i] == true)
				{
					SetPlayerVirtualWorld(i,0);
					InSumo[i] = false;
					DestroyVehicle(SumoVehicle[i]);
					SumoVehicle[i] = 0;
					LoadBeforeEventData(i);
					KillTimer(SumoTimer[i]);
					sumo = 0;
					SumoTimer[i] = 0;
					GivePlayerDailyValue(i,DAILY_TYPE_SUMO,1);
					format(str,sizeof(str),"%s "w"%s {5700E5}%s "w"/sumo {5700E5}nad hráèem "w"%s",Players(i),Jmeno(i),SexWord(i,"vyhrál","vyhrála"),Jmeno(playerid));
					SCMTA(0x5700E5FF,str);
					GiveXP(i,30,"Vyhrany sumo zapas");
					format(fajl,sizeof(fajl),USER_FILES,Jmeno(i));
					SumoWins[i] ++;
					DOF2_SetInt(fajl,"SumoWins",SumoWins[i]);
                    DOF2_SaveFile();
					if(Achiv[i][SUMO_1] == 0)
					{
					    if(SumoWins[i] >= 1)
					    {
					        SetPlayerAchievement(i,SUMO_1);
					    }
					}
					if(Achiv[i][SUMO_50] == 0)
					{
					    if(SumoWins[i] >= 50)
					    {
					        SetPlayerAchievement(i,SUMO_50);
					    }
					}
					if(Achiv[i][SUMO_100] == 0)
					{
					    if(SumoWins[i] >= 100)
					    {
					        SetPlayerAchievement(i,SUMO_100);
					    }
					}
					if(Achiv[i][SUMO_200] == 0)
					{
					    if(SumoWins[i] >= 200)
					    {
					        SetPlayerAchievement(i,SUMO_200);
					    }
					}
				}
	        }
	    }
	}
	return 1;
}
//============================================================================//
CMD:achiev(playerid,params[])
{
	SCMTOAA("achiev")
	ShowAchievements(playerid);
	return 1;
}
//============================================================================//
CMD:tops(playerid,params[])
{
	new DIALOG[1000];
	strcat(DIALOG,"Nejvíce bodù\nNejvíce zabití\nNejvíce vyhraných eventù\nNejvíce vyhraných duelù\nNejvíce vyhraných sumo zápasù\n");
	strcat(DIALOG,"Nejvíce vyhraných postøehù\nNejvíce vyhraných závodù\nNejvíce splnìných misí\nNejvíce nahraných hodin\nNejvyí level\n");
	strcat(DIALOG,"Nejvíce vykradených nemovitostí\nNejvíce killù v DM\nNejvíce DM Score\nNejvíce marihuany\nNejvíce dokonèených stuntù\n");
	strcat(DIALOG,"Nejvíce vyhraných bodù v hodu mincí\nNejvíce prohraných bodù v hodu mincí\nNejvíce splnìných denních výzev\nNejlepí gangy");
	SPD(playerid,UNNAMED+120,DIALOG_STYLE_LIST,"Top hráèi",DIALOG,"Vybrat","");
	return 1;
}
//============================================================================//
CMD:blockstream(playerid,params[])
{
	SCMTOAA("blockstream")
	if(BlockedStream[playerid] == 0)
	{
	    BlockedStream[playerid] = 1;
	    SM(playerid,"Stream bloknut");
	}
	else
	{
	    BlockedStream[playerid] = 0;
	    SM(playerid,"Stream odbloknut");
	}
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	DOF2_SetInt(dfile,"Stream",BlockedStream[playerid]);
    DOF2_SaveFile();
	return 1;
}
//============================================================================//
CMD:sellcar(playerid,params[])
{
	SM(playerid,"Pøíkaz je momentálnì mimo provoz");
	/*
	SCMTOAA("sellcar")
	new slots = 0,id,slotid,price;
	for(new i; i < MAX_SLOTS-MAX_SPECIAL_SLOTS; i ++)
	{
	    format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(playerid),i);
	    if(fexist(dfile))
	    {
	        slots++;
	    }
	}
	if(slots == 0) return SM(playerid,"Nevlastní ádné vozidlo");
	if(sscanf(params,"iii",id,slotid,price)) return SM(playerid,"Pouití: "r"/sellcar [ ID ] [ Slot ID ] [ Cena (Body) ]");
	if(id == playerid) return SM(playerid,"Nemùe prodat vozidlo sám sobì");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(id,X,Y,Z);
	if(!IsPlayerInRangeOfPoint(playerid,10,X,Y,Z)) return SM(playerid,"Musí být blízko hráèe");
	if(Shopping[id] == true) return SM(playerid,"Hráè u nìco nakupuje");
	if(OnEvent[id] == true) return SM(playerid,"Hráè je na eventu");
	if(dPlayer[id][pDuelStatus] != -1) return SM(playerid,"Hráè je v duelu");
	if(InSumo[id] == true) return SM(playerid,"Hráè je v sumo zápasu");
	if(RacePlayer[id] > -1) return SM(playerid,"Hráè je v závodu");
	if(slotid < 1 || slotid > MAX_SLOTS) return SM(playerid,"Chybnì zadané ID slotu [ Neexistující slot ]");
	slotid --;
    format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(id),slotid);
	if(!fexist(dfile)) return SM(playerid,"Chybnì zadané ID slotu [ Prázdný slot ]");
	if(ParkInfo[playerid][slotid][Model] > 611 && ParkInfo[playerid][slotid][Model] < 616) return SM(playerid,"Toto vozidlo nelze prodat");
	if(price < 0 || price > 100000) return SM(playerid,"Chybnì zadaná cena");
	if(Points[id] < price) return SM(playerid,"Hráè nemá tolik bodù");
	if(slots >= MAX_SLOTS-MAX_SPECIAL_SLOTS) return SM(playerid,"Hráè nemá volný ádný slot");
	Shopping[id] = true;
	Shopping[playerid] = true;
	format(str,sizeof(str),"%s "r"%s "w"Vám chce prodat vozidlo "g"%s "w"za "c"%d bodù\n"w"Pøijmáte tuto nabídku ?",Players(playerid),Jmeno(playerid),GetVehicleNameByCarID(ParkInfo[playerid][slotid][Model]),price);
	SPD(id,UNNAMED+97,DIALOG_STYLE_MSGBOX,"Koupení vozidla",str,"Ano","Ne");
	format(str,sizeof(str),"Poslal jste hráèi "r"%s "w"nabídku ke koupení vozidla "g"%s "w"(Slot: "y"%d"w")\nVyèkejte na odpovìï",Jmeno(id),GetVehicleNameByCarID(ParkInfo[playerid][slotid][Model]),slotid+1);
	SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Prodej vozidla",str,"Zavøít","");
	SetPVarInt(id,"SellPlayerID",playerid);
	SetPVarInt(id,"SellSlotID",slotid);
	SetPVarInt(id,"SellPrice",price);
*/
	return 1;
}
//============================================================================//
CMD:titul(playerid,params[])
{
	SCMTOAA("titul")
	IsNoVIP(playerid)
	new DIALOG_TITULS[500],tituls = 0;
	for(new i; i < MAX_ACHIEVEMENTS; i ++)
	{
	    if(Achiv[playerid][i] == 1)
	    {
	        switch(i)
	        {
	            case POINTS_50000,POINTS_100000,KILLS_1000,KILLS_500,KILLS_10000,TIME_100,TIME_500,MISE_200,DUEL_1,DUEL_100,DUEL_200,EVENT_30,POSTREH_500,SUMO_100,SUMO_200,RACE_50,BUSINESS_1,ROB_150,\
				STUNT_1,STUNT_10,STUNT_25,STUNT_50://,STUNT_75,STUNT_100:
	            {
					tituls++;
					format(str,sizeof(str),"%s\n",AchievementsNames[i][AchievName]);
					strcat(DIALOG_TITULS,str);
	            }
	        }
	    }
	}
	if(vip[playerid] == 1)
	{
	    tituls++;
		strcat(DIALOG_TITULS,"VIP\n");
	}
	if(Admin[playerid] > 0)
	{
		tituls++;
		format(str,sizeof(str),"%s\n",Players(playerid));
	    strcat(DIALOG_TITULS,str);
	}
	if(Donate[playerid] >= 1500)
	{
	    tituls++;
	    strcat(DIALOG_TITULS,"{FFFF00}Donator\n");
	}
	if(Elite[playerid] == true)
	{
		tituls++;
		strcat(DIALOG_TITULS,"Eli{0077FF}ta\n");
	}
	if(Legend[playerid] == true)
	{
	    tituls++;
	    strcat(DIALOG_TITULS,"{FFBF00}Legenda\n");
	}
	if(GetGang(playerid) > 0)
	{
		format(dfile,sizeof(dfile),"GangSystem/Gang[%d].ini",GetGang(playerid));
		if(fexist(dfile))
		{
		    tituls++;
		    format(str,sizeof(str),"%s\n",dini_Get(dfile,"Name"));
		    strcat(DIALOG_TITULS,str);
		}
	}
	for(new i; i < 10; i ++)
	{
	    new titul[30];
		format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	    format(titul,sizeof(titul),"Titul[%d]",i);
	    format(titul,sizeof(titul),dini_Get(dfile,titul));
	    if(strlen(titul) > 0)
	    {
	        format(str,sizeof(str),"%s\n",titul);
	        strcat(DIALOG_TITULS,str);
	    }
	}
	new query[100],Cache:cache;
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `UserTituls` WHERE `Nick` = '%e'",Jmeno(playerid));
	cache = mysql_query(mysql,query);
	for(new i; i < cache_get_row_count(mysql); i ++)
	{
	    new titul[30];
	    cache_get_field_content(i,"Titul",titul,mysql);
	    format(str,sizeof(str),"%s\n",titul);
	    strcat(DIALOG_TITULS,str);
	    tituls ++;
	}
	cache_delete(cache,mysql);
	if(tituls == 0) return SM(playerid,"Chyba: na serveru nejsou ádné tituly");
	format(str,sizeof(str),"Tituly - "w"na výbìr máte z "g"%d titulù",tituls);
	SPD(playerid,UNNAMED+95,DIALOG_STYLE_LIST,str,DIALOG_TITULS,"Vybrat","Zavøít");
	return 1;
}
//============================================================================//
CMD:sevent(playerid,params[])
{
	IsNoEventer(playerid)
	if(RunEvent == 5)
	{
		SM(playerid,"Fallout odstartován");
		SetTimer("FallOut",3000/eventpatra,false);
		EventStarted = true;
	}
	else if(RunEvent == 8)
	{
	    SM(playerid,"PUBG odstartováno");
	    DestroyDynamicObject(eObjects[2]);
    	MoveDynamicObject(eObjects[0],-2999.369,-1815.771,511.242,35);
		MoveDynamicObject(eObjects[1],-3001.369,-1815.671,511.492,35);
		for(new i; i <= GetPlayerPoolSize(); i ++)
		{
		    if(IPC(i) && OnEvent[i] == true){
		        ResetPlayerWeapons(i);
		        GivePlayerWeapon(i,46,1);
		        if(Admin[i] == 0)
			        CBLOCK[i] = true;
		        SetPlayerArmour(i,0);
		        SetPlayerHealth(i,50);
          		SetPlayerColor(i,GetPlayerColor(i) & 0xFFFFFF00);
				CreateInfoBox(i,"~w~event zacal, muzete zacit ~r~vyskakovat z letadla",10);
			}
		}
		format(str,sizeof(str),"TDM Status: {%06x}%s: "w"%d ivých | {%06x}%s: "w"%d ivých",TeamColors[0] >>> 8,TeamNames[0],PlayerTeams[0],TeamColors[1] >>> 8,TeamNames[1],PlayerTeams[1]);
		SendAdminMessage(str);
		EventStarted = true;
	}
	else if(RunEvent == 10)
	{
	    SM(playerid,"GunGame Odstartováno");

		TextDrawSetString(Textdraw44,"_");
		for(new i; i <= GetPlayerPoolSize(); i ++)
		{
		    if(IPC(i) && OnEvent[i] == true){
				CreateInfoBox(i,"~w~event odstartovan",10);
				ResetPlayerWeapons(i);
				GivePlayerWeapon(i,GunGameGuns[0],15000);
				TextDrawShowForPlayer(i,Textdraw44);
				Player[i][pEventKills] = 0;
				Player[i][pGunGameState] = 0;
				SetPlayerArmour(i,0);
				SetPlayerHealth(i,100);
				TogglePlayerControllable(i,true);
			}
		}
		EventStarted = true;
	}
	else if(RunEvent == 11)
	{
	    SM(playerid,"DeathMatch Odstartováno");
		TextDrawSetString(Textdraw44,"_");
		for(new i; i <= GetPlayerPoolSize(); i ++)
		{
		    if(IPC(i) && OnEvent[i] == true){
				CreateInfoBox(i,"~w~event odstartovan",10);
				TextDrawShowForPlayer(i,Textdraw44);
		        SetPlayerHealth(i,100);
			    SetPlayerArmour(i,0);
				Player[i][pEventKills] = 0;
			    TogglePlayerControllable(i,true);
				ResetPlayerWeapons(i);
			    for(new x;x < sizeof(EventGuns); x ++)
			        if(EventGuns[x] != 0)
			            GivePlayerWeapon(i,EventGuns[x],15000);
				TogglePlayerControllable(i,true);
			}
		}
		EventStarted = true;
	}
	else SM(playerid,"Neprobíhá ádný event, pøi kterém lze pouít tento pøíkaz");
	return 1;
}

forward FallOut();

public FallOut()
{
	new obj;
	for(new i; i < eventobjects*eventobjects; i ++)
	{
	    for(new x; x < eventpatra; x ++)
	    {
			if(Fallout[i][x][FDestroyed] == false)
				obj ++;
		}
	}
	if(obj > 0)
	{
		new rand = random(eventobjects*eventobjects),rand2 = random(eventpatra);
		while(Fallout[rand][rand2][FDestroyed] == true)
		{
		    rand = random(eventobjects*eventobjects),rand2 = random(eventpatra);
		}
		if(!CHRISTMAS_MODE)
			SetObjectMaterial(Fallout[rand][rand2][FObject], 0, 17944, "lngblok_lae2", "white64bumpy", 0xFFFF0000);
			//SetObjectMaterial(Fallout[rand][rand2][FObject],0,19376,"all_walls","gym_floor5",0xFFFF0000);
		else
			SetObjectMaterial(Fallout[rand][rand2][FObject], 0, 17944, "lngblok_lae2", "white64bumpy", 0xFFFF0000);
		SetTimerEx("FallDestroy",500,false,"iii",rand,rand2,obj);
		SetTimer("FallOut",3000/eventpatra,false);
	}
	else
	{
		SendAdminMessage(""g"Fallout ukonèen");
	}
	return 1;
}

forward FallDestroy(objectid,objectid2,objects);

public FallDestroy(objectid,objectid2,objects)
{
	new Float:X,Float:Y,Float:Z,Float:oX,Float:oY,Float:oZ;
	GetObjectPos(Fallout[objectid][objectid2][FObject],oX,oY,oZ);
	DestroyObject(Fallout[objectid][objectid2][FObject]);
	Fallout[objectid][objectid2][FObject] = 0;
	Fallout[objectid][objectid2][FDestroyed] = true;
	new players = 0;
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
		if(IPC(i) && !IsPlayerNPC(i))
		{
		    if(OnEvent[i] == true)
		    {
				GetPlayerPos(i,X,Y,Z);
			    if(IsPlayerInRangeOfPoint(i,6.5,oX,oY,oZ) && Z >= 20)
			    {
			        players++;
			    }
				else if(Z < 20)
				{
					CancelEvent(i,SexWord(i,"Vypadl","Vypadla"));
				    LoadBeforeEventData(i);
				}
			}
		}
	}
	if(BotEvent == true)
	{
		new bool:vyhrau;
		if(players == EventPlayers || EventPlayers == 1)
		{
			for(new i; i <= GetPlayerPoolSize(); i ++)
			{
			    if(IPC(i) && !IsPlayerNPC(i) && OnEvent[i] == true)
			    {
			        if(vyhrau == false)
			        {
				        EventReward[1] /= EventPlayers;
				        EventBody /= EventPlayers;
				        vyhrau = true;
					}
			        new text[10];
			        format(text,sizeof(text),"%d",i);
			        CallLocalFunction("cmd_vyhra","is",botid,text);
			    }
			}
	        CallLocalFunction("cmd_eventend","is",botid," ");
	        CallLocalFunction("cmd_dann","is",botid," ");
		}
	}
	return 1;
}
//============================================================================//
CMD:banka(playerid,params[])
{
	SCMTOAA("banka")
	ShowPlayerBank(playerid);
	return 1;
}
//============================================================================//
CMD:re(playerid,params[])
{
	new id = GetPVarInt(playerid,"PMID"),text[146];
	if(sscanf(params,"z",text)) return SM(playerid,"Pouití: "r"/re [ Text ]");
	if(id == -1) return SM(playerid,"Nikdo Vám zatím neposlal ádnou soukromou zprávu");
	if(strlen(text) > 100) return SM(playerid,"Pøíli dlouhý text");
    SendPrivateMessage(playerid,id,text);
	return 1;
}
//============================================================================//
CMD:players(playerid,params[])
{
	SCMTOAA("players")
	IsNoEventer(playerid)
	new DIALOG_PLAYERS[10000];
	strcat(DIALOG_PLAYERS,""dc"Nick\tStatus\tIP\tStát\n");
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(IPC(i) && !IsPlayerNPC(i))
	    {
			if(OnEvent[i] == true)
			{
			    format(str,sizeof(str),"{%06x}%s"w"({%06x}%d"w")\t"g"Na eventu",GetPlayerColor(i) >>> 8,Jmeno(i),GetPlayerColor(i) >>> 8,i);
			    strcat(DIALOG_PLAYERS,str);
			}
			else if(WorkMission[i] > 0)
			{
				if(AFK[playerid] == false)
				{
			    	format(str,sizeof(str),"{%06x}%s"w"({%06x}%d"w")\t"c"Plní misi: "w"%s",GetPlayerColor(i) >>> 8,Jmeno(i),GetPlayerColor(i) >>> 8,i,Missions[WorkMission[i]]);
				}
				else
				{
			    	format(str,sizeof(str),"{%06x}%s"w"({%06x}%d"w")\t"c"Plní misi "w"%s "c"+ "r"AFK",GetPlayerColor(i) >>> 8,Jmeno(i),GetPlayerColor(i) >>> 8,i,Missions[WorkMission[i]]);
				}
				strcat(DIALOG_PLAYERS,str);
			}
			else if(AFK[i] == true && WorkMission[i] == 0)
			{
			    format(str,sizeof(str),"{%06x}%s"w"({%06x}%d"w")\t"y"AFK",GetPlayerColor(i) >>> 8,Jmeno(i),GetPlayerColor(i) >>> 8,i);
			    strcat(DIALOG_PLAYERS,str);
			}
			else if(InDM[i] > -1)
			{
			    format(str,sizeof(str),"{%06x}%s"w"({%06x}%d"w")\t{E43F4D}V DM "w"%s",GetPlayerColor(i) >>> 8,Jmeno(i),GetPlayerColor(i) >>> 8,i,DM[InDM[i]][DMName]);
			    strcat(DIALOG_PLAYERS,str);
			}
			else if(IsPlayerInAnyGarage(playerid))
			{
			    format(str,sizeof(str),"{%06x}%s"w"({%06x}%d"w")\t{FFA500}V tunírnì",GetPlayerColor(i) >>> 8,Jmeno(i),GetPlayerColor(i) >>> 8,i);
			    strcat(DIALOG_PLAYERS,str);
			}
			else if(IsPlayerHitted(i))
			{
			    format(str,sizeof(str),"{%06x}%s"w"({%06x}%d"w")\t"r"V boji",GetPlayerColor(i) >>> 8,Jmeno(i),GetPlayerColor(i) >>> 8,i);
			    strcat(DIALOG_PLAYERS,str);
			}
			else if(RacePlayer[i] > -1)
			{
			    format(str,sizeof(str),"{%06x}%s"w"({%06x}%d"w")\t"sb"V závodì "w"%s",GetPlayerColor(i) >>> 8,Jmeno(i),GetPlayerColor(i) >>> 8,i,Race[RacePlayer[i]][CPName]);
			    strcat(DIALOG_PLAYERS,str);
			}
			else if(IsPlayerSupplyRun(i))
			{
			    format(str,sizeof(str),"{%06x}%s"w"({%06x}%d"w")\t"c"Doplòuje zásoby",GetPlayerColor(i) >>> 8,Jmeno(i),GetPlayerColor(i) >>> 8,i);
			    strcat(DIALOG_PLAYERS,str);
			}
			else
			{
			    format(str,sizeof(str),"{%06x}%s"w"({%06x}%d"w")\t{c9c9c9}Neutral",GetPlayerColor(i) >>> 8,Jmeno(i),GetPlayerColor(i) >>> 8,i);
			    strcat(DIALOG_PLAYERS,str);
			}
			new country[50];
			GetPlayerCountry(i,country,sizeof(country));
			format(str,sizeof(str),"\t%s\t"g"%s\n",GetIP(i),country);
			strcat(DIALOG_PLAYERS,str);
		}
	}
	SPD(playerid,0,DIALOG_STYLE_TABLIST_HEADERS,"Hráèi",DIALOG_PLAYERS,"Zavøít","");
	return 1;
}
//============================================================================//
CMD:garaz(playerid,params[])
{
	SCMTOAA("garaz")
	new DIALOG_GARAGE[5000],used;
	if(RacePlayer[playerid] != -1) return CreateInfoBox(playerid,"V ~y~zavode ~r~nemuzes ~w~pouzit tento prikaz",5);
	if(WorkMission[playerid] > 0) return SM(playerid,"V misi nemùe pouít tento pøíkaz");
	JailCmdBlock(playerid);
	if(IsPlayerHitted(playerid)) return SM(playerid,"V boji si nemùe spawnout vozidlo");
	for(new i; i < MAX_SLOTS-MAX_SPECIAL_SLOTS; i ++)
	{
		format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(playerid),i);
		if(fexist(dfile))
		{
		    if(Slots[playerid][i] == 0)
		    {
				if(i <= 4) format(str,sizeof(str),"%d. "g"%s\t[ "r"Zamknuto "w"]\t[ "g"Odemknutí: 25 Bodù "w"]\n",i+1,GetVehicleNameByCarID(DOF2_GetInt(dfile,"Model")));
				else if(i > 4 && i < 9) format(str,sizeof(str),"%d. "g"%s\t[ "r"Zamknuto "w"]\t[ "g"Odemknutí: 50 Bodù "w"]\t[ "c"LVL 10 "w"]\n",i+1,GetVehicleNameByCarID(DOF2_GetInt(dfile,"Model")));
				else if(i >= 9) format(str,sizeof(str),"%d. "g"%s\t[ "r"Zamknuto "w"]\t[ "g"Odemknutí: 100 Bodù "w"]\t[ "c"LVL 20 "w"]\n",i+1,GetVehicleNameByCarID(DOF2_GetInt(dfile,"Model")));
			}
			else
			{
			    if(ParkInfo[playerid][i][pOdstaveno] == false)
			    {
					format(str,sizeof(str),"%d. "g"%s\t \t \t \n",i+1,GetVehicleNameByCarID(DOF2_GetInt(dfile,"Model")));
				}
				else
				{
					format(str,sizeof(str),"%d. "g"%s\t"r"[ Odstaveno ]\t \t \n",i+1,GetVehicleNameByCarID(DOF2_GetInt(dfile,"Model")));
				}
			}
			strcat(DIALOG_GARAGE,str);
			used ++;
		}
		else
		{
			if(Slots[playerid][i] == 0)
			{
			    if(i <= 4) format(str,sizeof(str),"%d. {898989}Volný Slot\t[ "r"Zamknuto "w"]\t[ "g"Odemknutí: 25 Bodù"w" ]\n",i+1);
			    else if(i > 4 && i < 9) format(str,sizeof(str),"%d. {898989}Volný Slot\t[ "r"Zamknuto "w"]\t[ "g"Odemknutí: 50 Bodù"w" ]\t[ "c"LVL 10 "w"]\n",i+1);
			    else if(i >= 9) format(str,sizeof(str),"%d. {898989}Volný Slot\t[ "r"Zamknuto "w"]\t[ "g"Odemknutí: 100 Bodù"w" ]\t[ "c"LVL 20 "w"]\n",i+1);
			}
			else
			{
		    	format(str,sizeof(str),"%d. {898989}Volný Slot\t \t \t \n",i+1);
			}
			strcat(DIALOG_GARAGE,str);
		}
	}
	for(new i; i < MAX_SPECIAL_SLOTS; i ++)
	{
		format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(playerid),i+MAX_SLOTS-MAX_SPECIAL_SLOTS);
		if(fexist(dfile))
		{
		    if(ParkInfo[playerid][i][pOdstaveno] == false)
		    {
				format(str,sizeof(str),"%d. "g"%s\t \t \t \n",MAX_SLOTS-MAX_SPECIAL_SLOTS+i+1,GetVehicleNameByCarID(DOF2_GetInt(dfile,"Model")));
			}
			else
			{
				format(str,sizeof(str),"%d. "g"%s\t"r"[ Odstaveno ]\t \t \n",MAX_SLOTS-MAX_SPECIAL_SLOTS+i+1,GetVehicleNameByCarID(DOF2_GetInt(dfile,"Model")));
			}
			strcat(DIALOG_GARAGE,str);
		}
	}
	if(used > 0)
	{
		if(Achiv[playerid][GARAGE_1] == 0)
		{
			if(used >= 1)
			{
			    SetPlayerAchievement(playerid,GARAGE_1);
			}
		}
		if(Achiv[playerid][GARAGE_FULL] == 0)
		{
			if(used >= MAX_SLOTS-MAX_SPECIAL_SLOTS)
			{
			    SetPlayerAchievement(playerid,GARAGE_FULL);
			}
		}
		strcat(DIALOG_GARAGE,"Respawnout gará\t \t \t ");
	}
	SPD(playerid,UNNAMED+90,DIALOG_STYLE_TABLIST,"Gará",DIALOG_GARAGE,"Vybrat","Zavøít");
	return 1;
}
//============================================================================//
CMD:zrusmisi(playerid,params[])
{
	SCMTOAA("zrusmisi")
	if(WorkMission[playerid] != 0)
	{
		EndMission(playerid,"mise zruseny");
		Player[playerid][pZrusMisiTime] = 30;
	}
	else if(IsPlayerSupplyRun(playerid))
	{
	    CallRemoteFunction("CancelSupplyRun","i",playerid);
	    SM(playerid,"Dovoz zásob zruen");
	}
	else SM(playerid,"Aktuálnì neplní ádnou misi");
	return 1;
}
//============================================================================//
CMD:adelete(playerid,params[]) return cmd_danketa(playerid,params);
CMD:dinzerat(playerid,params[])
{
	IsNoModerator(playerid)
	new id,reason[145],inz[129];
	if(sscanf(params,"iz",id,reason)) return SM(playerid,"Pouití: "r"/dinzerat [ ID ] [ Dùvod ]");
	if(!IPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	GetPVarString(id,"Inzerat",inz,sizeof(inz));
	if(!strlen(inz)) return SM(playerid,"Hráè nemá zaloený ádný inzerát");
	if(!strlen(reason) || strlen(reason) > 100) return SM(playerid,"Chybnì zadan dùvod (poèet znakù");
	format(str,sizeof(str),"%s "w"%s "r"%s inzerát hráèe "w"%s"r".",Players(playerid),Jmeno(playerid),SexWord(playerid,"zruil","zruila"),Jmeno(id));
	SCMTA(red,str);
	format(str,sizeof(str),"[ Dùvod: "w"%s "r"]",reason);
	SCMTA(red,str);
	DeletePVar(id,"Inzerat");
	return 1;
}
//============================================================================//
CMD:danketa(playerid,params[])
{
	SCMTOAA("adelete")
	IsNoModerator(playerid)
	if(hlasovani == 0) return SM(playerid,"Neprobíhá ádné hlasování");
	new duvod[255];
	if(sscanf(params,"z",duvod)) return SM(playerid,"Pouití: "r"/danketa [ Dùvod ]");
	if(strlen(duvod) > 30) return SM(playerid,"Pouil si pøíli mnoho znakù");
	format(str,sizeof(str),"%s "w"%s "r"zruil anketu [ Dùvod: "w"%s "r"]",Players(playerid),Jmeno(playerid),duvod);
	SCMTA(red,str);
	KillTimer(AnketaTimer);
	ano = 0;
	ne = 0;
	nevim = 0;
	hlasovani = false;
	TextDrawHideForAll(Textdraw28);
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    Hlasoval[i] = false;
	}
	return 1;
}
//============================================================================//
CMD:pravidla(playerid,params[])
{
	SCMTOAA("pravidla")
	if(!fexist(RULES_FILE)) return SM(playerid,"Chyba ve ètení, kontaktujte majitele serveru");
	new Text[3000],DIALOG_RULES[3000],File:soubor = fopen(RULES_FILE,io_read);
	if(soubor)
	{
		while(fread(soubor,Text))
		{
		    strcat(DIALOG_RULES,Text);
		}
		fclose(soubor);
		SPD(playerid,DIALOG_NONECLICK,DIALOG_STYLE_MSGBOX,"Pravidla",DIALOG_RULES,"Zavøít","");
	}
	else
	{
	    SM(playerid,"Error ve ètení ze souboru, zkuste to znovu");
	    printf("[%s] fread error: [ %s ]",DATE(gettime()),dfile);
	}
	return 1;
}
//============================================================================//
CMD:neony(playerid,params[])
{
	SCMTOAA("neony")
	if(!IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Nejste ve vozidle");
	SPD(playerid,UNNAMED+70,DIALOG_STYLE_LIST,"Neony",""r"Èervené\n"b"Modré\n"g"Zelené\n"y"luté\n"m"Rùové\n"w"Bílé\n"r"Smazat Neony","Vybrat","Zavøít");
	return 1;
}
//============================================================================//
CMD:dneony(playerid,params[])
{
	SCMTOAA("dneony")
	IsNoAdmin(playerid)
	for(new i; i < MAX_VEHICLES; i ++)
	{
	    if(Neony[i] == 1)
	    {
	        DestroyObject(Neon1[i]);
	        DestroyObject(Neon2[i]);
	        Neony[i] = 0;
	        Neon1[i] = 0;
	        Neon2[i] = 0;
		}
	}
	format(str,sizeof(str),"%s "w"%s "r"smazal vechny neony na serveru.",Players(playerid),Jmeno(playerid));
	SCMTA(red,str);
	return 1;
}

//============================================================================//
CMD:editacc(playerid,params[])
{
	SCMTOAA("editacc")
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new name[150];
	if(sscanf(params,"z",name)) return SM(playerid,"Pouití: "r"/editfile [ Nick ]");
	if(strlen(name) > MAX_PLAYER_NAME) return SM(playerid,"Zadal si pøili mnoho znakù");
	format(dfile,sizeof(dfile),USER_FILES,name);
	if(!fexist(dfile)) return SM(playerid,"Chyba v naèítání ze souboru");
	SPD(playerid,UNNAMED+67,DIALOG_STYLE_MSGBOX,"EditFile","Pøeje si editovat RZE úèet nebo UnNamed úèet ?","RZE","UnNamed");
	SetPVarString(playerid,"EditFileName",name);
	return 1;
}
//============================================================================//
CMD:getai(playerid,params[])
{
	new nick[144];
	IsNoAdmin(playerid)
	if(sscanf(params,"z",nick)) return SM(playerid,"Pouití: "r"/getai [ Nick ]");
	ShowAdminInfoByName(playerid,nick);
	return 1;
}
//============================================================================//
CMD:spz(playerid,params[])
{
	SCMTOAA("spz")
	if(RacePlayer[playerid] != -1) return CreateInfoBox(playerid,"V ~y~zavode ~r~nemuzes ~w~pouzit tento prikaz",5);
	IsNoVIP(playerid)
	new spz[200];
	if(!IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Musí být ve vozidle");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SM(playerid,"Musí být øidiè");
	if(sscanf(params,"z",spz)) return SM(playerid,"Pouití: "r"/spz [ SPZ ]");
	if(strlen(spz) > 11) return SM(playerid,"Maximálnì mùe pouít 11 znakù");
	new car = GetPlayerVehicleID(playerid);
	new Float:X,Float:Y,Float:Z,Float:A;
	GetVehiclePos(car,X,Y,Z);
	GetVehicleZAngle(car,A);
	SetVehicleNumberPlate(car,spz);
	for(new i; i < MAX_SLOTS; i ++)
	{
	    if(car == SavedCar[playerid][i])
	    {
	        format(ParkInfo[playerid][i][SPZ],12,spz);
	    }
	}
	SetVehicleToRespawn(car);
	SetVehiclePos(car,X,Y,Z);
	SetVehicleZAngle(car,A);
	PutPlayerInVehicle(playerid,car,0);
	format(str,sizeof(str),"SPZ Úspìnì zmìnìna. Nová SPZ: "g"%s",spz);
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:warp(playerid,params[])
{
	IsNoAdmin(playerid)
	new Float:Pos[3];
	if(sscanf(params,"fff",Pos[0],Pos[1],Pos[2])) return SM(playerid,"Pouití: "r"/warp [ X ] [ Y ] [ Z ]");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
	{
		SetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
		SetPlayerInterior(playerid,0);
	}
	else
	{
	    new car = GetPlayerVehicleID(playerid);
	    SetVehiclePos(car,Pos[0],Pos[1],Pos[2]);
	    LinkVehicleToInterior(car,0);
	}
	format(str,sizeof(str),"%s "r"%s "w"se warpnul na pozice: "g"%.4f,%.4f,%.4f",Players(playerid),Jmeno(playerid),Pos[0],Pos[1],Pos[2]);
	SendAdminMessage(str);
	return 1;
}
//============================================================================//
CMD:fakechat(playerid,params[])
{
	new text[255],id;
	if(Admin[playerid] < 5) return SM(playerid,"Nemá dostateèná oprávnìní");
	if(sscanf(params,"iz",id,text)) return SM(playerid,"Pouití: "r"/fakechat [ ID ] [ Text]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(strlen(text) > 100) return SM(playerid,"Zadal si pøíli dlouhý text");
	CallLocalFunction("OnPlayerText","is",id,text);
	return 1;
}
//============================================================================//
CMD:bombarea(playerid,params[])
{
	SCMTOAA("bombarea")
	IsNoAdmin(playerid)
	if(BombArea == false)
	{
		if(sscanf(params,"iii",bRadius,bTime,bType)) return SM(playerid,"Pouití: "r"/bombarea [ Radius] [ Time MS ] [ Bomb Type ]");
		if(bType < 0 || bType > 13) return SM(playerid,"Chybnì zadaný typ výbuchu");
		if(bTime < 50) return SM(playerid,"Zadal si pøíli malý èas");
	    GetPlayerPos(playerid,bX,bY,bZ);
	    SetTimer("Bombs",bTime,false);
		BombArea = true;
		format(str,sizeof(str),"Bomb area v okruhu "c"%d metrù "g"aktivována",bRadius);
		SM(playerid,str);
		BombAreaZone = GangZoneCreate(bX-bRadius,bY-bRadius,bX+bRadius,bY+bRadius);
		GangZoneShowForAll(BombAreaZone,0xFF000099);
	}
	else
	{
		BombArea = false;
		format(str,sizeof(str),"Bomb area v okruhu "c"%d metrù "r"deaktivována",bRadius);
		SM(playerid,str);
		GangZoneDestroy(BombAreaZone);
	}
	return 1;
}
//============================================================================//
forward Bombs();

public Bombs()
{
	if(BombArea == true)
	{
		switch(random(4))
		{
			case 0: CreateExplosion(bX+random(bRadius),bY+random(bRadius),bZ,bType,10);
	 		case 1: CreateExplosion(bX-random(bRadius),bY-random(bRadius),bZ,bType,10);
	 		case 2: CreateExplosion(bX-random(bRadius),bY+random(bRadius),bZ,bType,10);
	 		case 3: CreateExplosion(bX+random(bRadius),bY-random(bRadius),bZ,bType,10);
		}
		SetTimer("Bombs",bTime,false);
	}
	return 1;
}
//============================================================================//
CMD:soutez(playerid,params[])
{
	SCMTOAA("soutez")
	new DIALOG_SOUTEZ[500],rows,fields,Cache:cache,SName[30];
	cache = mysql_query(mysql,"SELECT * FROM `Soutez` ORDER BY `Start` DESC");
	cache_get_data(rows,fields,mysql);
	if(!rows) return SM(playerid,"Na serveru jetì neprobíhala ádná soutì");
	for(new i; i < rows; i ++)
	{
		cache_get_field_content(i,"Nazev",SName,mysql);
		if(gettime() < cache_get_field_content_int(i,"Start",mysql))
		{
			format(str,sizeof(str),"%s\t"y"Soutì jetì nezaèala\n",SName);
		}
		else if(gettime() > cache_get_field_content_int(i,"End",mysql))
		{
			format(str,sizeof(str),"%s\t"r"Soutì je ukonèena\n",SName);
		}
		else
		{
		    if(cache_get_field_content_int(i,"ChoicePrice",mysql) == 0)
		    {
				format(str,sizeof(str),"%s\t"g"Soutì probíhá\n",SName);
			}
			else
			{
				format(str,sizeof(str),"%s\t"g"Soutì probíhá\t{FF7F00}%d %s\n",SName,cache_get_field_content_int(i,"ChoicePrice",mysql),PluralWord(cache_get_field_content_int(i,"ChoicePrice",mysql),"bod","body","bodù"));
			}
		}
		strcat(DIALOG_SOUTEZ,str);
	}
	cache_delete(cache,mysql);
	SPD(playerid,UNNAMED+126,DIALOG_STYLE_TABLIST,"Soutìe",DIALOG_SOUTEZ,"Vybrat","Zavøít");
	return 1;
}
//============================================================================//
CMD:banip(playerid,params[])
{
	SCMTOAA("banip")
	new ip[150],duvod[144],query[400],fields,rows,Cache:cache,sign[24+1];
	IsNoAdmin(playerid)
	if(sscanf(params,"zz",ip,duvod)) return SM(playerid,"Pouití: "r"/banip [ IP ] [ Dùvod ]");
	if(strlen(ip) > 16) return SM(playerid,"Zadal si pøíli mnoho znakù");
	if(!strlen(duvod)) return SM(playerid,"Pouití: "r"/banip [ IP ] [ Dùvod ]");
	if(strlen(duvod) > 100) return SM(playerid,"Pøíli dlouhý dùvod");
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Users` WHERE `IP`='%s'",ip);
	cache = mysql_query(mysql,query);
	if(!cache_get_row_count(mysql))
	{
		cache_delete(cache,mysql);
		SM(playerid,"Hráè s touto IP neexistuje");
		return 1;
	}
	cache_delete(cache,mysql);
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Bans` WHERE `IP`='%s'",ip);
	cache = mysql_query(mysql,query);
	cache_get_data(rows,fields,mysql);
	if(!rows)
	{
	    new nick[24];
	    format(nick,sizeof(nick),GetLastIpNick(ip));
		mysql_format(mysql,query,sizeof(query),"INSERT INTO `Bans` (`Nick`,`IP`,`Admin`,`Sign`,`Reason`,`Start`,`End`) VALUES ('%e','%s','%e','%e','%e','%d','0')",nick,ip,Jmeno(playerid),sign,duvod,gettime());
		mysql_query(mysql,query,false);
		format(str,sizeof(str),"banip %s",ip);
		SendRconCommand(str);
		format(str,sizeof(str),"%s "r"%s "w"%s ip "g"%s {0077FF}(%s)",Players(playerid),Jmeno(playerid),SexWord(playerid,"zabanoval","zabanovala"),ip,nick);
		SendAdminMessage(str);
		sign = GetPlayerSign(playerid);
		mysql_format(mysql,query,sizeof(query),"INSERT INTO `Prestupky` (`Nick`,`IP`,`Type`,`Admin`,`Sign`,`Reason`,`Time`) VALUES ('%e','%s','%d','%e','%e','%e','%d')",nick,ip,TYPE_BAN,Jmeno(playerid),sign,duvod,gettime());
		mysql_query(mysql,query,false);
	}
	else
	{
	    SM(playerid,"Tato IP u je zabanována");
	}
	cache_delete(cache,mysql);
	return 1;
}
//============================================================================//
CMD:unban(playerid,params[])
{
	SCMTOAA("unban")
	new ip[150],query[300],rows,fields,Cache:cache;
	IsNoAdmin(playerid)
	if(sscanf(params,"z",ip)) return SM(playerid,"Pouití: "r"/unban [ IP ]");
	if(strlen(ip) > 16) return SM(playerid,"Zadal si pøíli mnoho znakù");
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Bans` WHERE `IP` = '%s'",ip);
	cache = mysql_query(mysql,query);
	cache_get_data(rows,fields,mysql);
	if(rows)
	{
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `Bans` WHERE `IP` = '%s'",ip);
		mysql_query(mysql,query,false);
		format(str,sizeof(str),"unbanip %s",ip);
		SendRconCommand(str);
		SendRconCommand("reloadbans");
		new nick[24+1];
		cache_get_field_content(0,"Nick",nick,mysql);
		format(str,sizeof(str),"%s "r"%s "w"odbanoval hráèe "g"%s{adadad} (%s)",Players(playerid),Jmeno(playerid),nick,ip);
		SendAdminMessage(str);
		printf("%s",query);
	}
	else
	{
		SM(playerid,"Hráè s touto IP není zabanován");
	}
	cache_delete(cache,mysql);
	return 1;
}
//============================================================================//
CMD:racesave(playerid,params[])
{
	SCMTOAA("saverace")
	IsNoEventer(playerid)
	new inputtext[144],rhide = 0,letecky,ar;
	if(sscanf(params,"iiiz",rhide,ar,letecky,inputtext)) return SM(playerid,"Pouítí: "r"/racesave [ Adminský (0-1) ] [ Auto Oprava (0-1) ] [ Letecký (0-1) ] [ Název ]");
	if(cps[RaceEdit[playerid]] == 0) return SM(playerid,"Není vytvoøený ádný checkpoint");
	if(cps[RaceEdit[playerid]] == 1) return SM(playerid,"Je umístìn pouze start");
    if(strlen(inputtext) < 1) return SM(playerid,"Pøíli krátky název");
	if(strlen(inputtext) > 24) return SM(playerid,"Pøíli dlouhý název");
	if(rhide < 0 || rhide > 1) return SM(playerid,"Pouijte u prvního parametru pouze 0-1");
	if(ar < 0 || ar > 1) return SM(playerid,"Pouijte u druhého parametru pouze 0-1");
	if(letecky < 0 || letecky > 1) return SM(playerid,"Pouijte u tøetího parametru pouze 0-1");
    new raceid = RaceEdit[playerid];
    format(dfile,sizeof(dfile),"UnNamed/Races/Race[%d].txt",raceid);
    if(fexist(dfile)) return SM(playerid,"Závod v tomto slotu u je");
	dini_Create(dfile);
	dini_IntSet(dfile,"CPS",cps[RaceEdit[playerid]]);
	dini_Set(dfile,"Name",inputtext);
	dini_Set(dfile,"Autor",Jmeno(playerid));
	dini_IntSet(dfile,"Hide",rhide);
	dini_IntSet(dfile,"AR",ar);
	dini_IntSet(dfile,"Letecky",letecky);
	dini_IntSet(dfile,"VW",GetPlayerVirtualWorld(playerid));
	for(new i = 1; i < cps[RaceEdit[playerid]]+1; i ++)
	{
	    format(str,sizeof(str),"X[%d]",i);
	    dini_FloatSet(dfile,str,Race[RaceEdit[playerid]][CPX][i]);
	    format(str,sizeof(str),"Y[%d]",i);
	    dini_FloatSet(dfile,str,Race[RaceEdit[playerid]][CPY][i]);
	    format(str,sizeof(str),"Z[%d]",i);
	    dini_FloatSet(dfile,str,Race[RaceEdit[playerid]][CPZ][i]);
	    format(str,sizeof(str),"Vehicle[%d]",i);
	    dini_IntSet(dfile,str,Race[RaceEdit[playerid]][CPVeh][i]);
	}
    dini_FloatSet(dfile,"Angle",Race[RaceEdit[playerid]][CPA]);
	format(Race[RaceEdit[playerid]][CPName],25,inputtext);
	format(Race[RaceEdit[playerid]][CPAutor],25,Jmeno(playerid));
	Race[RaceEdit[playerid]][CPHide] = rhide;
	Race[RaceEdit[playerid]][CPLetecky] = letecky;
	Race[RaceEdit[playerid]][CPVW] = GetPlayerVirtualWorld(playerid);
	format(str,sizeof(str),"Závod "g"%s "w"uloen [ Checkpointù: "g"%d"w" ]",inputtext,cps[RaceEdit[playerid]]-1);
	SM(playerid,str);
	RaceEdit[playerid] = -1;
	return 1;
}
//============================================================================//
CMD:selobj(playerid,params[])
{
	SCMTOAA("selobj")
	IsNoEventer(playerid)
	SelectObject(playerid);
	SM(playerid,"Vyber nìjaký object");
	return 1;
}
//============================================================================//
CMD:resetcps(playerid,params[])
{
	SCMTOAA("resetcps")
	IsNoEventer(playerid)
	if(RaceEdit[playerid] == -1) return SM(playerid,"Není vytvoøen ádný checkpint");
	format(str,sizeof(str),"Checkpointy resetovány [ "g"%d "w"]",cps[RaceEdit[playerid]]-1);
	SM(playerid,str);
	for(new i; i < MAX_CPS; i ++)
	{
	    Race[RaceEdit[playerid]][CPX][i] = 0;
	    Race[RaceEdit[playerid]][CPY][i] = 0;
	    Race[RaceEdit[playerid]][CPZ][i] = 0;
	    Race[RaceEdit[playerid]][CPVeh][i] = 0;
	}
    Race[RaceEdit[playerid]][CPA] = 0;
	cps[RaceEdit[playerid]] = 0;
	RaceEdit[playerid] = -1;
	return 1;
}
//============================================================================//
CMD:cp(playerid,params[])
{
	SCMTOAA("cp")
	IsNoEventer(playerid)
	if(RaceEdit[playerid] == -1)
	{
		for(new i; i < MAX_RACES; i ++)
		{
		    format(dfile,sizeof(dfile),"UnNamed/Races/Race[%d].txt",i);
			if(!fexist(dfile))
		    {
				RaceEdit[playerid] = i;
				break;
		    }
		}
	}
	if(RaceEdit[playerid] == -1) return SM(playerid,"Byl vytvoøen maximální poèet závodù");
	if(cps[RaceEdit[playerid]] > MAX_CPS) return SM(playerid,"Byl dosaen maximální poèet checkpointù");
	cps[RaceEdit[playerid]]++;
	GetPlayerPos(playerid,Race[RaceEdit[playerid]][CPX][cps[RaceEdit[playerid]]],Race[RaceEdit[playerid]][CPY][cps[RaceEdit[playerid]]],Race[RaceEdit[playerid]][CPZ][cps[RaceEdit[playerid]]]);
	if(cps[RaceEdit[playerid]] == 1)
	{
		format(str,sizeof(str),"Start umístìn");
		if(!IsPlayerInAnyVehicle(playerid))
		{
		    GetPlayerFacingAngle(playerid,Race[RaceEdit[playerid]][CPA]);
		}
		else
		{
		    GetVehicleZAngle(GetPlayerVehicleID(playerid),Race[RaceEdit[playerid]][CPA]);
		}
	}
	else
	{
	    new vehid;
	    if(!sscanf(params,"i",vehid))
	    {
			if(vehid >= 400 && vehid <= 611)
			{
		     	Race[RaceEdit[playerid]][CPVeh][cps[RaceEdit[playerid]]] = vehid;
				format(str,sizeof(str),"Checkpoint [ ID: "g"%d "w"] vytvoøen [ ID Vozidla: "g"%d "w"]",cps[RaceEdit[playerid]]-1,vehid);
			}
			else if(vehid  == -1)
			{
		     	Race[RaceEdit[playerid]][CPVeh][cps[RaceEdit[playerid]]] = vehid;
				format(str,sizeof(str),"Checkpoint [ ID: "g"%d "w"] vytvoøen [ ID Vozidla: "g"Random "w"]",cps[RaceEdit[playerid]]-1);
			}
			else
			{
			    return SM(playerid,"Neplatné ID Vozidla");
			}
	    }
		else
		{
			format(str,sizeof(str),"Checkpoint [ ID: "g"%d "w"] vytvoøen",cps[RaceEdit[playerid]]-1);
		}
	}
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:mapy(playerid,params[])
{
    IsNoEventer(playerid)
	new DIALOG_MAPS[MAX_MAPS*70];
	for(new i; i < MAX_MAPS; i ++)
	{
	    if(Map[i][MapSlotUsed] == true)
	    {
			if(Map[i][MapLoaded] == false)
			{
		    	format(str,sizeof(str),"{0088FF}%d. "w"%s\t{0088FF}%s\t \n",i+1,Map[i][MapName],Map[i][MapAutor]);
			}
			else
			{
		    	format(str,sizeof(str),"{0088FF}%d. "w"%s\t{0088FF}%s\t"g"Naèteno\n",i+1,Map[i][MapName],Map[i][MapAutor]);
			}
			strcat(DIALOG_MAPS,str);
		}
	    else
	    {
			format(str,sizeof(str)," \t \t \n",i);
			strcat(DIALOG_MAPS,str);
	    }
	}
	SPD(playerid,UNNAMED+85,DIALOG_STYLE_TABLIST,"MapLoad",DIALOG_MAPS,"Vybrat","Zavøít");
	return 1;
}
//============================================================================//
CMD:savemap(playerid,params[])
{
	IsNoEventer(playerid)
	new DIALOG_MAPS[MAX_MAPS*80];
	if(CountObjects(playerid) == 0) return SM(playerid,"Nemáte vytvoøené ádné objecty");
	if(MapEdit[playerid] == -1)
	{
		for(new i; i < MAX_MAPS; i ++)
		{
		    if(Map[i][MapSlotUsed] == true)
		    {
				if(Map[i][MapLoaded] == false)
			    	format(str,sizeof(str),"{0088FF}%d. "w"%s\t{0088FF}%s\t \n",i+1,Map[i][MapName],Map[i][MapAutor]);
				else
			    	format(str,sizeof(str),"{0088FF}%d. "w"%s\t{0088FF}%s\t"g"Naèteno\n",i+1,Map[i][MapName],Map[i][MapAutor]);
				strcat(DIALOG_MAPS,str);
			}
		    else
		    {
				format(str,sizeof(str)," \t \t \n",i);
				strcat(DIALOG_MAPS,str);
		    }
		}
 		SPD(playerid,UNNAMED+83,DIALOG_STYLE_TABLIST,"Uloit mapu",DIALOG_MAPS,"Uloit","Zavøít");
	}
	else
	{
	    new query[200],mapid = MapEdit[playerid];
	    mysql_format(mysql,query,sizeof(query),"DELETE FROM `MapsObjects` WHERE `MapID`=%d",MapEdit[playerid]);
		mysql_query(mysql,query,false);
		new Float:X,Float:Y,Float:Z,Float:rX,Float:rY,Float:rZ;
		for(new i; i < MAX_OBJECTS_EX; i ++)
		{
			if(Object[playerid][i] != 0)
			{
			    GetObjectPos(Object[playerid][i],X,Y,Z);
				GetObjectRot(Object[playerid][i],rX,rY,rZ);
				Map[mapid][MapObjectID][i] = ObjectsIDS[playerid][i];
				Map[mapid][MapX][i] = X;
				Map[mapid][MapY][i] = Y;
				Map[mapid][MapZ][i] = Z;
				Map[mapid][MapRX][i] = rX;
				Map[mapid][MapRY][i] = rY;
				Map[mapid][MapRZ][i] = rZ;
				mysql_format(mysql,query,sizeof(query),"INSERT INTO `MapsObjects` (`MapID`,`ObjectID`,`X`,`Y`,`Z`,`rX`,`rY`,`rZ`) VALUES (%d,%d,%f,%f,%f,%f,%f,%f)",mapid,Map[mapid][MapObjectID][i],X,Y,Z,rX,rY,rZ);
				mysql_query(mysql,query,false);
			}
			else
			{
				Map[mapid][MapObjectID][i] = 0;
				Map[mapid][MapX][i] = 0.0;
				Map[mapid][MapY][i] = 0.0;
				Map[mapid][MapZ][i] = 0.0;
				Map[mapid][MapRX][i] = 0.0;
				Map[mapid][MapRY][i] = 0.0;
				Map[mapid][MapRZ][i] = 0.0;
			}
		}
		for(new i; i < MAX_OBJECTS_EX; i ++)
		{
			DestroyObject(Object[playerid][i]);
			Object[playerid][i] = 0;
			DestroyDynamic3DTextLabel(ObjectLabel[playerid][i]);
		}
		CreateInfoBox(playerid,"Mapa ~g~upravena",3);
		MapEdit[playerid] = -1;
	}
	return 1;
}
//============================================================================//
CMD:racestart(playerid,params[])
{
	SCMTOAA("racestart")
	IsNoEventer(playerid)
	if(EventRace == -1) return SM(playerid,"Závod není zaloen");
	if(RaceReady[EventRace] == false) return SM(playerid,"Závod není zaloen");
	if(RaceStart[EventRace] == true) return SM(playerid,"Závod u je odstartován");
	SCMTA(red,"Závod odstartován.");
	RaceStart[EventRace] = true;
	if(EventOptions == 2)
	    portid = 0;
	if(EventOptions != 2)
	{
		portid = 0;
		TextDrawHideForAll(Textdraw0);
		for(new t; t < 5; t++)
		{
			TextDrawHideForAll(event[t]);
		}
	}
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(IPC(i))
	    {
	        if(OnEvent[i] == true)
	        {
				if(RacePlayer[i] == EventRace)
				{
					DisablePlayerRaceCheckpoint(i);
					TogglePlayerControllable(i,false);
		   			SetTimerEx("raceOdpocet",1000,false,"i",i);
					PlayerPlaySound(i,1056,0.0,0.0,0.0);
					RaceOdpocet[i] = 5;
					SetCameraBehindPlayer(i);
					RaceSeconds[i] = 0;
					RaceMinutes[i] = 0;
					format(str,sizeof(str),"~y~%d",RaceOdpocet[i]);
					GameTextForPlayer(i,str,1000,3);
				}
			}
		}
	}
	return 1;
}
//============================================================================//
forward raceOdpocet(playerid);

public raceOdpocet(playerid)
{
	RaceOdpocet[playerid] --;
	if(RaceOdpocet[playerid] > -1)
	{
		SetTimerEx("raceOdpocet",1000,false,"i",playerid);
		if(RaceOdpocet[playerid] > 0)
		{
			PlayerPlaySound(playerid,1056,0.0,0.0,0.0);
			format(str,sizeof(str),"~y~%d",RaceOdpocet[playerid]);
			GameTextForPlayer(playerid,str,1000,3);
			if(EventOptions != 1)
			{
				if(RaceOdpocet[playerid] > 3)
				{
					SetVehiclePos(Ecar[playerid],Race[RacePlayer[playerid]][CPX][1],Race[RacePlayer[playerid]][CPY][1],Race[RacePlayer[playerid]][CPZ][1]);
				}
				else
				{
					new Float:X,Float:Y,Float:Z;
	    			GetVehiclePos(Ecar[playerid],X,Y,Z);
					#pragma unused X
					#pragma unused Y
					SetVehiclePos(Ecar[playerid],Race[RacePlayer[playerid]][CPX][1],Race[RacePlayer[playerid]][CPY][1],Z);
				}
				SetVehicleZAngle(Ecar[playerid],Race[RacePlayer[playerid]][CPA]);
			}
		}
		else if(RaceOdpocet[playerid] < 1)
		{
		    RaceOdpocet[playerid] = 0;
		    pozice[RacePlayer[playerid]] = 0;
			PlayerPlaySound(playerid,1057,0.0, 0.0, 0.0);
			GameTextForPlayer(playerid,"~g~START!!",1000,3);
			TogglePlayerControllable(playerid,true);
			new let = Race[RacePlayer[playerid]][CPLetecky];
			if(cps[RacePlayer[playerid]] > 1)
			{
				SetPlayerRaceCheckpoint(playerid,(let) ? (3) : (0),Race[RacePlayer[playerid]][CPX][2],Race[RacePlayer[playerid]][CPY][2],Race[RacePlayer[playerid]][CPZ][2],Race[RacePlayer[playerid]][CPX][3],Race[RacePlayer[playerid]][CPY][3],Race[RacePlayer[playerid]][CPZ][3],10);
			}
			else if(cps[RacePlayer[playerid]] == 2)
			{
				SetPlayerRaceCheckpoint(playerid,(let) ? (4) : (1),Race[RacePlayer[playerid]][CPX][2],Race[RacePlayer[playerid]][CPY][2],Race[RacePlayer[playerid]][CPZ][2],Race[RacePlayer[playerid]][CPX][3],Race[RacePlayer[playerid]][CPY][3],Race[RacePlayer[playerid]][CPZ][3],10);
			}
			PlayerCP[playerid] = 2;
			SetTimerEx("RaceTime",1000,false,"i",playerid);

	   		format(str,sizeof(str),"%d~w~/~r~%d",PlayerCP[playerid]-2,cps[RacePlayer[playerid]]-1);
			PlayerTextDrawSetString(playerid,Textdraw22[playerid],str);
			PlayerTextDrawSetString(playerid,Textdraw24[playerid],"00:00");
		    format(str,sizeof(str),"%d/%d",GetPlayerPosition(playerid,RacePlayer[playerid]),GetPlayerRacePlayers(RacePlayer[playerid]));
			PlayerTextDrawSetString(playerid,Textdraw23[playerid],str);
			TextDrawShowForPlayer(playerid,Textdraw20);
			PlayerTextDrawShow(playerid,Textdraw22[playerid]);
			PlayerTextDrawShow(playerid,Textdraw23[playerid]);
			TextDrawShowForPlayer(playerid,Textdraw21);
			PlayerTextDrawShow(playerid,Textdraw24[playerid]);
			if(EventOptions == 1)
			{
			    DisableRemoteVehicleCollisions(playerid,0);
			}
			if(EventOptions == 2 && portid == 0)
			{
			    portid = 4;
			}
		}
	}
	return 1;
}
//============================================================================//
forward RaceTime(playerid);
public RaceTime(playerid)
{
	if(RacePlayer[playerid] > -1)
	{
		if(RaceStart[RacePlayer[playerid]] == true)
		{
			RaceSeconds[playerid]++;
			if(RaceSeconds[playerid] == 60)
			{
			    RaceSeconds[playerid] = 0;
			    RaceMinutes[playerid]++;
			}
			SetTimerEx("RaceTime",1000,false,"i",playerid);
		    format(str,sizeof(str),"%02d:%02d",RaceMinutes[playerid],RaceSeconds[playerid]);
			PlayerTextDrawSetString(playerid,Textdraw24[playerid],str);
		    format(str,sizeof(str),"%d/%d",GetPlayerPosition(playerid,RacePlayer[playerid]),GetPlayerRacePlayers(RacePlayer[playerid]));
			PlayerTextDrawSetString(playerid,Textdraw23[playerid],str);
		}
	}
	return 1;
}
//============================================================================//
CMD:sc(playerid,params[])
{
	SCMTOAA("sc")
	IsNoVIP(playerid)
	if(IsPlayerInSpecialProperty(playerid)) return SM(playerid,"V nemovitosti se nemùete pouít tento pøíkaz");
	if(InDM[playerid] != -1) return SM(playerid,"V DM si nemùe spawnout vozidlo "r"/leave");
	if(pStunt[playerid][sStuntID] != -1) return SM(playerid,"Kdy plní stunt, nemùe pouít tento pøíkaz");
	if(RacePlayer[playerid] != -1) return CreateInfoBox(playerid,"V ~y~zavode ~r~nemuzes ~w~pouzit tento prikaz",5);
	if(WorkMission[playerid] > 0) return SM(playerid,"V misi si nemùe spawnout Special Car");
	if(IsPlayerHitted(playerid)) return SM(playerid,"V boji si nemùe spawnout vozidlo");
	if(IsPlayerInAnyVehicle(playerid))
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SM(playerid,"U sedí u nìkoho ve vozidle");
	    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	}
	DestroyVehicle(CCAR[playerid]);
	CCAR[playerid] = 0;
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	new text[255];
	if(Admin[playerid] > 0)
	{
		if(!sscanf(params,"z",text))
		{
			CreateAdminVehicle(playerid,X,Y,Z,text);
		}
		else if(sscanf(params,"z",text))
		{
			format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
			format(str,sizeof(str),"{%s}%s",GetPlayerTitulColor(playerid),GetPlayerTitul(playerid));
			text = str;
			CreateAdminVehicle(playerid,X,Y,Z,text);
		}
	}
	else
	{
		format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
		format(str,sizeof(str),"{%s}%s",GetPlayerTitulColor(playerid),GetPlayerTitul(playerid));
		text = str;
		CreateAdminVehicle(playerid,X,Y,Z,text);
	}
	return 1;
}
//============================================================================//
CMD:ann(playerid,params[])
{
	SCMTOAA("dann")
	IsNoEventer(playerid)
	new text[145];
	if(sscanf(params,"z",text)) return SM(playerid,"Pouití: "r"/ann [ Text ]");
	TextDrawDiakritika(text);
	format(str,sizeof(str),"~w~%s",text);
	for(new i; i <= GetPlayerPoolSize(); i ++)
		if(IPC(i))
			GameTextForPlayer(i,str,3000,4);
	return 1;
}
//============================================================================//
CMD:dann(playerid,params[])
{
	SCMTOAA("dann")
	IsNoEventer(playerid)
	new text[256];
	if(sscanf(params,"z",text))
	{
		TextDrawSetString(Textdraw5,"_");
		for(new i; i <= GetPlayerPoolSize(); i ++)
		    if(IPC(i))
		        TextDrawHideForPlayer(i,Textdraw5);
	}
	else
	{
        if(!SelectPlayer(playerid,text,text)) return 0;
		for(new i; i <= GetPlayerPoolSize(); i ++)
		    if(IPC(i))
       			TextDrawShowForPlayer(i,Textdraw5);
		TextDrawDiakritika(text);
		TextDrawSetString(Textdraw5,text);
	}
	return 1;
}
//============================================================================//
CMD:mojedotazy(playerid,params[])
{
	SCMTOAA("mojedotazy")
	new query[300],DIALOG[2500],rows,fields,Cache:cache;
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Dotazy` WHERE `Nick` = '%e' AND `Odpovezeno` > 0 ORDER BY `Time` DESC, `Readed`=0 ASC LIMIT 20",Jmeno(playerid));
	cache = mysql_query(mysql,query);
	cache_get_data(rows,fields,mysql);
	if(rows)
	{
		for(new i; i < rows; i ++)
		{
		    new dotaz[144];
		    cache_get_field_content(i,"Dotaz",dotaz,mysql,51);
			if(cache_get_field_content_int(i,"Readed",mysql) == 0)
			{
			    if(strlen(dotaz) == 50)
			    {
			    	format(str,sizeof(str),"%s...\t"r"Nepøeèteno\n",dotaz);
				}
				else
				{
			    	format(str,sizeof(str),"%s\t"r"Nepøeèteno\n",dotaz);
				}
			}
			else
			{
		    	if(strlen(dotaz) == 50)
			    {
			    	format(str,sizeof(str),"%s...\t"g"Pøeèteno\n",dotaz);
				}
				else
				{
			    	format(str,sizeof(str),"%s\t"g"Pøeèteno\n",dotaz);
				}
			}
			strcat(DIALOG,str);
		}
		SPD(playerid,UNNAMED+130,DIALOG_STYLE_TABLIST,"Dotazy",DIALOG,"Vybrat","Zavøít");
	}
	else
	{
	    SM(playerid,"Nemáte ádné dotazy, pokud se chcete na nìco zeptat pouijte pøíkaz "g"/dotaz");
	}
	cache_delete(cache,mysql);
	return 1;
}
//============================================================================//
CMD:rdotaz(playerid,params[])
{
	new id,duvod[100],query[200],rows,fields,Cache:cache;
	IsNoEventer(playerid)
	if(sscanf(params,"iz",id,duvod)) return SM(playerid,"Pouití: "r"/rdotaz [ ID Dotazu ] [ Dùvod ]");
	if(id < 0) return SM(playerid,"Chybnì zadané ID");
	if(strlen(duvod) > 100) return SM(playerid,"Pouijte maximálnì 100 znakù");
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Dotazy` WHERE `ID`='%d' LIMIT 1",id);
	cache = mysql_query(mysql,query);
	cache_get_data(rows,fields,mysql);
	if(rows)
	{
	    new nick[24];
	    cache_get_field_content(0,"Nick",nick,mysql);
	    format(str,sizeof(str),"%s "w"%s "r"smazal dotaz hráèe "w"%s"r".",Players(playerid),Jmeno(playerid),nick);
	    SCMTA(red,str);
	    format(str,sizeof(str),"[ Dùvod: "w"%s "r"]",duvod);
	    SCMTA(red,str);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `Dotazy` WHERE `ID`='%d' LIMIT 1",id);
		mysql_query(mysql,query,false);
	}
	else
	{
	    SM(playerid,"Chybnì zadané ID");
	}
	cache_delete(cache,mysql);
	return 1;
}
//============================================================================//
CMD:dotazy(playerid,params[])
{
	SCMTOAA("dotazy")
	new DIALOG[1000],rows,fields,Cache:cache;
	IsNoEventer(playerid)
	cache = mysql_query(mysql,"SELECT * FROM `Dotazy` WHERE `Odpovezeno` = '0'");
	cache_get_data(rows,fields,mysql);
	if(rows)
	{
	    for(new i; i < rows; i ++)
	    {
			new dotaz[144],player[24];
			cache_get_field_content(i,"Dotaz",dotaz,mysql,51);
			cache_get_field_content(i,"Nick",player,mysql);
			format(str,sizeof(str),""g"%d\t%s\t%s\t%s",cache_get_field_content_int(i,"ID",mysql),DATE(cache_get_field_content_int(i,"Time",mysql)),player,dotaz);
			strcat(DIALOG,str);
			if(strlen(dotaz) == 50)
			{
			    strcat(DIALOG,"...\n");
			}
			else
			{
			    strcat(DIALOG,"\n");
			}
		}
		SPD(playerid,UNNAMED+121,DIALOG_STYLE_TABLIST,"Dotazy",DIALOG,"Vybrat","Zavøít");
	}
	else
	{
	    SM(playerid,"Nikdo nemá ádné dotazy");
	}
	cache_delete(cache,mysql);
	return 1;
}
//============================================================================//
CMD:dotaz(playerid,params[])
{
	new dotaz[144];
	SCMTOAA("dotaz")
	if(Admin[playerid] > 0) return SM(playerid,"Administrátor nemùe mít dotaz");
	if(sscanf(params,"z",dotaz))
	{
		SM(playerid,"Pouití: "r"/dotaz [ Dotaz ]");
		SM(playerid,"Prosím neposílejte pøes dotaz ztráty (napø. Penìz), ztráty patøí na forum");
		return 1;
 	}
	if(strlen(dotaz) > 128) return SM(playerid,"Pøekroèil si limit znakù");
	new query[500],rows,fields,Cache:cache;
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Dotazy` WHERE `Nick` = '%e' AND `Odpovezeno`='0' LIMIT 1",Jmeno(playerid));
	cache = mysql_query(mysql,query);
	cache_get_data(rows,fields,mysql);
	if(!rows)
	{
		mysql_format(mysql,query,sizeof(query),"INSERT INTO `Dotazy` (`Nick`,`Time`,`Dotaz`) VALUES ('%e','%d','%e')",Jmeno(playerid),gettime(),dotaz);
		mysql_query(mysql,query,false);
		SM(playerid,"Dotaz odeslán, Administrátor Vám v nejblií moné dobì odpoví");
		SM(playerid,""r"Zneuívání tohoto pøíkazu se trestá [ ! ]");
		format(str,sizeof(str),"[ /dotazy ] "y"%s %s(%d) se ptá: "c"%s",Players(playerid),Jmeno(playerid),playerid,dotaz);
		for(new i; i <= GetPlayerPoolSize(); i ++)
		    if(IPC(i))
		        if(Admin[i] >= 2)
		            SendTwoLinesMessage(i,cyan,str,cyan);
		if(ahraci == 0)
		    SM(playerid,"Na serveru momentálnì není Administrátor, proto se mùe èekání na odpovìï prodlouit");
	}
	else
	{
	    SM(playerid,"U máte jeden dotaz, poèkejte a Vám Administrátor odpoví");
	}
	cache_delete(cache,mysql);
	return 1;
}
//============================================================================//
CMD:mise(playerid,params[])
{
	SCMTOAA("mise")
	JailCmdBlock(playerid);
	if(IsPlayerInSpecialProperty(playerid)) return SM(playerid,"V nemovitosti se nemùete odwarpovat");
	if(OnEvent[playerid] == true) return SM(playerid,"Na eventu nemùe plnit mise");
	if(IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Nesmíte být ve vozidle");
	if(InDM[playerid] != -1) return SM(playerid,"V DeathMatchi nemùe plnit mise "r"/leave");
	if(IsPlayerSupplyRun(playerid)) return SM(playerid,"Právì plní misi, nemùe vykonat tuto akci");
	if(IsPlayerHitted(playerid)) return SM(playerid,"V boji se nemùe odwarpovat k misi");
	if(WorkMission[playerid] != 0) return SM(playerid,"Pøi plnìní mise nemùe pouít tento pøíkaz "r"/zrusmisi");
	if(pStunt[playerid][sStuntID] != -1) return SM(playerid,"Kdy plní stunt, nemùe se pøipojit do mise");
	new DIALOG[1000];
	strcat(DIALOG,""dc"Mise\tSplnìno\tLevel\tDalí level\n");
	for(new i = 1; i < sizeof(Missions); i ++)
	{
		format(str,sizeof(str),"%s\t"g"%dx\t"g"%d\t"g"%s\n",Missions[i],MissionsCount[playerid][i],GetPlayerMissionLevel(playerid,i),(GetPlayerMissionLevel(playerid,i) != 40) ? IntToString(25-(MissionsCount[playerid][i]%25),"misí") : ("Max. Level"));
		strcat(DIALOG,str);
	}
	SPD(playerid,UNNAMED+45,DIALOG_STYLE_TABLIST_HEADERS,"Mise",DIALOG,"Vybrat","Zavøít");
	return 1;
}
//============================================================================//
CMD:usave(playerid,params[])
{
	SCMTOAA("usave")
	IsNoAdmin(playerid)
	new name[255],Float:X,Float:Y,Float:Z,Float:A;
	GetPlayerPos(playerid,X,Y,Z);
	if(!IsPlayerInAnyVehicle(playerid))
	{
		GetPlayerFacingAngle(playerid,A);
	}
	else
	{
	    GetVehicleZAngle(GetPlayerVehicleID(playerid),A);
	}
	format(dfile,sizeof(dfile),"UnNamed/Pozice.txt");
	if(!fexist(dfile))
	{
	    DOF2_CreateFile(dfile);
	}
	new File:soubor = fopen(dfile,io_append);
	if(!sscanf(params,"z",name))
	{
		format(str,sizeof(str),"{%d,%.4f,%.4f,%.4f,%0.4f}, %s\r\n",GetPlayerInterior(playerid),X,Y,Z,A,name);
	}
	else
	{
		format(str,sizeof(str),"{%d,%.4f,%.4f,%.4f,%0.4f},\r\n",GetPlayerInterior(playerid),X,Y,Z,A);//,%f\r\n",X,Y,Z,A);
	}
	if(soubor)
	{
		fwrite(soubor,str);
		fclose(soubor);
	}
	else
	{
	    printf("[%s] fwrite error: [ %s | %s ]",DATE(gettime()),dfile,str);
	}
	CreateDynamic3DTextLabel("Saved",0x0077FFFF,X,Y,Z,300);
	CreateDynamicMapIcon(X,Y,Z,0,0xFF0000FF,-1,.streamdistance=500);
	format(str,sizeof(str),"Pozice uloena: "g"%.4f"w","g"%.4f"w","g"%.4f"w","g"%.4f",X,Y,Z);
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:givexp(playerid,params[])
{
	SCMTOAA("givexp")
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new id,xp,reason[144];
	if(sscanf(params,"iiz",id,xp,reason)) return SM(playerid,"Pouití: "r"/givexp [ ID ] [ XP ] [ Dùvod ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(Spawned[id] == false) return SM(playerid,"Hráè není spawnutý, nemùe mu dát body");
	if(xp < 0 || xp > 1000000) return SM(playerid,"Pouij maximálnì 1000000 XP bodù");
	if(!strlen(reason)) return SM(playerid,"Pouití: "r"/givexp [ ID ] [ XP ] [ Dùvod ]");
	if(strlen(reason) > 30) return SM(playerid,"Zadejte kratí dùvod");
	format(str,sizeof(str),"%s "w"%s "r"dal hráèi "w"%s "r"XP.",Players(playerid),Jmeno(playerid),Jmeno(id));
	SCMTA(red,str);
	format(str,sizeof(str),"[ Poèet: "w"%d "r"| Dùvod: "w"%s "r"]",xp,reason);
	SCMTA(red,str);
	GiveXP(id,xp,reason,false);
	return 1;
}
//============================================================================//
CMD:gt(playerid,params[])
{
	SCMTOAA("gb")
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new id,ganja;
	if(sscanf(params,"ii",id,ganja)) return SM(playerid,"Pouití: "r"/gt [ ID ] [ Mnoství (g) ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(Spawned[id] == false) return SM(playerid,"Hráè není spawnutý, nemùe mu dát trávu");
	if(ganja < -10000 || ganja > 10000) return SM(playerid,"Pouij minimálnì -10000g trávy a maximálnì 10000g trávy");
	format(str,sizeof(str),"%s "r"%s "w"dal hráèi "r"%s "w"trávu [ "g"%dg "w"].",Players(playerid),Jmeno(playerid),Jmeno(id),ganja);
	SendAdminMessage(str);
	format(str,sizeof(str),"%s "r"%s "w"vám dál "g"%dg trávy",Players(playerid),Jmeno(playerid),ganja);
	SM(id,str);
	format(str,sizeof(str),"Od Administrátora %s",Jmeno(playerid));
	GivePlayerGanja(id,ganja,str);
	return 1;
}
//============================================================================//
CMD:gb(playerid,params[])
{
	SCMTOAA("gb")
	if(!IsPlayerOnHighestLevel(playerid))
	{
	    return SM(playerid,"Nejsi tvùrce");
		//if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new id,Float:body;
	if(sscanf(params,"if",id,body)) return SM(playerid,"Pouití: "r"/gb [ ID ] [ Body ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(Spawned[id] == false) return SM(playerid,"Hráè není spawnutý, nemùe mu dát body");
	if(body < -1000000 || body > 1000000) return SM(playerid,"Pouij minimálnì -1000000 bodù a maximálnì 1000000 bodù");
	format(str,sizeof(str),"%s "r"%s "w"dal hráèi "r"%s "w"body [ "g"%0.1f "w"].",Players(playerid),Jmeno(playerid),Jmeno(id),body);
	SendAdminMessage(str);
	format(str,sizeof(str),"%s "r"%s "w"vám dál "g"%0.1f bodù",Players(playerid),Jmeno(playerid),body);
	SM(id,str);
	GivePoints(id,body);
	return 1;
}
//============================================================================//
CMD:givebody(playerid,params[])
{
	SCMTOAA("givebody")
	new id,body;
	if(sscanf(params,"ii",id,body)) return SM(playerid,"Pouití: "r"/givebody [ ID ] [ Body ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(id == playerid) return SM(playerid,"Nemùe poslat body sám sobì");
	if(Spawned[id] == false) return SM(playerid,"Hráè není spawnutý, nemùe mu dát body");
	if(body > Points[playerid]) return SM(playerid,"Nemá tolik bodù");
	if(body < 1) return SM(playerid,"Mùe poslat minimálnì 1 bod");
	GivePoints(id,body);
	GivePoints(playerid,-body);
	format(str,sizeof(str),"%s "w"%s {03C900}%s hráèi "w"%s {03C900}body [ "w"Poèet: %d {03C900}].",Players(playerid),Jmeno(playerid),SexWord(playerid,"daroval","darovala"),Jmeno(id),body);
	SCMTA(0x03C900FF,str);
	format(str,sizeof(str),"%s "r"%s(%d) "w"poslal body hráèi "r"%s(%d) "w"[ Body: "g"%d "w"]",Players(playerid),Jmeno(playerid),playerid,Jmeno(id),id,body);
	printEx(str);
 	return 1;
}
//============================================================================//
function AutoDecline(playerid)
{
	if(IPC(playerid))
	{
	    new id = GetPVarInt(playerid,"InviteID");
	    SetPVarInt(id,"InviteID",-1);
	    SetPVarInt(playerid,"InviteID",-1);
	    format(str,sizeof(str),"Pozvanka na duel od hrace ~g~%s ~w~se zbraní ~r~%s~w~,byla automaticky zamitnuta",Jmeno(id),WeaponsNames(GetPVarInt(playerid,"InviteWeapon")));
		CreateInfoBox(playerid,str,5);
	    format(str,sizeof(str),"Pozvanka na duel s hracem ~g~%s ~w~se zbraní ~r~%s~w~,byla automaticky zamitnuta",Jmeno(playerid),WeaponsNames(GetPVarInt(playerid,"InviteWeapon")));
		if(IPC(id))
			CreateInfoBox(id,str,5);
	}
	return 1;
}

CMD:duelinvite(playerid,params[])
{
	new id,weapon,rounds;
	JailCmdBlock(playerid);
	if(InDM[playerid] != -1) return SM(playerid,"V DeathMatchi se nemùe pøipojit do duelu "r"/leave");
	if(RacePlayer[playerid] > -1) return SM(playerid,"Teï nemùe pouít tento pøíkaz");
	if(IsPlayerSupplyRun(playerid)) return SM(playerid,"Právì plní misi, nemùe vykonat tuto akci");
	if(IsPlayerHitted(playerid)) return SM(playerid,"V boji se nemùe pøipojit do duelu");
	if(pStunt[playerid][sStuntID] != -1) return SM(playerid,"Kdy plní stunt, nemùe se pøipojit do duelu");
	if(WorkMission[playerid] > 0) return SM(playerid,"U má nìco na práci "r"/zrusmisi");
	if(pStunt[playerid][sStuntID] != -1) return SM(playerid,"Kdy plní stunt, nemùe se pøipojit do duelu");
	if(sscanf(params,"iii",id,weapon,rounds)) return SM(playerid,"Pouití: "r"/duelinvite [ ID ] [ ID Zbranì ] [ Poèet Kol ]");
 	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(id == playerid) return SM(playerid,"Nemùete pozvat sám sebe do duelu");
 	if(GetPVarInt(playerid,"InviteID") != -1) return SM(playerid,"Máte nevyøízenou pozvánku");
 	if(GetPVarInt(id,"InviteID") != -1) return SM(playerid,"Hráè má nevyøízenou pozvánku");
	if(!IsWeaponValid(id)) return SM(playerid,"Chybnì zadané ID zbranì");
	format(str,sizeof(str),"Minimálnì %d a maximálnì %d kol",MIN_ROUNDS,MAX_ROUNDS);
	if(rounds < MIN_ROUNDS || rounds > MAX_ROUNDS) return SM(playerid,str);
 	SetPVarInt(playerid,"InviteID",MAX_PLAYERS+1);
 	SetPVarInt(id,"InviteID",playerid);
	SetPVarInt(id,"InviteWeapon",weapon);
	SetPVarInt(id,"InviteRounds",rounds);
 	format(str,sizeof(str),"Poslal jste hráèi "g"%s "w"pozvánku na duel se zbraní "r"%s"w", vyèkejte na odpovìï",Jmeno(id),WeaponsNames(weapon));
 	SM(playerid,str);
 	format(str,sizeof(str),"%s ~g~%s ~w~Vám poslal pozvánku na duel se zbraní ~r~%s~w~ (pocet kol: ~b~%d~w~), pozvánku pøíjmete pøíkazem ~g~/accept~w~, nebo zruíte pøíkazem ~r~/decline",Players(playerid),Jmeno(playerid),WeaponsNames(weapon),rounds);
 	CreateInfoBox(id,str,10);
 	SetPVarInt(id,"AutoDeclineTimer",SetTimerEx("AutoDecline",1000*20,false,"i",id));
	return 1;
}
//============================================================================//
CMD:accept(playerid,params[])
{
	JailCmdBlock(playerid);
	if(RacePlayer[playerid] > -1) return SM(playerid,"Teï nemùe pouít tento pøíkaz");
	if(IsPlayerHitted(playerid)) return SM(playerid,"V boji se nemùe pøipojit do duelu");
	if(WorkMission[playerid] > 0) return SM(playerid,"U má nìco na práci "r"/zrusmisi");
	new id = GetPVarInt(playerid,"InviteID"),room,weapon = GetPVarInt(playerid,"InviteWeapon"),rounds = GetPVarInt(playerid,"InviteRounds");
	if(id == -1 || id == MAX_PLAYERS+1) return SM(playerid,"Nemáte ádnou pozvánku");
	if(!IPC(id)){
		SM(playerid,"Hráè, který Vás vyzval se odpojil");
		SetPVarInt(playerid,"InviteID",-1);
		return 0;
	}
	dPlayer[playerid][pDuelStatus] = 1;
	dPlayer[playerid][pDuelRoom] = room;
	dPlayer[id][pDuelStatus] = 1;
	dPlayer[id][pDuelRoom] = room;

	SetPVarInt(playerid,"InviteID",-1);
	SetPVarInt(id,"InviteID",-1);
	for(new i; i < MAX_DUELS; i ++)
	    if(Duel[i][DuelStatus] == DUEL_STATUS_FREE)
		{
		    room = i;
			Duel[i][DuelWeapon] = weapon;
			Duel[i][DuelRounds] = rounds;
			Duel[i][DuelStatus] = DUEL_STATUS_WAIT;
	        JoinDuel(id,i,0);
	        JoinDuel(playerid,i,1);
			break;
		}
    format(str,sizeof(str),"Hráè "w"%s "co"vyzval na duel (%d) hráèe "w"%s"co".",Jmeno(id),room+1,Jmeno(playerid));
	SCMTA(ORANGE,str);
	format(str,sizeof(str),"[ Zbraò "w"%s "co" | Poèet kol: "w"%d "co"].",WeaponsNames(Duel[room][DuelWeapon]),Duel[room][DuelRounds]);
	SCMTA(ORANGE,str);
	SCM(playerid,ORANGE,"Pro odchod z duelu pouijte "w"/leave");
	SCM(id,ORANGE,"Pro odchod z duelu pouijte "w"/leave");
	KillTimer(GetPVarInt(playerid,"AutoDeclineTimer"));
	return 1;
}
//============================================================================//
CMD:decline(playerid,params[])
{
    new id = GetPVarInt(playerid,"InviteID");
	if(id == -1 || id == MAX_PLAYERS+1) return SM(playerid,"Nemáte ádnou pozvánku");
	KillTimer(GetPVarInt(playerid,"AutoDeclineTimer"));
	SetPVarInt(id,"InviteID",-1);
    SetPVarInt(playerid,"InviteID",-1);
    format(str,sizeof(str),"Pozvanka na duel od hrace ~g~%s ~w~se zbraní ~r~%s~w~ byla zrusena",Jmeno(id),WeaponsNames(GetPVarInt(playerid,"InviteWeapon")));
	CreateInfoBox(playerid,str,5);
    format(str,sizeof(str),"Hrac ~g~%s ~w~neprijal vasi vyznu na duel se zbraní ~r~%s",Jmeno(playerid),WeaponsNames(GetPVarInt(playerid,"InviteWeapon")));
	if(IPC(id))
		CreateInfoBox(id,str,5);
	return 1;
}
//============================================================================//
CMD:duel(playerid,params[])
{
	JailCmdBlock(playerid);
	if(IsPlayerInGangWar(playerid)) return SM(playerid,"V Gang Waru se nemùe pøipojit do duelu");
	if(InDM[playerid] != -1) return SM(playerid,"V DeathMatchi se nemùe pøipojit do duelu "r"/leave");
	if(IsPlayerSupplyRun(playerid)) return SM(playerid,"Právì plní misi, nemùe vykonat tuto akci");
	if(RacePlayer[playerid] > -1) return SM(playerid,"Teï nemùe pouít tento pøíkaz");
	if(IsPlayerHitted(playerid)) return SM(playerid,"V boji se nemùe pøipojit do duelu");
	if(WorkMission[playerid] > 0) return SM(playerid,"U má nìco na práci "r"/zrusmisi");
	ShowDuelDialog(playerid);
	return 1;
}
//============================================================================//
CMD:stitul(playerid,params[])
{
	new id,titul[145],color1[145];
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	if(sscanf(params,"izz",id,color1,titul)) return SM(playerid,"Pouití: "r"/stitul [ ID ] [ Barva Titulu ] [ Titul ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(strlen(color1) < 6 || strlen(color1) > 6) return SM(playerid,"Barvy pouijte v hex kódech pø: "r"FF0000 "w"je "r"èervená");
	if(strlen(titul) > 25) return SM(playerid,"Pouijte maximálnì 25 znakù");
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(id));
	if(strcmp(titul,"default",true))
	{
	    SetPlayerTitul(id,titul,color1,"");
		if(id == playerid)
		{
		    format(str,sizeof(str),"Nastavil jste si titul: {%s}%s",color1,titul);
			SM(playerid,str);
		}
		else
		{
		    
		    format(str,sizeof(str),"%s "g"%s "w"Vám nastavil titul: {%s}%s",Players(playerid),Jmeno(playerid),color1,titul);
			SM(id,str);
		    format(str,sizeof(str),"Nastavil jste hráèi "g"%s "w"titul: {%s}%s",Jmeno(id),color1,titul);
			SM(playerid,str);
		}
	}
	else
	{
		SetDefaultTitul(id);
		format(str,sizeof(str),"Nastavil si hraci ~y~%s ~w~defaultni titul",Jmeno(id));
		CreateInfoBox(playerid,str,7);
	}
	return 1;
}
//============================================================================//
CMD:odpocet(playerid,params[])
{
	SCMTOAA("odpocet")
	IsNoVIP(playerid)
	if(Admin[playerid] == 0)
	{
		if(RunEvent > 0) return SM(playerid,"Kdy probíhá event nemùete pouít tento pøíkaz");
	}
	if(BotEvent == true) return SM(playerid,"Probíhá event, který poøádá bot, nelze pustit odpoèet");
	if(Admin[playerid] == 0 && odpocetsek > 0) return SM(playerid,"Odpoèet u probíhá");
	new cas = 5;
	if(Admin[playerid] > 0 || Legend[playerid] == true)
	{
		if(sscanf(params,"i",cas))
		{
		}
	}
	if(Admin[playerid] == 0 && cas > 10) return SM(playerid,"Maximálnì 10 sekund");
	if(cas < 1) return  SM(playerid,"Minimálnì 1 sekunda");
	odpocetsek = cas;
	format(str,sizeof(str),"~y~%d",odpocetsek);
	GameTextForAll(str,1000,3);
	SetTimer("Odpocet",1000,false);
	if(Admin[playerid] == 0)
	{
		format(str,sizeof(str),"%s "c"%s "g"spustil odpoèet na "c"%d "g"sekund.",Players(playerid),Jmeno(playerid),odpocetsek);
		SCMTA(green,str);
	}
	else
	{
		format(str,sizeof(str),"%s "w"%s "r"spustil odpoèet na "w"%d "r"sekund.",Players(playerid),Jmeno(playerid),odpocetsek);
		SCMTA(red,str);
	}
	return 1;
}
forward Odpocet();

public Odpocet()
{
	odpocetsek--;
	if(odpocetsek > -1)
	{
	    SetTimer("Odpocet",1000,false);
		if(odpocetsek != 69)
		{
			format(str,sizeof(str),"~y~%d",odpocetsek);
		}
		else
		{
			format(str,sizeof(str),"~p~%d",odpocetsek);
		}
		GameTextForAll(str,1000,3);
		if(odpocetsek == 0)
		{
		    if(RunEvent != 0)
		    {
				SendAdminMessage(""g"START");
				if(BotEvent == true)
				{
				    CallLocalFunction("cmd_dann","is",botid," ");
				    if(EventPlayers > 3)
					{
					    if(RunEvent != 4)
					    	CallLocalFunction("cmd_sevent","is",botid," ");
						else
					    	CallLocalFunction("cmd_racestart","is",botid," ");
					    CallLocalFunction("cmd_setport","is",botid,"0");
					    switch(RunEvent)
						{
						    case 4,10,11:{
							    new text[20];
								EventMista = SetEventMista(EventPlayers);
								format(text,sizeof(text),"~r~%d výherní %s",EventMista,PluralWord(EventMista,"místo","místa","míst"));
							    CallLocalFunction("cmd_dann","is",botid,text);
							}
    					}
					}
					else
					{
					    CallLocalFunction("cmd_eventend","is",botid," ");
					    CallLocalFunction("cmd_say","is",botid,"Event zruen z dùvodu nedostatku hráèù.");
					}
				}
			}
			GameTextForAll("~p~START !!",1000,3);
		}
	}
	return 1;
}
//============================================================================//
CMD:var(playerid,params[])
{
	SCMTOAA("var")
	IsNoEventer(playerid)
	new id,duvod[145],duvod2[100+1];
	if(sscanf(params,"iz",id,duvod)) return SM(playerid,"Pouití: "r"/var [ ID ] [ Dùvod ]");
	if(strlen(duvod) == 0) return SM(playerid,"Pouití: "r"/var [ ID ] [ Dùvod ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(LastVar[id] > gettime()-5) return SM(playerid,"Hráè byl teï vyrován");
	if(id == playerid) return SM(playerid,"Proè chce varovat sám sebe ? :D");
	if(Admin[id] > 0) return SM(playerid,"Administrátora nemùe varovat");
	if(strlen(duvod) > 100) return SM(playerid,"Zadal si pøíli dlouhý dùvod");
	if(strlen(duvod) < 3) return SM(playerid,"Pouij minimálnì 3 znaky");
	var[id]++;
	format(duvod2,sizeof(duvod2),duvod);
	format(duvod,sizeof(duvod),"[ Dùvod: "w"%s"r" ]",duvod);
	if(var[id] < 3)
	{
		format(str,sizeof(str),"%s "w"%s "r"%s hráèe "w"%s "r"[ "w"%d"r" / "w"3"r" ]",Players(playerid),Jmeno(playerid),SexWord(playerid,"varoval","varovala"),Jmeno(id),var[id]);
		SCMTA(red,str);
		SCMTA(red,duvod);
		GivePenaltyPoints(Jmeno(id),3,Jmeno(playerid),"Varování",duvod2);
		LastVar[id] = gettime();
	}
	else
	{
		GivePenaltyPoints(Jmeno(id),5,Jmeno(playerid),"Kick",duvod2);
		format(str,sizeof(str),"%s "w"%s "r"%s hráèe "w"%s "r"[ "w"%d"r" / "w"3"r" ]",Players(playerid),Jmeno(playerid),SexWord(playerid,"vyhodil","vyhodila"),Jmeno(id),var[id]);
		SCMTA(red,str);
		SCMTA(red,duvod);
		SpecialKick(id,Jmeno(playerid),duvod);
	}
	SpecialVar(id,Jmeno(playerid),duvod);
	return 1;
}
//============================================================================//
CMD:zamitnout(playerid,params[])
{
	SCMTOAA("zamitnout")
	if(reply[playerid] == false) return SM(playerid,"Nikdo ti neposlal ádost");
	new id = GetPVarInt(playerid,"GOTOPID");
	reply[playerid] = false;
	CreateInfoBox(playerid,"~r~Zamitnul ~w~si zadost",5);
	format(str,sizeof(str),"%s ~y~%s ~r~zamitnul ~w~zadost o portnuti",TDPlayers(playerid),Jmeno(playerid));
	CreateInfoBox(id,str,10);
	KillTimer(PortTimer[id]);

	return 1;
}
//============================================================================//
CMD:potvrdit(playerid,params[])
{
	SCMTOAA("potvrdit")
	JailCmdBlock(playerid);
	if(blockplayerpos == true) return SM(playerid,"Tento pøíkaz je momentálnì vypnutý");
	new id = GetPVarInt(playerid,"GOTOPID");
	if(IsPlayerInSpecialProperty(playerid)) return SM(playerid,"Tady nemùete pouít tento pøíkaz");
	if(reply[playerid] == false) return SM(playerid,"Nikdo ti neposlal ádost");
	if(pStunt[id][sStuntID] != -1) return SM(playerid,"Hráè plní stunt");
	if(IsPlayerInSpecialProperty(id)) return SM(playerid,"Teï nemùete pouít tento pøíkaz");
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	reply[playerid] = false;
	KillTimer(PortTimer[id]);
	format(str,sizeof(str),"%s ~y~%s ~g~potvrdil ~w~vasi zadost o portnuti",TDPlayers(playerid),Jmeno(playerid));
	CreateInfoBox(GetPVarInt(playerid,"GOTOPID"),str,10);
	CreateInfoBox(playerid,"~g~Potvrdil ~w~si zadost",5);

	if(GetPlayerState(id) != PLAYER_STATE_DRIVER)
	{
		SetPlayerPos(id,X+1,Y+1,Z);
		SetPlayerInterior(id,GetPlayerInterior(playerid));
	}
	else
	{
	    SetVehiclePos(GetPlayerVehicleID(id),X+1,Y+1,Z);
		SetPlayerInterior(id,GetPlayerInterior(id));
	    LinkVehicleToInterior(GetPlayerVehicleID(id),GetPlayerInterior(id));
		for(new i; i < MAX_SLOTS; i ++)
		{
			if(IsPlayerInVehicle(playerid,SavedCar[id][i]))
			{
				if(ParkInfo[id][i][Model] > 612)
				{
					LinkVehicleToInterior(GetPlayerVehicleID(id),30);
				}
			}
		}
	}
	CancelAntiSK(id);
	CancelAntiSK(playerid);
	return 1;
}
//============================================================================//
CMD:vgoto(playerid,params[])
{
	SCMTOAA("vgoto")
	IsNoVIP(playerid)
	new id;
	if(blockplayerpos == true) return SM(playerid,"Tento pøíkaz je momentálnì vypnutý");
	if(WorkMission[playerid] > 0) return SM(playerid,"Pøi misi se nemùe portovat");
	JailCmdBlock(playerid);
	if(IsPlayerInSpecialProperty(playerid)) return SM(playerid,"Tady nemùete pouít tento pøíkaz");
	if(pStunt[playerid][sStuntID] != -1) return SM(playerid,"Kdy plní stunt, nemùe se odwarpovat");
	if(IsPlayerSupplyRun(playerid)) return SM(playerid,"Právì plní misi, nemùe vykonat tuto akci");
	if(InDM[playerid] != -1) return SM(playerid,"V DeathMatchi se nemùe odwarpovat "r"/leave");
	if(IsPlayerHitted(playerid)) return SM(playerid,"Nemùe utéct z boje warpem");
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/vgoto [ ID ]");
	if(id == playerid) return SM(playerid,"Nemùe se portnout k sám sobì");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(BlockedVgoto[id] == true) return SM(playerid,"Hráè má bloknuté portování");
	if(Blocked[id][playerid][1] == true) return SM(playerid,"Hráè má bloknuté portování");
	if(InDM[id] != -1) return SM(playerid,"Hráè nesmí být v DeathMatchi");
	if(RacePlayer[id] != -1) return SM(playerid,"Hráè nesmí být v závodu");
	if(OnEvent[id] == true) return SM(playerid,"Hráè nesmí být na eventu");
	if(reply[id] == true) return SM(playerid,"Hráè má nevyøízenou ádost");
	format(str,sizeof(str),"Poslal si hraci ~y~%s ~w~zadost na portnuti, ~r~vyckej na odpoved",Jmeno(id));
	CreateInfoBox(playerid,str,10);
	format(str,sizeof(str),"%s ~y~%s ~w~ti poslal zadost o povoleni se na tebe portnout ~g~/potvrdit ~w~nebo ~r~/zamitnout",TDPlayers(playerid),Jmeno(playerid));
	CreateInfoBox(id,str,10);
	reply[id] = true;
	SetPVarInt(playerid,"GOTOID",id);
	SetPVarInt(id,"GOTOPID",playerid);
	KillTimer(PortTimer[playerid]);
	PortTimer[playerid] = SetTimerEx("Decline",30000,false,"i",playerid);
	return 1;
}
//============================================================================//
forward Decline(playerid);
public Decline(playerid)
{
	new id = GetPVarInt(playerid,"GOTOID");
	reply[id] = false;
	format(str,sizeof(str),"Zadost na portnuti k hraci ~y~%s ~w~byla automaticky ~r~zamitnuta",Jmeno(id));
	CreateInfoBox(playerid,str,10);
	CreateInfoBox(id,"Zadost byla automaticky ~r~zamitnuta",10);
	KillTimer(PortTimer[playerid]);
	return 1;
}
//============================================================================//
CMD:log(playerid,params[])
{
	SCMTOAA("log")
	IsNoAdmin(playerid)
	new DIALOG[5000],query[255],rows, fields,id, count;

	new Cache:cache = mysql_query(mysql,"SELECT COUNT(*) AS count FROM `ServerLog`");
	count = cache_get_field_content_int(0,"count",mysql);
	cache_delete(cache,mysql);
	
	format(str,sizeof(str),"Pouití: "r"/log [ 1 - %d ]",(count/30)+1);
	if(sscanf(params,"i",id)) return SM(playerid,str);
	if(id < 1 || id > 1000000)return SM(playerid,"Chybnì zadané ID");

	mysql_format(mysql, query, sizeof(query),"SELECT * FROM `ServerLog` ORDER BY `Time` DESC LIMIT %d,30",(id-1)*30);
	cache = mysql_query(mysql,query);
	cache_get_data(rows,fields,mysql);

	if(rows <= 0) {
	    cache_delete(cache,mysql);
		return SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Log Serveru","Nezaznamenány ádné akce","Zavøít","");
 	}

	for(new i = 0; i < rows; i ++)
	{
	    cache_get_field_content(i,"Text",str);
		if(strcmp(str,"NULL",false) != 0)
		{
		    format(str,sizeof(str),""w"[ %s ] %s\n",DATE(cache_get_field_content_int(i,"Time")),str);
		    strcat(DIALOG,str);
		}
	}
	format(str,sizeof(str),""w"Stránka: "g"%d"w"/"r"%d",id,(count/30)+1);
	if(count < id*30)
	{
		SPD(playerid,UNNAMED+56,DIALOG_STYLE_INPUT,str,DIALOG,"Zavøít","");
	}
	else
	{
		SPD(playerid,UNNAMED+56,DIALOG_STYLE_INPUT,str,DIALOG,"Dalí","Zavøít");
	}

	cache_delete(cache,mysql);
	SetPVarInt(playerid,"Pages",id-1);
	SetPVarString(playerid,"Search","");
	return 1;
}
//============================================================================//
CMD:getips(playerid,params[])
{
	SCMTOAA("getips")
	IsNoAdmin(playerid)
	new id;
	new name[150];
    new query[500],rows,fields,Cache:cache,DIALOG[5000];
	if(!sscanf(params,"i",id))
	{
		if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
		mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Accounts` WHERE `Nick` = '%s'",Jmeno(id));
		cache = mysql_query(mysql,query);
		cache_get_data(rows,fields,mysql);
		if(rows)
		{
			for(new i; i < rows; i ++)
			{
			    new uname[24],ip[16];
			    cache_get_field_content(i,"Nick",uname,mysql);
			    cache_get_field_content(i,"IP",ip,mysql);
			    format(str,sizeof(str),"%s\t%s\n",ip,uname);
			    strcat(DIALOG,str);
			}
		}
		else
		{
		    strcat(DIALOG,"Chyba v naèítání úètù\t ");
		}
		SPD(playerid,UNNAMED+139,DIALOG_STYLE_TABLIST,"Seznam IP Adres",DIALOG,"Vybrat","Zavøít");
		cache_delete(cache,mysql);
	}
	else if(!sscanf(params,"z",name))
	{
		if(strlen(name) > MAX_PLAYER_NAME) return SM(playerid,"Zadal si pøili mnoho znakù");
		mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Accounts` WHERE `Nick` = '%s'",name);
		cache = mysql_query(mysql,query);
		cache_get_data(rows,fields,mysql);
		if(rows)
		{
			for(new i; i < rows; i ++)
			{
			    new uname[24],ip[16];
			    cache_get_field_content(i,"Nick",uname,mysql);
			    cache_get_field_content(i,"IP",ip,mysql);
			    format(str,sizeof(str),"%s\t%s\n",ip,uname);
			    strcat(DIALOG,str);
			}
		}
		else
		{
		    strcat(DIALOG,"Chyba v naèítání úètù\t ");
		}
		SPD(playerid,UNNAMED+139,DIALOG_STYLE_TABLIST,"Seznam IP Adres",DIALOG,"Vybrat","Zavøít");
		cache_delete(cache,mysql);
	}
	else
	{
	    SM(playerid,"Pouití: "r"/getips [ ID/Name ]");
	}
	return 1;
}
//============================================================================//
CMD:ngetnames(playerid,params[])
{
	SCMTOAA("ngetnames")
	IsNoAdmin(playerid)
	new id,IP[144],Cache:cache,query[200],rows,fields,name[24],ip[16],DIALOG[5000];
	if(!sscanf(params,"i",id))
	{
		if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
		mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Accounts` WHERE `Nick` LIKE '%%%e%%' OR `IP` LIKE '%%%s%%'",Jmeno(id),GetIP(id));
		cache = mysql_query(mysql,query);
		cache_get_data(rows,fields,mysql);
		if(rows)
		{
			strcat(DIALOG,"Nick\t"w"IP\t"w"Vytvoøeno\t"w"Vyuito\n");
		    for(new i; i < rows; i ++)
		    {
		    	cache_get_field_content(i,"Nick",name,mysql);
		    	cache_get_field_content(i,"IP",ip,mysql);
		    	format(str,sizeof(str),"%s\t%s\t%s\t%s\n",name,ip,DATE(cache_get_field_content_int(i,"Created",mysql)),DATE(cache_get_field_content_int(i,"Updated",mysql)));
		    	strcat(DIALOG,str);
			}
			SPD(playerid,0,DIALOG_STYLE_TABLIST_HEADERS,"Data",DIALOG,"Zavøít","");
		}
		else
		{
		    SM(playerid,"Úèet neexistuje");
		}
	}
	else if(!sscanf(params,"z",IP))
	{
		mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Accounts` WHERE `Nick` LIKE '%%%e%%' OR `IP` LIKE '%%%e%%'",IP,IP);
		cache = mysql_query(mysql,query);
		cache_get_data(rows,fields,mysql);
		if(rows)
		{
			strcat(DIALOG,"Nick\t"w"IP\t"w"Vytvoøeno\t"w"Vyuito\n");
		    for(new i; i < rows; i ++)
		    {
		    	cache_get_field_content(i,"Nick",name,mysql);
		    	cache_get_field_content(i,"IP",ip,mysql);
		    	format(str,sizeof(str),"%s\t%s\t%s\t%s\n",name,ip,DATE(cache_get_field_content_int(i,"Created",mysql)),DATE(cache_get_field_content_int(i,"Updated",mysql)));
		    	strcat(DIALOG,str);
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Accounts` WHERE `IP` LIKE '%%%s%%'",ip);
			}
			SPD(playerid,0,DIALOG_STYLE_TABLIST_HEADERS,"Data",DIALOG,"Zavøít","");
		}
		else
		{
		    SM(playerid,"Úèet neexistuje");
		}
	}
	else
	{
	    SM(playerid,"Pouití: "r"/ngetnames [ ID/IP/NAME ]");
	}
	cache_delete(cache,mysql);
	return 1;
}
//============================================================================//
CMD:getnames(playerid,params[])
{
	SCMTOAA("getnames")
	IsNoAdmin(playerid)
	new id;
	new ipadress[150];
    new query[500],rows,fields,Cache:cache,DIALOG[5000];
	if(!sscanf(params,"i",id))
	{
		if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
		mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Accounts` WHERE `IP` = '%s'",GetIP(id));
		cache = mysql_query(mysql,query);
		cache_get_data(rows,fields,mysql);
		if(rows)
		{
			for(new i; i < rows; i ++)
			{
			    new uname[24],ip[16];
			    cache_get_field_content(i,"Nick",uname,mysql);
			    cache_get_field_content(i,"IP",ip,mysql);
			    format(str,sizeof(str),"%s\t%s\n",uname,ip);
			    strcat(DIALOG,str);
			}
		}
		else
		{
		    strcat(DIALOG,"Chyba v naèítání úètù\t ");
		}
		SPD(playerid,UNNAMED+129,DIALOG_STYLE_TABLIST,"Seznam nickù",DIALOG,"Vybrat","Zavøít");
		cache_delete(cache,mysql);

	}
	else if(!sscanf(params,"z",ipadress))
	{
		if(strlen(ipadress) > 16) return SM(playerid,"Zadal si pøíli mnoho znakù");
		mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Accounts` WHERE `IP` = '%s'",ipadress);
		cache = mysql_query(mysql,query);
		cache_get_data(rows,fields,mysql);
		if(rows)
		{
			for(new i; i < rows; i ++)
			{
			    new uname[24],ip[16];
			    cache_get_field_content(i,"Nick",uname,mysql);
			    cache_get_field_content(i,"IP",ip,mysql);
			    format(str,sizeof(str),"%s\t%s\n",uname,ip);
			    strcat(DIALOG,str);
			}
		}
		else
		{
		    strcat(DIALOG,"Chyba v naèítání úètù\t ");
		}
		SPD(playerid,UNNAMED+129,DIALOG_STYLE_TABLIST,"Seznam nickù",DIALOG,"Vybrat","Zavøít");
		cache_delete(cache,mysql);
	}
	else
	{
	    SM(playerid,"Pouití: "r"/getnames [ ID/IP ]");
	}
	return 1;
}
//============================================================================//
CMD:vyhry(playerid,params[])
{
	SCMTOAA("vyhry")
	new query[500],DIALOG[4000],rows,fields,Cache:cache,id = playerid,pname[144];
	format(pname,sizeof(pname),Jmeno(playerid));
	if(Admin[playerid] > 0)
	{
	    if(!sscanf(params,"i",id))
	    {
	        if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	        format(pname,sizeof(pname),Jmeno(id));
	    }
	    else if(!sscanf(params,"z",pname))
	    {

	    }
	}
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Vyhry` WHERE `Nick` = '%e' ORDER BY `Time` DESC LIMIT 20",pname);
	cache = mysql_query(mysql,query);
	cache_get_data(rows,fields,mysql);
	if(rows)
	{
		strcat(DIALOG,""dc"Datum\tEvent\tAdmin\tOdmìna\n");
	    for(new i; i < rows; i ++)
	    {
	        new name[144],nick[24],odmena[50];
	        cache_get_field_content(i,"Event",name,mysql);
	        cache_get_field_content(i,"Admin",nick,mysql);
	        cache_get_field_content(i,"Odmena",odmena,mysql);
	        format(str,sizeof(str),"%s\t"g"%s\t%s\t"g"%s\n",DATE(cache_get_field_content_int(i,"Time",mysql)),name,nick,odmena);
	        strcat(DIALOG,str);
	    }
	    format(str,sizeof(str),"Posledních 20 výher [ {0088FF}%s "w"]",pname);
	    SPD(playerid,0,DIALOG_STYLE_TABLIST_HEADERS,str,DIALOG,"Zavøít","");
	}
	else
	{
	    SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Výhry","Zatím si nevyhrál ádný event, úèastni se eventù","Zavøít","");
	}
	cache_delete(cache,mysql);
	return 1;
}
//============================================================================//
CMD:vyhra(playerid,params[])
{
	SCMTOAA("vyhra")
	IsNoEventer(playerid)
	new id;
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/vyhra [ ID ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(id == playerid) return SM(playerid,"Sobì nemùe udìlit výhru");
	if(EventReward[0] == 1)
	{
	    if(!IPA(playerid)) return SM(playerid,"Udìlit vip výhru mùe poue "r"RCON");
	}
	format(str,sizeof(str),"%s "w"%s "r"udìlil výhru hráèi "w"%s "r"za event: "w"%s",Players(playerid),Jmeno(playerid),Jmeno(id),EventName);
	SCMTA(red,str);
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(id));
	if(EventReward[0] == 0)
	{
	    GiveMoney(id,EventReward[1],"Vyhraný event");
	    if(EventBody > 0)
	    {
	    	format(str,sizeof(str),"Obdrzel si vyhru: ~y~%d~g~$ ~y~+%d bodu ~w~za event: ~r~%s",EventReward[1],EventBody,EventName);
		}
		else
		{
	    	format(str,sizeof(str),"Obdrzel si vyhru: ~y~%d~g~$ ~w~za event: ~r~%s",EventReward[1],EventName);
		}
		CreateInfoBox(id,str,5);
	}
	else if(EventReward[0] == 1)
	{
		if(vip[id] == 0)
		{
			SPD(id,UNNAMED+10,DIALOG_STYLE_MSGBOX,"VIP Nastavení","Nyní si vyberete barvu "y"nicku "w"[ "c"Klikni na "w": "g"Dalí"w" ]","Dalí","");
			vip[id] = 1;
			new date = gettime() + mktime1(0,0,0,EventReward[1],0,0);
			DOF2_SetInt(dfile,"VIP",vip[id]);
			DOF2_SetInt(dfile,"VIP_vyprsi",date);
			DOF2_SetString(dfile,"BarvaTextu","FFFFFF");
            DOF2_SaveFile();
			if(EventBody > 0)
			{
		    	format(str,sizeof(str),"Obdrzel si vyhru: ~y~%d~g~ VIP dni ~y~+%d bodu ~w~za event: ~r~%s ~w~VIP Ucet expiruje: ~y~%s",EventReward[1],EventBody,EventName,DATE(date));
			}
			else
			{
		    	format(str,sizeof(str),"Obdrzel si vyhru: ~y~%d~g~ VIP dni ~w~za event: ~r~%s ~w~VIP Ucet expiruje: ~y~%s",EventReward[1],EventName,DATE(date));
			}
			CreateInfoBox(id,str,10);
			SetDefaultTitul(id);
		}
		else
		{
			new date = DOF2_GetInt(dfile,"VIP_vyprsi") + mktime1(0,0,0,EventReward[1],0,0);
			DOF2_SetInt(dfile,"VIP_vyprsi",date);
            DOF2_SaveFile();
		    format(str,sizeof(str),"Obdrzel si vyhru: ~y~+%d~g~ VIP dni ~y~+5 bodu ~w~za event: ~r~%s~w~ VIP Ucet expiruje: ~y~%s",EventReward[1],EventName,DATE(date));
			CreateInfoBox(id,str,10);
		}
	}
	new query[1000],odmena[50];
	if(EventReward[0] == 0)
	{
		if(EventBody > 0)
		{
		    format(odmena,sizeof(odmena),"%s$ + %d %s",Split(EventReward[1]),EventBody,PluralWord(EventBody,"bod","body","bodù"));
		}
		else
		{
		    format(odmena,sizeof(odmena),"%s$",Split(EventReward[1]));
		}
		mysql_format(mysql,query,sizeof(query),"INSERT INTO `Vyhry` (`Nick`,`Time`,`Event`,`Admin`,`Odmena`) VALUES ('%e','%d','%e','%e','%e')",Jmeno(id),gettime(),EventName,Jmeno(playerid),odmena);
		mysql_query(mysql,query,false);
	}
	else if(EventReward[0] == 1)
	{
		if(EventBody > 0)
		{
		    format(odmena,sizeof(odmena),"VIP na %d dní + %d bodù",EventReward[1],EventBody,PluralWord(EventBody,"bod","body","bodù"));
		}
		else
		{
		    format(odmena,sizeof(odmena),"VIP na %d dní",EventReward[1]);
		}
		mysql_format(mysql,query,sizeof(query),"INSERT INTO `Vyhry` (`Nick`,`Time`,`Event`,`Admin`,`Odmena`) VALUES ('%e','%d','%e','%e','%e')",Jmeno(id),gettime(),EventName,Jmeno(playerid),odmena);
		mysql_query(mysql,query,false);
	}
	GivePoints(id,EventBody);
	EventsWins[id]++;
	GivePlayerDailyValue(id,DAILY_TYPE_EVENT,1);
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(id));
	DOF2_SetInt(dfile,"Vyhry",EventsWins[id]);
	DOF2_SaveFile();
	GiveXP(id,150,"vyhrany event");
	if(strlen(EventAdmin))
	{
		if(strcmp(EventAdmin,Jmeno(playerid),false) == 0)
		{
		    Player[playerid][pMadeEvents] ++;
			AdminActivity(playerid);
		}
	}
    EventAdmin = "";
	if(Achiv[id][EVENT_1] == 0)
	{
	    if(EventsWins[id] >= 1)
	    {
			SetPlayerAchievement(id,EVENT_1);
	    }
	}
	if(Achiv[id][EVENT_10] == 0)
	{
	    if(EventsWins[id] >= 10)
	    {
			SetPlayerAchievement(id,EVENT_10);
	    }
	}
	if(Achiv[id][EVENT_30] == 0)
	{
	    if(EventsWins[id] >= 30)
	    {
			SetPlayerAchievement(id,EVENT_30);
	    }
	}
	return 1;
}
//============================================================================//
CMD:crazycar(playerid,params[])
{
	SCMTOAA("crazycar")
	IsNoVIP(playerid)
	if(CrazyCar[playerid] == false)
	{
		CrazyCarTimer[playerid] = SetTimerEx("ChangeCarColor",50,true,"i",playerid);
		CreateInfoBox(playerid,"Automaticke meneni berev a kol auta ~g~zapnuto",5);
		CrazyCar[playerid] = true;
	}
	else
	{
	    KillTimer(CrazyCarTimer[playerid]);
		CreateInfoBox(playerid,"Automaticke meneni berev a kol auta ~r~vypnuto",5);
		CrazyCar[playerid] = false;
	}
	return 1;
}
forward ChangeCarColor(playerid);

public ChangeCarColor(playerid)
{
	if(vip[playerid] == 1)
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
		    ChangeVehicleColor(GetPlayerVehicleID(playerid),random(162),random(162));
			switch(random(13))
			{
			    case 0: AddVehicleComponent(GetPlayerVehicleID(playerid),1073);
			    case 1: AddVehicleComponent(GetPlayerVehicleID(playerid),1074);
			    case 2: AddVehicleComponent(GetPlayerVehicleID(playerid),1075);
			    case 3: AddVehicleComponent(GetPlayerVehicleID(playerid),1076);
			    case 4: AddVehicleComponent(GetPlayerVehicleID(playerid),1077);
			    case 5: AddVehicleComponent(GetPlayerVehicleID(playerid),1078);
			    case 6: AddVehicleComponent(GetPlayerVehicleID(playerid),1079);
				case 7: AddVehicleComponent(GetPlayerVehicleID(playerid),1080);
				case 8: AddVehicleComponent(GetPlayerVehicleID(playerid),1081);
				case 9: AddVehicleComponent(GetPlayerVehicleID(playerid),1082);
				case 10: AddVehicleComponent(GetPlayerVehicleID(playerid),1083);
				case 11: AddVehicleComponent(GetPlayerVehicleID(playerid),1084);
				case 12: AddVehicleComponent(GetPlayerVehicleID(playerid),1085);
			}
		}
	}
	else
	{
	    KillTimer(CrazyCarTimer[playerid]);
		CrazyCar[playerid] = false;
	}
	return 1;
}
//============================================================================//
CMD:flashnick(playerid,params[])
{
	SCMTOAA("flashnick")
	IsNoVIP(playerid)
	if(Player[playerid][pHide] > 0) return SM(playerid,"Kdy jste "g"Hide "w"tak nemùete pouít tento pøíkaz");
	if(FlashNick[playerid] == false)
	{
		CreateInfoBox(playerid,"Automaticke meneni berev nicku ~g~zapnuto",5);
		FlashNick[playerid] = true;
	}
	else
	{
		CreateInfoBox(playerid,"Automaticke meneni berev nicku ~r~vypnuto",5);
		FlashNick[playerid] = false;
	}
	return 1;
}
//============================================================================//
CMD:inzerat(playerid,params[])
{
	ShowAdvertisments(playerid);
	return 1;
}
//============================================================================//
CMD:anketa(playerid,params[])
{
	SCMTOAA("anketa")
	IsNoVIP(playerid)
	if(hlasovani == 1) return SM(playerid,"U probíhá hlasování");
	if(Mute[playerid] > 0) return SM(playerid,"Kdy si umlèený nemùe pouít tento pøíkaz");
	if(sscanf(params,"z",atext)) return SM(playerid,"Pouití: "r"/anketa [ Otázka ]");
	if(strlen(atext) > 100) return SM(playerid,"Pouij maximálnì 100 znakù");
	SCMTA(bila,"[ "r"Anketa "w"]");
	format(str,sizeof(str),"%s "w"[Autor: "r"%s "w"]",atext,Jmeno(playerid));
	SCMTA(green,str);
	SCMTA(bila,"Hlasovat mùete pomocí "r"/ano, /ne, /nevim");
	hlasovani = 1;
	AnketaTimer = SetTimer("EndAnketa",1000*60,false);
	ano = 0;
	ne = 0;
	nevim = 0;
	new Text[400];
	for(new i; i < sizeof(atext); i ++)
	{
	    for(new x; x < sizeof(Diakritika);  x++)
	    {
	    	if(atext[i] == Diakritika[x][0]) atext[i] = Diakritika[x][1];
		}
		if(atext[i] == '~') atext[i] = '_';
	}
	format(Text,sizeof(Text),"~p~] ~r~Anketa ~p~]~n~~y~%s~n~~b~Ano: ~r~0 ~w~/ ~b~Ne: ~r~0 ~w~/ ~b~Nevim: ~r~0",atext);
	TextDrawSetString(Textdraw28,Text);
	for(new i; i  <= GetPlayerPoolSize(); i ++)
	{
		if(TD[i] == false)
		{
	    	TextDrawShowForPlayer(i,Textdraw28);
		}
	}
	return 1;
}
forward EndAnketa();

public EndAnketa()
{
	SCMTA(bila,"[ "r"Anketa "w"]");
	format(str,sizeof(str),"%s"r" - Konec ankety",atext);
	SCMTA(green,str);
	format(str,sizeof(str),"Stav hlasù: [ "r"Ano: %d "w"| "r"Ne: %d "w"| "r"Nevim: %d "w"]",ano,ne,nevim);
	SCMTA(bila,str);
	hlasovani = 0;
	TextDrawHideForAll(Textdraw28);
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    Hlasoval[i] = false;
	}
	return 1;
}
//============================================================================//
CMD:nevim(playerid,params[])
{
	SCMTOAA("nevim")
	if(hlasovani == 0) return SM(playerid,"Nyní neprobíha ádné hlasování");
	if(Hlasoval[playerid] == true) return SM(playerid,"U si hlasoval");
	nevim++;
	new Text[400];
	format(Text,sizeof(Text),"~p~] ~r~Anketa ~p~]~n~~y~%s~n~~b~Ano: ~r~%d ~w~/ ~b~Ne: ~r~%d ~w~/ ~b~Nevim: ~r~%d",atext,ano,ne,nevim);
	TextDrawSetString(Textdraw28,Text);
	Hlasoval[playerid] = true;
	return 1;
}
//============================================================================//
CMD:ano(playerid,params[])
{
	SCMTOAA("ano")
	if(hlasovani == 0) return SM(playerid,"Nyní neprobíha ádné hlasování");
	if(Hlasoval[playerid] == true) return SM(playerid,"U si hlasoval");
	ano++;
	new Text[400];
	format(Text,sizeof(Text),"~p~] ~r~Anketa ~p~]~n~~y~%s~n~~b~Ano: ~r~%d ~w~/ ~b~Ne: ~r~%d ~w~/ ~b~Nevim: ~r~%d",atext,ano,ne,nevim);
	TextDrawSetString(Textdraw28,Text);
	Hlasoval[playerid] = true;
	return 1;
}
//============================================================================//
CMD:ne(playerid,params[])
{
	SCMTOAA("ne")
	if(hlasovani == 0) return SM(playerid,"Nyní neprobíha ádné hlasování");
	if(Hlasoval[playerid] == true) return SM(playerid,"U si hlasoval");
	ne++;
	new Text[400];
	format(Text,sizeof(Text),"~p~] ~r~Anketa ~p~]~n~~y~%s~n~~b~Ano: ~r~%d ~w~/ ~b~Ne: ~r~%d ~w~/ ~b~Nevim: ~r~%d",atext,ano,ne,nevim);
	TextDrawSetString(Textdraw28,Text);
	Hlasoval[playerid] = true;
	return 1;
}
//============================================================================//
CMD:hp(playerid,params[])
{
	SCMTOAA("hp")
	new id,Health,Armour;
	IsNoAdmin(playerid)
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/hp [ ID ] [ ivot ] [ Vesta ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(OnEvent[id] == false)
	{
		if(Admin[id] > 1) return SM(playerid,"Administrátorovi nemùe nastavit HP");
	}
	if(!sscanf(params,"iii",id,Health,Armour))
	{
		if(Health < 0 || Health > 100) return SM(playerid,"Chybnì zadané údaje");
		if(Armour < 0 || Armour > 100) return SM(playerid,"Chybnì zadané údaje");
	    SetPlayerHealth(id,Health);
	    SetPlayerArmour(id,Armour);
		if(id != playerid)
		{
		    format(str,sizeof(str),"%s "w"%s "r"nastavil hráèi "w"%s "r"[ ivot: %d  | Vestu: %d ]",Players(playerid),Jmeno(playerid),Jmeno(id),Health,Armour);
			SCMTA(red,str);
		}
		else
		{
		    format(str,sizeof(str),"Nastavil sis ivoty na "g"%d "w"a vestu na "g"%d",Health,Armour);
		    SM(playerid,str);
		}
	}
	else if(!sscanf(params,"ii",id,Health))
	{
	    SetPlayerHealth(id,Health);
	    SetPlayerArmour(id,100);
		if(id != playerid)
		{
	    	format(str,sizeof(str),"%s "w"%s "r"nastavil hráèi "w"%s "r"[ ivot: "g"%d "r"| Vestu: "g"100 "r"]",Players(playerid),Jmeno(playerid),Jmeno(id),Health);
			SCMTA(red,str);
		}
		else
		{
		    format(str,sizeof(str),"Nastavil sis ivoty na "g"%d "w"a vestu na "g"100",Health);
		    SM(playerid,str);
		}
	}
	else if(!sscanf(params,"i",id))
	{
	    SetPlayerHealth(id,100);
	    SetPlayerArmour(id,100);
		if(id != playerid)
		{
	    	format(str,sizeof(str),"%s "w"%s "r"nastavil hráèi "w"%s "r"[ ivot: "g"100 "r"| Vestu: "g"100 "r"]",Players(playerid),Jmeno(playerid),Jmeno(id));
			SCMTA(red,str);
		}
		else
		{
		    SM(playerid,"Nastavil sis ivoty na "g"100 "w"a vestu na "g"100");
		}
	}
	GOD[id] = false;
	return 1;
}
//============================================================================//
CMD:bum(playerid,params[])
{
	SCMTOAA("bum")
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(Admin[playerid] < 5) return SM(playerid,"Nemá dostateèná oprávnìní");
	}
	new id,Float:X,Float:Y,Float:Z;
	IsNoAdmin(playerid)
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/bum [ ID ]");
	if(!IsPlayerConnected(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(IsPlayerInAnyVehicle(id))
	{
		SetVehicleHealth(GetPlayerVehicleID(id),0);
		RemovePlayerFromVehicle(id);
	}
	GetPlayerPos(id,X,Y,Z);
	SetPlayerHealth(id,100);
	SetPlayerArmour(id,100);
	CreateExplosion(X,Y,Z,0,50);
	SetPlayerHealth(id,1);
	SetPlayerArmour(id,0);
	format(str,sizeof(str),"Odbouchnul jsi hráèe: "g"%s",Jmeno(id));
	SM(playerid,str);
 	return 1;
}
//============================================================================//
CMD:prehrat(playerid,params[])
{
	SCMTOAA("prehrat")
	StopAudioStreamForPlayer(playerid);
	PlayAudioStreamForPlayer(playerid,url);
	if(Listening[playerid] > -1)
	{
	    if(Listening[playerid] <= MAX_RADIOS)
	    {
			Radio[Listening[playerid]][RadioListeners]--;
		}
		Listening[playerid] = -1;
	}
	MusicLenght[playerid] = 0;
	MusicID[playerid] = 0;
	return 1;
}
//============================================================================//
CMD:pm(playerid,params[])
{
	new id,text[146];
	if(sscanf(params,"iz",id,text)) return SM(playerid,"Pouití: "r"/pm [ ID ] [ Text ]");
	if(strlen(text) > 100) return SM(playerid,"Pøíli dlouhý text");
	SendPrivateMessage(playerid,id,text);
	return 1;
}
//============================================================================//
CMD:car(playerid,params[])
{
	SCMTOAA("car")
	if(IsPlayerInSpecialProperty(playerid)) return SM(playerid,"V nemovitosti se nemùete pouít tento pøíkaz");
	if(InDM[playerid] != -1) return SM(playerid,"V DM si nemùe spawnout vozidlo "r"/leave");
	if(IsPlayerHitted(playerid)) return SM(playerid,"V boji si nemùe spawnout vozidlo");
	if(pStunt[playerid][sStuntID] != -1) return SM(playerid,"Kdy plní stunt, nemùe pouít tento pøíkaz");
	new carid,spz[144];
	if(OnEvent[playerid] == true)
	{
		if(Admin[playerid] == 0)
		{
		    if(RunEvent != 2) return SM(playerid,"Na eventu bez vozidel nelze tento pøíkaz pouít");
/*			if(RunEvent == 1) return SM(playerid,"Na eventu bez vozidel nelze tento pøíkaz pouít");
			if(RunEvent == 3) return SM(playerid,"Na eventu bez vozidel nelze tento pøíkaz pouít");
			if(RunEvent == 4) return SM(playerid,"Na eventu bez vozidel nelze tento pøíkaz pouít");
			if(RunEvent == 5) return SM(playerid,"Na eventu bez vozidel nelze tento pøíkaz pouít");
			if(RunEvent == 6) return SM(playerid,"Na eventu bez vozidel nelze tento pøíkaz pouít");
*/		}
	}
	JailCmdBlock(playerid);
	new name[128];
	if(!sscanf(params,"iz",carid,spz))
	{

	}
	else if(!sscanf(params,"zz",name,spz))
	{
	    carid = GetVehicleIDFromName(name);
		if(carid < 400 || carid > 611) return SM(playerid,"Neplatný název vozidla");
	}
	else
	{
	    return SM(playerid,"Pouití: "r"/car [ ID / Název ]");
	}
	if(carid == 520 || carid == 425 || carid == 432)
	{
    	if(IsPlayerSupplyRun(playerid)) return SM(playerid,"Toto vozidlo si mùete spawnout pouze mimo misi");
    	if(vip[playerid] == 0) return SM(playerid,"Toto vozidlo si mùe spawnout pouze VIP Hráè");
	}
	if(carid < 400 || carid > 609) return SM(playerid,"Rozmezí ID aut je 400 - 609");
	if(strlen(spz) > 11) return SM(playerid,"[ {0077FF}SPZ "w"] Maximálnì lze pouít 11 znakù");
	switch(carid)
	{
		case 435,449,450,537,538,569,570,584,590,591,606,607,608:
		return SM(playerid,"Toto vozidlo si nemùe spawnout");
	}
	CreateCarMenuVehicle(playerid,carid,spz);
//	format(str,sizeof(str),"Vytvoøil si vozidlo [Nazev: "g"%s "w" | ID: "g"%d"w"]",GetVehicleName(GetPlayerVehicleID(playerid)),carid);
//	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:ebullets(playerid,params[])
{
	if(eb == false) SM(playerid,"Ebullets byly zrueny z dùvodù stíností");
	else
	{
		new DIALOG_BULLET[1000];
		if(Admin[playerid] < 5)
		{
			if(EB[playerid] == 0)
			{
			    strcat(DIALOG_BULLET,""g"Aktivovat "w"výbuné náboje\n");
			}
			else
			{
				strcat(DIALOG_BULLET,""r"Deaktivovat "w"výbuné náboje\n");
			}
			format(str,sizeof(str),"Koupit náboje ( Vlastníte: "c"%d "w")",Naboje[playerid]);
			strcat(DIALOG_BULLET,str);
			SPD(playerid,DIALOG_BULLETS,DIALOG_STYLE_LIST,""c"Výbuné Náboje",DIALOG_BULLET,"Vybrat","Zavøít");
		}
		else
		{
			if(EB[playerid] == 0)
			{
			    strcat(DIALOG_BULLET,""g"Aktivovat "w"výbuné náboje\n");
			}
			else
			{
				strcat(DIALOG_BULLET,""r"Deaktivovat "w"výbuné náboje\n");
			}
			format(str,sizeof(str),"Koupit náboje ( Vlastníte: "c"%d "w")\n",Naboje[playerid]);
			strcat(DIALOG_BULLET,str);
			strcat(DIALOG_BULLET,""r"Dát hráèi náboje");
			SPD(playerid,DIALOG_BULLETS,DIALOG_STYLE_LIST,""c"Výbuné Náboje",DIALOG_BULLET,"Vybrat","Zavøít");
		}
	}
  	return 1;
}
//============================================================================//
CMD:thx(playerid,params[])
{
	SCMTOAA("thx")
	new id;
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/thx [ ID ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	if(id == playerid)
	{
	    format(str,sizeof(str),"%s "r"%s "w"dìkuje sám sobì.",Players(playerid),Jmeno(playerid));
	}
	else
	{
	    format(str,sizeof(str),"%s "r"%s "w"dìkuje hráèi "r"%s"w".",Players(playerid),Jmeno(playerid),Jmeno(id));
	}
	SCMTA(bila,str);
	return 1;
}
//============================================================================//
CMD:sorry(playerid,params[])
{
	SCMTOAA("sorry")
	new id;
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/sorry [ ID ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	if(id == playerid)
	{
	    format(str,sizeof(str),"%s "r"%s "w"se omlouvá sám sobì.",Players(playerid),Jmeno(playerid));
	}
	else
	{
	    format(str,sizeof(str),"%s "r"%s "w"se omlouvá hráèi "r"%s"w".",Players(playerid),Jmeno(playerid),Jmeno(id));
	}
	SCMTA(bila,str);
	return 1;
}
//============================================================================//
CMD:gn(playerid,params[])
{
	new id;
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/gn [ ID ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	if(id == playerid)
	{
	    format(str,sizeof(str),"%s "r"%s "w"jde spát.",Players(playerid),Jmeno(playerid));
	}
	else
	{
	    format(str,sizeof(str),"%s "r"%s "w"pøeje hráèi "r"%s "w"dobrou noc.",Players(playerid),Jmeno(playerid),Jmeno(id));
	}
	SCMTA(bila,str);
	return 1;
}
//============================================================================//
CMD:fuck(playerid,params[])
{
	new id;
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/fuck [ ID ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	if(id == playerid)
	{
	    format(str,sizeof(str),"%s "r"%s "w"poslal sám sebe do prdele.",Players(playerid),Jmeno(playerid));
	}
	else
	{
	    format(str,sizeof(str),"%s "r"%s "w"poslal hráèe "r"%s "w"do prdele.",Players(playerid),Jmeno(playerid),Jmeno(id));
	}
	SCMTA(bila,str);
	return 1;
}
//============================================================================//
CMD:gl(playerid,params[])
{
	new id;
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/gl [ ID ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	if(id == playerid)
	{
	    format(str,sizeof(str),"%s "r"%s "w"pøeje sám sobì hodnì tìstí",Players(playerid),Jmeno(playerid));
	}
	else
	{
	    format(str,sizeof(str),"%s "r"%s "w"pøeje hráèi "r"%s "w"hodnì tìstí.",Players(playerid),Jmeno(playerid),Jmeno(id));
	}
	SCMTA(bila,str);
	return 1;
}
//============================================================================//
CMD:sex(playerid,params[])
{
	SCMTOAA("sex")
	new id;
	if(Mute[playerid] > 0) return MuteMessage(playerid);
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/sex [ ID ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	format(str,sizeof(str),"Jedna hláka za "g"%d %s",HLASKA_TIME,PluralWord(HLASKA_TIME,"sekundu","sekundy","sekund"));
	if(HlaskaTime[playerid] > 0) return SM(playerid,str);
	HlaskaTime[playerid] = HLASKA_TIME;
	if(id == playerid)
	{
	    format(str,sizeof(str),"%s "r"%s "w"se chystá masturbovat.",Players(playerid),Jmeno(playerid));
	}
	else
	{
	    format(str,sizeof(str),"%s "r"%s "w"nabízí sex hráèi "r"%s"w".",Players(playerid),Jmeno(playerid),Jmeno(id));
	}
	SCMTA(bila,str);
	return 1;
}
//============================================================================//
CMD:racedelete(playerid,params[])
{
	IsNoAdmin(playerid)
	new DIALOG_RACES[10000];
	strcat(DIALOG_RACES,""dc"Název\tCheckpointù\tAutor\n");
	for(new i; i < MAX_RACES; i ++)
	{
	    format(dfile,sizeof(dfile),"UnNamed/Races/Race[%d].txt",i);
	    if(fexist(dfile))
	    {
	        format(str,sizeof(str),"%d. {0088FF}%s\t%d\t%s\n",i+1,Race[i][CPName],cps[i]-1,Race[i][CPAutor]);
	        strcat(DIALOG_RACES,str);
	    }
	    else
		{
			strcat(DIALOG_RACES," \n");
	    }
	}
	SPD(playerid,UNNAMED+180,DIALOG_STYLE_TABLIST_HEADERS,"Závody",DIALOG_RACES,"Smazat","Zavøít");
	return 1;
}
//============================================================================//
CMD:nastream(playerid,params[])
{
	IsNoVIP(playerid)
	if(Admin[playerid] < 3)
	{
		if(DOF2_GetInt(CONFIG,"SBLOCK") == 1) return SM(playerid,"Pøíkaz je bloknutý správcem serveru");
	}
	if(Admin[playerid] < 5)
	{
	    if(Admin[playerid] > 2)
	    {
			format(str,sizeof(str),"Dalí stream lze spustit za: "g"%02d "w": "g"%02d",MusicTimeMinutes-3,MusicTimeSeconds);
			if(MusicTimeMinutes > 3) return SM(playerid,str);
		}
		else
		{
			format(str,sizeof(str),"Dalí stream lze spustit za: "g"%02d "w": "g"%02d",MusicTimeMinutes,MusicTimeSeconds);
			if(MusicTimeSeconds > 0 || MusicTimeMinutes > 0) return SM(playerid,str);
		}
	}
	if(sscanf(params,"z",url)) return SM(playerid,"Pouití: "r"/nastream [ YT URL ]");
	new formats[][] = {"https://youtube.com/","https://www.youtube.com/"},bool:canuse;
	for(new i; i < sizeof(formats); i ++)
		if(strfind(url,formats[i],true,0) != -1)
		    canuse = true;
	if(canuse == false) return SM(playerid,"Formát URL: "r"https://youtube.com/ "w"nebo "r"https://www.youtube.com/");
	format(url,sizeof(url),"http://www.youtubeinmp3.com/fetch/?video=%s",url);
	if(Admin[playerid] == 0)
	{
		format(str,sizeof(str),"%s "c"%s "g"spustil "c"Audio Stream"g".",Players(playerid),Jmeno(playerid));
		SCMTA(green,str);
	}
	else if(Admin[playerid] > 0)
	{
		format(str,sizeof(str),"%s "w"%s "r"spustil "w"Audio Stream"r".",Players(playerid),Jmeno(playerid));
		SCMTA(red,str);
	}
	new players;
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
		if(IPC(i) && !IsPlayerNPC(i))
		{
		    if(Listening[i] == -1 && BlockedStream[i] == 0 && MusicLenght[i] < 1)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i,url);
				players ++;
			}
			else if(Listening[i] != -1)
			{
				format(str,sizeof(str),"Má zaplé radio, pokud chce pøehrát audio stream od hráèe "g"%s",Jmeno(playerid));
			    SM(i,str);
			    SM(i,"pouij pøíkaz: "c"/prehrat");
			}
			else if(BlockedStream[i] == 1)
			{
				format(str,sizeof(str),"Má bloknutý stream, pokud chce tento stream od hráèe "g"%s "w"pøehrát,",Jmeno(playerid));
			    SM(i,str);
			    SM(i,"Pouij pøíkaz: "c"/prehrat");
			}
			else if(MusicLenght[i] > 0)
			{
				format(str,sizeof(str),"Má zaplou hudbu, pokud chce tento stream od hráèe "g"%s "w"pøehrát,",Jmeno(playerid));
			    SM(i,str);
			    SM(i,"Pouij pøíkaz: "c"/prehrat");
			}
			else
			{
			    if(i != playerid)
			    {
					SM(playerid,"Pokud vám audio streamy obtìují pouijte pøíkaz "r"/blockstream");
				}
			}
		}
	}
	format(str,sizeof(str),"{0077FF}Audio Stream byl sputìn pro "w"%d {0077FF}hráèù.",players);
	SCM(playerid,bila,str);
	if(DOF2_GetInt(CONFIG,"SBLOCK") == 1)
	{
	 	SM(playerid,""r"WARNING: "w"Pøíkaz je pro hráèe bloknutý");
	}
	KillTimer(TimerStream);
	TimerStream = 0;
	MusicTimeMinutes = 4;
	MusicTimeSeconds = 0;
	TimerStream = SetTimer("UnBlockMusic",1000,false);
	return 1;
}

CMD:astream(playerid,params[])
{
	SCMTOAA("astream")
	IsNoVIP(playerid)
	if(Admin[playerid] < 3)
	{
		if(DOF2_GetInt(CONFIG,"SBLOCK") == 1) return SM(playerid,"Pøíkaz je bloknutý správcem serveru");
	}
	if(Admin[playerid] < 5)
	{
	    if(Admin[playerid] > 2)
	    {
			format(str,sizeof(str),"Dalí stream lze spustit za: "g"%02d "w": "g"%02d",MusicTimeMinutes-3,MusicTimeSeconds);
			if(MusicTimeMinutes > 3) return SM(playerid,str);
		}
		else
		{
			format(str,sizeof(str),"Dalí stream lze spustit za: "g"%02d "w": "g"%02d",MusicTimeMinutes,MusicTimeSeconds);
			if(MusicTimeSeconds > 0 || MusicTimeMinutes > 0) return SM(playerid,str);
		}
	}
	if(sscanf(params,"z",url)) return SM(playerid,"Pouití: "r"/astream [ URL ]");
	new formats[][] = {"http://","https://"},bool:canuse;
	for(new i; i < sizeof(formats); i ++)
		if(strfind(url,formats[i],true,0) != -1)
		    canuse = true;
	if(canuse == false) return SM(playerid,"Formát URL: "r"http://, nebo https://");
	if(Admin[playerid] == 0)
	{
		format(str,sizeof(str),"%s "c"%s "g"spustil "c"Audio Stream"g".",Players(playerid),Jmeno(playerid));
		SCMTA(green,str);
	}
	else if(Admin[playerid] > 0)
	{
		format(str,sizeof(str),"%s "w"%s "r"spustil "w"Audio Stream"r".",Players(playerid),Jmeno(playerid));
		SCMTA(red,str);
	}
	new players;
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
		if(IPC(i) && !IsPlayerNPC(i))
		{
		    if(Listening[i] == -1 && BlockedStream[i] == 0 && MusicLenght[i] < 1)
			{
				StopAudioStreamForPlayer(i);
				PlayAudioStreamForPlayer(i,url);
				players ++;
			}
			else if(Listening[i] != -1)
			{
				format(str,sizeof(str),"Má zaplé radio, pokud chce pøehrát audio stream od hráèe "g"%s",Jmeno(playerid));
			    SM(i,str);
			    SM(i,"pouij pøíkaz: "c"/prehrat");
			}
			else if(BlockedStream[i] == 1)
			{
				format(str,sizeof(str),"Má bloknutý stream, pokud chce tento stream od hráèe "g"%s "w"pøehrát,",Jmeno(playerid));
			    SM(i,str);
			    SM(i,"Pouij pøíkaz: "c"/prehrat");
			}
			else if(MusicLenght[i] > 0)
			{
				format(str,sizeof(str),"Má zaplou hudbu, pokud chce tento stream od hráèe "g"%s "w"pøehrát,",Jmeno(playerid));
			    SM(i,str);
			    SM(i,"Pouij pøíkaz: "c"/prehrat");
			}
			else
			{
			    if(i != playerid)
			    {
					SM(playerid,"Pokud vás audio streamy obtìují pouijte pøíkaz "r"/blockstream");
				}
			}
		}
	}
	format(str,sizeof(str),"{0077FF}Audio Stream byl sputìn pro "w"%d {0077FF}hráèù.",players);
	SCM(playerid,bila,str);
	if(DOF2_GetInt(CONFIG,"SBLOCK") == 1)
	{
	 	SM(playerid,""r"WARNING: "w"Pøíkaz je pro hráèe bloknutý");
	}
	KillTimer(TimerStream);
	TimerStream = 0;
	MusicTimeMinutes = 4;
	MusicTimeSeconds = 0;
	TimerStream = SetTimer("UnBlockMusic",1000,false);
	return 1;
}
//============================================================================//
forward UnBlockMusic();

public UnBlockMusic()
{
	MusicTimeSeconds --;
 	TimerStream = SetTimer("UnBlockMusic",1000,false);
	if(MusicTimeSeconds < 0)
	{
	    MusicTimeMinutes --;
	    MusicTimeSeconds = 59;
		if(MusicTimeMinutes < 0)
		{
			MusicTimeMinutes = 0;
			MusicTimeSeconds = 0;
			KillTimer(TimerStream);
			TimerStream = 0;
		}
	}
 	return 1;
}
//============================================================================//
CMD:dveh(playerid,params[])
{
	SCMTOAA("dveh")
	new id;
	if(!IsPlayerOnHighestLevel(playerid)) return SM(playerid,"Nemá povolení");
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/dveh [ ID ] "w"Pomùcka: "r"/dl");
	if(!IsValidVehicle(id)) return SM(playerid,"Toto vozidlo neexistuje");
	format(str,sizeof(str),"Vozidlo ~y~%s~w~ (~r~%d~w~) uspsesne ~g~smazano",GetVehicleName(id),id);
	CreateInfoBox(playerid,str,5);
	DestroyVehicle(id);
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(IPC(i) && !IsPlayerNPC(i))
	    {
		    if(id == CCAR[i])
			{
			    CCAR[i] = 0;
			    format(str,sizeof(str),"Toto vozidlo si vytvoøil hráè "g"%s",Jmeno(i));
			    SM(playerid,str);
			    break;
			}
		}
	}
	return 1;
}
//============================================================================//
CMD:hydraulika(playerid,params[])
{
	SCMTOAA("hydraulika")
	IsNoVIP(playerid)
	if(!IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Musí být ve vozidle");
	AddVehicleComponent(GetPlayerVehicleID(playerid),1087);
	CreateInfoBox(playerid,"Uspesne jste si namontoval do vozidla ~r~Hydrauliku",5);
	return 1;
}
//============================================================================//
CMD:setlegend(playerid,params[])
{
	new id;
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/setlegend [ ID ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	Legend[id] = !Legend[id];
	if(Legend[id] == true)
	{
	    format(str,sizeof(str),"%s "g"%s "w"nastavil hráèi "g"%s "w"hodnost "y"Legenda",Players(playerid),Jmeno(playerid),Jmeno(id));
		SendAdminMessage(str);
	    format(str,sizeof(str),"%s "g"%s "w"Vám nastavil hodnost "y"Legenda",Players(playerid),Jmeno(playerid),Jmeno(id));
		SM(id,str);
	}
	else
	{
	    format(str,sizeof(str),"%s "g"%s "w"odnastavil hráèi "g"%s "w"hodnost "y"Legenda",Players(playerid),Jmeno(playerid),Jmeno(id));
		SendAdminMessage(str);
	    format(str,sizeof(str),"%s "g"%s "w"Vám odnastavil hodnost "y"Legenda",Players(playerid),Jmeno(playerid),Jmeno(id));
		SM(id,str);
	}
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(id));
	DOF2_SetBool(dfile,"Legend",Legend[id]);
	DOF2_SaveFile();
	return 1;
}
//============================================================================//
CMD:settings(playerid,params[])
{
	SCMTOAA("settings")
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	new DIALOG_SETTINGS[10000];
	format(str,sizeof(str),"VIP Zdarma je nastaveno na "g"%d "w"dní\n",DOF2_GetInt(CONFIG,"VIP_ZDARMA"));
	strcat(DIALOG_SETTINGS,str);
	if(DOF2_GetInt(CONFIG,"SBLOCK") == 0)
	{
		strcat(DIALOG_SETTINGS,""w"Bloknout pøíkaz "r"/astream\n");
	}
	else
	{
		strcat(DIALOG_SETTINGS,""w"Odbloknout pøíkaz "r"/astream\n");
	}
	if(DOF2_GetInt(CONFIG,"AREPAIR") == 0)
	{
		strcat(DIALOG_SETTINGS,""w"Zapnout "g"Auto Repair\n");
	}
	else
	{
		strcat(DIALOG_SETTINGS,""w"Vypnout "g"Auto Repair\n");
	}
	format(str,sizeof(str),"Cena jednoho výbuného náboje ("y" /ebullets"w" ) "g"%s$\n",Split(DOF2_GetInt(CONFIG,"Cena")));
	strcat(DIALOG_SETTINGS,str);
	format(str,sizeof(str),"Herní minuta = "g"%d "w"sekund\n",DOF2_GetInt(CONFIG,"Minuta"));
	strcat(DIALOG_SETTINGS,str);
	format(str,sizeof(str),"Player WarpBlock = "g"%d\n",DOF2_GetInt(CONFIG,"PWBLOCK"));
	strcat(DIALOG_SETTINGS,str);
	format(str,sizeof(str),""y"VIP "w"Player WarpBlock = "g"%d\n",DOF2_GetInt(CONFIG,"VPWBLOCK"));
	strcat(DIALOG_SETTINGS,str);
	format(str,sizeof(str),"Cena VIP = "g"%d bodù\n",DOF2_GetInt(CONFIG,"VBODY"));
	strcat(DIALOG_SETTINGS,str);
	strcat(DIALOG_SETTINGS,"\nNastavení barev [ "r"/color "w"]");
	format(str,sizeof(str),"\nCena bodu = "g"%s$\n",Split(POINT_PRICE));
	strcat(DIALOG_SETTINGS,str);
	strcat(DIALOG_SETTINGS,"Nastavení rádii\n");
	SPD(playerid,UNNAMED+24,DIALOG_STYLE_LIST,"UnNamed Nastavení",DIALOG_SETTINGS,"Zmìnit","Zavøít");
	return 1;
}
//============================================================================//
//new bool: UseDuvod[MAX_PLAYERS];
//new bool: TypeAFK[MAX_PLAYERS];
CMD:afk(playerid,params[])
{
	SCMTOAA("afk")
	if(AFK[playerid] == false)
	{
		SM(playerid,"Do AFK reimu se dostanete automaticky");
	}
	else
	{
	    SetPlayerUnAFK(playerid);
	}
/*	if(InDM[playerid] != -1) return SM(playerid,"V DM nemùe jít AFK "r"/leave");
	if(IsPlayerInAnyVehicle(playerid))
	{
		new Float:Vhealth;
		GetVehicleHealth(GetPlayerVehicleID(playerid),Vhealth);
		if(Vhealth < 250) return SM(playerid,"Nemùe pouít tento pøíkaz kdy ti hoøí vozidlo");
	}
	if(OnEvent[playerid] == true) return SM(playerid,"Na eventu nemùe pouít tento pøíkaz");
	if(TypeAFK[playerid] == true) return SM(playerid,"U si zadal tento pøíkaz");
	if(AFK[playerid] == false)
	{
		new duvod[255];
		if(!sscanf(params,"z",duvod))
		{
			if(strlen(duvod) > 20) return SM(playerid,"Zadal jste pøíli dlouhý dùvod");
			SetPVarString(playerid,"AFKDUVOD",duvod);
			if(Mute[playerid] == 0)
			{
				UseDuvod[playerid] = true;
			}
		}
		else
		{
			UseDuvod[playerid] = false;
		}
		CreateInfoBox(playerid,"Prosim, nehybejte se ~r~10 sekund",5);
		GetPlayerPos(playerid,AFKX[playerid],AFKY[playerid],AFKZ[playerid]);
		SetTimerEx("SetAFK",10000,false,"i",playerid);
		TypeAFK[playerid] = true;
	}
	else
	{
		SetPlayerUnAFK(playerid);
	}
*/
	return 1;
}
/*forward SetAFK(playerid);

public SetAFK(playerid)
{
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	if(X != AFKX[playerid] && Y != AFKY[playerid] && Z != AFKZ[playerid])
	{
		UseDuvod[playerid] = false;
		TypeAFK[playerid] = false;
		CreateInfoBox(playerid,"Pohnul si se, AFK ~r~zrusen",5);
		return 0;
	}
	if(UseDuvod[playerid] == true)
	{
		new duvod[255];
		GetPVarString(playerid,"AFKDUVOD",duvod,sizeof(duvod));
		format(str,sizeof(str),"[ AFK ]"r" %s "g"%s "r"odeel na chvíli od klávesnice. [Dùvod: "g"%s"r"]",Players(playerid),Jmeno(playerid),duvod);
	}
	else
	{
		format(str,sizeof(str),"[ AFK ]"r" %s "g"%s "r"odeel na chvíli od klávesnice.",Players(playerid),Jmeno(playerid));
	}
	SetPVarInt(playerid,"AFKWL",GetPlayerWantedLevel(playerid));
	new Float:Health;
	GetPlayerHealth(playerid,Health);
	if(Health <= 100)
	{
		SetPVarFloat(playerid,"AFKHP",Health);
	}
	SetPlayerHealth(playerid,1000000);
	SetPlayerWantedLevel(playerid,0);
	TogglePlayerControllable(playerid,false);
	SCMTA(green,str);
	SetPVarString(playerid,"afkName",Jmeno(playerid));
	new pName[MAX_PLAYER_NAME+1];
	GetPlayerName(playerid,pName,MAX_PLAYER_NAME);
	strins(pName,"[AFK]",0);
	SetPlayerName(playerid,pName);
   	AFK[playerid] = true;
	UseDuvod[playerid] = false;
	TypeAFK[playerid] = false;

	return 1;
}
*/
//============================================================================//
CMD:object(playerid,params[])
{
	SCMTOAA("object")
	IsNoEventer(playerid)
	if(pStunt[playerid][sStuntID] != -1) return SM(playerid,"Kdy plní stunt, nemùe pouít tento pøíkaz");
	if(Object[playerid][MAX_OBJECTS_EX-1] != 0) return SM(playerid,"U si vytvoøil maximální poèet objektù ! "g"/resetobjects "w"!");
	ShowModelSelectionMenu(playerid,objectlist,"Vyber object");
	return 1;
}

public OnPlayerModelSelection(playerid, response, listid, modelid)
{
	if(listid == objectlist)
	{
	    if(response)
	    {
			if(modelid != 19222)
			{
			    new Float:X,Float:Y,Float:Z,Float:Angle;
				GetPlayerPos(playerid,X,Y,Z);
				if(!IsPlayerInAnyVehicle(playerid))
				{
					GetPlayerFacingAngle(playerid,Angle);
				}
				else
				{
					GetVehicleZAngle(GetPlayerVehicleID(playerid),Angle);
				}
				for(new i;i < MAX_OBJECTS_EX;i++)
				{
					if(Object[playerid][i] == 0)
					{
						Object[playerid][i] = CreateObject(modelid,X + 8*floatcos(90+Angle, degrees), Y+ 8*floatsin(90-Angle, degrees),Z,0,0,Angle);
						ObjectsIDS[playerid][i] = modelid;
						SetPVarInt(playerid,"EObjectID",i);
						EditObject(playerid,Object[playerid][i]);
						format(str,sizeof(str),"Object (Model: ~y~%d~w~ / ID: ~y~%d~w~/~r~%d~w~) uspesne ~g~vytvoren",modelid,i,MAX_OBJECTS_EX);
						CreateInfoBox(playerid,str,5);
						break;
					}
					else
					{
						continue;
					}
				}
			}
			else SPD(playerid,UNNAMED+174,DIALOG_STYLE_INPUT,"Vlastní Object","Zadejete ID objectu, který chcete vytvoøit","Zadat","Zavøít");
	    }
	}
	return 1;
}
//============================================================================//
CMD:deleteobject(playerid,params[])
{
	IsNoEventer(playerid)
	new id;
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/deleteobject [ ID Objectu ]");
	if(id < 0 || id > MAX_OBJECTS_EX) return SM(playerid,"Chybnì zadané ID");
	if(Object[playerid][id] == 0) return SM(playerid,"Object s tímto ID není vytvoøen");
	DestroyObject(Object[playerid][id]);
	Object[playerid][id] = 0;
	DestroyDynamic3DTextLabel(ObjectLabel[playerid][id]);
	format(str,sizeof(str),"Object ID: ~r~%d ~w~model ~r~%d ~w~odstranen",id,ObjectsIDS[playerid][id]);
	CreateInfoBox(playerid,str,3);
	if(CountObjects(playerid) == 0)
	    MapEdit[playerid] = -1;
	return 1;
}
//============================================================================//
CMD:setobjectsnow(playerid,params[])
{
	new month,day,year,id;
	getdate(year,month,day);
	if(month != 12) return SM(playerid,"Tento pøíkaz jde pouít pouze o vánocích");
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	if(sscanf(params,"i",id)) return SM(playerid,"Pouití: "r"/setobjectrot [ ID Objectu ]");
	if(id < 0 || id > MAX_OBJECTS) return SM(playerid,"Chybnì zadané ID");
	SetObjectMaterial(id, 0, 17944, "lngblok_lae2", "white64bumpy", 0xFFFFFFFF);
	SM(playerid,"Objek zasnìen");
	return 1;
}
//============================================================================//
CMD:setobjectrot(playerid,params[])
{
	IsNoEventer(playerid)
	new id,Float:rPos[3] = {360.0,...};
	if(sscanf(params,"ifff",id,rPos[0],rPos[1],rPos[2])) return SM(playerid,"Pouití: "r"/setobjectrot [ ID Objectu ] [ rX ] [ rY ] [ rZ ]");
	if(id < 0 || id > MAX_OBJECTS_EX) return SM(playerid,"Chybnì zadané ID");
	if(Object[playerid][id] == 0) return SM(playerid,"Object s tímto ID není vytvoøen");
	SetObjectRot(Object[playerid][id],rPos[0],rPos[1],rPos[2]);
	format(str,sizeof(str),"Rotace objectu: ~r~%d ~w~upravena~n~~n~~r~%0.3f,%0.3f,%0.3f",id,rPos[0],rPos[1],rPos[2]);
	CreateInfoBox(playerid,str,4);
	return 1;
}
//============================================================================//
CMD:resetobjects(playerid,params[])
{
	IsNoEventer(playerid)
	for(new i; i < MAX_OBJECTS_EX; i ++)
	{
		DestroyObject(Object[playerid][i]);
		Object[playerid][i] = 0;
		DestroyDynamic3DTextLabel(ObjectLabel[playerid][i]);
	}
	MapEdit[playerid] = -1;
	CreateInfoBox(playerid,"Vsechny objecty uspesne zniceny",5);
	return 1;
}
//============================================================================//
CMD:padak(playerid,params[])
{
	SCMTOAA("padak")
	GivePlayerWeaponEx(playerid,46,1);
	CreateInfoBox(playerid,"Dostal si padak",5);
	return 1;
}
//============================================================================//
CMD:tune(playerid,params[])
{
	if(OnEvent[playerid] == true || RacePlayer[playerid]!= -1) return SM(playerid,"Teï nemùete pouít tento pøíkaz");
	return 0;
}
//============================================================================//
CMD:tban(playerid,params[])
{
	new id,duvod[144],variable,value,ip[16],query[800],text[20],date,signature[24+1];
	SCMTOAA("tban")
	IsNoModerator(playerid)
	signature = GetPlayerSign(playerid);
	if(!sscanf(params,"iciz",id,variable,value,duvod))
	{
    	if(value < 1 || value > 1000) return SM(playerid,"Rozmezí hodnoty je "r"1 - 1000 "w"!");
		if(strlen(duvod) > 100) return SM(playerid,"Zadal si pøíli dlouhý dùvod");
		if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
		if(!strlen(duvod)) return SM(playerid,"Pouití: "r"/tban [ ID/IP ] [ m/h/d/t/n ] [ Hodnota ] [ Dùvod ]");
		if(Admin[id] > 0) return SM(playerid,"Administrátora nelze zabanovat");
		new Cache:cache;
		mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Bans` WHERE `IP`='%s'",GetIP(id));
		cache = mysql_query(mysql,query);
		if(cache_get_row_count(mysql))
		{
		    cache_delete(cache,mysql);
		    SM(playerid,"Hráè s touto IP u je zabanován");
		    return 1;
		}
		cache_delete(cache,mysql);
		if(variable == 'm')
		{
		    date = gettime()+60*value;
			format(text,sizeof(text),"minut");
		}
		else if(variable == 'h')
		{
		    date = gettime()+60*60*value;
			format(text,sizeof(text),"hodin");
		}
		else if(variable == 'd')
		{
		    date = gettime()+60*60*24*value;
			format(text,sizeof(text),"dní");
		}
		else if(variable == 't')
		{
		    date = gettime()+60*60*24*7*value;
			format(text,sizeof(text),"týdnù");
		}
		else if(variable == 'n')
		{
		    date = gettime()+60*60*24*30*value;
			format(text,sizeof(text),"mìsícù");
		}
		else
		{
		    SM(playerid,"Chybnì zadaný znak");
		    return 0;
		}
		if(Admin[playerid] == 2)
		{
			if(date - gettime() > 60*60*336) return SM(playerid,"Mùe zabanovat hráèe maximálnì na 336 hodin");
		}
		format(str,sizeof(str),"%s "w"%s "r"%s hráèe "w"%s "r"na "w"%d "r"%s",Players(playerid),Jmeno(playerid),SexWord(playerid,"zabanoval","zabanovala"),Jmeno(id),value,text);
		SCMTA(red,str);
		format(str,sizeof(str),"[ Dùvod: "w"%s "r"]",duvod);
		SCMTA(red,str);
		mysql_format(mysql,query,sizeof(query),"INSERT INTO `Bans` (`Nick`,`IP`,`Admin`,`Sign`,`Reason`,`Start`,`End`) VALUES ('%e','%s','%e','%e','%e','%d','%d')",Jmeno(id),GetIP(id),Jmeno(playerid),signature,duvod,gettime(),date);
		mysql_query(mysql,query,false);
		SpecialTBan(id,Jmeno(playerid),duvod,date,signature);
		KickPlayerAfterTime(id,500);
	}
	else if(!sscanf(params,"zciz",ip,variable,value,duvod))
	{
	    new Cache:cache;
	    if(value < 1 || value > 1000) return SM(playerid,"Rozmezí hodnoty je "r"1 - 1000 "w"!");
		if(strlen(ip) > 16) return SM(playerid,"Zadal si pøíli dlouhou IP");
		if(strlen(duvod) > 100) return SM(playerid,"Zadal si pøíli dlouhý dùvod");
		if(!strlen(duvod)) return SM(playerid,"Pouití: "r"/tban [ ID/IP ] [ m/h/d/t/n ] [ Hodota ] [ Dùvod ]");
		mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Accounts` WHERE `IP`='%s'",ip);
		cache = mysql_query(mysql,query);
		if(!cache_get_row_count(mysql))
		{
			cache_delete(cache,mysql);
			SM(playerid,"Hráè s touto IP neexistuje");
			return 1;
		}
		cache_delete(cache,mysql);
		mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Bans` WHERE `IP`='%s'",ip);
		cache = mysql_query(mysql,query);
		if(cache_get_row_count(mysql))
		{
		    cache_delete(cache,mysql);
		    SM(playerid,"Hráè s touto IP u je zabanován");
		    return 1;
		}
		cache_delete(cache,mysql);
		if(variable == 'm')
		{
		    date = gettime()+60*value;
			format(text,sizeof(text),"minut");
		}
		else if(variable == 'h')
		{
		    date = gettime()+60*60*value;
			format(text,sizeof(text),"hodin");
		}
		else if(variable == 'd')
		{
		    date = gettime()+60*60*24*value;
			format(text,sizeof(text),"dní");
		}
		else if(variable == 't')
		{
		    date = gettime()+60*60*24*7*value;
			format(text,sizeof(text),"týdnù");
		}
		else if(variable == 'n')
		{
		    date = gettime()+60*60*24*30*value;
			format(text,sizeof(text),"mìsícù");
		}
		else
		{
		    SM(playerid,"Chybnì zadaný znak");
		    return 0;
		}
		if(Admin[playerid] == 2)
		{
			if(date - gettime() > 60*60*24) return SM(playerid,"Mùe zabanovat hráèe maximálnì na 24 hodin");
		}
	    new nick[24];
	    format(nick,sizeof(nick),GetLastIpNick(ip));
		format(str,sizeof(str),"%s "r"%s "w"%s ip "g"%s {0077FF}(%s) "w"na "g"%d %s",Players(playerid),Jmeno(playerid),SexWord(playerid,"zabanoval","zabanovala"),ip,nick,value,text);
		SendAdminMessage(str);
		mysql_format(mysql,query,sizeof(query),"INSERT INTO `Bans` (`Nick`,`IP`,`Admin`,`Sign`,`Reason`,`Start`,`End`) VALUES ('%e','%s','%e','%e','%e','%d','%d')",nick,ip,Jmeno(playerid),signature,duvod,gettime(),date);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"INSERT INTO `Prestupky` (`Nick`,`IP`,`Type`,`Admin`,`Sign`,`Reason`,`Time`,`EndTime`) VALUES ('%e','%s','%d','%e','%e','%e','%d','%d')",nick,ip,TYPE_TBAN,Jmeno(playerid),signature,duvod,gettime(),date);
		mysql_query(mysql,query,false);
	}
	else
	{
		SM(playerid,"Pouití: "r"/tban [ ID/IP ] [ m/h/d/t/n ] [ Hodota ] [ Dùvod ]");
	}
	return 1;
}
//============================================================================//
CMD:ao(playerid,params[])
{
	SCMTOAA("ao")
	IsNoAdmin(playerid)
	if(AutRepair == 1) return SM(playerid,"Je zaplá automatická oprava vozidel");
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(IsPlayerInAnyVehicle(i))
		{
		    RepairVehicle(GetPlayerVehicleID(i));
		}
	}
	format(str,sizeof(str),"%s "w"%s "r"%s vozidla vem hráèùm na serveru.",Players(playerid),Jmeno(playerid),SexWord(playerid,"opravil","opravila"));
	SCMTA(red,str);
	return 1;
}
//============================================================================//
CMD:gm(playerid,params[])
{
	SCMTOAA("gm")
	new cash,id;
	IsNoAdmin(playerid)
	if(sscanf(params,"ii",id,cash)) return SM(playerid,"Pouij: "r"/gm [ ID ] [ Èástka ]");
	IsNoConnected(id)
	if(Admin[playerid] < 5)
	{
	    if(id == playerid) return SM(playerid,"Nezneuívej admin práv");
	}
	else if(Admin[playerid] > 3)
	{
		if(id == playerid)
		{
			format(str,sizeof(str),"Dal sis na svùj úèet "g"%s$",Split(cash));
	    	SM(playerid,str);
	    	format(str,sizeof(str),"Od Administrátora %s",Jmeno(playerid));
			GiveMoney(id,cash,str);
			return 1;
		}
	}
	format(str,sizeof(str),"Od Administrátora %s",Jmeno(playerid));
	GiveMoney(id,cash,str);
	format(str,sizeof(str),"%s "r"%s "w"dal hráèi "r"%s "w"èásku "g"%s$",Players(playerid),Jmeno(playerid),Jmeno(id),Split(cash));
	SendAdminMessage(str);
	format(str,sizeof(str),"%s "r"%s "w"Vám dal èásku "g"%s$",Players(playerid),Jmeno(playerid),Split(cash));
	SM(id,str);
	return 1;
}
//============================================================================//
CMD:ovladani(playerid,params[])
{
	SCMTOAA("ovladani")
	if(!IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Nejsi ve vozidle");
	if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return SM(playerid,"Nejsi øídiè vozidla");
	new DIALOG_OVLADANI[1000];
	strcat(DIALOG_OVLADANI,""g"Zapnout "w"Motor\n"r"Vypnout "w"Motor\n");
	strcat(DIALOG_OVLADANI,""g"Zapnout "w"Svìtla\n"r"Vypnout "w"Svìtla\n");
	strcat(DIALOG_OVLADANI,""g"Zapnout "w"Alarm\n"r"Vypnout "w"Alarm\n");
	strcat(DIALOG_OVLADANI,""g"Otevøít "w"Kapotu\n"r"Zavøit "w"Kapotu\n");
	strcat(DIALOG_OVLADANI,""g"Otevøit "w"Kufr\n"r"Zavøít "w"Kufr\n");
	SPD(playerid,UNNAMED+21,DIALOG_STYLE_LIST,"Ovládání Vozidla",DIALOG_OVLADANI,"Vybrat","Zruit");
	return 1;
}
//============================================================================//
CMD:zbrane(playerid,params[])
{
	SCMTOAA("zbrane")
	JailCmdBlock(playerid);
	if(InDM[playerid] != -1) return SM(playerid,"V DM si nemùe vzít zbranì");
	if(OnEvent[playerid] == true && Admin[playerid] == 0) return SM(playerid,"Na eventu si nemùe vzít zbranì");
	SPD(playerid,UNNAMED+14,DIALOG_STYLE_LIST,"Zbranì",""r"P"w"istole\n"r"B"w"rokovnice\n"r"Ú"w"toèné puky\n"r"S"w"amopaly\n"r"O"w"statní\n"c"O"w"dzbrojit se","Vybrat","Zruit");
	CancelAntiSK(playerid,true);
	return 1;
}
//============================================================================//
CMD:vip(playerid,params[])
{
	SCMTOAA("vip")
	new DIALOG_VIP[10000];
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	new bool: IsAnyVIPConnected = false;
	if(Admin[playerid] == 0)
	{
	    strcat(DIALOG_VIP,"Nick\t"w"Titul\n");
	}
	else
	{
	    strcat(DIALOG_VIP,"Nick\t"w"Titul\t"w"Expirace\n");
	}
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(IsPlayerConnected(i) && !IsPlayerNPC(i))
	    {
			if(AFK[i] == false)
			{
				if(vip[i] > 0)
				{
				    format(dfile,sizeof(dfile),USER_FILES,Jmeno(i));
			    	format(str,sizeof(str),"{%06x}%s(%d)\t{%s}%s\t{BFFF00}%s\n",GetPlayerColor(i) >>> 8,Jmeno(i),i,DOF2_GetString(dfile,"BarvaTitulu"),DOF2_GetString(dfile,"Prefix"),DATE(DOF2_GetInt(dfile,"VIP_vyprsi")));
					strcat(DIALOG_VIP,str);
	   				IsAnyVIPConnected = true;
				}
			}
		}
	}
	if(IsAnyVIPConnected == false) return SPD(playerid,999,DIALOG_STYLE_MSGBOX,"On Line VIP Hráèi","Na serveru není online ádný vip hráè","Zavøít","");
	else SPD(playerid,999,DIALOG_STYLE_TABLIST_HEADERS,"On Line VIP Hráèi",DIALOG_VIP,"Zavøít","");
	return 1;
}
//============================================================================//
CMD:umeni(playerid,params[])
{
	SCMTOAA("umeni")
	SPD(playerid,UNNAMED+23,DIALOG_STYLE_LIST,"Bojová Umìní","Normální\nBox\nKung Fu\nKneehead\nGrabkick\nElbow","Vybrat","Zruit");
	return 1;
}
//============================================================================//
CMD:chlast(playerid,params[])
{
	SPD(playerid,UNNAMED+20,DIALOG_STYLE_LIST,"Chlast","Pivo\nVíno\nSprunk\nCigareta\n"r"Alkoholová Droga\n"g"Lék na alkohol","Vybrat","Zrut");
	return 1;
}
//============================================================================//
CMD:setaskin(playerid,params[])
{
	new skinid,id;
	IsNoAdmin(playerid)
	if(sscanf(params,"ii",id,skinid)) return SM(playerid,"Pouij "r"/setaskin [ ID ] [ ID Skinu ]");
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(skinid < 0) return SM(playerid,"Chybnì zadané ID");
	if(OnEvent[playerid] == false && RacePlayer[playerid] < -1)
	{
		TogglePlayerControllable(playerid,true);
	}
	SetPlayerSkin(id,skinid);
	format(str,sizeof(str),"Nastavil jste hráèi "g"%s "w"doèasný skin [ID: "r"%d"w"]",Jmeno(id),skinid);
	SM(playerid,str);
	if(id != playerid)
	{
		format(str,sizeof(str),"%s "g"%s "w"Vám nastavil doèasný skin",Players(playerid),Jmeno(playerid));
		SM(id,str);
	}
	return 1;
}
//============================================================================//
CMD:setskin(playerid,params[])
{
	new skinid;
	IsNoVIP(playerid)
	if(OnEvent[playerid] == true) return SM(playerid,"Na eventu si nemùe zmìnit skin");
	if(sscanf(params,"i",skinid)) return SM(playerid,"Pouij "r"/setskin [ ID Skinu ]");
	if(skinid < 0 || skinid > 311) return SM(playerid,"Rozmezí skinù je 0 - 311");
	SetPlayerSkinEx(playerid,skinid);
	if(OnEvent[playerid] == false && RacePlayer[playerid] < -1)
	{
		TogglePlayerControllable(playerid,true);
	}
	format(str,sizeof(str),"Nastavil jste si skin [ID: ~r~%d~w~]",skinid);
	return 1;
}
//============================================================================//
CMD:vw(playerid,params[])
{
	SCMTOAA("vw")
	new vwid;
	IsNoEventer(playerid)
	if(sscanf(params,"i",vwid)) return SM(playerid,"Pouij: "r"/vw [ World ID ]");
	if(IsPlayerInAnyVehicle(playerid))
	{
	    new car = GetPlayerVehicleID(playerid);
	    for(new i; i <= GetPlayerPoolSize(); i ++)
			if(IsPlayerInAnyVehicle(i) && GetPlayerVehicleID(i) == car)
			    SetPlayerVirtualWorld(i,vwid);
	    SetVehicleVirtualWorld(car,vwid);
	}
	else
	{
	    SetPlayerVirtualWorld(playerid,vwid);
	}
	if(vwid == 0)
	{
	    if(GetPlayerSpeed(playerid) > 221)
	    {
	        if(IsPlayerInAnyVehicle(playerid))
	        {
	            SetVehicleVelocity(GetPlayerVehicleID(playerid),0,0,0);
	        }
	    }
	}
    format(str,sizeof(str),""sb"%s "g"%s "sb"se pøesunul do virtual worldu "g"%d",Players(playerid),Jmeno(playerid),vwid);
   	SendAdminMessage(str);
	return 1;
}
//============================================================================//
CMD:vsave(playerid,params[])
{
	SCMTOAA("load")
	IsNoVIP(playerid)
	if(IsPlayerInSpecialProperty(playerid)) return SM(playerid,"Tady nemùete pouít tento pøíkaz");
	if(RacePlayer[playerid] != -1) return CreateInfoBox(playerid,"V ~y~zavode ~r~nemuzes ~w~pouzit tento prikaz",5);
	if(InDM[playerid] != -1) return SM(playerid,"V DM si nemùe uloit pozici "r"/leave");
	if(Hitted[playerid] > 0) return SM(playerid,"V boji si nemùe uloit soukromou pozici");
	if(GetPlayerState(playerid) == PLAYER_STATE_WASTED) return SM(playerid,"V boji si nemùe uloit soukromou pozici");
	if(ViewMode[playerid] == 1) return SM(playerid,"V reimu náhledu nemùe pouít tento pøíkaz");
	new Float:X,Float:Y,Float:Z,Float:Angle,interier;
	GetPlayerPos(playerid,X,Y,Z);
	GetPlayerFacingAngle(playerid,Angle);
	interier = GetPlayerInterior(playerid);
	if(IsPlayerInAnyVehicle(playerid))
	{
	    GetVehicleZAngle(GetPlayerVehicleID(playerid),Angle);
	}
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	DOF2_SetFloat(dfile,"LoadX",X);
	DOF2_SetFloat(dfile,"LoadY",Y);
	DOF2_SetFloat(dfile,"LoadZ",Z);
	DOF2_SetFloat(dfile,"LoadAngle",Angle);
	DOF2_SetInt(dfile,"LoadInt",interier);
    DOF2_SaveFile();
	CreateInfoBox(playerid,"Ulozil sis soukromou pozici pro ~g~/vload",6);
	return 1;
}
//============================================================================//
CMD:hidecar(playerid,params[])
{
	SCMTOAA("hidecar")
	IsNoVIP(playerid)
	if(OnEvent[playerid] == true) return SM(playerid,"Na eventu nemùe pouít tento pøíkaz");
	if(RacePlayer[playerid] != -1) return SM(playerid,"V závodì nemùe pouít tento pøíkaz");
	if(!IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Nejsi ve vozidle");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SM(playerid,"Nejsi øidiè vozidla");
	new car = GetPlayerVehicleID(playerid);
	LinkVehicleToInterior(car,GetPlayerInterior(playerid)+1);
	CreateInfoBox(playerid,"Vozidlo ~g~zneviditelneno",3);
	return 1;
}
//============================================================================//
CMD:unhidecar(playerid,params[])
{
	SCMTOAA("unhidecar")
	IsNoVIP(playerid)
	if(OnEvent[playerid] == true) return SM(playerid,"Na eventu nemùe pouít tento pøíkaz");
	if(RacePlayer[playerid] != -1) return SM(playerid,"V závodì nemùe pouít tento pøíkaz");
	if(!IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Nejsi ve vozidle");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SM(playerid,"Nejsi øidiè vozidla");
	new car = GetPlayerVehicleID(playerid);
	LinkVehicleToInterior(car,GetPlayerInterior(playerid));
	CreateInfoBox(playerid,"Vozidlo ~r~zviditelneno",3);
	return 1;
}
//============================================================================//
CMD:vload(playerid,params[])
{
	SCMTOAA("vload")
	IsNoVIP(playerid)
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	CreateWarp(playerid,DOF2_GetFloat(dfile,"LoadX"),DOF2_GetFloat(dfile,"LoadY"),DOF2_GetFloat(dfile,"LoadZ"),"na","Soukromou Pozici",DOF2_GetInt(dfile,"LoadInt"),DOF2_GetInt(dfile,"LoadAngle"));
	return 1;
}
//============================================================================//
CMD:setloc(playerid,params[])
{
	JailCmdBlock(playerid);
	if(blockplayerpos == true) return SM(playerid,"Tento pøíkaz je momentálnì vypnutý");
	if(IsPlayerInSpecialProperty(playerid)) return SM(playerid,"Tady nemùete pouít tento pøíkaz");
	if(InDM[playerid] != -1) return SM(playerid,"V DM nemùe uloit veøejnou pozici "r"/leave");
	if(Hitted[playerid] > 0) return SM(playerid,"V boji nemùe uloit veøejnou pozici");
	if(GetPlayerState(playerid) == PLAYER_STATE_WASTED) return SM(playerid,"V boji nemùe uloit veøejnou pozici");
	if(ViewMode[playerid] == 1) return SM(playerid,"V reimu náhledu nemùe pouít tento pøíkaz");
	GetPlayerPos(playerid,XXX,YYY,ZZZ);
	int = GetPlayerInterior(playerid);
	DOF2_SetFloat(CONFIG,"TelX",XXX);
	DOF2_SetFloat(CONFIG,"TelY",YYY);
	DOF2_SetFloat(CONFIG,"TelZ",ZZZ);
	DOF2_SetInt(CONFIG,"TelInt",int);
    DOF2_SaveFile();
	CreateInfoBox(playerid,"Ulozil si verejnou pozici pro ~b~/teleport",6);
	format(str,sizeof(str),"~w~%s ~g~%s ~w~ulozil pozici pro ~r~/teleport~w~.",TDPlayers(playerid),Jmeno(playerid));
	AddStringToTextDraw(str);
	return 1;
}
//============================================================================//
CMD:teleport(playerid,params[])
{
	if(blockplayerpos == true) return SM(playerid,"Tento pøíkaz je momentálnì vypnutý");
	CreateWarp(playerid,DOF2_GetFloat(CONFIG,"TelX"),DOF2_GetFloat(CONFIG,"TelY"),DOF2_GetFloat(CONFIG,"TelZ"),"na","/teleport",DOF2_GetInt(CONFIG,"TelInt"));
	return 1;
}
//============================================================================//
/*CMD:unhide(playerid,params[])
{
	SCMTOAA("unhide")
	IsNoVIP(playerid)
	if(hide[playerid] == false) return SM(playerid,"Nejsi skryt na mapì pouij: "r"/hide");
	hide[playerid] = false;
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	Color[playerid] = HexToInt(DOF2_GetString(dfile,"BarvaNicku"));
	CreateInfoBox(playerid,"Odkryl si se z mapy",5);
	format(str,sizeof(str),"~w~%s~g~ %s ~w~se odkryl z mapy",TDPlayers(playerid),Jmeno(playerid));
	AddStringToTextDraw(str);
	return 1;
}
*///============================================================================//
CMD:hide(playerid,params[])
{
	SCMTOAA("hide")
	IsNoVIP(playerid)
	format(str,sizeof(str),"U si skryt na mapì [ "g"%s "w"]",SecondsToMinutes(Player[playerid][pHide]));
	if(Player[playerid][pHide] > 0) return SM(playerid,str);
	if(OnEvent[playerid] == true) return SM(playerid,"Na eventu nemùete pouít tento pøíkaz");
	SPD(playerid,UNNAMED+202,DIALOG_STYLE_MSGBOX,"Skrytí na mapì","Opravdu se chcete skrýt na mapì na "r"5 minut "w"za "g"30 bodù"w"?","Ano","Ne");
	return 1;
}
//============================================================================//
CMD:td(playerid,params[])
{
	SCMTOAA("td")
	HideTextDraws(playerid);
	return 1;
}
//============================================================================//
CMD:say(playerid,params[])
{
	SCMTOAA("say")
	new text[144];
	IsNoEventer(playerid)
	if(sscanf(params,"z",text)) return SM(playerid,"Pouij: "r"/say [ Text ]");
	if(strlen(text) < 0 || strlen(text) > 100) return SM(playerid,"Rozmezí textu je 1 - 100");
	format(str,sizeof(str),"%s "w"%s"r": %s",Players(playerid),Jmeno(playerid),text);
	SCMTA(red,str);
	return 1;
}
//============================================================================//
CMD:carmenu(playerid,params[])
{
	SCMTOAA("carmenu")
	JailCmdBlock(playerid);
	if(IsPlayerInSpecialProperty(playerid)) return SM(playerid,"V nemovitosti se nemùete pouít tento pøíkaz");
	if(pStunt[playerid][sStuntID] != -1) return SM(playerid,"Kdy plní stunt, nemùe pouít tento pøíkaz");
	if(IsPlayerSupplyRun(playerid)) return SM(playerid,"Právì plní misi, nemùe vykonat tuto akci");
	if(InDM[playerid] != -1) return SM(playerid,"V DM si nemùe spawnout vozidlo "r"/leave");
	if(RacePlayer[playerid] != -1) return CreateInfoBox(playerid,"V ~y~zavode ~r~nemuzes ~w~pouzit tento prikaz",5);
	if(IsPlayerHitted(playerid)) return SM(playerid,"V boji si nemùe spawnout vozidlo");
	if(OnEvent[playerid] == true)
	{
		if(Admin[playerid] == 0 )
		{
			if(RunEvent != 2) return SM(playerid,"Na eventu bez vozidel nelze tento pøíkaz pouít");
		}
	}
	CallRemoteFunction("ShowCarMenu","i",playerid);
	return 1;
}
//============================================================================//
CMD:special(playerid,params[])
{
	SCMTOAA("special")
	IsNoVIP(playerid)
	JailCmdBlock(playerid);
	if(pStunt[playerid][sStuntID] != -1) return SM(playerid,"Kdy plní stunt, nemùe pouít tento pøíkaz");
	if(IsPlayerSupplyRun(playerid)) return SM(playerid,"Právì plní misi, nemùe vykonat tuto akci");
	if(InDM[playerid] != -1) return SM(playerid,"V DM si nemùe spawnout vozidlo "r"/leave");
	if(RacePlayer[playerid] != -1) return CreateInfoBox(playerid,"V ~y~zavode ~r~nemuzes ~w~pouzit tento prikaz",5);
	if(IsPlayerHitted(playerid)) return SM(playerid,"V boji si nemùe spawnout vozidlo");
	if(WorkMission[playerid] > 0) return SM(playerid,"Pøi plnìní mise si nemùe spawnout vozidlo");
	if(OnEvent[playerid] == true && Admin[playerid] == 0) return SM(playerid,"Na eventu nemùete pouít tento pøíkaz");
	SPD(playerid,UNNAMED+7,DIALOG_STYLE_LIST,"Special Vehicles",""r"J"w"etpack\n"r"H"w"ydra\n"r"H"w"unter\n"r"R"w"hino","Vybrat","Zavøít");
	return 1;
}
//============================================================================//
CMD:flip(playerid,params[])
{
	SCMTOAA("flip")
	new Float:Angle;
	IsNoVIP(playerid)
	if(!IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Musí být ve vozidle");
	if(RacePlayer[playerid] != -1) return SM(playerid,"Na závodì se nemùe pøevrátit zpìt na kola");
	if(pStunt[playerid][sStuntID] != -1) return SM(playerid,"Kdy plní stunt, nemùe pouít tento pøíkaz");
	GetVehicleZAngle(GetPlayerVehicleID(playerid),Angle);
	SetVehicleZAngle(GetPlayerVehicleID(playerid),Angle);
	CreateInfoBox(playerid,"Vozidlo uspesne pretoceno zpet na kola",5);
	return 1;
}
//============================================================================//
CMD:color(playerid,params[])
{
	SCMTOAA("color")
	IsNoVIP(playerid)
	if(OnEvent[playerid]) return SM(playerid,"Na eventu nemùe pouít tento pøíkaz");
	SPD(playerid,UNNAMED+3,DIALOG_STYLE_LIST,"Barvy","Barva nicku\nBarva textu","Vybrat","Zavøít");
	return 1;
}
//============================================================================//
CMD:leave(playerid,params[])
{
	SCMTOAA("leave")
	if(GetPlayerState(playerid) == PLAYER_STATE_WASTED) return SM(playerid,"Tento pøíkaz nemùete pouít kdy jste mrtvý");
	if(OnEvent[playerid] == true)
	{
		CancelEvent(playerid,"/leave");
		LoadBeforeEventData(playerid);
	}
	else if(dPlayer[playerid][pDuelStatus] != -1)
	{
		new room = dPlayer[playerid][pDuelRoom];
		if(dPlayer[playerid][pDuelSpec] == -1)
		{
			format(str,sizeof(str),"%s opustil duel",Jmeno(playerid));
			ResetDuel(room,str);
		}
		else
		{
			DuelSpecOff(playerid);
			for(new i; i <= GetPlayerPoolSize(); i ++)
			    if(IPC(i) && dPlayer[i][pDuelRoom] == room)
			    {
			        format(str,sizeof(str),"%s "w"%s "co"pøestal sledovat tento duel",Players(playerid),Jmeno(playerid));
			        SCM(i,ORANGE,str);
			    }
		}
	}
	else if(InSumo[playerid] == true)
	{
	    if(SumoStart == true) return SM(playerid,"Sumo u je odstarotované");
		SumoStart = false;
		InSumo[playerid] = false;
		DestroyVehicle(SumoVehicle[playerid]);
		SumoVehicle[playerid] = 0;
		sumo = 0;
	    LoadBeforeEventData(playerid);
		SetPlayerVirtualWorld(playerid,0);
		KillTimer(SumoTimer[playerid]);
		SumoTimer[playerid] = 0;
		SumoTime = 0;
		format(str,sizeof(str),"%s "w"%s {5700E5}%s "w"/sumo "g"[ /leave ]",Players(playerid),Jmeno(playerid),SexWord(playerid,"opustil","opustila"));
		SCMTA(0x5700E5FF,str);
	    for(new i; i <= GetPlayerPoolSize(); i ++)
	    {
	        if(IPC(i) && !IsPlayerNPC(i))
	        {
				if(InSumo[i] == true)
				{
					SetPlayerVirtualWorld(i,0);
					InSumo[i] = false;
					DestroyVehicle(SumoVehicle[i]);
					SumoVehicle[i] = 0;
					KillTimer(SumoTimer[i]);
					SumoTimer[i] = 0;
					format(str,sizeof(str),"%s "w"%s {5700E5}%s "w"/sumo "g"[ Nedostatek hráèù ]",Players(i),Jmeno(i),SexWord(i,"opustil","opustila"));
					SCMTA(0x5700E5FF,str);
			    	LoadBeforeEventData(i);
				}
	        }
	    }
	}
	else if(RacePlayer[playerid] > -1)
	{
		PlayerCP[playerid] = 0;
		RaceSeconds[playerid] = 0;
		RaceMinutes[playerid] = 0;
		TextDrawHideForPlayer(playerid,Textdraw20);
		PlayerTextDrawHide(playerid,Textdraw22[playerid]);
		PlayerTextDrawHide(playerid,Textdraw23[playerid]);
		TextDrawHideForPlayer(playerid,Textdraw21);
		PlayerTextDrawHide(playerid,Textdraw24[playerid]);
		DisableRemoteVehicleCollisions(playerid,0);
	    RacePlayers[RacePlayer[playerid]]--;
	    DestroyVehicle(Ecar[playerid]);
	    Ecar[playerid] = 0;
	    SetPlayerVirtualWorld(playerid,0);
	    DisablePlayerRaceCheckpoint(playerid);
		if(RaceStart[RacePlayer[playerid]] == false)
		{
		    GivePoints(playerid,Race[RacePlayer[playerid]][RaceZapisne]);
		    format(str,sizeof(str),"%s %s back %d points from race",Players(playerid),Jmeno(playerid),Race[RacePlayer[playerid]][RaceZapisne]);
		    printEx(str);
		    Race[RacePlayer[playerid]][RaceWin] -= Race[RacePlayer[playerid]][RaceZapisne];
		}
		if(RacePlayers[RacePlayer[playerid]] <= 0)
	    {
			pozice[RacePlayer[playerid]] = 0;
			RaceReady[RacePlayer[playerid]] = false;
			RaceStart[RacePlayer[playerid]] = false;
			Race[RacePlayer[playerid]][RaceZapisne] = 0;
			RacePlayers[RacePlayer[playerid]] = 0;
			TimeToStartSeconds[RacePlayer[playerid]] = 0;
			Race[RacePlayer[playerid]][RaceWin] = 0;
	    }
		RacePlayer[playerid] = -1;
		format(str,sizeof(str),"%s "w"%s "sb"%s závod "g"[ /leave ]"sb".",Players(playerid),Jmeno(playerid),SexWord(playerid,"opustil","opustila"));
		SCMTA(sblue,str);
		LoadBeforeEventData(playerid);
	}
	else if(InDM[playerid] > -1)
	{
	    if(Hitted[playerid] > 0) return SM(playerid,"V boji nemùe opustit DeathMatch");
		format(str,sizeof(str),"%s "w"%s {E43F4D}%s DeathMatch "w"%s {E43F4D}( %d %s ) ( /dm )",Players(playerid),Jmeno(playerid),SexWord(playerid,"opustil","opustila"),DM[InDM[playerid]][DMName],DM[InDM[playerid]][DMPlayers]-1,PluralWord(DM[InDM[playerid]][DMPlayers]-1,"hráè","hráèi","hráèù"));
		SCMTA(0xE43F4DFF,str);
	    LeaveDM(playerid);
	}
	else if(WorkMission[playerid] > 0)
	{
		EndMission(playerid,"mise zruseny");
		Player[playerid][pZrusMisiTime] = 30;
	}
	else if(pStunt[playerid][sStuntID] != -1)
	{
	    LeaveStunt(playerid);
	    CreateInfoBox(playerid,"Opustil si stunt",3);
	}
	else if(IsPlayerSupplyRun(playerid))
	{
	    CallRemoteFunction("CancelSupplyRun","i",playerid);
	    SM(playerid,"Dovoz zásob zruen");
	}
	else SM(playerid,"Nejsi na eventu / duelu / sumu / závodu / DM / Misi / Stuntu");
	return 1;
}
//============================================================================//
CMD:setplayerteam(playerid,params[])
{
	IsNoEventer(playerid)
	new id,team;
	format(str,sizeof(str),"Pouij: "r"/setplayerteam [ ID ] [ TEAM (0-%d) ]",sizeof(TeamColors)-1);
	if(sscanf(params,"ii",id,team)) return SM(playerid,str);
	IsNoConnected(id)
	if(team < 0 || team > sizeof(TeamColors)-1) return SM(playerid,"Chybnì zadaný team");
	if(OnEvent[id] == false) return SM(playerid,"Hráè není na eventu");
	SetPlayerColor(id,TeamColors[team]);
	SetPlayerTeam(id,team);
	format(str,sizeof(str),"%s "w"%s {%06x}Vás pøesunul do teamu %d",Players(playerid),Jmeno(playerid),TeamColors[team] >>> 8,team+1);
	SCM(id,TeamColors[team],str);
	format(str,sizeof(str),"Pøesunul jste hráèe "w"%s {%06x}do teamu %d",Jmeno(id),TeamColors[team] >>> 8,team+1);
	SCM(playerid,TeamColors[team],str);
	return 1;
}
//============================================================================//
CMD:esetcolor(playerid,params[])
{
	IsNoEventer(playerid)
	new id,barva[20],color;
	if(sscanf(params,"iz",id,barva)) return SM(playerid,"Pouij: "r"/esetcolor [ ID ] [ HEX (formát: FFFFFF) ]");
	IsNoConnected(id)
	if(strlen(barva) != 6) return SM(playerid,"Chybnì zadaný kód barvy");
	if(OnEvent[id] == false) return SM(playerid,"Hráè není na eventu");
	format(barva,sizeof(barva),"%sFF",barva);
	color = HexToInt(barva);
	SetPlayerColor(id,color);
	format(str,sizeof(str),"%s "w"%s {%06x}vám zmìnil barvu nicku",Players(playerid),Jmeno(playerid), color >>> 8);
	SCM(id,color,str);
	format(str,sizeof(str),"Zmìnil jste hráèi "w"%s {%06x}barvu nicku",Jmeno(id), color >>> 8);
	SCM(playerid,color,str);
	return 1;
}
//============================================================================//
CMD:ekick(playerid,params[])
{
	SCMTOAA("ekick")
	new id,reason[145];
	IsNoEventer(playerid)
	if(sscanf(params,"iz",id,reason)) return SM(playerid,"Pouij: "r"/ekick [ ID ] [ Dùvod ]");
	IsNoConnected(id)
	if(OnEvent[id] == false) return SM(playerid,"Hráè není na eventu");
	if(strlen(reason) > 100) return SM(playerid,"Pøíli dlouhý dùvod");
	CancelEvent(id);
    LoadBeforeEventData(id);
	format(str,sizeof(str),"%s "w"%s "r"vyhodil hráèe "w"%s "r"z eventu.",Players(playerid),Jmeno(playerid),Jmeno(id));
	SCMTA(red,str);
	if(strlen(reason)){
	    format(str,sizeof(str),"[ Dùvod: "w"%s "r"]",reason);
	    SCMTA(red,str);
	}
	return 1;
}
//============================================================================//
CMD:mytime(playerid,params[])
{
	new hours,minutes;
	IsNoVIP(playerid)
	if(OnEvent[playerid] == true) return SM(playerid,"Na eventu nemùete pouít tento pøíkaz");
	if(sscanf(params,"ii",hours,minutes)) return SM(playerid,"Pouij: "r"/mytime [ Hodiny ] [ Minuty ]");
	if(hours < 0 || hours > 23) return SM(playerid,"Rozmezí hodin je 0 - 23");
	if(minutes < 0 || minutes > 59) return SM(playerid,"Rozmezí minut je 0 - 59");
	RealnyTime[playerid] = false;
	pMinutes[playerid] = minutes;
	pHours[playerid] = hours;
	format(str,sizeof(str),"~g~~h~%02d~w~:~g~~h~%02d",hours,minutes);
	PlayerTextDrawSetString(playerid,TDTime[playerid],str);
	SetPlayerTime(playerid,hours,minutes);
	format(str,sizeof(str),"Zmìnil jste si èas na "g"%02d:%02d",hours,minutes);
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:myweather(playerid,params[])
{
	new weather;
	IsNoVIP(playerid)
	if(OnEvent[playerid] == true) return SM(playerid,"Na eventu nemùete pouít tento pøíkaz");
	if(sscanf(params,"i",weather)) return SM(playerid,"Pouij: "r"/myweather [ ID Poèasí ]");
	switch(weather)
	{
	    case 0..50,100,250,2009:
	    {
			format(str,sizeof(str),"Zmìnil jste si poèasí na "g"%d",weather);
			SM(playerid,str);
			PlayerWeather[playerid] = weather;
			SetPlayerWeather(playerid,weather);
	    }
	    default: SM(playerid,"Chybnì zadané ID (0-50,100,250,2009)");
	}
	return 1;
}
//============================================================================//
CMD:ecas(playerid,params[])
{
	new hours;
	IsNoEventer(playerid)
	if(sscanf(params,"i",hours)) return SM(playerid,"Pouij: "r"/ecas [ Hodiny ]");
	if(hours < 0 || hours > 23) return SM(playerid,"Rozmezí hodin je 0 - 23");
	EventHour = hours;
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(IPC(i) && !IsPlayerNPC(i) && OnEvent[i] == true)
	    {
	        SetPlayerTime(i,hours,0);
	        format(str,sizeof(str),"%s "w"%s "r"%s èas na eventu "w"%02d:00"r".",Players(playerid),Jmeno(playerid),SexWord(playerid,"nastavil","nastavila"),hours);
	        SCM(i,red,str);
	    }
	}
	return 1;
}
//============================================================================//
CMD:epocasi(playerid,params[])
{
	new pocasi;
	IsNoEventer(playerid)
	if(sscanf(params,"i",pocasi)) return SM(playerid,"Pouij: "r"/epocasi [ ID Poèasí ]");
	switch(pocasi)
	{
	    case 0..50,100,250,2009:
	    {
			EventWeather = pocasi;
			for(new i; i <= GetPlayerPoolSize(); i ++)
			{
			    if(IPC(i) && !IsPlayerNPC(i) && OnEvent[i] == true)
			    {
			        SetPlayerWeather(i,pocasi);
			        format(str,sizeof(str),"%s "w"%s "r"%s poèasí na eventu.",Players(playerid),Jmeno(playerid),SexWord(playerid,"zmìnil","zmìnila"));
			        SCM(i,red,str);
			    }
			}
		}
		default: SM(playerid,"patné ID poèasí");
	}
	return 1;
}
//============================================================================//
CMD:cas(playerid,params[])
{
	new hours,minutes;
	IsNoModerator(playerid)
	if(sscanf(params,"ii",hours,minutes)) return SM(playerid,"Pouij: "r"/cas [ Hodiny ] [ Minuty ]");
	if(hours < 0 || hours > 23) return SM(playerid,"Rozmezí hodin je 0 - 23");
	if(minutes < 0 || minutes > 59) return SM(playerid,"Rozmezí minut je 0 - 59");
	minuty = minutes;
	hodiny = hours;
	format(str,sizeof(str),"~g~~h~%02d~w~:~g~~h~%02d",hours,minutes);
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
		if(RealnyTime[i] == false && pHours[i] == -1 && pMinutes[i] == -1 && OnEvent[playerid] == false)
		{
			SetPlayerTime(i,hours,minutes);
			PlayerTextDrawSetString(i,TDTime[i],str);
		}
	}
	format(str,sizeof(str),"%s "w"%s "r"zmìnil èas. [ %02d : %02d ]",Players(playerid),Jmeno(playerid),hours,minutes);
	SCMTA(red,str);
	return 1;
}
//============================================================================//
CMD:pocasi(playerid,params[])
{
	new weather;
	IsNoModerator(playerid)
	if(sscanf(params,"i",weather)) return SM(playerid,"Pouij: "r"/pocasi [ ID Poèasí ]");
	switch(weather)
	{
	    case 0..50,100,250,2009:
	    {
			format(str,sizeof(str),"%s "w"%s "r"zmìnil poèasí.",Players(playerid),Jmeno(playerid));
			SCMTA(red,str);
			serverweather = weather;
			for(new i; i <= GetPlayerPoolSize(); i ++)
			    if(IPC(i) && !IsPlayerNPC(i))
			        if(PlayerWeather[i] == -1 && OnEvent[playerid] == false)
			            SetPlayerWeather(i,weather);

	    }
	    default: SM(playerid,"Chybnì zadané ID (0-50,100,250,2009)");
	}
	return 1;
}
//============================================================================//
CMD:carcol(playerid,params[])
{
	new color1,color2;
	SCMTOAA("carcol")
	IsNoVIP(playerid)
	if(!IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Musí být ve vozidle");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SM(playerid,"Musí být øidiè");
	if(!sscanf(params,"ii",color1,color2))
	{
		ChangeVehicleColor(GetPlayerVehicleID(playerid),color1,color2);
		format(str,sizeof(str),"Barva vozidla zmenena: ~n~[ ~y~Barva 1: ~r~%d~w~ / ~y~Barva 2: ~r~%d~w~ ]",color1,color2);
	}
	else if(!sscanf(params,"i",color1))
	{
		color2 = 1;
		ChangeVehicleColor(GetPlayerVehicleID(playerid),color1,1);
		format(str,sizeof(str),"Barva vozidla zmenena: ~n~[ ~y~Barva 1: ~r~%d~w~ / ~y~Barva 2: ~r~1~w~ ]",color1);
	}
	else if(sscanf(params,"ii",color1,color2)) return SM(playerid,"Pouij: "r"/carcol [ Barva 1 ] [ Barva 2 ]");
	CreateInfoBox(playerid,str,8);
	for(new i; i < MAX_SLOTS; i ++)
	{
	    if(IsPlayerInVehicle(playerid,SavedCar[playerid][i]))
	    {
			ParkInfo[playerid][i][Color1] = color1;
			ParkInfo[playerid][i][Color2] = color2;
	    }
	}
	return 1;
}
//============================================================================//
CMD:oprava(playerid,params[])
{
	SCMTOAA("oprava")
	if(IsPlayerSupplyRun(playerid)) return SM(playerid,"Nyní nemùete pouít tento pøíkaz");
	if(OnEvent[playerid] == true) return SM(playerid,"Na eventu nemùe pouít tento pøíkaz");
	if(AutRepair == 1) return SM(playerid,"Je zaplá automatická oprava");
	if(RacePlayer[playerid] != -1) return SM(playerid,"Na závodì si nemùe opravit vozidlo");
	if(!IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Musí být ve vozidle");
	if(GetPlayerVehiclePancir(GetPlayerVehicleID(playerid)) > 1000) return SM(playerid,"Vozidlo s pancíøí nelze opravit");
	if(RepairTime[playerid] > 0)
	{
		format(str,sizeof(str),"Opravit vozidlo si znovu mùe za: "g"%02d "w": "g"%02d",RepairTime[playerid]/60,RepairTime[playerid]%60);
		SM(playerid,str);
		return 1;
	}
	if(vip[playerid] == 1)
	{
		RepairTime[playerid] = 30;
	}
	else if(vip[playerid] == 0)
	{
		RepairTime[playerid] = 60;
	}
    format(str,sizeof(str),"Oprava: ~y~%02d:%02d",RepairTime[playerid]/60,RepairTime[playerid]%60);
    TextDrawSetString(TDTimery[playerid][0],str);
	if(TD[playerid] == false)
	{
	    TextDrawShowForPlayer(playerid,TDTimery[playerid][0]);
	}
	SetTimerEx("UnBlockRepair",1000,false,"i",playerid);
	CreateInfoBox(playerid,"Vozidlo uspesne opraveno",5);
	RepairVehicle(GetPlayerVehicleID(playerid));
    format(str,sizeof(str),"~w~%s ~g~%s ~w~si %s vozidlo.",TDPlayers(playerid),Jmeno(playerid),SexWord(playerid,"opravil","opravila"));
	AddStringToTextDraw(str);
	return 1;
}
//============================================================================//
forward UnBlockRepair(playerid);

public UnBlockRepair(playerid)
{
	RepairTime[playerid] --;
	if(RepairTime[playerid] > 0)
	{
		SetTimerEx("UnBlockRepair",1000,false,"i",playerid);
	    format(str,sizeof(str),"Oprava: ~y~%02d:%02d",RepairTime[playerid]/60,RepairTime[playerid]%60);
	    TextDrawSetString(TDTimery[playerid][0],str);
	}
	else
	{
		SM(playerid,"Mùe si znovu opravit vozidlo");
		TextDrawHideForPlayer(playerid,TDTimery[playerid][0]);
	}
	return 1;
}
//============================================================================//
CMD:heal(playerid,params[])
{
	SCMTOAA("heal")
	IsNoVIP(playerid)
	if(OnEvent[playerid] == true) return SM(playerid,"Na eventu nemùe pouít tento pøíkaz");
	if(InDM[playerid] != -1) return SM(playerid,"V DM si nemùe doplnit ivoty");
	if(IsPlayerHitted(playerid)) return SM(playerid,"V boji si nemùe doplnit ivot");
	if(HealTime[playerid] > 0)
	{
		format(str,sizeof(str),"Zdraví si mùe znovu doplnit za: "g"%02d "w": "g"%02d",HealTime[playerid]/60,HealTime[playerid]%60);
		SM(playerid,str);
		return 1;
	}
	HealTime[playerid] = 60*5;
	format(str,sizeof(str),"Zivoty: ~y~%02d:%02d",HealTime[playerid]/60,HealTime[playerid]%60);
	TextDrawSetString(TDTimery[playerid][1],str);
	if(TD[playerid] == false)
	{
	    TextDrawShowForPlayer(playerid,TDTimery[playerid][1]);
	}
	SetTimerEx("UnBlockHeal",1000,false,"i",playerid);
	CreateInfoBox(playerid,"Zdravi uspesne doplneno",5);
	SetPlayerHealth(playerid,100);
	SetPlayerArmour(playerid,100);
    format(str,sizeof(str),"~w~%s ~g~%s ~w~si %s zdravi.",TDPlayers(playerid),Jmeno(playerid),SexWord(playerid,"doplnil","doplnila"));
	AddStringToTextDraw(str);
	return 1;
}
//============================================================================//
forward UnBlockHeal(playerid);

public UnBlockHeal(playerid)
{
	HealTime[playerid] --;
	if(HealTime[playerid] > 0)
	{
		SetTimerEx("UnBlockHeal",1000,false,"i",playerid);
	 	format(str,sizeof(str),"Zivoty: ~y~%02d:%02d",HealTime[playerid]/60,HealTime[playerid]%60);
		TextDrawSetString(TDTimery[playerid][1],str);
	}
	else
	{
		SM(playerid,"Mùe si znovu doplnit zdraví");
		TextDrawHideForPlayer(playerid,TDTimery[playerid][1]);
	}
	return 1;
}
//============================================================================//
CMD:radio(playerid,params[])
{
	SCMTOAA("radio")
	new RADIO_DIALOG[2000],bool: radio = false;
	strcat(RADIO_DIALOG,""g"Vlastní URL\t \t \n");
	radio = true;
	for(new i; i < MAX_RADIOS; i ++)
	{
		if(strlen(Radio[i][RadioName]) > 0)
		{
			format(str,sizeof(str),"%s\t[ {FF7B00}%s "w"]\t[ {00FFFF}Posluchaèù: %d "w"]\n",Radio[i][RadioName],Radio[i][RadioLang],Radio[i][RadioListeners]);
			strcat(RADIO_DIALOG,str);
		}
	}
	if(radio == true)
	{
		strcat(RADIO_DIALOG,""r"Vypnout rádio");
		SPD(playerid,UNNAMED+2,DIALOG_STYLE_TABLIST,"Rádia",RADIO_DIALOG,"Pøehrát","Zavøít");
	}
	else
	{
		SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Rádia","Na tomto serveru nejsou k dispozici ádná rádia","Zavøít","");
	}
	return 1;
}
//============================================================================//
CMD:adcar(playerid,params[])
{
	SCMTOAA("adcar")
	IsNoAdmin(playerid)
	for(new i; i < sizeof(acars); i ++)
	{
	    DestroyVehicle(acars[i]);
		acars[i] = 0;
	}
	CreateInfoBox(playerid,"Vsechna vozidla uspesne znicena",5);
	return 1;
}
//============================================================================//
CMD:acar(playerid,params[])
{
	SCMTOAA("acar")
	new carid,Float:X,Float:Y,Float:Z,Float:Angle;
	IsNoAdmin(playerid)
	if(sscanf(params,"i",carid)) return SM(playerid,"Pouij: "r"/acar [ ID vozidla ]");
	if(carid < 400 || carid > 611) return SM(playerid,"Rozmezí aut je 400 - 611");
	if(acars[49] != 0) return SM(playerid,"U je vytvoøen maximalní poèet vozidel "r"/adcar");
	GetPlayerPos(playerid, Float:X,Float:Y, Float:Z);
	GetPlayerFacingAngle(playerid,Float:Angle);
	for(new i; i < 50; i++)
	{
		if(acars[i] == 0)
		{
			acars[i] = CreateVehicle(carid,X + 4*floatcos(90+Angle, degrees), Y+ 4*floatsin(90-Angle, degrees),Z,Angle+90,-1,-1,-1);
		    format(str,sizeof(str),""b"UN-%d",acars[i]);
		    SetVehicleNumberPlate(acars[i],str);
			SetVehicleToRespawn(acars[i]);
			SetVehicleVirtualWorld(acars[i],GetPlayerVirtualWorld(playerid));
			LinkVehicleToInterior(acars[i],GetPlayerInterior(playerid));
			break;
		}
		else
		{
	    continue;
		}
	}
	LinkVehicleToInterior(carid,GetPlayerInterior(playerid));
	SetVehicleVirtualWorld(carid,GetPlayerVirtualWorld(playerid));
	format(str,sizeof(str),"Vozidlo (ID: ~r~%d~w~): vytvoreno",carid);
	CreateInfoBox(playerid,str,5);
	return 1;
}
//============================================================================//
CMD:getteam(playerid,params[])
{
	IsNoEventer(playerid)
	new team,Float:X,Float:Y,Float:Z,players;
	format(str,sizeof(str),"Pouij: "r"/getteam [ 0 - %d ]",sizeof(TeamColors)-1);
	if(sscanf(params,"i",team)) return SM(playerid,str);
	if(team < 0 || team > sizeof(TeamColors)-1) return SM(playerid,"Tento team neexistuje");
	GetPlayerPos(playerid,X,Y,Z);
	format(str,sizeof(str),"%s "w"%s {%06x}si k sobì portnul vá team",Players(playerid),Jmeno(playerid),TeamColors[team] >>> 8);
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(IPC(i) && !IsPlayerNPC(i))
	    {
		    if(OnEvent[i] == true)
		    {
				if(PlayerTeam[i] == team)
				{
				    if(i != playerid)
				    {
					    players ++;
					    SetPlayerPos(i,X+(EventPlayers/2)-random(5)+random(5),Y+(EventPlayers/2)-random(5)+random(5),Z);
					    SCM(i,TeamColors[team],str);
					}
				}
		    }
		}
	}
	if(players > 0)
	{
		format(str,sizeof(str),"%s "g"%s "w"si k sobì portnul team [ {%06x}%s "w"]",Players(playerid),Jmeno(playerid),TeamColors[team] >>> 8,TeamNames[team]);
		SendAdminMessage(str);
	}
	else SM(playerid,"V tomto teamu se nenachází ádný hráè");
	return 1;
}
//============================================================================//
CMD:get(playerid,params[])
{
	SCMTOAA("get")
	new id,Float:X,Float:Y,Float:Z;
	IsNoEventer(playerid)
	if(sscanf(params,"i",id)) return SM(playerid,"Pouij: "r"/get [ ID ]");
	IsNoConnected(id)
	if(Admin[playerid] < 5)
	{
		if(Admin[id] > 0) return SM(playerid,"Administrátora nelze k sobì portnout");
	}
	if(IsPlayerInSpecialProperty(id)) return SM(playerid,"Hráè je v nemovitosti nelze ho portnout");
	GetPlayerPos(playerid,X,Y,Z);
	if(!IsPlayerInAnyVehicle(id))
	{
		SetPlayerPos(id,X,Y,Z);
		SetPlayerInterior(id,GetPlayerInterior(playerid));
		SetPlayerVirtualWorld(id,GetPlayerVirtualWorld(playerid));
	}
	else
	{
		SetPlayerInterior(id,GetPlayerInterior(playerid));
		SetPlayerVirtualWorld(id,GetPlayerVirtualWorld(playerid));
		SetVehiclePos(GetPlayerVehicleID(id),X+1,Y,Z);
		LinkVehicleToInterior(GetPlayerVehicleID(id),GetPlayerInterior(playerid));
		SetVehicleVirtualWorld(GetPlayerVehicleID(id),GetPlayerVirtualWorld(playerid));
	}
	format(str,sizeof(str),"Portnul si k sobì hráèe "g"%s",Jmeno(id));
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:goto(playerid,params[])
{
	SCMTOAA("goto")
	new id,Float:X,Float:Y,Float:Z;
	IsNoEventer(playerid)
	if(IsPlayerInSpecialProperty(playerid)) return SM(playerid,"V nemovitosti se nemùete odwarpovat");
	if(sscanf(params,"i",id)) return SM(playerid,"Pouij: "r"/goto [ ID ]");
	IsNoConnected(id)
	GetPlayerPos(id,X,Y,Z);
	if(!IsPlayerInAnyVehicle(playerid))
	{
		SetPlayerPos(playerid,X,Y+1,Z);
		SetPlayerInterior(playerid,GetPlayerInterior(id));
		SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
	}
	else
	{
		SetPlayerInterior(playerid,GetPlayerInterior(id));
		SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
		SetVehiclePos(GetPlayerVehicleID(playerid),X+1,Y,Z);
		LinkVehicleToInterior(GetPlayerVehicleID(playerid),GetPlayerInterior(id));
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),GetPlayerVirtualWorld(id));
	}
	format(str,sizeof(str),"Portnul si se k hráèi "g"%s",Jmeno(id));
	SM(playerid,str);
	return 1;
}
//============================================================================//
CMD:events(playerid,params[])
{
	SCMTOAA("events")
	IsNoEventer(playerid)
	if(Event == 0) return SM(playerid,"ádný event neprobíhá");
	ShowPlayerEventSettings(playerid);
	return 1;
}
//============================================================================//
CMD:port(playerid,params[])
{
	SCMTOAA("port")
	if(portid == 0) return SM(playerid,"Port je vypnutý");
	if(IsPlayerInSpecialProperty(playerid)) return SM(playerid,"V nemovitosti se nemùete odwarpovat");
	if(IsPlayerInGangWar(playerid)) return SM(playerid,"V Gang Waru se nemùe portnout na event");
	if(PrisonTime[playerid]) return SM(playerid,"Ve vìzení se nemùe portnout na event");
	if(IsPlayerSupplyRun(playerid)) return SM(playerid,"Právì plní misi, nemùe vykonat tuto akci");
	if(InDM[playerid] != -1) return SM(playerid,"V DM se nemùe pøipojit do eventu "r"/leave");
	if(WorkMission[playerid] > 0) return SM(playerid,"U má nìco na práci "r"/zrusmisi");
	if(pStunt[playerid][sStuntID] != -1) return SM(playerid,"Kdy plní stunt, nemùe se pøipojit na event");
	EventColor[playerid] = random(sizeof(VehicleColoursTableRGBA));
    if(PlayerWeather[playerid] != -1)
		SetPlayerWeather(playerid,serverweather);
	if(OnEvent[playerid] == true)
	{
	    OnEvent[playerid] = false;
	    EventPlayers --;
	    if(RunEvent == 9)
	        PlayerTeams[PlayerTeam[playerid]] --;
		for(new i; i < sizeof(PlayerEventObject); i ++)
		{
		    DestroyDynamicObject(PlayerEventObject[i][playerid]);
		    PlayerEventObject[i][playerid] = 0;
		}
		if(EventPlayer[playerid] > -1)
		{
		    if(RunEvent == 6)
			{
		    	DerbyPos[EventPlayer[playerid]][4] = 0.0;
			}
			EventPlayer[playerid] = -1;
		}
	}
	else
	{
	    SaveBeforeEventData(playerid);
	}
	if(portid == 1)
	{
	    SetPlayerPos(playerid,XX,YY,ZZ);
	    ResetPlayerWeaponsEx(playerid);
		SetPlayerVirtualWorld(playerid,EventWorld);
		SetPlayerInterior(playerid,interior);
	    if(RunEvent == 8)
	        LoadObjects(playerid,XX,YY,ZZ,0);
	}
	else if(portid == 2)
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Musíte být ve vozidle");
		DisableRemoteVehicleCollisions(playerid,1);
		new car = GetPlayerVehicleID(playerid);
		SetPlayerVirtualWorld(playerid,EventWorld);
		SetPlayerInterior(playerid,interior);
		SetVehiclePos(car,XX,YY,ZZ);
		SetVehicleVirtualWorld(car,EventWorld);
		LinkVehicleToInterior(car,interior);
	}
	else if(portid == 3)
	{
		DisableRemoteVehicleCollisions(playerid,1);
		DestroyVehicle(Ecar[playerid]);
		Ecar[playerid] = 0;
	    ResetPlayerWeaponsEx(playerid);
		SetPlayerPos(playerid,XX,YY,ZZ);
		Ecar[playerid] = CreateVehicle(ecarid,XX,YY,ZZ,0,EventColor[playerid],EventColor[playerid],-1);
		LinkVehicleToInterior(Ecar[playerid],interior);
		SetVehicleVirtualWorld(Ecar[playerid],GetPlayerVirtualWorld(playerid));
		PutPlayerInVehicle(playerid,Ecar[playerid],0);
		SetPlayerVirtualWorld(playerid,EventWorld);
		SetPlayerInterior(playerid,interior);
		SetVehiclePos(Ecar[playerid],XX,YY,ZZ);
		SetVehicleVirtualWorld(Ecar[playerid],EventWorld);
		SetVehicleZAngle(Ecar[playerid],AA);
	}
	else if(portid == 4)
	{
		if(RacePlayer[playerid] == -1 || EventOptions == 2)
		{
		    new Float:Pos[3];
		    GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
			RacePlayers[EventRace] ++;
	        RaceOdpocet[playerid] = 5;
			DisableRemoteVehicleCollisions(playerid,1);
			DestroyVehicle(Ecar[playerid]);
			Ecar[playerid] = 0;
		    ResetPlayerWeaponsEx(playerid);
			RacePlayer[playerid] = EventRace;
			SetPlayerInterior(playerid,interior);
			if(ecarid < 612)
			{
				Ecar[playerid] = CreateVehicle(ecarid,Pos[0],Pos[1],Pos[2],0,EventColor[playerid],EventColor[playerid],-1);
				LinkVehicleToInterior(Ecar[playerid],interior);
				SetVehicleVirtualWorld(Ecar[playerid],GetPlayerVirtualWorld(playerid));
			}
			else if(ecarid == 612)
			{
				Ecar[playerid] = CreateVehicle(571,Race[EventRace][CPX][1],Race[EventRace][CPY][1],Race[EventRace][CPZ][1]+2,0,EventColor[playerid],EventColor[playerid],-1);
				LinkVehicleToInterior(Ecar[playerid],interior+1);
				Eobj[playerid] = CreateObject(19315,0,0,0,0,0,0,300);
				AttachObjectToVehicle(Eobj[playerid],Ecar[playerid],0,0,0.30,0,0,90);
		       	RemovePlayerAttachedObject(playerid,5);
			}
			else if(ecarid == 613)
			{
				Ecar[playerid] = CreateVehicle(539,Race[EventRace][CPX][1],Race[EventRace][CPY][1],Race[EventRace][CPZ][1]+2,0,EventColor[playerid],EventColor[playerid],-1);
				LinkVehicleToInterior(Ecar[playerid],interior+1);
				Eobj[playerid] = CreateObject(1609,0,0,0,0,0,0,300);
				AttachObjectToVehicle(Eobj[playerid],Ecar[playerid],0,0,0,0,0,0);
		       	RemovePlayerAttachedObject(playerid,5);
			}
			else if(ecarid == 614)
			{
	        	Ecar[playerid] = CreateVehicle(573,Race[EventRace][CPX][1],Race[EventRace][CPY][1],Race[EventRace][CPZ][1]+2,0,EventColor[playerid],EventColor[playerid],-1);
				LinkVehicleToInterior(Ecar[playerid],interior+1);
				Eobj[playerid] = CreateObject(16442,0,0,0,0,0,0,300);
				AttachObjectToVehicle(Eobj[playerid],Ecar[playerid],0,0,0.285,0,0,90);
		       	RemovePlayerAttachedObject(playerid,5);
			}
			else if(ecarid == 615)
			{
	        	Ecar[playerid] = CreateVehicle(572,Race[EventRace][CPX][1],Race[EventRace][CPY][1],Race[EventRace][CPZ][1]+2,0,EventColor[playerid],EventColor[playerid],-1);
				LinkVehicleToInterior(Ecar[playerid],interior+1);
				Eobj[playerid] = CreateObject(GiftsObject[random(sizeof(GiftsObject))],0,0,0,0,0,0,300);
				AttachObjectToVehicle(Eobj[playerid],Ecar[playerid],0,0,0.05,0,0,90);
		       	RemovePlayerAttachedObject(playerid,5);
			}
			PutPlayerInVehicle(playerid,Ecar[playerid],0);
			SetVehiclePos(Ecar[playerid],Race[EventRace][CPX][1],Race[EventRace][CPY][1],Race[EventRace][CPZ][1]);
			SetPlayerVirtualWorld(playerid,EventWorld);
			SetVehicleVirtualWorld(Ecar[playerid],EventWorld);
			SetVehicleZAngle(Ecar[playerid],Race[EventRace][CPA]);
			if(EventOptions != 1)
			{
				TogglePlayerControllable(playerid,false);
			}
			if(EventOptions == 2)
			{
			    if(RaceStart[EventRace] == true)
			    {
					TogglePlayerControllable(playerid,true);
					SetCameraBehindPlayer(playerid);
					new let = Race[RacePlayer[playerid]][CPLetecky];
					if(cps[RacePlayer[playerid]] > 1)
					{
						SetPlayerRaceCheckpoint(playerid,(let) ? (3) : (0),Race[RacePlayer[playerid]][CPX][2],Race[RacePlayer[playerid]][CPY][2],Race[RacePlayer[playerid]][CPZ][2],Race[RacePlayer[playerid]][CPX][3],Race[RacePlayer[playerid]][CPY][3],Race[RacePlayer[playerid]][CPZ][3],10);
					}
					else if(cps[RacePlayer[playerid]] == 2)
					{
						SetPlayerRaceCheckpoint(playerid,(let) ? (4) : (1),Race[RacePlayer[playerid]][CPX][2],Race[RacePlayer[playerid]][CPY][2],Race[RacePlayer[playerid]][CPZ][2],Race[RacePlayer[playerid]][CPX][3],Race[RacePlayer[playerid]][CPY][3],Race[RacePlayer[playerid]][CPZ][3],10);
					}
					PlayerCP[playerid] = 2;
					if(RaceSeconds[playerid] == 0 && RaceMinutes[playerid] == 0)
						SetTimerEx("RaceTime",1000,false,"i",playerid);
			   		format(str,sizeof(str),"%d~w~/~r~%d",PlayerCP[playerid]-2,cps[RacePlayer[playerid]]-1);
					PlayerTextDrawSetString(playerid,Textdraw22[playerid],str);
					PlayerTextDrawSetString(playerid,Textdraw24[playerid],"00:00");
					TextDrawShowForPlayer(playerid,Textdraw20);
					PlayerTextDrawShow(playerid,Textdraw22[playerid]);
					PlayerTextDrawShow(playerid,Textdraw23[playerid]);
					TextDrawShowForPlayer(playerid,Textdraw21);
					PlayerTextDrawShow(playerid,Textdraw24[playerid]);
					if(Admin[playerid] == 0)
					{
						CBLOCK[playerid] = true;
					}
				}
			}
		}
		else SM(playerid,"U si pøipojen v závodì");
	}
	else if(portid == 5)
	{
	    new Float:X,Float:Y,Float:Z,rand = random(eventobjects*eventobjects);
	    if(!IsValidObject(Fallout[rand][eventpatra-1][FObject])) return SM(playerid,"Chyba, zadejte pøíkaz znovu");
	    GetObjectPos(Fallout[rand][eventpatra-1][FObject],X,Y,Z);
	    SetPlayerPos(playerid,X,Y,Z+1);
	    ResetPlayerWeaponsEx(playerid);
		SetPlayerVirtualWorld(playerid,EventWorld);
		SetPlayerInterior(playerid,0);
	}
	else if(portid == 6)
	{
	    new id = EventPlayers;
	    if(id >= sizeof(DerbyPos)) return SM(playerid,"Na eventu je maximální poèet hráèù");
		for(new i; i < sizeof(DerbyPos); i ++)
		{
		    if(DerbyPos[i][4] == 0.0)
		    {
				DisableRemoteVehicleCollisions(playerid,0);
				DestroyVehicle(Ecar[playerid]);
				Ecar[playerid] = 0;
			    ResetPlayerWeaponsEx(playerid);
				SetPlayerPos(playerid,DerbyPos[i][0],DerbyPos[i][1],DerbyPos[i][2]);
				Ecar[playerid] = CreateVehicle(411,DerbyPos[i][0],DerbyPos[i][1],DerbyPos[i][2],DerbyPos[i][3],EventColor[playerid],EventColor[playerid],-1);

				PlayerEventObject[15][playerid] = CreateDynamicObject(1593,0,0,0,0,0,0,EventWorld);

				PlayerEventObject[2][playerid] = CreateDynamicObject(1640,0,0,0,0,0,0,EventWorld);
				PlayerEventObject[3][playerid] = CreateDynamicObject(1640,0,0,0,0,0,0,EventWorld);

				PlayerEventObject[4][playerid] = CreateDynamicObject(2678,0,0,0,0,0,0,EventWorld);

				PlayerEventObject[5][playerid] = CreateDynamicObject(1593,0,0,0,0,0,0,EventWorld);
				PlayerEventObject[6][playerid] = CreateDynamicObject(1593,0,0,0,0,0,0,EventWorld);
				PlayerEventObject[7][playerid] = CreateDynamicObject(1593,0,0,0,0,0,0,EventWorld);
				PlayerEventObject[8][playerid] = CreateDynamicObject(1593,0,0,0,0,0,0,EventWorld);

				PlayerEventObject[9][playerid] = CreateDynamicObject(1593,0,0,0,0,0,0,EventWorld);
				PlayerEventObject[10][playerid] = CreateDynamicObject(1593,0,0,0,0,0,0,EventWorld);
				PlayerEventObject[11][playerid] = CreateDynamicObject(1593,0,0,0,0,0,0,EventWorld);

				PlayerEventObject[12][playerid] = CreateDynamicObject(1593,0,0,0,0,0,0,EventWorld);
				PlayerEventObject[13][playerid] = CreateDynamicObject(1593,0,0,0,0,0,0,EventWorld);
				PlayerEventObject[14][playerid] = CreateDynamicObject(1593,0,0,0,0,0,0,EventWorld);

				SetDynamicObjectMaterialText(PlayerEventObject[2][playerid], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);
				SetDynamicObjectMaterialText(PlayerEventObject[3][playerid], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);

				AttachDynamicObjectToVehicle(PlayerEventObject[2][playerid],Ecar[playerid], -1.100000, -1.199999, 0.099999, 90.000000, 0.000000, 270.000000);
				AttachDynamicObjectToVehicle(PlayerEventObject[3][playerid],Ecar[playerid], 1.100000, -1.199999, 0.099999, 90.000000, 0.000000, 90.000000);

				SetDynamicObjectMaterial(PlayerEventObject[4][playerid], 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);

				AttachDynamicObjectToVehicle(PlayerEventObject[15][playerid],Ecar[playerid], 0.000000, -2.599999, -0.299999, 0.000000, 103.000000, 270.000000);
				AttachDynamicObjectToVehicle(PlayerEventObject[4][playerid],Ecar[playerid], -0.139999, 2.799999, 0.000000, 8.000000, 90.000000, 0.000000);

				new rand = random(5);
				if(rand == 0) for(new x; x < 11; x++) SetDynamicObjectMaterial(PlayerEventObject[5+x][playerid], 0, 8839, "vgsecarshow", "lightgreen2_32", 0xFFFFFFFF);
				else if(rand == 1) for(new x; x < 11; x++) SetDynamicObjectMaterial(PlayerEventObject[5+x][playerid], 0, 10357, "tvtower_sfs", "ws_transmit_red", 0xFFFFFFFF);
				else if(rand == 2) for(new x; x < 11; x++) SetDynamicObjectMaterial(PlayerEventObject[5+x][playerid], 0, 8839, "vgsecarshow", "lightyellow2_32", 0xFFFFFFFF);
				else if(rand == 3) for(new x; x < 11; x++) SetDynamicObjectMaterial(PlayerEventObject[5+x][playerid], 0, 8839, "vgsecarshow", "lightblue2_32", 0xFFFFFFFF);
				else if(rand == 4) for(new x; x < 11; x++) SetDynamicObjectMaterial(PlayerEventObject[5+x][playerid], 0, 16150, "ufo_bar", "GEwhite1_64", 0xFFFFFFFF);

				AttachDynamicObjectToVehicle(PlayerEventObject[5][playerid],Ecar[playerid], 0.000000, 2.899999, -0.150000, 0.000000, 78.000000, 90.000000);
				AttachDynamicObjectToVehicle(PlayerEventObject[6][playerid],Ecar[playerid], 0.000000, 2.899999+0.009, -0.300000, 0.000000, 78.000000, 90.000000);
				AttachDynamicObjectToVehicle(PlayerEventObject[7][playerid],Ecar[playerid], 0.000000, 2.899999+0.009+0.009, -0.450000, 0.000000, 78.000000, 90.000000);
				AttachDynamicObjectToVehicle(PlayerEventObject[8][playerid],Ecar[playerid], 0.000000, 2.899999+0.009+0.009+0.009, -0.600000, 0.000000, 78.000000, 90.000000);

				AttachDynamicObjectToVehicle(PlayerEventObject[9][playerid],Ecar[playerid], 1.100000, 0.000000+0.30, 0.000000, 0.000000, 97.000000, 0.000000);
				AttachDynamicObjectToVehicle(PlayerEventObject[10][playerid],Ecar[playerid], 1.100000, 0.000000+0.30, 0.000000-0.2, 0.000000, 97.000000, 0.000000);
				AttachDynamicObjectToVehicle(PlayerEventObject[11][playerid],Ecar[playerid], 1.100000, 0.000000+0.30, 0.000000-0.2-0.2, 0.000000, 97.000000, 0.000000);

				AttachDynamicObjectToVehicle(PlayerEventObject[12][playerid],Ecar[playerid], -1.100000, 0.000000+0.30, 0.000000, 0.000000, 97.000000, 180.000000);
				AttachDynamicObjectToVehicle(PlayerEventObject[13][playerid],Ecar[playerid], -1.100000, 0.000000+0.30, 0.000000-0.2, 0.000000, 97.000000, 180.000000);
				AttachDynamicObjectToVehicle(PlayerEventObject[14][playerid],Ecar[playerid], -1.100000, 0.000000+0.30, 0.000000-0.2-0.2, 0.000000, 97.000000, 180.000000);

				AddVehicleComponent(Ecar[playerid],1080);//Switch

				SetPlayerVirtualWorld(playerid,EventWorld);
				SetPlayerInterior(playerid,interior);
				SetVehiclePos(Ecar[playerid],DerbyPos[i][0],DerbyPos[i][1],DerbyPos[i][2]);
				SetVehicleVirtualWorld(Ecar[playerid],EventWorld);
				LinkVehicleToInterior(Ecar[playerid],interior);
				PutPlayerInVehicle(playerid,Ecar[playerid],0);
				SetVehicleZAngle(Ecar[playerid],DerbyPos[i][3]);
				TogglePlayerControllable(playerid,false);
		        DerbyPos[i][4] = 1;
		        EventPlayer[playerid] = i;
				break;
			}
		}
	}
	else if(portid == 7)
	{
		SetPlayerVirtualWorld(playerid,24);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-2310.7354,-1652.0604,483.7031);
		SetPlayerFacingAngle(playerid,209.7075);
	    ResetPlayerWeaponsEx(playerid);
		DisableRemoteVehicleCollisions(playerid,1);
	}
	else if(portid == 8)
	{
		if(GetGang(playerid) > 0)
		{
	    	SetGang(playerid,255);
		}
		new team,text[50];
		if(PlayerTeams[1] < PlayerTeams[0])
		    team = 1;
		else
			team = 0;
		PlayerTeams[team]++;
		SetPVarInt(playerid,"EventColor",GetPlayerColor(playerid));
		SetPlayerVirtualWorld(playerid,EventWorld);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,EventTDMPos[team][0]+(EventPlayers/2)-random(5)+random(5),EventTDMPos[team][1]+(EventPlayers/2)-random(5)+random(5),EventTDMPos[team][2]);
		SetPlayerTeam(playerid,team);
		PlayerTeam[playerid] = team;
		SetPlayerColor(playerid,TeamColors[team]);
		TogglePlayerControllable(playerid,false);
		format(str,sizeof(str),"Byl jsi pøiøazen do teamu [ {%06x}%s "w"]",TeamColors[team]>>>8,TeamNames[team]);
		SM(playerid,str);
		TextDrawShowForPlayer(playerid,Textdraw44);
		for(new i; i < sizeof(PlayerTeams); i ++)
		{
		    format(str,sizeof(str),"%s%s: ~w~%d~n~",(i == 0) ? ("~r~") : ("~b~"),TeamNames[i],PlayerTeams[i]);
			strcat(text,str);
		}
	    TextDrawSetString(Textdraw44,text);
	}
	else if(portid == 9)
	{
		SetPlayerVirtualWorld(playerid,EventWorld);
		SetPlayerInterior(playerid,0);
		new rand = random(sizeof(EventDMPos));
		while(EventDMPos[rand][0] == 0.0)
			rand = random(sizeof(EventDMPos));
	    SetPlayerPos(playerid,EventDMPos[rand][0]-2+random(4),EventDMPos[rand][1]-2+random(4),EventDMPos[rand][2]);
		format(str,sizeof(str),""g"GunGame\n\n"dc"Cílem je jako první nasbírat vechny zbranì, za kadé dva killy získá novou zbraò,\ncelkem se zde nachází: "g"%d zbraní",sizeof(GunGameGuns));
		SPD(playerid,0,DIALOG_STYLE_MSGBOX,"GunGame",str,"Zavøít","");
	}
	else if(portid == 10)
	{
		SetPlayerVirtualWorld(playerid,EventWorld);
		SetPlayerInterior(playerid,0);
		new rand = random(sizeof(EventDMPos));
		while(EventDMPos[rand][0] == 0.0)
			rand = random(sizeof(EventDMPos));
	    SetPlayerPos(playerid,EventDMPos[rand][0]-2+random(4),EventDMPos[rand][1]-2+random(4),EventDMPos[rand][2]);
	}
	else if(portid == 11)
	{
		SetPlayerVirtualWorld(playerid,EventWorld);
		SetPlayerInterior(playerid,0);
		SetPlayerTime(playerid,0,0);
		SetPlayerPos(playerid,XX,YY,ZZ);
		SetPlayerFacingAngle(playerid,208.0726);
	}
	SetPlayerHealth(playerid,100);
	SetPlayerArmour(playerid,100);
	SetPlayerTime(playerid,EventHour,0);
	SetPlayerWeather(playerid,EventWeather);
	if(portid != 8)
	{
		SetPlayerTeam(playerid,255);
		PlayerTeam[playerid] = -1;
		SetPVarInt(playerid,"EventColor",GetPlayerColor(playerid));
		SetPlayerColor(playerid,VehicleColoursTableRGBA[EventColor[playerid]]);
		if(GetGang(playerid) > 0)
		{
	    	SetGang(playerid,255);
		}
	}
	format(str,sizeof(str),"~w~%s ~g~%s ~w~se portnul na Adminsky Port.",TDPlayers(playerid),Jmeno(playerid));
	AddStringToTextDraw(str);
	EventPlayers ++;
	OnEvent[playerid] = true;
	SetPVarInt(playerid,"EventWL",GetPlayerWantedLevel(playerid));
	SetPlayerWantedLevel(playerid,0);
	format(str,sizeof(str),"~y~%d %s ~w~probiha event ~g~%s ~w~na eventu je: ~r~%d %s",EventTime[0]/60,PluralWord(EventTime[0]/60,"minutu","minuty","minut"),EventName,EventPlayers,PluralWord(EventPlayers,"hrac","hraci","hracu"));
    TextDrawDiakritika(str);
	TextDrawSetString(Textdraw3,str);
	CancelAntiSK(playerid);
	ResetPlayerWeaponsEx(playerid);
	if(EventRadius > 0)
	{
	    GangZoneShowForPlayer(playerid,EventZone[0],0xFFFFFF80);
	}
	return 1;
}
//============================================================================//
CMD:setport(playerid,params[])
{
	SCMTOAA("setport")
	IsNoEventer(playerid)
	if(sscanf(params,"i",portid))
	{
		SM(playerid,"/setport 0 - "g"vypnout port");
		SM(playerid,"/setport 1 - "g"zapnout port bez aut a bez zbraní");
		SM(playerid,"/setport 2 - "g"zapnout port s vozidly");
		SM(playerid,"/setport 3 - "g"zapnout port s urèitým vozidlem");
		SM(playerid,"/setport 4 - "g"zapnout závodní port");
		SM(playerid,"/setport 5 - "g"zapnout Special Derby Port");
		SM(playerid,"/setport 6 - "g"Vánoèní port");
	}
	else
	{
	    if(portid == 0)
	    {
			format(str,sizeof(str),"~w~%s ~g~%s ~w~vypnul port.",TDPlayers(playerid),Jmeno(playerid));
			TextDrawHideForAll(Textdraw0);
			for(new t; t < 5; t++)
			{
				TextDrawHideForAll(event[t]);
			}
			AddStringToTextDraw(str);
			if(RunEvent == 2 ||RunEvent == 3 || RunEvent == 7)
			{
			    for(new i; i <= GetPlayerPoolSize(); i ++)
			    {
			        if(OnEvent[i] == true)
			        {
			    		DisableRemoteVehicleCollisions(i,0);
					}
				}
			}
		}
	    else if(portid == 1)
	    {
	        GetPlayerPos(playerid,XX,YY,ZZ);
			interior = GetPlayerInterior(playerid);
      		format(str,sizeof(str),"~w~%s ~g~%s ~w~zapnul port.",TDPlayers(playerid),Jmeno(playerid));
			AddStringToTextDraw(str);
			RunEvent = 1;
	    }
	    else if(portid == 2)
	    {
	        GetPlayerPos(playerid,XX,YY,ZZ);
			format(str,sizeof(str),"~w~%s ~g~%s ~w~zapnul port.",TDPlayers(playerid),Jmeno(playerid));
			interior = GetPlayerInterior(playerid);
			AddStringToTextDraw(str);
			RunEvent = 2;
	    }
	    else if(portid == 3)
	    {
	        SPD(playerid,UNNAMED+6,DIALOG_STYLE_INPUT,"Nastavit Port 3","Zadejte ID/Název vozidla se kterým se hráèi budou portovat","Nastavit","Zavøít");
			portid = 0;
		}
		else if(portid == 4)
		{
			new DIALOG_RACES[20000];
			strcat(DIALOG_RACES,"Název\tCheckpointù\tVzdálenost\tAutor\n");
			for(new i; i < MAX_RACES; i ++)
			{
			    format(dfile,sizeof(dfile),"UnNamed/Races/Race[%d].txt",i);
			    if(fexist(dfile))
			    {
			        new Float:meters;
			        for(new x; x < cps[i]-1; x ++)
			            meters += GetDistanceBetweenPoints(Race[i][CPX][x],Race[i][CPY][x],Race[i][CPZ][x],Race[i][CPX][x+1],Race[i][CPY][x+1],Race[i][CPZ][x+1]);
			        format(str,sizeof(str),"%d. {0088FF}%s\t%d\t%0.0fkm\t%s\n",i+1,Race[i][CPName],cps[i]-1,meters/1000,Race[i][CPAutor]);
			        strcat(DIALOG_RACES,str);
			    }
			    else
				{
					strcat(DIALOG_RACES," \n");
			    }
			}
			ShowPlayerDialog(playerid,UNNAMED+77,DIALOG_STYLE_TABLIST_HEADERS,"Závody",DIALOG_RACES,"Zaloit","Zavøít");
			portid = 0;
		}
		else if(portid == 5)
		{
      		format(str,sizeof(str),"~w~%s ~g~%s ~w~zapnul port.",TDPlayers(playerid),Jmeno(playerid));
			AddStringToTextDraw(str);
		    RunEvent = 6;
		}
		else if(portid == 6)
		{
      		format(str,sizeof(str),"~w~%s ~g~%s ~w~zapnul port.",TDPlayers(playerid),Jmeno(playerid));
			AddStringToTextDraw(str);
		    RunEvent = 7;
		}
		else
		{
		    return SM(playerid,"Neplatné port ID");
		}
		if(GetPlayerVirtualWorld(playerid) != 0)
		{
			EventWorld = GetPlayerVirtualWorld(playerid);
		}
		else
		{
		    EventWorld = 1;
		}
	}
	return 1;
}
//============================================================================//
CMD:eventend(playerid,params[])
{
	IsNoEventer(playerid)
	EventMista = 0;
	EventState = 0;
	EventWorld = 0;
	EventEndTime = 0;
	BotEvent = false;
	EventStarted = false;
	portid = 0;
	TextDrawHideForAll(Textdraw0);
	Event = 0;
	for(new i; i < 2; i ++)
	{
	    for(new x; x < sizeof(EventTDMPos[]); x ++)
	    {
	        EventTDMPos[i][x] = 0.0000;
		}
	}
	for(new i; i < sizeof(EventDMPos); i ++)
	{
	    for(new x; x < sizeof(EventDMPos[]); x ++)
	    {
	        EventDMPos[i][x] = 0.0000;
		}
	}
	for(new t; t < 5; t++)
	{
		TextDrawHideForAll(event[t]);
	}
	if(EventRace > -1)
	{
		RaceStart[EventRace] = false;
		RaceReady[EventRace] = false;
		pozice[EventRace] = 0;
	}
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
		if(OnEvent[i] == true)
		{
		    LoadBeforeEventData(i);
			CancelEvent(i);
		}
	}
	if(RunEvent == 6)
	{
		for(new i; i < sizeof(DerbyPos); i ++)
		{
			DerbyPos[i][4] = 0.0;
		}
	}
   	for(new i; i < sizeof(Fallout); i ++)
    {
        for(new x; x < sizeof(Fallout[]); x ++)
        {
	        DestroyObject(Fallout[i][x][FObject]);
	        Fallout[i][x][FDestroyed] = true;
		}
    }
    for(new i; i < sizeof(eObjects); i ++)
    {
        if(IsValidDynamicObject(eObjects[i]))
	        DestroyDynamicObject(eObjects[i]);
    }
	for(new i; i < sizeof(eVehicles); i ++)
	{
	    if(eVehicles[i] != 0)
	    {
	        DestroyVehicle(eVehicles[i]);
			eVehicles[i] = 0;
	    }
	}
    for(new i; i < sizeof(ePickups); i ++)
    {
		DestroyEventPickup(i);
    }
	format(str,sizeof(str),"~w~%s ~g~%s ~w~ukoncil event.",TDPlayers(playerid),Jmeno(playerid));
	AddStringToTextDraw(str);
	EventOptions = 0;
	RunEvent = 0;
	eventwinpos = 0;
	EventRace = -1;
	KillTimer(EventTimer);
	EventTimer = 0;
	EventTime[0] = 0;
	EventTime[1] = 0;
	if(EventTime[2] == -1)
		EventTime[2] = 0;
	EventPlayers = 0;
	EventAdmin = "";
	TextDrawHideForAll(Textdraw3);
	if(EventRadius > 0)
	{
	    EventRadius = 0;
	    GangZoneDestroy(EventZone[0]);
	    GangZoneDestroy(EventZone[1]);
	}
	return 1;
}
//============================================================================//
CMD:event(playerid,params[])
{
	SCMTOAA("event")
	IsNoEventer(playerid)
	if(Event == 1) return SM(playerid,"Právì probíhá event");
	new DIALOG[500];
	for(new i; i < sizeof(Events); i ++)
	{
	    format(str,sizeof(str),"%s\n",Events[i]);
		strcat(DIALOG,str);
	}
	SPD(playerid,UNNAMED+168,DIALOG_STYLE_LIST,"Zaloit event",DIALOG,"Vybrat","Zavøít");
	return 1;
}
//============================================================================//
CMD:cblock(playerid,params[])
{
	SCMTOAA("cblock")
	new id,cas,duvod[255];
	IsNoModerator(playerid)
	if(sscanf(params,"iiz",id,cas,duvod)) return SM(playerid,"Pouij: "r"/cblock [ ID ] [ Èas ] [ Dùvod ]");
	IsNoConnected(id)
	if(id == playerid) return SM(playerid,"Proè chce bloknout pøíkazy sám sobì ? :D");
	if(CBLOCK[id] > 0) return SM(playerid,"Tento hráè u má bloklé pøíkazy");
	if(Admin[id] > 0 ) return SM(playerid,"Administrátorovi nemùe bloknout pøíkazy");
	if(cas < 1 || cas > 15) return SM(playerid,"Rozmezí èasu je 1 - 15 minut");
	if(strlen(duvod) < 4 || strlen(duvod) > 100) return SM(playerid,"Minimalnì mùe pouít 3 znaky a maximálnì mùe pouít 100 znakù");
	format(str,sizeof(str),"%s "w"%s "r"bloknul pøíkazy hráèi "w"%s "r"na "w"%d "r"minut.",Players(playerid),Jmeno(playerid),Jmeno(id),cas);
	SCMTA(red,str);
	format(str,sizeof(str),"[ Dùvod: "w"%s "r"]",duvod);
	SCMTA(red,str);
	CBLOCK[id] = cas*60;
	CBlockTimer[id] = SetTimerEx("TCblock",1000,false,"i",id);
	GivePenaltyPoints(Jmeno(id),cas,Jmeno(playerid),"Bloknutí pøíkazù",duvod);
	new query[500];
	mysql_format(mysql,query,sizeof(query),"INSERT INTO `Prestupky` (`Nick`,`IP`,`Type`,`Admin`,`Reason`,`Time`,`EndTime`) VALUES ('%e','%s','%d','%e','%e','%d','%d')",Jmeno(id),GetIP(id),TYPE_CBLOCK,Jmeno(playerid),duvod,gettime(),cas*60);
	mysql_query(mysql,query,false);
	return 1;
}
//============================================================================//
CMD:uncblock(playerid,params[])
{
	SCMTOAA("uncblock")
	new id;
	IsNoModerator(playerid)
	if(sscanf(params,"i",id)) return SM(playerid,"Pouij: "r"/uncblock [ ID ]");
	IsNoConnected(id)
	if(CBLOCK[id] == 0) return SM(playerid,"Tento hráè nemá bloklé pøíkazy");
	format(str,sizeof(str),"%s "w"%s "r"odbloknul pøíkazy hráèi "w"%s.",Players(playerid),Jmeno(playerid),Jmeno(id));
	SCMTA(red,str);
	KillTimer(CBlockTimer[id]);
	CBLOCK[id] = 0;
	return 1;
}
//============================================================================//
forward TCblock(playerid);

public TCblock(playerid)
{
	if(CBLOCK[playerid] > 0)
	{
		KillTimer(CBlockTimer[playerid]);
		CBlockTimer[playerid] = SetTimerEx("TCblock",1000,false,"i",playerid);
	    CBLOCK[playerid] --;
	    if(CBLOCK[playerid] <= 0)
	    {
		    format(str,sizeof(str),"{0055FF}Hráèi "g"%s {0055FF}byly automaticky odbloknuty pøíkazy.",Jmeno(playerid));
			SendAdminMessage(str);
			SM(playerid,"Byly ti automaticky odbloknuty pøíkazy");
			KillTimer(CBlockTimer[playerid]);
		}
	}
	return 1;
}

//============================================================================//
CMD:god(playerid,params[])
{
	SCMTOAA("god")
	new id;
	IsNoModerator(playerid)
	if(sscanf(params,"i",id)) return SM(playerid,"Pouij: "r"/god [ ID ]");
	IsNoConnected(id)
	if(GOD[id] == false)
	{
		GOD[id] = true;
		SetPlayerHealth(id,1000000);
		format(str,sizeof(str),"%s "w"%s "r"zapnul hráèi "w"%s "r"nesmrtelnost.",Players(playerid),Jmeno(playerid),Jmeno(id));
	}
	else
	{
	    GOD[id] = false;
	    SetPlayerHealth(id,100);
	    if(IsPlayerInAnyVehicle(playerid))
	    {
	        new Float:Health;
	        GetVehicleHealth(GetPlayerVehicleID(playerid),Health);
	        if(Health > 1000 && GetPlayerVehiclePancir(GetPlayerVehicleID(playerid)) < 1000)
	        {
	            SetVehicleHealth(GetPlayerVehicleID(playerid),1000);
			}
	    }
		format(str,sizeof(str),"%s "w"%s "r"vypnul hráèi "w"%s "r"nesmrtelnost.",Players(playerid),Jmeno(playerid),Jmeno(id));
	}
	SCMTA(red,str);
	return 1;
}
//============================================================================//
CMD:getip(playerid,params[])
{
	new id;
	SCMTOAA("getip")
	IsNoModerator(playerid)
	if(sscanf(params,"i",id)) return SM(playerid,"Pouij: "r"/getip [ ID ]");
	format(str,sizeof(str),"IP hráèe "g"%s "w"je "g"%s",Jmeno(id),GetIP(id));
	SPD(playerid,DIALOG_NONECLICK,DIALOG_STYLE_INPUT,"Zjitìná IP",str,"Zavøít","");
	return 1;
}
//============================================================================//
CMD:respcars(playerid,params[])
{
	SCMTOAA("respcars")
	IsNoModerator(playerid)
	new id;
	if(sscanf(params,"i",id))
	{
		for(new i; i < MAX_VEHICLES; i++)
		{
		    if(IsVehicleEmpty(i))
		    {
		    	SetVehicleToRespawn(i);
			}
		}
		SetVehicleToRespawn(SumoCar[0]);
		SetVehicleToRespawn(SumoCar[1]);
		format(str,sizeof(str),"%s "w"%s "r"respawnul vechna prázdná vozidla na serveru.",Players(playerid),Jmeno(playerid));
		SCMTA(red,str);
	}
	else
	{
		if(id == INVALID_VEHICLE_ID) return SM(playerid,"Neexistující vozidlo");
		SetVehicleToRespawn(id);
		format(str,sizeof(str),"%s "w"%s "r"respawnul vozidlo "w"%s (%d)"r".",Players(playerid),Jmeno(playerid),GetVehicleName(id),id);
		SCMTA(red,str);
	}
	return 1;
}
//============================================================================//
CMD:specoff(playerid,params[])
{
	SCMTOAA("specoff")
	IsNoEventer(playerid)
	TogglePlayerSpectating(playerid,false);
	SpectatePlayer[playerid] = -1;
	SpectateInt[playerid] = -1;
	SpectateVW[playerid] = -1;
	TextDrawShowForPlayer(playerid,Textdraw1[playerid]);
	for(new i; i < 5; i ++)
	{
	    TextDrawShowForPlayer(playerid,TextDraw[i]);
	}
	if(RepairTime[playerid] > 0)
	{
		TextDrawShowForPlayer(playerid,TDTimery[playerid][0]);
	}
	if(HealTime[playerid] > 0)
	{
		TextDrawShowForPlayer(playerid,TDTimery[playerid][1]);
	}
	PlayerTextDrawHide(playerid,Textdraw40[playerid]);
	PlayerTextDrawHide(playerid,Textdraw41[playerid]);
	SetPlayerWantedLevel(playerid,GetPVarInt(playerid,"SpecWL"));
	return 1;
}
//============================================================================//
CMD:spec(playerid,params[])
{
	SCMTOAA("spec")
	new id;
	IsNoEventer(playerid)
	if(sscanf(params,"i",id)) return SM(playerid,"Pouij: "r"/spec [ ID ]");
	IsNoConnected(id)
	if(id == playerid) return SM(playerid,"Proè chce spectovat sám sebe ? :D");
	if(SpectatePlayer[id] != -1) return SM(playerid,"Tento hráèe nìkoho sleduje");
	if(SpectatePlayer[playerid] == -1)
	{
	    SaveBeforeEventData(playerid);
	    SetPVarInt(playerid,"SpecWL",GetPlayerWantedLevel(playerid));
	    SetPlayerWantedLevel(playerid,0);
	}
	TogglePlayerSpectating(playerid,true);
	SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
	SetPlayerInterior(playerid,GetPlayerInterior(id));
	SM(playerid,"Pouij: "r"/specoff "w"pro vypnutí sledování");
	PlayerSpectatePlayerEx(playerid,id);
	TextDrawHideForPlayer(playerid,Textdraw1[playerid]);
	for(new i; i < 5; i ++)
	{
	    TextDrawHideForPlayer(playerid,TextDraw[i]);
	}
	for(new i; i < 3; i ++)
	{
	    TextDrawHideForPlayer(playerid,TDTimery[playerid][i]);
	}
	SpectatePlayer[playerid] = id;
	SpectateInt[playerid] = GetPlayerInterior(id);
	SpectateVW[playerid] = GetPlayerVirtualWorld(id);
	PlayerTextDrawSetString(playerid,Textdraw40[playerid],"_");
	PlayerTextDrawSetString(playerid,Textdraw41[playerid],"_");
	PlayerTextDrawShow(playerid,Textdraw40[playerid]);
	PlayerTextDrawShow(playerid,Textdraw41[playerid]);
	return 1;
}
//============================================================================//
CMD:ban(playerid,params[])
{
	SCMTOAA("ban")
	new id,duvod[144],query[400],sign[24+1];
	IsNoAdmin(playerid)
	if(sscanf(params,"iz",id,duvod)) return SM(playerid,"Pouití: "r"/ban [ ID ] [ Dùvod ]");
	if(id == playerid) return SM(playerid,"Proè se chce zabanovat ? :D");
	IsNoConnected(id)
	if(Admin[id] > 0) return SM(playerid,"Administrátora nelze zabanovat");
	if(strlen(duvod) > 100) return SM(playerid,"Maximalní poèet znakù je 100");
	if(strlen(duvod) == 0) return SM(playerid,"Nezadal si ádný dùvod");
	format(str,sizeof(str),"%s "w"%s "r"%s hráèe "w"%s"r".",Players(playerid),Jmeno(playerid),SexWord(playerid,"zabanoval","zabanovala"),Jmeno(id));
	SCMTA(red,str);
	format(str,sizeof(str),"[ Dùvod: "w"%s "r"]",duvod);
	SCMTA(red,str);
	sign = GetPlayerSign(playerid);
	mysql_format(mysql,query,sizeof(query),"INSERT INTO `Bans` (`Nick`,`IP`,`Admin`,`Sign`,`Reason`,`Start`,`End`) VALUES ('%e','%s','%e','%e','%e','%d','0')",Jmeno(id),GetIP(id),Jmeno(playerid),sign,duvod,gettime());
	mysql_query(mysql,query,false);
	SpecialBan(id,Jmeno(playerid),duvod,sign);
	SetPVarString(id,"BanReason",duvod);
	BanPlayerAfterTime(id,30);
	return 1;
}
//============================================================================//
CMD:kick(playerid,params[])
{
	SCMTOAA("kick")
	new id,duvod[144];
	IsNoModerator(playerid)
	if(sscanf(params,"iz",id,duvod)) return SM(playerid,"Pouití: "r"/kick [ ID ] [ Dùvod ]");
	if(id == playerid) return SM(playerid,"Proè se chce vyhodit ? :D");
	IsNoConnected(id)
	if(Admin[id] > 0) return SM(playerid,"Administrátora nelze vyhodit");
	if(strlen(duvod) > 100) return SM(playerid,"Maximalní poèet znakù je 100");
	if(strlen(duvod) == 0) return SM(playerid,"Nezadal si ádný dùvod");
	format(str,sizeof(str),"%s "w"%s "r"%s ze serveru hráèe "w"%s"r".",Players(playerid),Jmeno(playerid),SexWord(playerid,"vyhodil","vyhodila"),Jmeno(id));
	SCMTA(red,str);
	format(str,sizeof(str),"[ Dùvod: "w"%s "r"]",duvod);
	SCMTA(red,str);
	GivePenaltyPoints(Jmeno(id),5,Jmeno(playerid),"Kick",duvod);
	SpecialKick(id,Jmeno(playerid),duvod);
	return 1;
}
//============================================================================//
CMD:spam(playerid,params[])
{
	SCMTOAA("spam")
	IsNoModerator(playerid)
	for(new i; i < 100;i++)
	{
	    SCMTA(red," ");
	}
	format(str,sizeof(str),"%s "w"%s "r"%s chat.",Players(playerid),Jmeno(playerid),SexWord(playerid,"vymazal","vymazala"));
	SCMTA(red,str);
	return 1;
}
//============================================================================//
CMD:ig(playerid,params[])
{
	SPD(playerid,0,DIALOG_STYLE_INPUT,"Instagram","Adresa na ná instagram je: "g""SRV_INSTA"\n\n"dc"Toto pole slouí prouze k opsání a kopírování, nemá ádnou funkci","Zavøít","");
	return 1;
}
CMD:fb(playerid,params[])
{
	SPD(playerid,0,DIALOG_STYLE_INPUT,"Facebook","Adresa Facebookové stránky je: "g""SRV_FB"\n\n"dc"Toto pole slouí prouze k opsání a kopírování, nemá ádnou funkci","Zavøít","");
	return 1;
}
CMD:discord(playerid,params[])
{
	SPD(playerid,0,DIALOG_STYLE_INPUT,"TeamSpeak3","IP Adresa TeamSpeak 3 serveru je: "g""SRV_DISCORD"\n\n"dc"Toto pole slouí prouze k opsání a kopírování, nemá ádnou funkci","Zavøít","");
	return 1;
}
//============================================================================//
CMD:gw(playerid,params[])
{
	SCMTOAA("gw")
	new wepid,id,munice;
	IsNoModerator(playerid)
	if(sscanf(params,"iii",id,wepid,munice)) return SM(playerid,"Pouij: "r"/gw [ ID ] [ ID Zbranì ] [ Munice ]");
	IsNoConnected(id)
	if(wepid < 0 || wepid > 46) return SM(playerid,"Rozmezí ID zbraní je 0 - 46");
	if(wepid > 18 && wepid < 22) return SM(playerid,"Neplatné ID");
	if(munice < 1 || munice > 25000) return SM(playerid,"Rozmezí munice je 1 - 25 000");
	if(OnEvent[id] == false)
	{
	   if(Admin[id] < 4 && wepid == 38) return SM(playerid,"Tento hráè nemá povolení na tuto zbraò");
	}
	if(id != playerid)
	{
		format(str,sizeof(str),"%s "w"%s "r"dal hráèi "w"%s "r"zbraò "w"%s "r"[Náboje: %d].",Players(playerid),Jmeno(playerid),Jmeno(id),WeaponsNames(wepid),munice);
		SCMTA(red,str);
	}
	else
	{
	    switch(wepid)
	    {
			case 35,36,38,39:
			{
			    if(OnEvent[id] == false)
			    {
			    	if(Admin[playerid] < 4) return SM(playerid,"Na tuto zbraò nemáte povolení");
				}
			}
	    }
	    format(str,sizeof(str),"Dal sis zbraò "r"%s "w"s "r"%d "w"náboji",WeaponsNames(wepid),munice);
	    SM(playerid,str);
	}
	GivePlayerWeaponEx(id,wepid,munice);
	return 1;
}
//============================================================================//
CMD:mute(playerid,params[])
{
	SCMTOAA("mute")
	new player[144],id,duvod[144],cas;
	IsNoModerator(playerid)
	if(sscanf(params,"ziz",player,cas,duvod)) return SM(playerid,"Pouij: "r"/mute [ ID/Nick ] [ Minuty ] [ Dùvod ]");
	if(IsNumeric(player))
	{
	    id = strval(player);
		player = Jmeno(id);
	}
	else
	{
		id = GetPlayerIdFromName(player);
		if(!IPC(id))
		    id = -1;
		else player = Jmeno(id);
	}
	if(id != -1)
	{
		if(id == playerid) return SM(playerid,"Proè chce umlèet sám sebe ? :D");
		if(Mute[id] > 0) return SM(playerid,"Tento hráè u je umlèený");
		if(Admin[id] > 0 ) return SM(playerid,"Administrátora nemùe umèet");
	}
    format(dfile,sizeof(dfile),USER_FILES,player);
	if(!fexist(dfile)) return SM(playerid,"Na serveru doposud nebyl registrován ádný hráè s tímto nickem");
	if(strlen(duvod) < 4 || strlen(duvod) > 100) return SM(playerid,"Minimalnì mùe pouít 3 znaky a maximálnì mùe pouít 100 znakù");
	if(Admin[playerid] < 5)
		if(cas < 1 || cas > 15) return SM(playerid,"Rozmezí èasu je 1 - 15 minut");
	else
		if(cas < 1) return SM(playerid,"Minimálnì 1 minutu");
	format(str,sizeof(str),"%s "w"%s "r"umlèel hráèe "w"%s "r"na "w"%d "r"minut.",Players(playerid),Jmeno(playerid),player,cas);
	SCMTA(red,str);
	format(str,sizeof(str),"[ Dùvod: "w"%s "r"]",duvod);
	SCMTA(red,str);
	if(IPC(id))
	{
		Mute[id] = cas*60;
		MuteTimer[id] = SetTimerEx("TMute",1000,false,"i",id);
	}
	else
	{
	    DOF2_SetInt(dfile,"Mute",cas*60);
        DOF2_SaveFile();
	}
	GivePenaltyPoints(player,cas,Jmeno(playerid),"Umlèení",duvod);
	new query[500];
	mysql_format(mysql,query,sizeof(query),"INSERT INTO `Prestupky` (`Nick`,`IP`,`Type`,`Admin`,`Reason`,`Time`,`EndTime`) VALUES ('%e','%s','%d','%e','%e','%d','%d')",player,GetPlayerNameIP(player),TYPE_MUTE,Jmeno(playerid),duvod,gettime(),cas*60);
	mysql_query(mysql,query,false);
	return 1;
}
//============================================================================//
CMD:unmute(playerid,params[])
{
	SCMTOAA("unmute")
	new id;
	IsNoModerator(playerid)
	if(sscanf(params,"i",id)) return SM(playerid,"Pouij: "r"/unmute [ ID ]");
	IsNoConnected(id)
	if(Mute[id] == 0) return SM(playerid,"Tento hráè není umlèený");
	format(str,sizeof(str),"%s "w"%s "r"odmlèel hráèe "w"%s.",Players(playerid),Jmeno(playerid),Jmeno(id));
	SCMTA(red,str);
	KillTimer(MuteTimer[id]);
	Mute[id] = 0;
	return 1;
}
//============================================================================//
forward TMute(playerid);

public TMute(playerid)
{
	if(Mute[playerid] > 0)
	{
		KillTimer(MuteTimer[playerid]);
		MuteTimer[playerid] = SetTimerEx("TMute",1000,false,"i",playerid);
	    Mute[playerid] --;
	    if(Mute[playerid] <= 0)
	    {
		    format(str,sizeof(str),"{0055FF}Hráè "g"%s {0055FF}automaticky odmlèen",Jmeno(playerid));
			SendAdminMessage(str);
			SM(playerid,"Byl si automaticky odlmèen, mùe znovu psát do chatu");
			KillTimer(MuteTimer[playerid]);
	    }
	}
	return 1;
}
//============================================================================//
CMD:freeze(playerid,params[])
{
	SCMTOAA("freeze")
	new id,duvod[144],cas;
	IsNoModerator(playerid)
	if(sscanf(params,"iiz",id,cas,duvod)) return SM(playerid,"Pouij: "r"/freeze [ ID ] [ Minuty ] [ Dùvod ]");
	IsNoConnected(id)
	if(id == playerid) return SM(playerid,"Proè chce zmrazit sám sebe ? :D");
	if(Admin[id] > 0 ) return SM(playerid,"Administrátora nemùe zmrazit");
	if(cas < 1 || cas > 30) return SM(playerid,"Rozmezí èasu je 1 - 30 minut");
	if(strlen(duvod) < 4 || strlen(duvod) > 100) return SM(playerid,"Minimalnì mùe pouít 3 znaky a maximálnì mùe pouít 100 znakù");
	format(str,sizeof(str),"%s "w"%s "r"zmrazil hráèe "w"%s "r"na "w"%d "r"minut.",Players(playerid),Jmeno(playerid),Jmeno(id),cas);
	SCMTA(red,str);
	format(str,sizeof(str),"[ Dùvod: "w"%s "r"]",duvod);
	SCMTA(red,str);
	TogglePlayerControllable(id,0);
	FreezeTimer[id] = SetTimerEx("Freeze",1*1000*60*cas,false,"i",id);
	return 1;
}
//============================================================================//
CMD:unfreeze(playerid,params[])
{
	SCMTOAA("unfreeze")
	new id;
	IsNoModerator(playerid)
	if(sscanf(params,"i",id)) return SM(playerid,"Pouij: "r"/unfreeze [ ID ]");
	IsNoConnected(id)
	format(str,sizeof(str),"%s "w"%s "r"odmrazil hráèe "w"%s.",Players(playerid),Jmeno(playerid),Jmeno(id));
	SCMTA(red,str);
	TogglePlayerControllable(id,1);
	KillTimer(FreezeTimer[id]);
	return 1;
}
//============================================================================//
forward Freeze(playerid);

public Freeze(playerid)
{
    format(str,sizeof(str),"{0055FF}Hráè "g"%s {0055FF}automaticky odmraen",Jmeno(playerid));
	SendAdminMessage(str);
	TogglePlayerControllable(playerid,1);
	SM(playerid,"Byl si automaticky odmraen, mùe znovu psát do chatu");
	return 1;
}
//============================================================================//
CMD:shop(playerid,params[])
{
	SCMTOAA("shop")
	if(Spawned[playerid] == false) return SM(playerid,"Musíte se nejdøív spawnout");
	new DIALOG_SHOP[1500];
	format(str,sizeof(str),"Premium Úèet [ "g"1 den = %d bodù "w"]\n",DOF2_GetInt(CONFIG,"VBODY"));
	strcat(DIALOG_SHOP,str);
	if(strlen(SlevaMSG) == 0)
	{
		format(str,sizeof(str),"Koupit body [ "g"1 bod = %s$ "w"]\n",Split(POINT_PRICE));
	}
	else
	{
		format(str,sizeof(str),"Koupit body [ "g"1 bod = %s$ "w"] [ "r"%s "w"]\n",Split(POINT_PRICE),SlevaMSG);
	}
	strcat(DIALOG_SHOP,str);
//	strcat(DIALOG_SHOP,"Obchod se skiny [ "g" >>> "w"]\n");
/*	if(GetPlayerWantedLevel(playerid) > 0)
	{
	    new wl = GetPlayerWantedLevel(playerid);
	    if(wl > 6) wl = 6;
		format(str,sizeof(str),"Právník [ "g"%d Bodù "w"]",wl);
	}
	else
	{
		format(str,sizeof(str),"Právník [ "g"Právník není tøeba"w" ]");
	}
	strcat(DIALOG_SHOP,str);
*/
	strcat(DIALOG_SHOP,"Doplòky [ "g" >>> "w"]\n");
	strcat(DIALOG_SHOP,"Zmìna nicku [ "g"300 Bodù "w"]\n");
	strcat(DIALOG_SHOP,"Zmìna hesla [ "g"Free "w"]\n");
	strcat(DIALOG_SHOP,"XP Booster [ "g">>> "w"]\n");
	if(IsPlayerInRangeOfPoint(playerid,20.0,248.7287,1800.2538,7.4141) || PrisonTime[playerid] > 0)
	{
		strcat(DIALOG_SHOP,"Kauce [ "g"12 Bodù "w"]\n");
	}
	else
	{
		strcat(DIALOG_SHOP,"Kauce [ "g"Kauce není tøeba "w"]\n");
	}
/*	strcat(DIALOG_SHOP,"\nBody [ Poèet: "c" 300 "w"] [ Cena: CZ: "g"30 Kè "w"/ SK: "g"1.2 "w" ]\n");
	strcat(DIALOG_SHOP,"Body [ Poèet: "c" 500 "w"] [ Cena: CZ: "g"50 Kè "w"/ SK: "g"2 "w" ]\n");
	strcat(DIALOG_SHOP,"Body [ Poèet: "c" 1000 "w"] [ Cena: CZ: "g"99 Kè "w"/ SK: "g"4 "w" ]\n");
	strcat(DIALOG_SHOP,"Body [ Poèet: "c" 2200 "w"] [ Cena: CZ: "g"199 Kè "w"/ SK: "g"8 "w" ]\n");
	strcat(DIALOG_SHOP,"Body [ Poèet: "c" 3400 "w"] [ Cena: CZ: "g"299 Kè "w"/ SK: "g"12 "w" ]\n");
	strcat(DIALOG_SHOP,"Body [ Poèet: "c" 6000 "w"] [ Cena: CZ: "g"499 Kè "w"/ SK: "g"20 "w" ]\n");
*/	SPD(playerid,UNNAMED+53,DIALOG_STYLE_LIST,"Obchod",DIALOG_SHOP,"Vybrat","Zavøít");
	return 1;
}
//============================================================================//
CMD:setvip(playerid,params[])
{
	SCMTOAA("setvip")
	new id,lvl,dni;
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	if(sscanf(params,"iii",id,lvl,dni)) return SM(playerid,"Pouij: "r"/setvip [ ID ] [ 0 - 1 ] [ Dni ]");
	if(dni < 0 || dni > 2000) return SM(playerid,"Chybnì zadaný poèet dní");
	IsNoConnected(id)
	if(lvl < 0 || lvl > 1) return SM(playerid,"Rozmezí levelù je "g"0 - 1");
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(id));
	if(lvl == 0)
	{
		if(vip[id] == 1)
		{
			phraci--;
			format(str,sizeof(str),"On-Line ~y~Premium Hraci: ~w~%d",phraci);
			TextDrawSetString(Textdraw9,str);
		}
		vip[id] = 0;
		format(str,sizeof(str),"%s "w"%s "r"odebral hráèi "w"%s "g"Premium Úèet.",Players(playerid),Jmeno(playerid),Jmeno(id));
		SCMTA(red,str);
		DOF2_SetInt(dfile,"VIP",0);
        DOF2_SaveFile();
	}
	else if(lvl > 0)
	{
		if(vip[id] == 1)
		{
			format(str,sizeof(str),"%s "w"%s "r"dal hráèi "w"%s "g"Premium Úèet "r"+"g"%d "r"dní.",Players(playerid),Jmeno(playerid),Jmeno(id),dni);
			SCMTA(red,str);
		}
		if(vip[id] == 0)
		{
			format(str,sizeof(str),"%s "w"%s "r"dal hráèi "w"%s "g"Premium Úèet "r"na "g"%d "r"dní.",Players(playerid),Jmeno(playerid),Jmeno(id),dni);
			SCMTA(red,str);
		}
		SetPlayerVIP(id,dni);
	    format(dfile,sizeof(dfile),USER_FILES,Jmeno(id));
		format(str,sizeof(str),"[ VIP Úèet expiruje: "g"%s "r"]",DATE(DOF2_GetInt(dfile,"VIP_vyprsi")));
		SCMTA(red,str);
	}
	GetOnlinePlayers();
	return 1;
}
//============================================================================//
CMD:setadmin(playerid,params[])
{
	SCMTOAA("setadmin")
	new id,lvl,lvl2,pass[150];
	if(!IsPlayerOnHighestLevel(playerid))
	{
		if(!IPA(playerid)) return SM(playerid,"Nejsi pøihláený pøes "r"RCON");
	}
	if(sscanf(params,"iiz",id,lvl,pass)) return SM(playerid,"Pouij: "r"/setadmin [ ID ] [ Admin Level ] [ Hodnost ]");
	IsNoConnected(id)
	if(lvl < 0 || lvl > 6) return SM(playerid,"Rozmezí levelù je "g"0 - 6");
	if(lvl2 < 0 || lvl2 > 5) return SM(playerid,"Rozmezí rze levelù je "g"0 - 5");
	if(strlen(pass) > 30) return SM(playerid,"Moc dlouhá Hodnost");
	if(lvl == 0)
	{
		Admin[id] = 0;
		format(str,sizeof(str),"Správce "w"%s "r"sebral hráèi "w"%s "r"Admin Práva.",Jmeno(playerid),Jmeno(id));
		SCMTA(red,str);
		format(Hodnost[id],30,"");
	}
	else if(lvl > 0)
	{
		Admin[id] = lvl;
		format(str,sizeof(str),"Správce "w"%s "r"nastavil hráèi "w"%s "r"Admin Práva.",Jmeno(playerid),Jmeno(id));
		SCMTA(red,str);
		format(Hodnost[id],30,"%s",pass);
	}
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(id));
	if(fexist(dfile))
	{
		DOF2_SetInt(dfile,"Admin level",Admin[id]);
		DOF2_SetString(dfile,"Hodnost",Hodnost[id]);
        DOF2_SaveFile();
        new query[200],Cache:cache,rows,fields;
        mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Users` WHERE `Nick`='%e' LIMIT 1",Jmeno(id));
        cache = mysql_query(mysql,query);
        cache_get_data(rows,fields,mysql);
        if(rows)
        {
			mysql_format(mysql,query,sizeof(query),"UPDATE `Users` SET `Hodnost`='%e' WHERE `Nick` = '%e' LIMIT 1",Hodnost[id],Jmeno(id));
			mysql_query(mysql,query,false);
        }
        cache_delete(cache,mysql);
	}
	SetDefaultTitul(id);
	GetOnlinePlayers();
	return 1;
}
//============================================================================//
CMD:admins(playerid,params[])
{
	SCMTOAA("admins")
	new DIALOG_ADMINS[2000],rows,fields,hodnost[50],name[24];
	new Cache:cache = mysql_query(mysql,"SELECT * FROM `Users` WHERE length(`Hodnost`) > 0 ORDER BY `LastConnect` DESC");
	cache_get_data(rows,fields,mysql);
	if(rows)
	{
		strcat(DIALOG_ADMINS,"Jméno\t"w"Funkce\t"w"Naposledy online\n");
		for(new i; i < rows; i ++)
		{
            cache_get_field_content(i,"Nick",name,mysql);
            cache_get_field_content(i,"Hodnost",hodnost,mysql);
            new dovolena = cache_get_field_content_int(i,"Dovolena",mysql);
            new id = GetPlayerIdFromName(name);
            if(IPC(id))
            {
                new eid = -1;
                if(strlen(EventAdmin))
                    eid = GetPlayerIdFromName(EventAdmin);
				if(eid == id)
                	format(str,sizeof(str),""c"%s "w"( "c"ID: %d "w")\t"w"%s\t"c"[ Tvoøí EVENT ]\n",name,id,hodnost);
                else if(AFK[id] == false)
                	format(str,sizeof(str),""g"%s "w"( "g"ID: %d "w")\t"w"%s\t"g"[ ONLINE ]\n",name,id,hodnost);
				else
					format(str,sizeof(str),""y"%s "w"( "y"ID: %d "w")\t"w"%s\t"y"[ AFK ]\n",name,id,hodnost);
	            strcat(DIALOG_ADMINS,str);

            }
            else
            {
                if(dovolena == 0){
	                format(str,sizeof(str),"{d1d1d1}%s\t{d1d1d1}%s\t{d1d1d1}[ %s {d1d1d1}]\n",name,hodnost,(dovolena == 0) ? (DATE(cache_get_field_content_int(i,"LastActivity",mysql))) : (""r"DOVOLENÁ"));
		            strcat(DIALOG_ADMINS,str);
				}
		    }
		}
		SPD(playerid,0,DIALOG_STYLE_TABLIST_HEADERS,"Administrátoøi",DIALOG_ADMINS,"Zavøít","");
	}
	else
	{
		SM(playerid,"Na serveru není ádný administrátor");
	}
	cache_delete(cache,mysql);
	return 1;
}
//============================================================================//
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	AFKMoving[playerid] = 0;
	ShowedDialog[playerid] = false;
	CarMenu(playerid, dialogid, response, listitem);
	if(dialogid == 551)
	{
	    if(response)
	    {
	        if(Achiv[playerid][BE_MEMBER] == 0)
	        {
	            if(GetGang(playerid) > 0)
	            {
	                SetPlayerAchievement(playerid,BE_MEMBER);
	            }
	        }
	    }
	    return 1;
	}
	if(dialogid == UNNAMED)
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
					SPD(playerid,UNNAMED+98,DIALOG_STYLE_INPUT,"Event Settings","Zadejte "r"ivot "w"mezera "c"vestu "w"\nPro kompletní doplnìní ivota nevyplòujte nic","Nastavit","Zavøít");
				}
				case 1:
				{
					for(new i; i <= GetPlayerPoolSize(); i ++)
					{
					    if(OnEvent[i] == true)
					    {
					        if(Admin[i] < 1)
					        {
						        TogglePlayerControllable(i,false);
							}
						}
					}
 				    format(str,sizeof(str),"%s "w"%s "r"%s vechny hráèe na eventu.",Players(playerid),Jmeno(playerid),SexWord(playerid,"zmrazil","zmrazila"));
				    SCMTA(red,str);
 				}
				case 2:
				{
					for(new i; i <= GetPlayerPoolSize(); i ++)
					{
					    if(OnEvent[i] == true)
					    {
					        TogglePlayerControllable(i,true);
						}
					}
				    format(str,sizeof(str),"%s "w"%s "r"%s vechny hráèe na eventu.",Players(playerid),Jmeno(playerid),SexWord(playerid,"odmrazil","odmrazila"));
				    SCMTA(red,str);
 				}
				case 3:
				{
					for(new i; i <= GetPlayerPoolSize(); i ++)
					{
					    if(OnEvent[i] == true)
					    {
							ResetPlayerWeaponsEx(i);
						}
					}
				    format(str,sizeof(str),"%s "w"%s "r"%s zbranì vem hráèùm na eventu.",Players(playerid),Jmeno(playerid),SexWord(playerid,"sebral","sebrala"));
				    SCMTA(red,str);
 				}
 				case 4:
 				{
					for(new i; i <= GetPlayerPoolSize(); i ++)
					{
					    if(OnEvent[i] == true)
					    {
					        if(Admin[i] < 1)
					        {
					            CBLOCK[i] = true;
							}
						}
					}
					format(str,sizeof(str),"%s "w"%s "r"%s pøíkazy vem hráèùm na eventu.",Players(playerid),Jmeno(playerid),SexWord(playerid,"bloknul","bloknula"));
				    SCMTA(red,str);
 				}
 				case 5:
 				{
					for(new i; i <= GetPlayerPoolSize(); i ++)
					{
					    if(OnEvent[i] == true)
					    {
					        if(Admin[i] < 1)
					        {
					            CBLOCK[i] = false;
							}
						}
					}
					format(str,sizeof(str),"%s "w"%s "r"%s pøíkazy vem hráèùm na eventu.",Players(playerid),Jmeno(playerid),SexWord(playerid,"odbloknul","odbloknula"));
					SCMTA(red,str);
				}
				case 6:
				{
					SPD(playerid,UNNAMED+1,DIALOG_STYLE_INPUT,"Weapon Give","Zde napite ID zbranì které chcete dát hráèùm na eventu.","Dát","Zpìt");
				}
				case 7:
				{
					for(new i; i <= GetPlayerPoolSize(); i ++)
					{
					    if(OnEvent[i] == true)
				    	{
							if(IsPlayerInAnyVehicle(i))
							{
								RepairVehicle(GetPlayerVehicleID(i));
							}
						}
					}
			        format(str,sizeof(str),"%s "w"%s "r"%s vozidla vem hráèùm na eventu.",Players(playerid),Jmeno(playerid),SexWord(playerid,"opravil","opravila"));
			        SCMTA(red,str);
				}
				case 8:
				{
					for(new i; i <= GetPlayerPoolSize(); i ++)
					{
					    if(OnEvent[i] == true)
				    	{
							SetPlayerColor(i,GetPlayerColor(i) & 0xFFFFFF00);
						}
					}
			        format(str,sizeof(str),"%s "w"%s "r"%s vechny hráèe na eventu.",Players(playerid),Jmeno(playerid),SexWord(playerid,"zneviditelnil","zneviditelnila"));
			        SCMTA(red,str);
				}
				case 9:
				{
					for(new i; i <= GetPlayerPoolSize(); i ++)
					{
					    if(OnEvent[i] == true)
				    	{
							AR[i] = true;
						}
					}
			        format(str,sizeof(str),"%s "w"%s "r"%s automatickou opravu vem hráèùm na eventu.",Players(playerid),Jmeno(playerid),SexWord(playerid,"zapnul","zapnula"));
			        SCMTA(red,str);
				}
				case 10:
				{
					for(new i; i <= GetPlayerPoolSize(); i ++)
					{
					    if(OnEvent[i] == true)
				    	{
							AR[i] = false;
							if(IsPlayerInAnyVehicle(i))
							{
								RepairVehicle(GetPlayerVehicleID(i));
							}
						}
					}
			        format(str,sizeof(str),"%s "w"%s "r"%s automatickou opravu vem hráèùm na eventu.",Players(playerid),Jmeno(playerid),SexWord(playerid,"vypnul","vypnula"));
			        SCMTA(red,str);
				}
				case 11:
				{
					for(new i; i <= GetPlayerPoolSize(); i ++)
					{
					    if(OnEvent[i] == true)
				    	{
							EventDL[i] = true;
						}
					}
			        format(str,sizeof(str),"%s "w"%s "r"%s drunk level vem hráèùm na eventu.",Players(playerid),Jmeno(playerid),SexWord(playerid,"nastavil","nastavila"));
			        SCMTA(red,str);
				}
				case 12:
				{
					for(new i; i <= GetPlayerPoolSize(); i ++)
					{
					    if(OnEvent[i] == true)
				    	{
							EventDL[i] = false;
							SetPlayerDrunkLevel(i,0);
						}
					}
			        format(str,sizeof(str),"%s "w"%s "r"%s drunk level vem hráèùm na eventu.",Players(playerid),Jmeno(playerid),SexWord(playerid,"zruil","zruila"));
			        SCMTA(red,str);
				}
				case 13:
				{
				    if(RunEvent == 9) return SM(playerid,"Na tomto eventu nemùete vypnout zabíjení hráèù");
					for(new i; i <= GetPlayerPoolSize(); i ++)
					{
					    if(IPC(i) && !IsPlayerNPC(i))
					    {
							if(OnEvent[i] == true)
							{
							    SetPlayerTeam(i,254);
							}
					    }
					}
			        format(str,sizeof(str),"%s "w"%s "r"%s zabíjení hráèù na eventu.",Players(playerid),Jmeno(playerid),SexWord(playerid,"vypnul","vypnula"));
			        SCMTA(red,str);
				}
				case 14:
				{
				    if(RunEvent == 9) return SM(playerid,"Na tomto eventu nemùete zapnout zabíjení hráèù");
					for(new i; i <= GetPlayerPoolSize(); i ++)
					{
					    if(IPC(i) && !IsPlayerNPC(i))
					    {
							if(OnEvent[i] == true)
							{
							    SetPlayerTeam(i,255);
							}
					    }
					}
			        format(str,sizeof(str),"%s "w"%s "r"%s zabíjení hráèù na eventu.",Players(playerid),Jmeno(playerid),SexWord(playerid,"zapnul","zapnula"));
			        SCMTA(red,str);
				}
				case 15:
				{
				    SPD(playerid,UNNAMED+178,DIALOG_STYLE_INPUT,"Event Settings","Zadejte velikost oblasti","Zadat","Zpìt");
				}
			}
			ShowPlayerEventSettings(playerid);
		}
		return 1;
	}
	if(dialogid == UNNAMED+1)
	{
		if(response)
		{
			new wepid;
			if(sscanf(inputtext,"i",wepid)) return SPD(playerid,UNNAMED+1,DIALOG_STYLE_INPUT,"Weapon Give","Zde napite ID zbranì které chcete dát hráèùm na eventu.","Dát","Zpìt");
			if(wepid > 18 && wepid < 22) return SPD(playerid,UNNAMED+1,DIALOG_STYLE_INPUT,"Weapon Give","Neplatné ID","Dát","Zpìt");
//			if(wepid == 38 || wepid == 44 || wepid == 45) return SPD(playerid,UNNAMED+1,DIALOG_STYLE_INPUT,"Weapon Give","Tato zbraò je zakázána Anti - Cheatem","Dát","Zpìt");
		    format(str,sizeof(str),"%s "w"%s "r"%s zbraò "w"%s "r"vem hráèùm na eventu.",Players(playerid),Jmeno(playerid),SexWord(playerid,"dal","dala"),WeaponsNames(wepid));
		    SCMTA(red,str);
			for(new i; i <= GetPlayerPoolSize(); i++)
			{
				if(OnEvent[i] == true)
				{
					GivePlayerWeaponEx(i,wepid,15000);
				}
			}
			SPD(playerid,UNNAMED+1,DIALOG_STYLE_INPUT,"Weapon Give","Zde napite ID zbranì které chcete dát hráèùm na eventu.","Dát","Zpìt");

		}
		else ShowPlayerEventSettings(playerid);
		return 1;
	}
	if(dialogid == UNNAMED+2)
	{
		if(response)
		{
			if(GetClickText(inputtext,"Vypnout rádio"))
			{
			    StopAudioStreamForPlayer(playerid);
			    SM(playerid,"Rádio vypnuto");
				if(Listening[playerid] != -1)
				{
				    if(Listening[playerid] <= MAX_RADIOS)
				    {
						Radio[Listening[playerid]][RadioListeners]--;
					}
					Listening[playerid] = -1;
				}
				MusicID[playerid] = 0;
				MusicLenght[playerid] = 0;
			}
			else if(GetClickText(inputtext,"Vlastní URL"))
			{
			    SPD(playerid,UNNAMED+127,DIALOG_STYLE_INPUT,"Rádio - Vlastí URL","Zadejte URL pro pøehrání vlastního rádia/písnièky","Pøehrát","Zavøít");
			}
/*
			else if(GetClickText(inputtext,"Hudba"))
			{
				ShowMusicList(playerid,0);
				SetPVarInt(playerid,"Pages",0);
			}
*/
			else
			{
				for(new i; i < listitem-2; i ++)
				{
					if(strlen(Radio[i][RadioName]) == 0)
					{
					    listitem++;
					}
				}
				listitem -= 1;
				printf("%d",listitem);
				format(str,sizeof(str),"%s ~g~%s ~w~posloucha radio ~r~%s~w~.",TDPlayers(playerid),Jmeno(playerid),Radio[listitem][RadioName],listitem);
				AddStringToTextDraw(str);
			    PlayAudioStreamForPlayer(playerid,Radio[listitem][RadioURL]);
			    if(Listening[playerid] > -1)
			    {
				    if(Listening[playerid] <= MAX_RADIOS)
				    {
						Radio[Listening[playerid]][RadioListeners]--;
					}
			    }
		    	Radio[listitem][RadioListeners]++;
			    Listening[playerid] = listitem;
				format(str,sizeof(str),"Poslouchá rádio "c"%s",Radio[listitem][RadioName]);
				SM(playerid,str);
				AutoPlay[playerid] = 0;
			}
		}
		return 1;
	}
	if(dialogid == UNNAMED+3)
	{
	    if(response)
		{
			new DIALOG_COLORS[1000];
			for(new i; i < 20; i ++)
			{
			    new color[255],color2[255];
			    format(color,sizeof(color),"TextColor[%d]",i);
			    format(color2,sizeof(color2),"ColorName[%d]",i);
				if(strlen(DOF2_GetString(CONFIG,color)) > 0)
				{
					format(str,sizeof(str),"{%s}%s\n",DOF2_GetString(CONFIG,color),DOF2_GetString(CONFIG,color2));
					strcat(DIALOG_COLORS,str);
				}
			}
			switch(listitem)
			{
				case 0:
				{
					SPD(playerid,UNNAMED+4,DIALOG_STYLE_LIST,"Barva Nicku",DIALOG_COLORS,"Zmìnit","Zavøít");
				}
				case 1:
				{
					SPD(playerid,UNNAMED+5,DIALOG_STYLE_LIST,"Barva Textu",DIALOG_COLORS,"Zmìnit","Zavøít");
				}
			}
		}
		return 1;
	}
	if(dialogid == UNNAMED+4)
	{
	    if(response)
	    {
			format(str,sizeof(str),"NickColor[%d]",listitem);
			if(strlen(DOF2_GetString(CONFIG,str)) == 0 ) return SM(playerid,"Chyba v kodu barvy");
			format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
			DOF2_SetString(dfile,"BarvaNicku",DOF2_GetString(CONFIG,str));
			if(Player[playerid][pHide] > 0)
				Color[playerid] = HideColor(HexToInt(DOF2_GetString(CONFIG,str)));
			else
				Color[playerid] = HexToInt(DOF2_GetString(CONFIG,str));
			new str2[255],str3[255];
			format(str2,sizeof(str2),"TextColor[%d]",listitem);
			format(str3,sizeof(str3),"ColorName[%d]",listitem);
			format(str,sizeof(str),"Barva nicku nastavena [ {%s}%s "w"]",DOF2_GetString(CONFIG,str2),DOF2_GetString(CONFIG,str3));
			SM(playerid,str);
		}
		return 1;
	}
	if(dialogid == UNNAMED+5)
	{
	    if(response)
	    {
   			format(str,sizeof(str),"TextColor[%d]",listitem);
			if(strlen(DOF2_GetString(CONFIG,str)) == 0 ) return SM(playerid,"Chyba v kodu barvy");
			SetPVarString(playerid,"TextColor",DOF2_GetString(CONFIG,str));
			new str2[255],str3[255];
			format(str2,sizeof(str2),"TextColor[%d]",listitem);
			format(str3,sizeof(str3),"ColorName[%d]",listitem);
			format(str,sizeof(str),"Barva textu nastavena [ {%s}%s "w"]",DOF2_GetString(CONFIG,str2),DOF2_GetString(CONFIG,str3));
			SM(playerid,str);
		}
		return 1;
	}
	if(dialogid == UNNAMED+6)
	{
	    if(response)
	    {
	        new name[144];
			if(!sscanf(inputtext,"i",ecarid))
			{

			}
			else if(!sscanf(inputtext,"z",name))
			{
			    ecarid = GetVehicleIDFromName(name);
				if(ecarid < 400 || ecarid > 611) return SPD(playerid,UNNAMED+6,DIALOG_STYLE_INPUT,"Nastavit Port 3","Neplatný název vozidla","Nastavit","Zavøít");
			}
			else
			{
			    return SPD(playerid,UNNAMED+6,DIALOG_STYLE_INPUT,"Nastavit Port 3","Zadejte ID vozidla se kterým se hráèi budou portovat","Nastavit","Zavøít");
			}
			if(ecarid < 400 || ecarid > 611) return SPD(playerid,UNNAMED+6,DIALOG_STYLE_INPUT,"Nastavit Port 3","Rozmezí ID aut je 400 - 611","Nastavit","Zavøít");
	        GetPlayerPos(playerid,XX,YY,ZZ);
			if(!IsPlayerInAnyVehicle(playerid))
			{
        		GetPlayerFacingAngle(playerid,AA);
			}
			else
			{
			    GetVehicleZAngle(GetPlayerVehicleID(playerid),AA);
			}
			format(str,sizeof(str),"~w~%s ~g~%s ~w~zapnul port s vozidlem ID ~g~%d~w~.",TDPlayers(playerid),Jmeno(playerid),ecarid);
			AddStringToTextDraw(str);
			interior = GetPlayerInterior(playerid);
			RunEvent = 3;
			portid = 3;
		}
		return 1;
	}
	if(dialogid == UNNAMED+7)
	{
		if(response)
		{
			switch(listitem)
			{
			    case 0: SetPlayerSpecialAction(playerid,2);
			    case 1: CreateCarMenuVehicle(playerid,520);
			    case 2: CreateCarMenuVehicle(playerid,425);
			    case 3: CreateCarMenuVehicle(playerid,432);
			}
		}
		return 1;
	}
	if(dialogid == UNNAMED+8)
	{
	    if(response || !response)
	    {
			if(DOF2_GetInt(CONFIG,"VIP_ZDARMA") > 0)
			{
				format(str,sizeof(str),"Do zaèátku dostáváte premium úèet na "g"%d dní\n\n"dc"+ Skrytí na mapì na "g"10 hodin",DOF2_GetInt(CONFIG,"VIP_ZDARMA"));
				SPD(playerid,UNNAMED+9,DIALOG_STYLE_MSGBOX,"Tutorial",str,"Dalí","");// "w"pro prodlouení je potøeba vip dokoupit\nVip pøíkazy najdete ve "g"/vip "w"více informací v "g"/premium","Dalí","");
				SetPlayerVIP(playerid,DOF2_GetInt(CONFIG,"VIP_ZDARMA"),true);
				TextDrawSetString(Textdraw9,str);
				SetDefaultTitul(playerid);
				GetOnlinePlayers();
			}
		}
		return 1;
	}
	if(dialogid == UNNAMED+9)
	{
	    if(response || !response)
	    {
			SPD(playerid,UNNAMED+10,DIALOG_STYLE_MSGBOX,"VIP Nastavení","Nyní si vyberete barvu "y"nicku "w"[ "c"Klikni na "w": "g"Dalí"w" ]","Dalí","");
		}
		return 1;
	}
	if(dialogid == UNNAMED+10)
	{
	    if(response || !response)
	    {
			new DIALOG_COLORS[1000];
			for(new i; i < 20; i ++)
			{
			    new color[255],color2[255];
			    format(color,sizeof(color),"TextColor[%d]",i);
			    format(color2,sizeof(color2),"ColorName[%d]",i);
				if(strlen(DOF2_GetString(CONFIG,color)) > 0)
				{
					format(str,sizeof(str),"{%s}%s\n",DOF2_GetString(CONFIG,color),DOF2_GetString(CONFIG,color2));
					strcat(DIALOG_COLORS,str);
				}
			}
	        SPD(playerid,UNNAMED+11,DIALOG_STYLE_LIST,"VIP Nastavení",DIALOG_COLORS,"Dalí","");
		}
		return 1;
	}
	if(dialogid == UNNAMED+11)
	{
	    if(response || !response)
	    {
			format(str,sizeof(str),"NickColor[%d]",listitem);
			if(strlen(DOF2_GetString(CONFIG,str)) == 0 ) return SM(playerid,"Chyba v kodu barvy");
			format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
			DOF2_SetString(dfile,"BarvaNicku",DOF2_GetString(CONFIG,str));
			DOF2_SaveFile();
			if(Player[playerid][pHide] > 0)
				Color[playerid] = HideColor(HexToInt(DOF2_GetString(CONFIG,str)));
			else
				Color[playerid] = HexToInt(DOF2_GetString(CONFIG,str));
			new str2[255],str3[255];
			format(str2,sizeof(str2),"TextColor[%d]",listitem);
			format(str3,sizeof(str3),"ColorName[%d]",listitem);
			format(str,sizeof(str),"Barva nicku nastavena [ {%s}%s "w"]",DOF2_GetString(CONFIG,str2),DOF2_GetString(CONFIG,str3));
			SM(playerid,str);
			SPD(playerid,UNNAMED+12,DIALOG_STYLE_MSGBOX,"VIP Nastavení","Nyní si vyberete barvu "y"textu "w"[ "c"Klikni na "w": "g"Dalí"w" ]","Dalí","");
		}
		return 1;
	}
	if(dialogid == UNNAMED+12)
	{
	    if(response || !response)
	    {
			new DIALOG_COLORS[1000];
			for(new i; i < 20; i ++)
			{
			    new color[255],color2[255];
			    format(color,sizeof(color),"TextColor[%d]",i);
			    format(color2,sizeof(color2),"ColorName[%d]",i);
				if(strlen(DOF2_GetString(CONFIG,color)) > 0)
				{
					format(str,sizeof(str),"{%s}%s\n",DOF2_GetString(CONFIG,color),DOF2_GetString(CONFIG,color2));
					strcat(DIALOG_COLORS,str);
				}
			}
   	    	SPD(playerid,UNNAMED+13,DIALOG_STYLE_LIST,"VIP Nastavení",DIALOG_COLORS,"Dalí","");
		}
		return 1;
	}
	if(dialogid == UNNAMED+13)
	{
	    if(response || !response)
	    {
   			format(str,sizeof(str),"TextColor[%d]",listitem);
			if(strlen(DOF2_GetString(CONFIG,str)) == 0 ) return SM(playerid,"Chyba v kodu barvy");
			SetPVarString(playerid,"TextColor",DOF2_GetString(CONFIG,str));
			new str2[255],str3[255];
			format(str2,sizeof(str2),"TextColor[%d]",listitem);
			format(str3,sizeof(str3),"ColorName[%d]",listitem);
			format(str,sizeof(str),"Barva textu nastavena [ {%s}%s "w"]",DOF2_GetString(CONFIG,str2),DOF2_GetString(CONFIG,str3));
			SM(playerid,str);
		}
		SPD(playerid,UNNAMED+201,DIALOG_STYLE_INPUT,"E-Mail","Zadejte Vá E-Mail (slouí pro obnovu hesla, "g"není nutné na vlastní riziko"dc")","Zadat","Zavøít");
		SM(playerid,"Vechny premium výhody zobrazíte pøíkazem "g"/premium");
		return 1;
	}
	if(dialogid == UNNAMED+14)
	{
	    if(response)
	    {
	        if(listitem == 0)
			{
				SPD(playerid,UNNAMED+15,DIALOG_STYLE_LIST,"Pistole","Pistole\nPistole s tlumièem\nDesert Eagle","Vybrat","Zruit");
			}
	        if(listitem == 1)
			{
				SPD(playerid,UNNAMED+16,DIALOG_STYLE_LIST,"Brokovnice","Sawn off Shotgun\nShotgun\nCombat Shotgun","Vybrat","Zruit");
			}
 	        if(listitem == 2)
			{
				SPD(playerid,UNNAMED+17,DIALOG_STYLE_LIST,"Útoèné Puky","M4\nAK-47\nPuka\nSniperka","Vybrat","Zruit");
			}
	        if(listitem == 3)
			{
				SPD(playerid,UNNAMED+18,DIALOG_STYLE_LIST,"Samopaly","Uzi\nMP5\nTec9","Vybrat","Zruit");
			}
	        if(listitem == 4)
			{
				SPD(playerid,UNNAMED+19,DIALOG_STYLE_LIST,"Ostatní","Boxer\nGolfová Hùl\nObuek\nNù\nBaseballová Pálka\nLopata\nKuleèníková Hùl\nKatana\nMotorovka\nDildo 1\nDildo 2\nVibrator 1\nVibrator 2\nKytka\nHùl\nGranát\nSlzný plyn\nMolotov\nSpray\nHasièák\nFotoaparát\nPadák","Vybrat","Zruit");
			}
			if(listitem == 5)
			{
				CallRemoteFunction("cmd_pustitzbrane","i",playerid);
			}
		}
		return 1;
	}
	if(dialogid == UNNAMED+15)
	{
		if(response)
		{
		    if(listitem == 0)
			{
			    GivePlayerWeaponEx(playerid,22,20000);
			}
 		    if(listitem == 1)
			{
			    GivePlayerWeaponEx(playerid,23,20000);
			}
  		    if(listitem == 2)
			{
			    GivePlayerWeaponEx(playerid,24,20000);
			}
		}
	}
	if(dialogid == UNNAMED+16)
	{
		if(response)
		{
		    if(listitem == 0)
			{
			    GivePlayerWeaponEx(playerid,26,20000);
			}
 		    if(listitem == 1)
			{
			    GivePlayerWeaponEx(playerid,25,20000);
			}
  		    if(listitem == 2)
			{
			    GivePlayerWeaponEx(playerid,27,20000);
			}
		}
	}
	if(dialogid == UNNAMED+17)
	{
		if(response)
		{
		    if(listitem == 0)
			{
			    GivePlayerWeaponEx(playerid,31,20000);
			}
 		    if(listitem == 1)
			{
			    GivePlayerWeaponEx(playerid,30,20000);
			}
  		    if(listitem == 2)
			{
			    GivePlayerWeaponEx(playerid,33,20000);
			}
		    if(listitem == 3)
			{
			    GivePlayerWeaponEx(playerid,34,20000);
			}
		}
	}
	if(dialogid == UNNAMED+18)
	{
		if(response)
		{
		    if(listitem == 0)
			{
			    GivePlayerWeaponEx(playerid,28,20000);
			}
 		    if(listitem == 1)
			{
			    GivePlayerWeaponEx(playerid,29,20000);
			}
  		    if(listitem == 2)
			{
			    GivePlayerWeaponEx(playerid,32,20000);
			}
		}
	}
	if(dialogid == UNNAMED+19)
	{
		if(response)
		{
		    if(listitem == 0)
			{
			    GivePlayerWeaponEx(playerid,1,20000);
			}
 		    if(listitem == 1)
			{
			    GivePlayerWeaponEx(playerid,2,20000);
			}
  		    if(listitem == 2)
			{
			    GivePlayerWeaponEx(playerid,3,20000);
			}
  		    if(listitem == 3)
			{
			    GivePlayerWeaponEx(playerid,4,20000);
			}
  		    if(listitem == 4)
			{
			    GivePlayerWeaponEx(playerid,5,20000);
			}
  		    if(listitem == 5)
			{
			    GivePlayerWeaponEx(playerid,6,20000);
			}
  		    if(listitem == 6)
			{
			    GivePlayerWeaponEx(playerid,7,20000);
			}
  		    if(listitem == 7)
			{
			    GivePlayerWeaponEx(playerid,8,20000);
			}
  		    if(listitem == 8)
			{
			    GivePlayerWeaponEx(playerid,9,20000);
			}
   		    if(listitem == 9)
			{
			    GivePlayerWeaponEx(playerid,10,20000);
			}
   		    if(listitem == 10)
			{
			    GivePlayerWeaponEx(playerid,11,20000);
			}
   		    if(listitem == 11)
			{
			    GivePlayerWeaponEx(playerid,12,20000);
			}
   		    if(listitem == 12)
			{
			    GivePlayerWeaponEx(playerid,13,20000);
			}
   		    if(listitem == 13)
			{
			    GivePlayerWeaponEx(playerid,14,20000);
			}
   		    if(listitem == 14)
			{
			    GivePlayerWeaponEx(playerid,15,20000);
			}
   		    if(listitem == 15)
			{
			    GivePlayerWeaponEx(playerid,16,20000);
			}
   		    if(listitem == 16)
			{
			    GivePlayerWeaponEx(playerid,17,20000);
			}
   		    if(listitem == 17)
			{
			    GivePlayerWeaponEx(playerid,18,20000);
			}
   		    if(listitem == 18)
			{
			    GivePlayerWeaponEx(playerid,41,20000);
			}
   		    if(listitem == 19)
			{
			    GivePlayerWeaponEx(playerid,42,20000);
			}
   		    if(listitem == 20)
			{
			    GivePlayerWeaponEx(playerid,43,20000);
			}
   		    if(listitem == 21)
			{
			    GivePlayerWeaponEx(playerid,46,20000);
			}
		}
		return 1;
	}
	if(dialogid == UNNAMED+20)
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0: SetPlayerSpecialAction(playerid,20);
	            case 1: SetPlayerSpecialAction(playerid,22);
				case 2: SetPlayerSpecialAction(playerid,23);
				case 3: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
				case 4: SetPlayerDrunkLevel(playerid,50000);
				case 5: SetPlayerDrunkLevel(playerid,0);
			}
		}
		return 1;
	}
	if(dialogid == UNNAMED+21)
	{
	    if(response)
	    {
			new engine,lights,alarm,doors,bonnet,boot,objective;
			new vidd = GetPlayerVehicleID(playerid);
	        switch(listitem)
	        {
				case 0:
				{
					GetVehicleParamsEx(vidd,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vidd,1,lights,alarm,doors,bonnet,boot,objective);
					SM(playerid,"Zapnul si motor");
	        	}
				case 1:
	        	{
					GetVehicleParamsEx(vidd,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vidd,0,lights,alarm,doors,bonnet,boot,objective);
					SM(playerid,"Vypnul si motor");
	        	}
				case 2:
	        	{
					GetVehicleParamsEx(vidd,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vidd,engine,1,alarm,doors,bonnet,boot,objective);
					SM(playerid,"Zapnul si svìtla");
	        	}
				case 3:
  				{
					GetVehicleParamsEx(vidd,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vidd,engine,0,alarm,doors,bonnet,boot,objective);
					SM(playerid,"Vypnul si svìtla");
	        	}
				case 4:
				{
					GetVehicleParamsEx(vidd,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vidd,engine,lights,1,doors,bonnet,boot,objective);
					SM(playerid,"Zapnul si alarm");
	        	}
			    case 5:
	        	{
					GetVehicleParamsEx(vidd,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vidd,engine,lights,0,doors,bonnet,boot,objective);
					SM(playerid,"Vypnul si alarm");
		       	}
				case 6:
	     	    {
					GetVehicleParamsEx(vidd,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vidd,engine,lights,alarm,doors,1,boot,objective);
					SM(playerid,"Otevøel si kapotu");
	        	}
				case 7:
	        	{
					GetVehicleParamsEx(vidd,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vidd,engine,lights,alarm,doors,0,boot,objective);
					SM(playerid,"Zavøel si kapotu");
	        	}
				case 8:
	        	{
					GetVehicleParamsEx(vidd,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vidd,engine,lights,alarm,doors,bonnet,1,objective);
					SM(playerid,"Otevøel si kufr");
	        	}
				case 9:
	        	{
					GetVehicleParamsEx(vidd,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vidd,engine,lights,alarm,doors,bonnet,0,objective);
					SM(playerid,"Zavøel si kufr");
	        	}
			}
		}
		return 1;
	}
	if(dialogid == UNNAMED+23)
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	            	SetPlayerFightingStyle(playerid,4);
					SM(playerid,"Odnauèil si se bojová umìní");
				}
	            case 1:
	            {
	            	SetPlayerFightingStyle(playerid,5);
					SM(playerid,"Nauèil si se bojové umìní "g"Box");
				}
	            case 2:
	            {
	            	SetPlayerFightingStyle(playerid,6);
					SM(playerid,"Nauèil si se bojové umìní "g"Kung Fu");
				}
	            case 3:
	            {
	            	SetPlayerFightingStyle(playerid,7);
					SM(playerid,"Nauèil si se bojové umìní "g"Kneehead");
				}
	            case 4:
	            {
	            	SetPlayerFightingStyle(playerid,15);
					SM(playerid,"Nauèil si se bojové umìní "g"Grabkick");
				}
 	            case 5:
	            {
	            	SetPlayerFightingStyle(playerid,16);
					SM(playerid,"Nauèil si se bojové umìní "g"Elbow");
    			}
			}
		}
		return 1;
	}
	if(dialogid == UNNAMED+24)
	{
	    if(response)
	    {
			switch(listitem)
			{
			    case 0: SPD(playerid,UNNAMED+25,DIALOG_STYLE_INPUT,"Nastavení","Zadejte poèet dní, na jak dlouho bude VIP Zdarma.","Nastavit","Zavøít");
				case 1:
				{
					if(DOF2_GetInt(CONFIG,"SBLOCK") == 0)
					{
					    DOF2_SetInt(CONFIG,"SBLOCK",1);
					    SM(playerid,"Pøíkaz "r"/astream "w"bloknutý");
					}
					else
					{
					    DOF2_SetInt(CONFIG,"SBLOCK",0);
					    SM(playerid,"Pøíkaz "r"/astream "w"odbloknutý");
					}
				}
				case 2:
				{
					if(DOF2_GetInt(CONFIG,"AREPAIR") == 0)
					{
					    DOF2_SetInt(CONFIG,"AREPAIR",1);
					    DOF2_SaveFile();
						AutRepair = 1;
					    SM(playerid,"Automatická oprava vozidel zapnuta");
					}
					else
					{
					    DOF2_SetInt(CONFIG,"AREPAIR",0);
					    DOF2_SaveFile();
					    AutRepair = 0;
					    SM(playerid,"Automatická oprava vozidel vypnuta");
					    for(new i; i <= GetPlayerPoolSize(); i++)
					    {
							SetVehicleHealth(GetPlayerVehicleID(i),100);
							RepairVehicle(GetPlayerVehicleID(i));
					    }
					}
				}
				case 3: SPD(playerid,UNNAMED+27,DIALOG_STYLE_INPUT,"Nastavení","Zadejte èástku jednoho výbuného náboje ( "y"/ebullets "w")","Nastavit","Zavøít");
				case 4: SPD(playerid,UNNAMED+28,DIALOG_STYLE_INPUT,"Nastavení","Zadejte poèet sekund, za jak dlouho ubìhne herní minuta","Nastavit","Zavøít");
				case 5: SPD(playerid,UNNAMED+60,DIALOG_STYLE_INPUT,"Nastavení","Zadejte limit Warp Block pro hráèe","Nastavit","Zavøít");
				case 6: SPD(playerid,UNNAMED+61,DIALOG_STYLE_INPUT,"Nastavení","Zadejte limit Warp Block pro "y"VIP "w"hráèe","Nastavit","Zavøít");
				case 7: SPD(playerid,UNNAMED+63,DIALOG_STYLE_INPUT,"Nastavení","Zadejte cenu VIP v bodech na jeden den","Nastavit","Zavøít");
				case 8:
				{
					new DIALOG_COLORS[1000];
					for(new i; i < 20; i ++)
					{
					    new color[255],color2[255];
					    format(color,sizeof(color),"TextColor[%d]",i);
					    format(color2,sizeof(color2),"ColorName[%d]",i);
						if(strlen(DOF2_GetString(CONFIG,color)) > 0)
						{
							format(str,sizeof(str),"{%s}%s\n",DOF2_GetString(CONFIG,color),DOF2_GetString(CONFIG,color2));
							strcat(DIALOG_COLORS,str);
						}
						else
						{
							format(str,sizeof(str),"Barva [ "r"%d "w"] - "w"Nenastavena\n",i+1);
						    strcat(DIALOG_COLORS,str);
						}
					}
				 	SPD(playerid,UNNAMED+79,DIALOG_STYLE_LIST,"Nastavení",DIALOG_COLORS,"Vybrat","Zavøít");
				}
				case 9: SPD(playerid,UNNAMED+99,DIALOG_STYLE_INPUT,"Nastavení","Zadejte cenu jednoho bodu [ Popø. mezeru a název slevy ]","Nastavit","Zavøít");
				case 10:
				{
				    new DIALOG_RADIOS[2000];
				    for(new i; i < MAX_RADIOS; i ++)
				    {
					    if(strlen(Radio[i][RadioName]) > 0)
					    {
							format(str,sizeof(str),"%d. {00FFFF}%s\n",i,Radio[i][RadioName]);
							strcat(DIALOG_RADIOS,str);
						}
				    }
					strcat(DIALOG_RADIOS,"Pøidat rádio");
					SPD(playerid,UNNAMED+103,DIALOG_STYLE_LIST,"Nastavení rádii",DIALOG_RADIOS,"Vybrat","Zavøít");
				}
			}
		}
		return 1;
	}
	if(dialogid == UNNAMED+25)
	{
	    if(response)
	    {
	        new dni;
	        if(sscanf(inputtext,"i",dni)) return SPD(playerid,UNNAMED+25,DIALOG_STYLE_INPUT,"Nastavení","Zadejte poèet dní, na jak dlouho bude VIP Zdarma.","Nastavit","Zavøít");
			if(dni < 0 || dni > 2000) return SPD(playerid,UNNAMED+25,DIALOG_STYLE_INPUT,"Nastavení","Pouijte minimálnì 0 dní a maximálnì 2000 dní.","Nastavit","Zavøít");
			DOF2_SetInt(CONFIG,"VIP_ZDARMA",dni);
			DOF2_SaveFile();
			format(str,sizeof(str),"VIP Zdarma nastaveno na "g"%d "w"dní",dni);
			SM(playerid,str);
		}
		return 1;
	}
	if(dialogid == UNNAMED+26)
	{
	    if(response)
	    {
	        new castka;
	        if(sscanf(inputtext,"i",castka)) return SPD(playerid,UNNAMED+26,DIALOG_STYLE_INPUT,"Nastavení","Zadejte èástku, kterou bude dostávat kadý hráè za odmìnu","Nastavit","Zavøít");
			if(castka < 1 || castka > 100000000) return SPD(playerid,UNNAMED+26,DIALOG_STYLE_INPUT,"Nastavení","Pouijte minimálnì 1$ a maximálnì 100 000 000$.","Nastavit","Zavøít");
			DOF2_SetInt(CONFIG,"Castka",castka);
            DOF2_SaveFile();
			format(str,sizeof(str),"Odmìna nastavena na "g"%s$",Split(castka));
			SM(playerid,str);
		}
		return 1;
	}
	if(dialogid == UNNAMED+27)
	{
	    if(response)
	    {
	        new castka;
	        if(sscanf(inputtext,"i",castka)) return SPD(playerid,UNNAMED+27,DIALOG_STYLE_INPUT,"Nastavení","Zadejte èástku jednoho výbuného náboje ( "y"/ebullets "w")","Nastavit","Zavøít");
			if(castka < 1 || castka > 100000000) return SPD(playerid,UNNAMED+27,DIALOG_STYLE_INPUT,"Nastavení","Pouijte minimálnì 1$ a maximálnì 100 000 000$.","Nastavit","Zavøít");
			DOF2_SetInt(CONFIG,"Cena",castka);
			DOF2_SaveFile();
			format(str,sizeof(str),"Cena jednoho výbuného náboje nastavena na: "g"%s$",Split(castka));
			SM(playerid,str);
		}
		return 1;
	}
	if(dialogid == UNNAMED+28)
	{
	    if(response)
	    {
	        new minut;
	        if(sscanf(inputtext,"i",minut)) return SPD(playerid,UNNAMED+28,DIALOG_STYLE_INPUT,"Nastavení","Zadejte poèet sekund, za jak dlouho ubìhne herní minuta","Nastavit","Zavøít");
			if(minut < 0 || minut > 60) return SPD(playerid,UNNAMED+28,DIALOG_STYLE_INPUT,"Nastavení","Pouijte minimálnì 0 sekund a maximálnì 60 sekund.","Nastavit","Zavøít");
			DOF2_SetInt(CONFIG,"Minuta",minut);
			DOF2_SaveFile();
			format(str,sizeof(str),"Herní minuta nastavena na reálných "g"%d "w"sekund",minut);
			SM(playerid,str);
			KillTimer(TimerGameTime);
			TimerGameTime = SetTimer("GameTime",DOF2_GetInt(CONFIG,"Minuta")*1000,true);
		}
		return 1;
	}
	if(dialogid == UNNAMED+29)
	{
	    if(response){
			ShowWarps(playerid,listitem);
			SetPVarInt(playerid,"LastID",listitem);
		}
		return 1;
	}
	if(dialogid == UNNAMED+30)
	{
	    if(response)
	    {
	        new category = GetPVarInt(playerid,"LastID"),warps[sizeof(Warps)],lastwarp,finalid;
		    for(new i; i < sizeof(Warps); i ++)
		    {
		        if(Warps[i][wCategory] == category)
		        {
		            warps[lastwarp] = i;
					lastwarp++;
				}
			}
			finalid = warps[listitem];
			WarpPlayer(playerid,finalid);
	    }
	    else WarpMenu(playerid);
	    return 1;
	}
	if(dialogid == UNNAMED+31)
	{
	    if(response)
	    {
	        new id = GetPVarInt(playerid,"LastID");
	        WarpPlayer(playerid,id,1);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+32)
	{
	    if(response)
	    {
	        new gps[sizeof(GPS)] = {-1,...},previd = -1,maxlistitem = 4;
			for(new i; i < sizeof(GPS); i ++)
			{
				if(previd != GPS[i][gCat]){
					gps[GPS[i][gCat]] = i;
					previd = GPS[i][gCat];
					maxlistitem++;
				}
			}
			if(listitem < 4)
			{
			    SetPVarInt(playerid,"LastID",listitem);
			    switch(listitem)
			    {
			        case 0: SPD(playerid,UNNAMED+33,DIALOG_STYLE_INPUT,"Navigace","Zadejete è.p. domu, ke kterému chcete navigovat","Zadat","Zpìt");
			        case 1: SPD(playerid,UNNAMED+33,DIALOG_STYLE_INPUT,"Navigace","Zadejete IÈO nemovitost, ke které chcete navigovat","Zadat","Zpìt");
			        case 2: SPD(playerid,UNNAMED+33,DIALOG_STYLE_INPUT,"Navigace","Zadejete ID gangu, ke kterému chcete navigovat","Zadat","Zpìt");
					case 3: CallRemoteFunction("ShowPlayerSpecProperties","i",playerid);
				}
			}
			else if(listitem < maxlistitem && listitem >= 4)
			{
			    new id = listitem-4;
				new bestid = gps[id],Float:Pos[3],Float:meters;
				GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
				meters = GetDistanceBetweenPoints(Pos[0],Pos[1],Pos[2],GPS[bestid][gX],GPS[bestid][gY],GPS[bestid][gZ]);
				for(new i; i < sizeof(GPS); i ++)
				{
					if(GPS[i][gCat] == GPS[gps[id]][gCat])
				    {
				        new Float:distance = GetDistanceBetweenPoints(Pos[0],Pos[1],Pos[2],GPS[i][gX],GPS[i][gY],GPS[i][gZ]);
						if(distance < meters){
						    bestid = i;
						    meters = distance;
						}
					}
				}
				NavigatePlayerToPos(playerid,GPS[bestid][gX],GPS[bestid][gY],GPS[bestid][gZ]);
				format(str,sizeof(str),"Navigace zapnuta, vás cíl: ~r~%s",GPS[bestid][gName]);
				CreateInfoBox(playerid,str,3);
			}
			else if(listitem == maxlistitem)
			    CancelNavigation(playerid);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+33)
	{
	    if(response)
	    {
	        new type = GetPVarInt(playerid,"LastID"),id,text[100];
	        switch(type)
	        {
	            case 0:
	            {
	                if(sscanf(inputtext,"i",id)) return SPD(playerid,UNNAMED+33,DIALOG_STYLE_INPUT,"Navigace","Zadejete è.p. domu, ke kterému chcete navigovat","Zadat","Zpìt");
					if(id < 1 || id > MAX_HOUSES || strcmp(House[id-1][hOwner],"0",false) == 0) return SPD(playerid,UNNAMED+33,DIALOG_STYLE_INPUT,"Navigace","Zadejete è.p. domu, ke kterému chcete navigovat\n\n"r"Chybnì zadané è.p. domu","Zadat","Zpìt");
					NavigatePlayerToPos(playerid,House[id-1][hX],House[id-1][hY],House[id-1][hZ]);
					format(text,sizeof(text),"Navigace zapnuta, vás cíl: ~r~%s ~w~(c.p. ~r~%d~w~)",House[id-1][hName],id);
	            }
	            case 1:
	            {
	                if(sscanf(inputtext,"i",id)) return SPD(playerid,UNNAMED+33,DIALOG_STYLE_INPUT,"Navigace","Zadejete IÈO nemovitost, ke které chcete navigovat","Zadat","Zpìt");
					if(id < 1 || id > MAX_PROPERTIES || strcmp(Property[id][PropertyOwner],"0",false) == 0) return SPD(playerid,UNNAMED+33,DIALOG_STYLE_INPUT,"Navigace","Zadejete IÈO nemovitost, ke které chcete navigovat\n\n"r"Chybnì zadané IÈO nemovitosti","Zadat","Zpìt");
					NavigatePlayerToPos(playerid,Property[id][PropertyX],Property[id][PropertyY],Property[id][PropertyZ]);
					format(text,sizeof(text),"Navigace zapnuta, vás cíl: ~r~%s ~w~(ICO ~r~%d~w~)",Property[id][PropertyName],id);
	            }
	            case 2:
	            {
	                if(sscanf(inputtext,"i",id)) return SPD(playerid,UNNAMED+33,DIALOG_STYLE_INPUT,"Navigace","Zadejete ID gangu, ke kterému chcete navigovat","Zadat","Zpìt");
					if(id < 1 || id > CallRemoteFunction("GetMaxGangs","")) return SPD(playerid,UNNAMED+33,DIALOG_STYLE_INPUT,"Navigace","Zadejete ID gangu, ke kterému chcete navigovat\n\n"r"Chybnì zadané ID gangu","Zadat","Zpìt");
					new Cache:cache,query[100];
					mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Gangs` WHERE `GangID`=%d LIMIT 1",id);
					cache = mysql_query(mysql,query);
					if(cache_get_row_count(mysql))
					{
					    format(dfile,sizeof(dfile),"GangSystem/Gang[%d].ini",id);
					    if(fexist(dfile))
					    {
					        cache_get_field_content(0,"Name",text,mysql);
							CallRemoteFunction("NavigateToGang","ii",playerid,id);
							format(text,sizeof(text),"Navigace zapnuta, vás cíl: ~r~%s ~w~(ICO ~r~%d~w~)",text,id);
						}
						else SPD(playerid,UNNAMED+33,DIALOG_STYLE_INPUT,"Navigace","Zadejete ID gangu, ke kterému chcete navigovat\n\n"r"Chybnì zadané ID gangu","Zadat","Zpìt");
					}
					else SPD(playerid,UNNAMED+33,DIALOG_STYLE_INPUT,"Navigace","Zadejete ID gangu, ke kterému chcete navigovat\n\n"r"Chybnì zadané ID gangu","Zadat","Zpìt");
					cache_delete(cache,mysql);

	            }
	        }
	        if(strlen(text))
				CreateInfoBox(playerid,text,3);
	    }
	    else ShowPlayerNavigation(playerid);
	    return 1;
	}
	if(dialogid == UNNAMED+38)
	{
	    if(response)
	    {
			if(sscanf(inputtext,"z",EventName)) return SPD(playerid,UNNAMED+38,DIALOG_STYLE_INPUT,""y"Název "w"Eventu","Zadejte "y"název eventu","Dalí","Zruit");
			if(strlen(inputtext) > 30) return SPD(playerid,UNNAMED+38,DIALOG_STYLE_INPUT,""y"Název "w"Eventu",""r"ERROR: "w"Pøili dlouhý název","Dalí","Zruit");
			SPD(playerid,UNNAMED+39,DIALOG_STYLE_INPUT,""y"Info "w"Eventu","Zadejte "y"info o eventu","Dalí","Zruit");
	    }
		return 1;
	}
	if(dialogid == UNNAMED+39)
	{
	    if(response)
	    {
			if(sscanf(inputtext,"z",EventInfo)) return SPD(playerid,UNNAMED+39,DIALOG_STYLE_INPUT,""y"Info "w"Eventu","Zadejte "y"info o eventu","Dalí","Zruit");
			if(strlen(inputtext) > 30) return SPD(playerid,UNNAMED+39,DIALOG_STYLE_INPUT,""y"Info "w"Eventu",""r"ERROR: "w"Pøili dlouhé Info","Dalí","Zruit");
			SPD(playerid,UNNAMED+40,DIALOG_STYLE_INPUT,""y"Místo "w"Eventu","Zadejte "y"místo eventu","Dalí","Zruit");
	    }
		return 1;
	}
	if(dialogid == UNNAMED+40)
	{
	    if(response)
	    {
			if(sscanf(inputtext,"z",EventPlace)) return SPD(playerid,UNNAMED+40,DIALOG_STYLE_INPUT,""y"Místo "w"Eventu","Zadejte "y"místo eventu","Dalí","Zruit");
			if(strlen(inputtext) > 30) return SPD(playerid,UNNAMED+40,DIALOG_STYLE_INPUT,""y"Místo "w"Eventu",""r"ERROR: "w"Pøili mnoho znakù","Dalí","Zruit");
			if(IPA(playerid))
			{
				SPD(playerid,UNNAMED+41,DIALOG_STYLE_LIST,""y"Odmìna "w"Eventu","Peníze\nVIP","Dalí","Zruit");
			}
			else
			{
				SPD(playerid,UNNAMED+41,DIALOG_STYLE_LIST,""y"Odmìna "w"Eventu","Peníze","Dalí","Zruit");
			}
		}
		return 1;
	}
	if(dialogid == UNNAMED+41)
	{
		if(response)
		{
		    switch(listitem)
		    {
				case 0:
				{
				    EventReward[0] = 0;
					SPD(playerid,UNNAMED+42,DIALOG_STYLE_INPUT,""y"Odmìna "w"Eventu","Zadejte "y"výherní èástku "w"mezera "y"body","Dalí","Zruit");
				}
				case 1:
				{
					EventReward[0] = 1;
					SPD(playerid,UNNAMED+42,DIALOG_STYLE_INPUT,""y"Odmìna "w"Eventu","Zadejte "y"výherní poèet VIP dní "w"mezera "y"body","Dalí","Zruit");
				}
		    }
		}
		return 1;
	}
	if(dialogid == UNNAMED+42)
	{
	    if(response)
	    {
	        if(EventReward[0] == 0)
	        {
				if(sscanf(inputtext,"ii",EventReward[1],EventBody)) return SPD(playerid,UNNAMED+42,DIALOG_STYLE_INPUT,""y"Odmìna "w"Eventu","Zadejte "y"výherní èástku "w"mezera "y"body","Dalí","Zruit");
				if(EventReward[1] > 100000000) return SPD(playerid,UNNAMED+42,DIALOG_STYLE_INPUT,""y"Odmìna "w"Eventu",""r"ERROR: "w"Maximalní èástka je "y"100 000 000"g"$","Dalí","Zruit");
				if(EventBody < 0 || EventBody > 100) return SPD(playerid,UNNAMED+42,DIALOG_STYLE_INPUT,""y"Odmìna "w"Eventu",""r"ERROR: "w"Chybnì zadané body "y"0 - 100 "g"bodù","Dalí","Zruit");
			}
			else if(EventReward[0] == 1)
			{
				if(sscanf(inputtext,"ii",EventReward[1],EventBody)) return SPD(playerid,UNNAMED+42,DIALOG_STYLE_INPUT,""y"Odmìna "w"Eventu","Zadejte "y"výherní poèet VIP dní "w"mezera "y"body","Dalí","Zruit");
				if(EventReward[1] > 2000) return SPD(playerid,UNNAMED+42,DIALOG_STYLE_INPUT,""y"Odmìna "w"Eventu",""r"ERROR: "w"Maximalní poèet VIP dní je "y"2000"g"$","Dalí","Zruit");
				if(EventBody < 0 || EventBody > 100) return SPD(playerid,UNNAMED+42,DIALOG_STYLE_INPUT,""y"Odmìna "w"Eventu",""r"ERROR: "w"Chybnì zadané body "y"0 - 100 "g"bodù","Dalí","Zruit");
			}
        	format(EventAdmin,sizeof(EventAdmin),Jmeno(playerid));
			ShowEventTextdraw();
			Event = 1;
			KillTimer(EventTimer);
			EventTimer = 0;
			EventTime[0] = 0;
			EventTime[1] = 0;
			format(str,sizeof(str),"~y~%d %s ~w~probiha event ~g~%s ~w~na eventu je: ~r~%d %s",EventTime[0]/60,PluralWord(EventTime[0]/60,"minutu","minuty","minut"),EventName,EventPlayers,PluralWord(EventPlayers,"hrac","hraci","hracu"));
            TextDrawDiakritika(str);
			TextDrawSetString(Textdraw3,str);
			TextDrawShowForAll(Textdraw3);
			EventTimer = SetTimer("EventProgress",1000,false);
	    }
		return 1;
	}
	if(dialogid == UNNAMED+45)
	{
	    if(response)
		{
			switch(listitem)
			{
				case 0:
				{
					CreateWarp(playerid,-2130.997802,-238.319961,35.320312,"k","Truckerum");
					SetPlayerFacingAngle(playerid,300.316284);
					CreateCompleteMessage(playerid,"Mission Info","Pro plneni mise ~r~Ridic Kamionu ~w~nastup do ~g~kamionu ~w~a stiskni ~r~+ ~w~nebo ~r~~k~~TOGGLE_SUBMISSIONS~",7);
				}
				case 1:
				{
					CreateWarp(playerid,-2648.5513,-32.8565,6.1328,"k","Autobusakum");
					SetPlayerFacingAngle(playerid,180.5364);
					CreateCompleteMessage(playerid,"Mission Info","Pro plneni mise ~r~Ridic Autobusu ~w~nastup do ~g~autobusu ~w~a stiskni ~r~+ ~w~nebo ~r~~k~~TOGGLE_SUBMISSIONS~",7);
				}
				case 2:
				{
					CreateWarp(playerid,-2002.7722,-2433.4316,30.6250,"k","Drevorubcum");
					SetPlayerFacingAngle(playerid,353.9498);
					CreateCompleteMessage(playerid,"Mission Info","Pro plneni mise ~r~Drevorubec ~w~nastup do vozidla ~g~Sandking ~w~a stiskni ~r~+ ~w~nebo ~r~~k~~TOGGLE_SUBMISSIONS~",7);
				}
				case 3:
				{
					CreateWarp(playerid,2392.7327,1912.9978,6.0156,"ke","Kuryrum");
					SetPlayerFacingAngle(playerid,94.9201);
					CreateCompleteMessage(playerid,"Mission Info","Pro plneni mise ~r~Kuryr ~w~nastup do vozidla ~g~Sultan, Bullet ~w~nebo ~g~Cheetah ~w~a stiskni ~r~+ ~w~nebo ~r~~k~~TOGGLE_SUBMISSIONS~",7);
				}
				case 4:
				{
				    if(GetPlayerJob(playerid) != 3) return SM(playerid,"Pro tuto misi musíte být zamìstnán jako "r"Pilot");
					CreateWarp(playerid,-1242.0068,-138.7441,14.1484,"k","Pilotum");
					SetPlayerFacingAngle(playerid,317.3563);
					CreateCompleteMessage(playerid,"Mission Info","Pro plneni mise ~r~Pilot ~w~nastup do vozidla ~g~Dodo ~w~a stiskni ~r~+ ~w~nebo ~r~~k~~TOGGLE_SUBMISSIONS~",7);
				}
				case 5:
				{
				    if(GetPlayerJob(playerid) != 5) return SM(playerid,"Pro tuto misi musíte být zamìstnán jako "r"Mechanik");
				    CreateWarp(playerid,-2048.6787,137.4055,28.8359,"k","Mechanikum");
					CreateCompleteMessage(playerid,"Mission Info","Pro plneni mise ~r~Mechanik ~w~nastup do vozidla ~g~Towtruck ~w~a stiskni ~r~+ ~w~nebo ~r~~k~~TOGGLE_SUBMISSIONS~",7);
				}
				case 6:
				{
				    if(GetPlayerJob(playerid) != 7) return SM(playerid,"Pro tuto misi musíte být zamìstnán jako "r"Policista");
				    if(GetPlayerWantedLevel(playerid) > 0) return SM(playerid,"Jste hledaný, nemùete plnit tuto misi");
					CreateCarMenuVehicle(playerid,596);
				    WorkMission[playerid] = 7;
				    MissionTimeSeconds[playerid] = 60;
				    CreateCompleteMessage(playerid,"Mission Info","Jedte zatykat ~r~hledane ~w~hrace~n~~n~~y~Zatykani: ~g~/zat, ALT~n~~y~Pomucky: ~g~/Wanted",5);
				}
				case 7:
				{
				    if(GetPlayerJob(playerid) != 4) return SM(playerid,"Pro tuto misi musíte být zamìstnán jako "r"Zdravotník");
					CreateCarMenuVehicle(playerid,416);
				    WorkMission[playerid] = 8;
				    MissionTimeSeconds[playerid] = 60;
				    CreateCompleteMessage(playerid,"Mission Info","Jedte udravovat ~r~zranene ~w~hrace~n~~n~~y~Uzdraveni: ~g~/uzdravit, ALT",5);
				}
				case 8:
				{
				    if(GetPlayerJob(playerid) != 8) return SM(playerid,"Pro tuto misi musíte být zamìstnán jako "r"Hasiè");
					CreateCarMenuVehicle(playerid,407);
					CreateCompleteMessage(playerid,"Mission Info","Jedte uhasit ~r~pozar",5);
	    		    WorkMission[playerid] = 9;
					SetPlayerVirtualWorld(playerid,playerid+500);
					SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),playerid+500);
				    CreateFire(playerid);
				    PlayerTextDrawShow(playerid,Textdraw26[playerid]);
				}
				case 9:
				{
				    if(GetPlayerJob(playerid) != 9) return SM(playerid,"Pro tuto misi musíte být zamìstnán jako "r"SBS");
				    CreateCarMenuVehicle(playerid,428);
				    WorkMission[playerid] = 10;
				    SetPlayerVirtualWorld(playerid,playerid+500);
					SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),playerid+500);
					SetMissionTimer(playerid,120);
					CreateInfoBox(playerid,"Zacal si plnit misi, misi zrusis prikazem ~r~/zrusmisi",5);
					CreateCompleteMessage(playerid,"Mission Info","Jedte vyzvednout penize do ~r~banky",5);
				}
			}
		}
		return 1;
	}
	if(dialogid == UNNAMED+46)
	{
		if(response)
		{
		    if(WorkMission[playerid] > 0) return SM(playerid,"U si v misi, pouij "r"/zrusmisi");
			new car = GetPlayerVehicleID(playerid),model = GetVehicleModel(car);
			if(model != 515) return CreateInfoBox(playerid,"Pro plneni teto mise potrebujes ~r~truck",7);
    		if(!IsTrailerAttachedToVehicle(car)) return CreateInfoBox(playerid,"Pro plneni teto mise potrebujes ~r~prives",7);
		    new Float:X,Float:Y,Float:Z;
			X = TruckerMission[listitem][TStartX];
			Y = TruckerMission[listitem][TStartY];
			Z = TruckerMission[listitem][TStartZ];
			SetPlayerCheckpointEx(playerid,X,Y,Z,8);
			WorkMission[playerid] = 1;
			WorkStatus[playerid] = 1;
			format(str,sizeof(str),"Vyzvedni si naklad %s ~r~%s",TruckerMission[listitem][TPredlozka],TruckerMission[listitem][TStartText]);
			CreateCompleteMessage(playerid,"Mission Info",str,5);
			SetPVarInt(playerid,"TruckerMissionID",listitem);
			CreateInfoBox(playerid,"Zacal si plnit misi, misi zrusis prikazem ~r~/zrusmisi",5);
			MissionTrailer[playerid] = GetVehicleTrailer(car);
			SetMissionTimer(playerid,300);
			PlayerTextDrawShow(playerid,Textdraw25[playerid]);
			format(str,sizeof(str),"~y~Odmena: ~g~0$~n~~y~body: ~b~+0.0");
			PlayerTextDrawSetString(playerid,Textdraw25[playerid],str);
			SetPlayerVirtualWorld(playerid,4);
			SetVehicleVirtualWorld(MissionTrailer[playerid],4);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),4);
		}
	    return 1;
	}
	if(dialogid == UNNAMED+47)
	{
	    if(response)
		{
		    if(WorkMission[playerid] > 0) return SM(playerid,"U si v misi, pouij "r"/zrusmisi");
			new car = GetPlayerVehicleID(playerid),model = GetVehicleModel(car);
			if(model == 437 || model == 431)
			{
			    new Float:X,Float:Y,Float:Z;
			    MissionLine[playerid] = listitem+1;
				if(listitem == 0)
				{
					X = BusMission[0][BusX];
					Y = BusMission[0][BusY];
					Z = BusMission[0][BusZ];
					format(str,sizeof(str),"~y~Zastavek: ~g~%d~y~/~r~%d~n~~y~Odmena: ~g~%s$~n~~y~Body: ~b~+0.0",WorkStatus[playerid],sizeof(BusMission),Split(MissionPay[playerid]));
				}
				else if(listitem == 1)
				{
					X = BusMission2[0][BusX];
					Y = BusMission2[0][BusY];
					Z = BusMission2[0][BusZ];
					format(str,sizeof(str),"~y~Zastavek: ~g~%d~y~/~r~%d~n~~y~Odmena: ~g~%s$~n~~y~Body: ~b~+0.0",WorkStatus[playerid],sizeof(BusMission2),Split(MissionPay[playerid]));
				}
				PlayerTextDrawSetString(playerid,Textdraw25[playerid],str);
				SetMissionTimer(playerid,60);
				SetPlayerCheckpointEx(playerid,X,Y,Z,8);
				WorkMission[playerid] = 2;
				WorkStatus[playerid] = 0;
				CreateCompleteMessage(playerid,"Mission Info","Pokracuj na ~r~zastavku",5);
				CreateInfoBox(playerid,"Zacal si plnit misi, misi zrusis prikazem ~r~/zrusmisi",5);
				PlayerTextDrawShow(playerid,Textdraw25[playerid]);
				SetPlayerVirtualWorld(playerid,4);
				SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),4);
			}
			else
			{
				CreateInfoBox(playerid,"Pro plneni teto mise potrebujes ~r~autbous",7);
			}
  		}
		return 1;
	}
	if(dialogid == UNNAMED+49)
	{
		if(response)
		{
		    if(WorkMission[playerid] > 0) return SM(playerid,"U si v misi, pouij "r"/zrusmisi");
			new car = GetPlayerVehicleID(playerid),model = GetVehicleModel(car);
			if(model != 593) return CreateInfoBox(playerid,"Pro plneni teto mise potrebujes ~r~Dodo",7);
			SetMissionTimer(playerid,180);
		    new Float:X,Float:Y,Float:Z;
			X = PilotMission[listitem][PStartX];
			Y = PilotMission[listitem][PStartY];
			Z = PilotMission[listitem][PStartZ];
			SetPlayerCheckpointEx(playerid,X,Y,Z,8);
			WorkMission[playerid] = 5;
			WorkStatus[playerid] = 1;
			format(str,sizeof(str),"Naloz dokumenty %s ~r~%s",PilotMission[listitem][PPredlozka],PilotMission[listitem][PStartText]);
			CreateCompleteMessage(playerid,"Mission Info",str,5);
			PlayerTextDrawShow(playerid,Textdraw25[playerid]);
			format(str,sizeof(str),"~y~Odmena: ~g~0$~n~~y~body: ~b~+0.0");
			PlayerTextDrawSetString(playerid,Textdraw25[playerid],str);
			SetPVarInt(playerid,"PilotMissionID",listitem);
			CreateInfoBox(playerid,"Zacal si plnit misi, misi zrusis prikazem ~r~/zrusmisi",5);
			SetPlayerVirtualWorld(playerid,4);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),4);
		}
	    return 1;
	}
	if(dialogid == UNNAMED+50)
	{

	    return 1;
	}
	if(dialogid == UNNAMED+51)
	{
	    if(response)
	    {
			new dni = GetPVarInt(playerid,"GetVIPdni");
			if(vip[playerid] == 1)
			{
				format(str,sizeof(str),"[ VIP ] "y"%s "w"%s "y"si aktivoval VIP úèet na "w"+%d "y"dní za "w"%d Bodù"y".",Players(playerid),Jmeno(playerid),dni,dni*DOF2_GetInt(CONFIG,"VBODY"));
				SCMTA(bila,str);
			}
			if(vip[playerid] == 0)
			{
				format(str,sizeof(str),"[ VIP ] "y"%s "w"%s "y"si aktivoval VIP úèet na "w"%d "y"dní za "w"%d Bodù"y".",Players(playerid),Jmeno(playerid),dni,dni*DOF2_GetInt(CONFIG,"VBODY"));
				SCMTA(bila,str);
				SPD(playerid,UNNAMED+10,DIALOG_STYLE_MSGBOX,"VIP Nastavení","Nyní si vyberete barvu "y"nicku "w"[ "c"Klikni na "w": "g"Dalí"w" ]","Dalí","");
				SetDefaultTitul(playerid);
			}
			SetPlayerVIP(playerid,dni);
			format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
			format(str,sizeof(str),"[ VIP ] "y"VIP Úèet expiruje: "w"%s"y".",DATE(DOF2_GetInt(dfile,"VIP_vyprsi")));
			SCMTA(bila,str);
			GetOnlinePlayers();
			GivePoints(playerid,-dni*DOF2_GetInt(CONFIG,"VBODY"));
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+52)
	{
	    if(response)
	    {
	        new body = GetPVarInt(playerid,"buypoints");
	        if(GetMoney(playerid) >= body*POINT_PRICE)
			{
			    format(str,sizeof(str),"Zakoupení %d bodù",body);
	        	GiveMoney(playerid,-body*POINT_PRICE,str);
				GivePoints(playerid,body);
				format(str,sizeof(str),"%s "w"%s {03C900}si koupil "w"%d %s {03C900}za "w"%s${03C900}.",Players(playerid),Jmeno(playerid),body,PluralWord(body,"bod","body","bodù"),Split(body*POINT_PRICE));
				SCMTA(0x03C900FF,str);
				format(str,sizeof(str),"{03C900}%s "w"%s {03C900}si koupil "w"%d %s {03C900}za "w"%s${03C900}.",Players(playerid),Jmeno(playerid),body,PluralWord(body,"bod","body","bodù"),Split(body*POINT_PRICE));
				printEx(str);
		    	GiveXP(playerid,floatround(((body)/10)*1.325,floatround_ceil),"zakoupeni bodu");
			}
			else SM(playerid,"Nemá dostatek penìz");
		}
		return 1;
	}
	if(dialogid == UNNAMED+53)
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
				{
					format(str,sizeof(str),"Zadejte poèet dní, minimálnì lze pouít "g"1 den"w". Cena vip je "g"%d bodù/den"w"\nNyní máte na "g"%.0f "w"dní.",DOF2_GetInt(CONFIG,"VBODY"),Points[playerid]/DOF2_GetInt(CONFIG,"VBODY"));
					SPD(playerid,UNNAMED+54,DIALOG_STYLE_INPUT,"Koupit VIP",str,"Koupit","Zavøít");
				}
				case 1:
				{
				    format(str,sizeof(str),"Zadejte poèet bodu, které si chcete koupit\n"w"Jeden bod stojí "g"%s$ "w"máte na "g"%d bodù",Split(POINT_PRICE),GetMoney(playerid)/POINT_PRICE);
				 	SPD(playerid,UNNAMED+55,DIALOG_STYLE_INPUT,"Koupit Body",str,"Koupit","Zavøít");
				}
/*				case 2:
				{
				    new bool:canbesouzen = true;
					if(GetPlayerWantedLevel(playerid) == 0) return SM(playerid,"Nejsi hledaný, nepotøebuje právníka");
					for(new i; i <= GetPlayerPoolSize(); i ++)
					{
					    if(IPC(i) && !IsPlayerNPC(i))
					    {
					        if(WorkMission[i] == 7)
					        {
					            new Float:Pos[3];
					            GetPlayerPos(i,Pos[0],Pos[1],Pos[2]);
					            if(IsPlayerInRangeOfPoint(playerid,25,Pos[0],Pos[1],Pos[2]))
					            {
									canbesouzen = false;
					            }
					        }
					    }
					}
					if(canbesouzen == false) return SM(playerid,"Kdy je poblí policista, nemùe si najmout právníka");
					new wl = GetPlayerWantedLevel(playerid);
					if(wl > 6) wl = 6;
					format(str,sizeof(str),"Nemá dostatek bodù [ "g"%d "w"]",wl);
				    if(Points[playerid] < wl) return SM(playerid,str);
				    GivePoints(playerid,-wl);
					format(str,sizeof(str),"%s "w"%s {FF006A}si najal právníka za "w"%d bodù{FF006A}.",Players(playerid),Jmeno(playerid),wl);
					SCMTA(0xFF006AFF,str);
					GiveXP(playerid,wl*15,"pravnik");
				    SetPlayerWantedLevel(playerid,0);
				}
				*/
				//case 2: ShowCustomSkinsMenu(playerid);
				case 2: CallRemoteFunction("ShowAddonsMenu","i",playerid);
				case 3:
				{
					SPD(playerid,UNNAMED+96,DIALOG_STYLE_INPUT,"Zmìna nicku","Zadejte nový nick, zmìna bude stát "g"300 bodù","Zmìnit","Zruit");
				}
				case 4:
				{
					SPD(playerid,UNNAMED+108,DIALOG_STYLE_INPUT,"Zmìna hesla","Zadejte Vae "g"Aktualní heslo","Zadat","Zruit");
				}
				case 5:
				{
				    new DIALOG[800];
					for(new i; i < sizeof(XPBoosts); i ++)
					{
					    format(str,sizeof(str),"XP Boost "g"x%0.2f\t"c"%d bodù"w"/hodina\n",(float(XPBoosts[i][0])/100)+1,XPBoosts[i][1]);
						strcat(DIALOG,str);
					}
					SPD(playerid,UNNAMED+150,DIALOG_STYLE_TABLIST,"XP Booster",DIALOG,"Vybrat","Zavøít");
				}
				case 6:
				{
					if(!IsPlayerInRangeOfPoint(playerid,20.0,248.7287,1800.2538,7.4141) && PrisonTime[playerid] <= 0) return SM(playerid,"Nejste ve vìzení");
					if(Points[playerid] < 12) return SM(playerid,"Nemáte dostatek bodù");
					PrisonTime[playerid] = 0;
					SetPlayerPos(playerid,2290.3281,2431.8591,10.8203);
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
 				    PlayerTextDrawHide(playerid,Textdraw26[playerid]);
					if(GetPlayerWantedLevel(playerid) == 0)
					{
						format(str,sizeof(str),"%s "w"%s {FF006A}si zaplatil kauci za "w"12 bodù{FF006A}.",Players(playerid),Jmeno(playerid));
						SCMTA(0xFF006AFF,str);
						GivePoints(playerid,-12);
						SetTimerEx("ClearWL",1000,false,"i",playerid);
					}
				}
			}
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+54)
	{
	    if(response)
	    {
        	new dni;
			if(sscanf(inputtext,"i",dni)) return SPD(playerid,UNNAMED+54,DIALOG_STYLE_INPUT,"Koupit VIP","Zadejte poèet dní, minimálnì lze pouít "g"1 den"w"!","Koupit","Zavøít");
			if(dni < 1) return SPD(playerid,UNNAMED+54,DIALOG_STYLE_INPUT,"Koupit VIP","Zadejte poèet dní, "y"minimálnì"w" lze pouít "g"1 den"w"!","Koupit","Zavøít");
			if(dni > 365) return SPD(playerid,UNNAMED+54,DIALOG_STYLE_INPUT,"Koupit VIP","Zadejte poèet dní, "r"maximálnì"w" lze pouít "g"365 dní"w"!","Koupit","Zavøít");
			if(Points[playerid] < dni*DOF2_GetInt(CONFIG,"VBODY"))
			{
				format(str,sizeof(str),"Nemáte dostatek bodù [ "g"%d "w"]",dni*DOF2_GetInt(CONFIG,"VBODY"));
				SM(playerid,str);
				return 1;
			}
			format(str,sizeof(str),"Opravdu si pøejete aktivovat "y"vip "w"úèet na "g"%d "w"dní za "r"%d bodù"w"?",dni,dni*DOF2_GetInt(CONFIG,"VBODY"));
			SPD(playerid,UNNAMED+51,DIALOG_STYLE_MSGBOX,"VIP Úèet",str,"Ano","Ne");
			SetPVarInt(playerid,"GetVIPdni",dni);
	    }
		return 1;
	}
	if(dialogid == UNNAMED+55)
	{
	    if(response)
		{
			new body;
			if(sscanf(inputtext,"i",body)) return SPD(playerid,UNNAMED+55,DIALOG_STYLE_INPUT,"Koupit Body","Zadejte poèet bodu, které si chcete koupit","Koupit","Zavøít");
			if(body < 1) return SPD(playerid,UNNAMED+55,DIALOG_STYLE_INPUT,"Koupit Body","Mùe si koupit minimálnì 1 bod","Koupit","Zavøít");
			if(body > 7000) return SPD(playerid,UNNAMED+55,DIALOG_STYLE_INPUT,"Koupit Body","Mùe si koupit maximálnì 7 000 bodù","Koupit","Zavøít");
			format(str,sizeof(str),"Nemáte dostatek penìz: "g"%s$",Split(body*POINT_PRICE));
			if(GetMoney(playerid) < body*POINT_PRICE) return SPD(playerid,UNNAMED+55,DIALOG_STYLE_INPUT,"Koupit Body",str,"Koupit","Zavøít");
			SetPVarInt(playerid,"buypoints",body);
			format(str,sizeof(str),"Opravdu si pøejete koupit "y"%d bodù "w"za "g"%s$ "w"?",body,Split(body*POINT_PRICE));
			SPD(playerid,UNNAMED+52,DIALOG_STYLE_MSGBOX,"Koupit Body",str,"Potvrdit","Zruit");
		}
	    return 1;
	}
	if(dialogid == UNNAMED+56)
	{
		if(response)
		{
			new DIALOG[5000],pages = GetPVarInt(playerid,"Pages")+1,query[800],rows,count,fields,search[144];
			GetPVarString(playerid,"Search",search,sizeof(search));
			if(strlen(inputtext) > 0)
			{
				format(search,sizeof(search),inputtext);
				for(new i; i < strlen(search); i ++)
				{
				    if(search[i] == ' ')
				    {
				        search[i] = '%';
				        strins(search,"%",i+1,sizeof(search));
				    }
				}
				SetPVarString(playerid,"Search",search);
				pages = 0;
			}
			if(strlen(search) > 0)
			{
				mysql_format(mysql,query, sizeof(query),"SELECT COUNT(*) AS count FROM `ServerLog` WHERE `Text` LIKE '%%%e%%'", search);
		    	new Cache:cache = mysql_query(mysql,query);
				count = cache_get_field_content_int(0,"count",mysql);
				cache_delete(cache,mysql);
			
				mysql_format(mysql, query, sizeof(query),"SELECT * FROM `ServerLog` WHERE `Text` LIKE '%%%e%%' ORDER BY `Time` DESC LIMIT %d,30",search,pages*30);
			}
			else
			{
			   	new Cache:cache = mysql_query(mysql,"SELECT COUNT(*) AS count FROM `ServerLog`");
				count = cache_get_field_content_int(0,"count",mysql);
				cache_delete(cache,mysql);
				mysql_format(mysql, query, sizeof(query),"SELECT * FROM `ServerLog` ORDER BY `Time` DESC LIMIT %d,30",pages*30);
			}
			if(count <= (pages)*30) return 1;
			new Cache:cache = mysql_query(mysql,query);
			cache_get_data(rows,fields,mysql);
			if(rows == 0) return SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Log","Nezaznamenány ádné akce","Zavøít","");
			for(new i = 0; i < rows; i ++)
			{
			    cache_get_field_content(i,"Text",str);
				if(strcmp(str,"NULL",false) != 0)
				{
				    format(str,sizeof(str),""w"[ %s ] %s\n",DATE(cache_get_field_content_int(i,"Time")),str);
				    strcat(DIALOG,str);
				}
			}
			format(str,sizeof(str),""w"Stránka: "g"%d"w"/"r"%d",pages+1,(count/30)+1);
			if(count > (pages+1)*30)
			{
				SPD(playerid,UNNAMED+56,DIALOG_STYLE_INPUT,str,DIALOG,"Dalí","Zavøít");
			}
			else
			{
				SPD(playerid,UNNAMED+56,DIALOG_STYLE_INPUT,str,DIALOG,"Zavøít","");
			}
			SetPVarInt(playerid,"Pages",pages);
			cache_delete(cache,mysql);
		}
		return 1;
	}
	if(dialogid == UNNAMED+58)
	{
	    if(response)
	    {

		}
	    return 1;
	}
	if(dialogid == UNNAMED+60)
	{
	    if(response)
	    {
	        new block;
	        if(sscanf(inputtext,"i",block)) return SPD(playerid,UNNAMED+60,DIALOG_STYLE_INPUT,"Nastavení","Zadejte limit Warp Block pro hráèe","Nastavit","Zavøít");
			if(block < 1 || block > 20) return SPD(playerid,UNNAMED+60,DIALOG_STYLE_INPUT,"Nastavení","Pouijte minimálnì 1 Warp-Limit a maximálnì 20 Warp-Limitù.","Nastavit","Zavøít");
			DOF2_SetInt(CONFIG,"PWBLOCK",block);
			DOF2_SaveFile();
			format(str,sizeof(str),"Player Warp Block nastaven na "g"%d "w"Warp-Limitù",block);
			SM(playerid,str);
		}
		return 1;
	}
	if(dialogid == UNNAMED+61)
	{
	    if(response)
	    {
	        new block;
	        if(sscanf(inputtext,"i",block)) return SPD(playerid,UNNAMED+61,DIALOG_STYLE_INPUT,"Nastavení","Zadejte limit Warp Block pro "y"VIP "w"hráèe","Nastavit","Zavøít");
			if(block < 1 || block > 20) return SPD(playerid,UNNAMED+61,DIALOG_STYLE_INPUT,"Nastavení","Pouijte minimálnì 1 Warp-Limit a maximálnì 20 Warp-Limitù.","Nastavit","Zavøít");
			DOF2_SetInt(CONFIG,"VPWBLOCK",block);
			DOF2_SaveFile();
			format(str,sizeof(str),""y"VIP "w"Player Warp Block nastaven na "g"%d "w"Warp-Limitù",block);
			SM(playerid,str);
		}
		return 1;
	}
	if(dialogid == UNNAMED+62)
	{
	    if(!response)
	    {
	        new id = GetPVarInt(playerid,"InfoID");
			IsNoAdmin(playerid)
			ShowAdminInfoByName(playerid,Jmeno(id));
	    }
		return 1;
	}
	if(dialogid == UNNAMED+63)
	{
	    if(response)
	    {
	        new price;
	        if(sscanf(inputtext,"i",price)) return SPD(playerid,UNNAMED+63,DIALOG_STYLE_INPUT,"Nastavení","Zadejte cenu VIP v bodech na jeden den","Nastavit","Zavøít");
			if(price < 0 || price > 100000) return SPD(playerid,UNNAMED+63,DIALOG_STYLE_INPUT,"Nastavení","Pouijte minimálnì 0 bodù a maximálnì 100 000 ","Nastavit","Zavøít");
			DOF2_SetInt(CONFIG,"VBODY",price);
			DOF2_SaveFile();
			format(str,sizeof(str),"Cena VIP nastavena na "g"%d "w"bodù/den",price);
			SM(playerid,str);
	    }
		return 1;
	}
	if(dialogid == UNNAMED+64)
	{
	    if(response)
	    {

	    }
		return 1;
	}
	if(dialogid == UNNAMED+65)
	{
	    if(response)
	    {
		}
	    return 1;
	}
	if(dialogid == UNNAMED+66)
	{
	    if(response)
	    {
	    }
		return 1;
	}
	if(dialogid == UNNAMED+67)
	{
	    if(response)
	    {
/*	        new name[150];
	        GetPVarString(playerid,"EditFileName",name,sizeof(name));
	        format(dfile,sizeof(dfile),"%s.dudb.sav",udb_encode(name));
	        Loadefile(playerid);
			new DIALOG_FILE[1000];
			format(str,sizeof(str),"password_hash: "g"%d\n"w"Hodin: "g"%d\n"w"Minut: "g"%d\n",DOF2_GetInt(dfile,"password_hash"),DOF2_GetInt(dfile,"Hodin:"),DOF2_GetInt(dfile,"Minut:"));
			strcat(DIALOG_FILE,str);
			format(str,sizeof(str),""w"Firma: "g"%d\n"w"Money: "g"%d\n"w"Banka: "g"%d\n",DOF2_GetInt(dfile,"firma"),DOF2_GetInt(dfile,"money"),DOF2_GetInt(dfile,"Banka"));
			strcat(DIALOG_FILE,str);
			format(str,sizeof(str),""w"Výplata: "g"%d\n"w"Pùjèka: "g"%d\n"w"Povolani: "g"%d\n",DOF2_GetInt(dfile,"Vyplata"),DOF2_GetInt(dfile,"Puj"),DOF2_GetInt(dfile,"Povolani"));
			strcat(DIALOG_FILE,str);
			format(str,sizeof(str),""w"Wanted: "g"%d\n"w"Marihuana: "g"%d\n"w"Bomba: "g"%d\n",DOF2_GetInt(dfile,"wanted"),DOF2_GetInt(dfile,"Marihuana"),DOF2_GetInt(dfile,"bomba"));
			strcat(DIALOG_FILE,str);
			format(str,sizeof(str),""w"Zabil: "g"%d\n"w"Umøel: "g"%d\n"w"Dùm: "g"%d\n",DOF2_GetInt(dfile,"zabil"),DOF2_GetInt(dfile,"umrel"),DOF2_GetInt(dfile,"dum"));
			strcat(DIALOG_FILE,str);
			format(str,sizeof(str),""w"Policajní ZK: "g"%d\n"w"Vojenské ZK: "g"%d\n"w"Øidièské ZK: "g"%d\n",DOF2_GetInt(dfile,"policejnizk"),DOF2_GetInt(dfile,"vojenskazk"),DOF2_GetInt(dfile,"ridickezk"));
			strcat(DIALOG_FILE,str);
			format(str,sizeof(str),""w"Letecké ZK: "g"%d\n"w"Civilní ZK: "g"%d\n"w"Øidický Prùk.: "g"%d\n",DOF2_GetInt(dfile,"leteckezk"),DOF2_GetInt(dfile,"PraZK"),DOF2_GetInt(dfile,"vodicak"));
			strcat(DIALOG_FILE,str);
			format(str,sizeof(str),""w"Letecký Prùk.: "g"%d\n"w"Lodní Prùk.: "g"%d\n"w"Zbrojní Prùk.: "g"%d\n",DOF2_GetInt(dfile,"letecak"),DOF2_GetInt(dfile,"lodicak"),DOF2_GetInt(dfile,"vyzbroj"));
			strcat(DIALOG_FILE,str);
			format(str,sizeof(str),""w"Admin Level: "g"%d",DOF2_GetInt(dfile,"adminlvl"));
			strcat(DIALOG_FILE,str);
			SPD(playerid,UNNAMED+68,DIALOG_STYLE_LIST,"EditFile",DIALOG_FILE,"Upravit","Zavøít");
*/	    }
	    else
	    {
	        new name[150];
	        GetPVarString(playerid,"EditFileName",name,sizeof(name));
	        format(dfile,sizeof(dfile),USER_FILES,name);
	        Loadefile(playerid);
			new DIALOG_FILE[1000];
			format(str,sizeof(str),"Titul: "g"%s\n"w"Barva Titulu: "g"%s\n"w"Barva Textu: "g"%s\n",DOF2_GetString(dfile,"Prefix"),DOF2_GetString(dfile,"PrefixColor"),DOF2_GetString(dfile,"TextColor"));
			strcat(DIALOG_FILE,str);
			format(str,sizeof(str),"Barva Nicku: "g"%d\n"w"Admin Level: "g"%d\n"w"Admin Type: "g"%d\n",DOF2_GetInt(dfile,"BarvaNicku"),DOF2_GetInt(dfile,"Admin Level"),DOF2_GetInt(dfile,"Admin Type"));
			strcat(DIALOG_FILE,str);
			format(str,sizeof(str),"Body: "g"%0.1f\n"w"Explosive Bullets: "g"%d\n"w"Skin ID: "g"%d\n",DOF2_GetFloat(dfile,"Body"),DOF2_GetInt(dfile,"Naboje"),DOF2_GetInt(dfile,"Skin"));
			strcat(DIALOG_FILE,str);
			format(str,sizeof(str),"Win Postøehy: "g"%d\n"w"Duel Wins: "g"%d\n"w"Duel Lose: "g"%d\n",DOF2_GetInt(dfile,"WinPostrehy"),DOF2_GetInt(dfile,"DuelWins"),DOF2_GetInt(dfile,"DuelLose"));
			strcat(DIALOG_FILE,str);
			format(str,sizeof(str),"Mise Splnìny: "g"%d\nHodnost: "g"%s\nE-Mail "g"%s",DOF2_GetInt(dfile,"MiseCompleted"),DOF2_GetString(dfile,"Hodnost"),DOF2_GetInt(dfile,"Mail"));
			strcat(DIALOG_FILE,str);
			SPD(playerid,UNNAMED+72,DIALOG_STYLE_LIST,"EditFile",DIALOG_FILE,"Upravit","Zavøít");
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+68)
	{
		if(response)
		{
		    EditField[playerid][0] = listitem;
		    SPD(playerid,UNNAMED+69,DIALOG_STYLE_INPUT,"Edit File","Zadejte novou hodnotu","Zadat","Zavøít");
		}
		return 1;
	}
	if(dialogid == UNNAMED+69)
	{
		if(response)
		{
/*
	        new name[149+1];
	        GetPVarString(playerid,"EditFileName",name,sizeof(name));
	        format(dfile,sizeof(dfile),"%s.dudb.sav",udb_encode(name));
		    switch(EditField[playerid][0])
		    {
				case 0: SetHodnota(playerid,"password_hash",inputtext);
				case 1: SetHodnota(playerid,"Hodin:",inputtext);
				case 2: SetHodnota(playerid,"Minut:",inputtext);
				case 3: SetHodnota(playerid,"firma",inputtext);
				case 4: SetHodnota(playerid,"money",inputtext);
				case 5: SetHodnota(playerid,"Banka",inputtext);
				case 6: SetHodnota(playerid,"Vyplata",inputtext);
				case 7: SetHodnota(playerid,"Puj",inputtext);
				case 8: SetHodnota(playerid,"povolani",inputtext);
				case 9: SetHodnota(playerid,"wanted",inputtext);
				case 10: SetHodnota(playerid,"Marihuana",inputtext);
				case 11: SetHodnota(playerid,"bomba",inputtext);
				case 12: SetHodnota(playerid,"zabil",inputtext);
				case 13: SetHodnota(playerid,"umrel",inputtext);
				case 14: SetHodnota(playerid,"dum",inputtext);
				case 15: SetHodnota(playerid,"policejnizk",inputtext);
				case 16: SetHodnota(playerid,"vojenskazk",inputtext);
				case 17: SetHodnota(playerid,"ridickezk",inputtext);
				case 18: SetHodnota(playerid,"leteckezk",inputtext);
				case 19: SetHodnota(playerid,"PraZK",inputtext);
				case 20: SetHodnota(playerid,"vodicak",inputtext);
				case 21: SetHodnota(playerid,"letecak",inputtext);
				case 22: SetHodnota(playerid,"lodicak",inputtext);
				case 23: SetHodnota(playerid,"vyzbroj",inputtext);
				case 24: SetHodnota(playerid,"adminlvl",inputtext);
		    }
*/
		}
		return 1;
	}
	if(dialogid == UNNAMED+70)
	{
	    if(response)
	    {
			if(!IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Nejste ve vozidle");
	        switch(listitem)
	        {
	            case 0: CreateNeon(playerid,18647);
	            case 1: CreateNeon(playerid,18648);
	            case 2: CreateNeon(playerid,18649);
	            case 3: CreateNeon(playerid,18650);
	            case 4: CreateNeon(playerid,18651);
	            case 5: CreateNeon(playerid,18652);
				case 6:
				{
				    if(Neony[GetPlayerVehicleID(playerid)] == 1)
				    {
				    	DestroyObject(Neon1[GetPlayerVehicleID(playerid)]);
				    	DestroyObject(Neon2[GetPlayerVehicleID(playerid)]);
				    	Neony[GetPlayerVehicleID(playerid)] = 0;
				        Neon1[GetPlayerVehicleID(playerid)] = 0;
				        Neon2[GetPlayerVehicleID(playerid)] = 0;
						SM(playerid,"Neony úspìnì smazány");
					}
					else
					{
					    SM(playerid,"Toto vozidlo nemá namontované neony");
					}
				}
			}
		}
		return 1;
	}
	if(dialogid == UNNAMED+72)
	{
		if(response)
		{
		    EditField[playerid][1] = listitem;
		    SPD(playerid,UNNAMED+73,DIALOG_STYLE_INPUT,"Edit File","Zadejte novou hodnotu","Zadat","Zavøít");
		}
		return 1;
	}
	if(dialogid == UNNAMED+73)
	{
		if(response)
		{
	        new name[150];
	        GetPVarString(playerid,"EditFileName",name,sizeof(name));
	        format(dfile,sizeof(dfile),USER_FILES,name);
		    switch(EditField[playerid][1])
		    {
				case 0: SetHodnota(playerid,"Prefix",inputtext);
				case 1: SetHodnota(playerid,"PrefixColor",inputtext);
				case 2: SetHodnota(playerid,"TextColor",inputtext);
				case 3: SetHodnota(playerid,"BarvaNicku",inputtext);
				case 4: SetHodnota(playerid,"Admin Level",inputtext);
				case 5: SetHodnota(playerid,"Admin Type",inputtext);
				case 6: SetHodnota(playerid,"Body",inputtext);
				case 7: SetHodnota(playerid,"Naboje",inputtext);
				case 8: SetHodnota(playerid,"Skin",inputtext);
				case 9: SetHodnota(playerid,"WinPostrehy",inputtext);
				case 10: SetHodnota(playerid,"DuelWins",inputtext);
				case 11: SetHodnota(playerid,"DuelLose",inputtext);
				case 12: SetHodnota(playerid,"MiseCompleted",inputtext);
				case 13: SetHodnota(playerid,"Hodnost",inputtext);
		    }
		}
		return 1;
	}
	if(dialogid == UNNAMED+75)
	{
	    if(response)
	    {
			for(new i; i <= listitem; i ++)
			{
			    if(strlen(Race[i][CPName]) == 0 || Race[i][CPHide] == 1)
			    {
		        	listitem++;
				}
			}
			if(EventRace == listitem) return SM(playerid,"Tento závod je u vytovøený jako event");
			if(RacePlayer[playerid] > -1) return SM(playerid,"U si pøipojen v závodì");
			if(RaceStart[listitem] == true)
			{
			    return SM(playerid,"Závod u je odstartován");
			}
			else if(RaceReady[listitem] == true)
			{
				format(str,sizeof(str),"%s "w"%s "sb"se pøipojil do závodu "w"%s"sb".",Players(playerid),Jmeno(playerid),Race[listitem][CPName]);
				SCMTA(0x0055FFFF,str);
				format(str,sizeof(str),"Pro pøipojení pouij: "w"/race %d"sb".",listitem);
				SCMTA(0x0055FFFF,str);
				ConnectToRace(playerid,listitem);
			}
			else
			{
				new DIALOG_VEHICLES[1000],vehicles[] = {400,402,411,415,541,451,424,429,434,461,522,475,477,480,495,496,494,502,503,505,506,521,533,534,535,536,539,555,558,559,561,560,562,565,567,568,573,603};
				for(new i; i < sizeof(vehicles); i ++)
				{
				    format(str,sizeof(str),"%s\n",VehicleNames[vehicles[i]-400]);
				    strcat(DIALOG_VEHICLES,str);
				}
				SetPVarInt(playerid,"RaceID",listitem);
			    SPD(playerid,UNNAMED+76,DIALOG_STYLE_LIST,"Závod - Vyber vozidlo",DIALOG_VEHICLES,"Vybrat","Zavøít");
			}
		}
	    return 1;
	}
	if(dialogid == UNNAMED+76)
	{
	    if(response)
	    {
	        new raceid = GetPVarInt(playerid,"RaceID");
			if(RacePlayer[playerid] > -1) return SM(playerid,"U si pøipojen v závodì");
			if(RaceStart[raceid] == true) return SM(playerid,"Závod u je odstartován");
			if(EventRace == raceid) return SM(playerid,"Tento závod je u vytovøený jako event");
			SetPVarInt(playerid,"RaceVehicle",GetVehicleIDFromName(inputtext));
			SPD(playerid,UNNAMED+197,DIALOG_STYLE_INPUT,"Vytvoøení závodu","Zadejte zapisné v bodech\n\n"r"! V pøípadì oputìní serveru èi pádu hry jsou body nevratné !","Dalí","Zavøít");
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+77)
	{
	    if(response)
	    {
			if(RunEvent > 0) return SM(playerid,"U je zaloený event");
	        format(dfile,sizeof(dfile),"UnNamed/Races/Race[%d].txt",listitem);
	        if(!fexist(dfile)) return SM(playerid,"CHYBA: Vybral jste prázdný slot");
		    if(RaceReady[listitem] == true) return SM(playerid,"Tento závod u jedou hráèi");
			EventRace = listitem;
			SPD(playerid,UNNAMED+81,DIALOG_STYLE_INPUT,"Event - Závody","Zadejte "g"ID/Název "w"vozidla, se kterým se pojede závod mezera "r"typ závodu\n\n{0088FF}Typy závodu:\n0 - Klasický\n1 - Bez kolizí a volný pohyb\n2 - Monost opakovaného portu","Zadat","Zavøít");
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+78)
	{
		if(response)
		{
		    switch(listitem)
		    {
		        case 0:
		        {
		            new fajl[50];
		            new raceid = GetPVarInt(playerid,"RemoveRaceID");
					format(fajl,sizeof(fajl),"UnNamed/Races/Race[%d].txt",raceid);
		            if(fexist(fajl))
		            {
		                format(str,sizeof(str),"Závod "g"%s "w"s "g"%d "w"checkpointy "w"úspìnì "r"smazán",DOF2_GetString(dfile,"Name"),DOF2_GetInt(dfile,"CPS"));
		                SM(playerid,str);
						DOF2_RemoveFile(fajl);
		            }
		            else
		            {
						SM(playerid,"Závod neexistuje");
		            }
		        }
		    }
		}
		else
		{
			EventRace = -1;
		}
		return 1;
	}
	if(dialogid == UNNAMED+79)
	{
		if(response)
		{
	        SetPVarInt(playerid,"ColorID",listitem);
	        SPD(playerid,UNNAMED+80,DIALOG_STYLE_INPUT,"Nastavení","Zadejte novou barvu ("r"HEX "w"mezera "r"Název barvy"w")\n\nPøíklad: "r"FF0000 "r"Èervená","Nastavit","Zavøít");
		}
	    return 1;
	}
	if(dialogid == UNNAMED+80)
	{
		if(response)
		{
		    new code[255],name[255];
			if(sscanf(inputtext,"zz",code,name)) return SPD(playerid,UNNAMED+80,DIALOG_STYLE_INPUT,"Nastavení","Zadejte novou barvu ("r"HEX "w"mezera "r"Název barvy"w")\n\nPøíklad: "r"FF0000 Èervená","Nastavit","Zavøít");
			if(strlen(code) < 6) return SPD(playerid,UNNAMED+80,DIALOG_STYLE_INPUT,"Nastavení","Zadejte novou barvu ("r"HEX "w"mezera "r"Název barvy"w")\n\nPøíklad: "r"FF0000 Èervená","Nastavit","Zavøít");
			if(strlen(name) > 24) return SPD(playerid,UNNAMED+80,DIALOG_STYLE_INPUT,"Nastavení","Zadal si pøíli dlouhý název barvy","Nastavit","Zavøít");
			new colorid = GetPVarInt(playerid,"ColorID");
		    new color[255],color2[255];
			format(str,sizeof(str),"TextColor[%d]",colorid);
			format(color,sizeof(color),"ColorName[%d]",colorid);
			format(color2,sizeof(color2),"NickColor[%d]",colorid);
			DOF2_SetString(CONFIG,color,name);
	        DOF2_SetString(CONFIG,str,code);
	        format(str,sizeof(str),"0x%sFF",code);
	        DOF2_SetString(CONFIG,color2,str);
	        DOF2_SaveFile();
		    format(str,sizeof(str),"Barva upravena [ Barva: {%s}%s "w"| ID: "g"%d "w" ]",code,name,colorid);
		    SM(playerid,str);
		}
		return 1;
	}
	if(dialogid == UNNAMED+81)
	{
	    if(response)
	    {
			new name[144];
			if(!sscanf(inputtext,"ii",ecarid,EventOptions))
			{

			}
			else if(!sscanf(inputtext,"zi",name,EventOptions))
			{
			    ecarid = GetVehicleIDFromName(name);
				if(ecarid < 400 || ecarid > 615) return SPD(playerid,UNNAMED+81,DIALOG_STYLE_INPUT,"Event - Závody","Zadejte "g"ID/Název "w"vozidla, se kterým se pojede závod mezera "r"typ závodu\n\n{0088FF}Typy závodu:\n0 - Klasický\n1 - Bez kolizí a volný pohyb\n2 - Monost opakovaného portu\n\n"r"Neplatný název vozidla","Zadat","Zavøít");
			}
			else
			{
				return SPD(playerid,UNNAMED+81,DIALOG_STYLE_INPUT,"Event - Závody","Zadejte "g"ID/Název "w"vozidla, se kterým se pojede závod mezera "r"typ závodu\n\n{0088FF}Typy závodu:\n0 - Klasický\n1 - Bez kolizí a volný pohyb\n2 - Monost opakovaného portu","Zadat","Zavøít");
			}
			if(ecarid < 400 || ecarid > 615) return SPD(playerid,UNNAMED+81,DIALOG_STYLE_INPUT,"Event - Závody","Zadejte "g"ID/Název "w"vozidla, se kterým se pojede závod mezera "r"typ závodu\n\n{0088FF}Typy závodu:\n0 - Klasický\n1 - Bez kolizí a volný pohyb\n2 - Monost opakovaného portu\n\n"r"Neplatné ID vozidla","Zadat","Zavøít");
			if(EventOptions < 0 || EventOptions > 2) SPD(playerid,UNNAMED+81,DIALOG_STYLE_INPUT,"Event - Závody","Zadejte "g"ID/Název "w"vozidla, se kterým se pojede závod mezera "r"typ závodu\n\n{0088FF}Typy závodu:\n0 - Klasický\n1 - Bez kolizí a volný pohyb\n2 - Monost opakovaného portu\n\n"r"Neplatný typ závodu","Zadat","Zavøít");
			RaceReady[EventRace] = true;
			if(Race[EventRace][CPVW] > 0)
			{
			    if(GetPlayerVirtualWorld(playerid) == 0)
					EventWorld = Race[EventRace][CPVW];
				else
				    EventWorld = GetPlayerVirtualWorld(playerid);
			}
			RunEvent = 4;
			portid = 4;
			interior = GetPlayerInterior(playerid);
			format(str,sizeof(str),"~w~%s ~g~%s ~w~zavodni port s vozidlem ID ~g~%d~w~.",TDPlayers(playerid),Jmeno(playerid),ecarid);
			AddStringToTextDraw(str);
			DisableRemoteVehicleCollisions(playerid,1);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+82)
	{
		if(response)
		{
		    format(str,sizeof(str),"ObjectID[%d]",listitem);
			if(dini_Int("UnNamed/Objects.txt",str) == 0) return SM(playerid,"Neplatný object");
		    new Float:X,Float:Y,Float:Z,Float:Angle;
			GetPlayerPos(playerid,X,Y,Z);
			if(!IsPlayerInAnyVehicle(playerid))
			{
				GetPlayerFacingAngle(playerid,Angle);
			}
			else
			{
				GetVehicleZAngle(GetPlayerVehicleID(playerid),Angle);
			}
			for(new i;i < MAX_OBJECTS_EX;i++)
			{
				if(Object[playerid][i] == 0)
				{
				    format(str,sizeof(str),"ObjectID[%d]",listitem);
					Object[playerid][i] = CreateObject(dini_Int("UnNamed/Objects.txt",str),X + 8*floatcos(90+Angle, degrees), Y+ 8*floatsin(90-Angle, degrees),Z,0,0,Angle);
					ObjectsIDS[playerid][i] = dini_Int("UnNamed/Objects.txt",str);
					EditObject(playerid,Object[playerid][i]);
					break;
				}
				else
				{
					continue;
				}
			}
			CreateInfoBox(playerid,"Object uspesne ~g~vytvoren",5);
		}
		return 1;
	}
	if(dialogid == UNNAMED+83)
	{
	    if(response)
		{
			if(Map[listitem][MapSlotUsed] == true) return SM(playerid,"Vyber prázdný slot");
		    SetPVarInt(playerid,"MapID",listitem);
		    SPD(playerid,UNNAMED+84,DIALOG_STYLE_INPUT,"MapSave","Zadejte "g"virtual world "w"defaultnì (-1) mezera "g"název "w"mapy","Uloit","Zavøít");
		}
		return 1;
	}
	if(dialogid == UNNAMED+84)
	{
	    if(response)
	    {
			new vw = -1,name[129];
			if(sscanf(inputtext,"is",vw,name)) return SPD(playerid,UNNAMED+84,DIALOG_STYLE_INPUT,"MapSave","Zadejte "g"virtual world "w"defaultnì (-1) mezera "g"název "w"mapy","Uloit","Zavøít");
			if(strlen(inputtext) > 24) return SPD(playerid,UNNAMED+84,DIALOG_STYLE_INPUT,"MapSave","Zadejte maximálnì 24 znakù","Uloit","Zavøít");
			new mapid = GetPVarInt(playerid,"MapID"),query[200],Cache:cache;
			mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Maps` WHERE `MapID`=%d",mapid);
			cache = mysql_query(mysql,query);
			if(!cache_get_row_count(mysql))
			{
				format(Map[mapid][MapName],24,name);
				format(Map[mapid][MapAutor],24,Jmeno(playerid));
				new Float:PX,Float:PY,Float:PZ;
				GetPlayerPos(playerid,PX,PY,PZ);
				Map[mapid][MapSX] = PX;
				Map[mapid][MapSY] = PY;
				Map[mapid][MapSZ] = PZ;
				Map[mapid][MapVW] = vw;
				mysql_format(mysql,query,sizeof(query),"INSERT INTO `Maps` (`MapID`,`VW`,`Name`,`Autor`,`X`,`Y`,`Z`) VALUES (%d,%d,'%e','%e',%f,%f,%f)",mapid,vw,name,Jmeno(playerid),PX,PY,PZ);
				mysql_query(mysql,query,false);
				new Float:X,Float:Y,Float:Z,Float:rX,Float:rY,Float:rZ;
				for(new i; i < MAX_OBJECTS_EX; i ++)
				{
					if(Object[playerid][i] != 0)
					{
					    GetObjectPos(Object[playerid][i],X,Y,Z);
						GetObjectRot(Object[playerid][i],rX,rY,rZ);
						Map[mapid][MapObjectID][i] = ObjectsIDS[playerid][i];
						Map[mapid][MapX][i] = X;
						Map[mapid][MapY][i] = Y;
						Map[mapid][MapZ][i] = Z;
						Map[mapid][MapRX][i] = rX;
						Map[mapid][MapRY][i] = rY;
						Map[mapid][MapRZ][i] = rZ;
						mysql_format(mysql,query,sizeof(query),"INSERT INTO `MapsObjects` (`MapID`,`ObjectID`,`X`,`Y`,`Z`,`rX`,`rY`,`rZ`) VALUES (%d,%d,%f,%f,%f,%f,%f,%f)",mapid,Map[mapid][MapObjectID][i],X,Y,Z,rX,rY,rZ);
						mysql_query(mysql,query,false);
					}
				}
				cache_delete(cache,mysql);
				Map[mapid][MapSlotUsed] = true;
				for(new i; i < MAX_OBJECTS_EX; i ++)
				{
					DestroyObject(Object[playerid][i]);
					Object[playerid][i] = 0;
					DestroyDynamic3DTextLabel(ObjectLabel[playerid][i]);
				}
				CreateInfoBox(playerid,"Mapa ~g~ulozena",3);
			}
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+85)
	{
	    if(response)
	    {
			ShowMapOptions(playerid,listitem);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+86)
	{
	    if(response)
	    {
			switch(listitem)
			{
				case 0:
				{
				    new objectid = GetPVarInt(playerid,"EditObjectID");
				    new Float:oPos[3],Float:nPos[3];
				    GetObjectPos(objectid,oPos[0],oPos[1],oPos[2]);
				    for(new i; i < MAX_OBJECTS_EX; i++)
				    {
				        if(Object[playerid][i] != 0)
				        {
				            GetObjectPos(objectid,nPos[0],nPos[1],nPos[2]);
				            if(oPos[0] == nPos[0] && oPos[1] == nPos[1] && oPos[2] == nPos[2]){
				                SetPVarInt(playerid,"EObjectID",i);
				                break;
							}
						}
				    }
				    EditObject(playerid,objectid);
				}
				case 1:
				{
				    new modelid = GetPVarInt(playerid,"EditObjectModel"),objectid = GetPVarInt(playerid,"EditObjectID");
				    new Float:X,Float:Y,Float:Z,Float:rX,Float:rY,Float:rZ;
					GetObjectPos(objectid,X,Y,Z);
					GetObjectRot(objectid,rX,rY,rZ);
					for(new i;i < MAX_OBJECTS_EX;i++)
					{
						if(Object[playerid][i] == 0)
						{
							Object[playerid][i] = CreateObject(modelid,X,Y,Z,rX,rY,rZ,300);
							ObjectsIDS[playerid][i] = modelid;
							SetPVarInt(playerid,"EObjectID",i);
							EditObject(playerid,Object[playerid][i]);
							format(str,sizeof(str),"Object (Model: ~y~%d~w~ / ID: ~y~%d~w~/~r~%d~w~) uspesne ~g~vytvoren",modelid,i,MAX_OBJECTS_EX);
							CreateInfoBox(playerid,str,5);
							break;
						}
						else
						{
							continue;
						}
					}
				}
			}
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+87)
	{
	    if(response)
	    {
			SM(playerid,"Mimo provoz");
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+88)
	{
	    if(response)
	    {
			SM(playerid,"Mimo provoz");
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+89)
	{
	    if(response)
	    {
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+90)
	{
	    if(response)
	    {
			if(GetClickText(inputtext,"Respawnout gará"))
			{
			    for(new i; i < MAX_SLOTS; i ++)
			    {
					if(IsVehicleEmpty(SavedCar[playerid][i]))
					{
				    	SpawnCar(playerid,i);
						TuneCar(playerid,i);
					}
			    }
				CreateInfoBox(playerid,"Vase vozidla uspesne respawnuta",5);
			}
			else
			{
				if(listitem > (MAX_SLOTS-MAX_SPECIAL_SLOTS)-1)
				{
				    for(new i = MAX_SLOTS-MAX_SPECIAL_SLOTS; i <= listitem; i ++)
				    {
					    if(ParkInfo[playerid][i][Model] == 0)
					    {
					        listitem++;
					    }
					}
				}
				if(Slots[playerid][listitem] == 0)
				{
				    if(listitem < MAX_SLOTS-MAX_SPECIAL_SLOTS)
				    {
				        new points, lvl;
				        if(listitem <= 4)
				        {
				            points = 25;
				            lvl = 0;
				        }
				        else if(listitem > 4 && listitem < 9)
				        {
				            points = 50;
				            lvl = 10;
				        }
				        else if(listitem >= 9)
				        {
				            points = 100;
				            lvl = 20;
				        }
				        format(str,sizeof(str),"Nemáte dostateèný level [ "c"%d "w"]",lvl);
				        if(Level[playerid] < lvl) return SM(playerid,str);
				        format(str,sizeof(str),"Nemáte dostatek bodù [ "g"%d "w"]",points);
					    if(Points[playerid] < points) return SM(playerid,str);
					    GivePoints(playerid,-points);
						format(str,sizeof(str),"Slot [ %d "w"] úspìnì odemknut za %d Bodù",listitem+1,points);
						SM(playerid,str);
						Slots[playerid][listitem] = 1;
						format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
						format(str,sizeof(str),"Slots[%d]",listitem);
						DOF2_SetInt(dfile,str,1);
						DOF2_SaveFile();
						return 0;
					}
				}
				if(SavedCar[playerid][listitem] > 0)
				{
				    new prodat = GetVehiclePrice(ParkInfo[playerid][listitem][Model]);
				    if(ParkInfo[playerid][listitem][pCashBack] <= gettime())
				        prodat = prodat/2;
					if(prodat > 0)
					{
						if(strcmp(ParkInfo[playerid][listitem][Password],"Unlocked",false) == 0)
						{
							format(str,sizeof(str),"Respawnout vozidlo\nPøivolat vozidlo\nPøeparkovat vozidlo\nUloit tuning\nSmazat tuning\nZamknout vozidlo\n"r"Prodat vozidlo za "g"%d "c"bodù",prodat);
						}
						else
						{
							format(str,sizeof(str),"Respawnout vozidlo\nPøivolat vozidlo\nPøeparkovat vozidlo\nUloit tuning\nSmazat tuning\nOdemknout vozidlo\n"r"Prodat vozidlo za "g"%d "c"bodù",prodat);
						}
					}
					else
					{
						if(strcmp(ParkInfo[playerid][listitem][Password],"Unlocked",false) == 0)
						{
							format(str,sizeof(str),"Respawnout vozidlo\nPøivolat vozidlo\nPøeparkovat vozidlo\nUloit tuning\nSmazat tuning\nZamknout vozidlo\n"r"Smazat vozidlo");
						}
						else
						{
							format(str,sizeof(str),"Respawnout vozidlo\nPøivolat vozidlo\nPøeparkovat vozidlo\nUloit tuning\nSmazat tuning\nOdemknout vozidlo\n"r"Smazat vozidlo");
						}
					}
				 	SPD(playerid,UNNAMED+91,DIALOG_STYLE_LIST,"Gará",str,"Vybrat","Zavøít");
				}
				else
				{
				 	SPD(playerid,UNNAMED+91,DIALOG_STYLE_LIST,"Gará","Koupit Vozidlo","Vybrat","Zavøít");
				}
				SetPVarInt(playerid,"GarageSlotID",listitem);
			}
	    }
		return 1;
	}
	if(dialogid == UNNAMED+91)
	{
		if(response)
		{
		    if(GetClickText(inputtext,"Koupit vozidlo"))
			{
				new slot = GetPVarInt(playerid,"GarageSlotID");
			    if(SavedCar[playerid][slot] > 0) return SM(playerid,"Na tomto slotu u má zakoupené vozidlo");
			    SetPVarInt(playerid,"NotBuyVehicle",0);
				ShowGarageCategories(playerid);
			}
		    else if(GetClickText(inputtext,"Respawnout vozidlo"))
			{
				new slot = GetPVarInt(playerid,"GarageSlotID");
				SpawnCar(playerid,slot);
				TuneCar(playerid,slot);
				format(str,sizeof(str),"Vase vozidlo ~g~%s ~w~uspesne ~y~respawnuto",GetVehicleNameByCarID(ParkInfo[playerid][slot][Model]));
    			CreateInfoBox(playerid,str,5);
			}
		    else if(GetClickText(inputtext,"Pøivolat vozidlo"))
			{
				if(IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Nesmí být ve vozidle");
				new slot = GetPVarInt(playerid,"GarageSlotID");
			    new Float:X,Float:Y,Float:Z,Float:Angle;
			    GetPlayerPos(playerid,X,Y,Z);
			    GetPlayerFacingAngle(playerid,Angle);
				SetVehiclePos(SavedCar[playerid][slot],X + 4*floatcos(90+Angle, degrees), Y+ 4*floatsin(90-Angle, degrees),Z);
				SetVehicleZAngle(SavedCar[playerid][slot],Angle+90);
				format(str,sizeof(str),"Vase vozidlo ~g~%s ~w~uspesne ~y~privolano",GetVehicleNameByCarID(ParkInfo[playerid][slot][Model]));
    			CreateInfoBox(playerid,str,5);
			}
		    else if(GetClickText(inputtext,"Pøeparkovat vozidlo"))
			{
				new slot = GetPVarInt(playerid,"GarageSlotID");
				format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(playerid),slot);
				if(!fexist(dfile)) return SM(playerid,"Vyskytla se chyba");
				GetVehiclePos(SavedCar[playerid][slot],ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ]);
				GetVehicleZAngle(SavedCar[playerid][slot],ParkInfo[playerid][slot][pA]);
				DOF2_SetFloat(dfile,"X",ParkInfo[playerid][slot][pX]);
				DOF2_SetFloat(dfile,"Y",ParkInfo[playerid][slot][pY]);
				DOF2_SetFloat(dfile,"Z",ParkInfo[playerid][slot][pZ]);
				DOF2_SetFloat(dfile,"A",ParkInfo[playerid][slot][pA]);
				DOF2_SetBool(dfile,"Odstaveno",false);
				DOF2_SaveFile();
				ParkInfo[playerid][slot][pOdstaveno] = false;
				format(str,sizeof(str),"Vozidlo ~r~%s ~w~uspesne ~y~preparkovano",GetVehicleNameByCarID(ParkInfo[playerid][slot][Model]));
    			CreateInfoBox(playerid,str,5);
			}
			else if(GetClickText(inputtext,"Zamknout vozidlo"))
			{
				SPD(playerid,UNNAMED+124,DIALOG_STYLE_INPUT,"Zamknout vozidlo","Napite heslo pro zamknutí vozidla na heslo,\npokud nechcete pouít heslo nechte pole prázdné","Zamknout","Zavøít");
			}
			else if(GetClickText(inputtext,"Odemknout vozidlo"))
			{
				new slot = GetPVarInt(playerid,"GarageSlotID");
				format(ParkInfo[playerid][slot][Password],30,"Unlocked");
				format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(playerid),slot);
				DOF2_SetString(dfile,"Password","Unlocked");
				DOF2_SaveFile();
				SM(playerid,"Vozidlo odemknuto");
			}
			else if(GetClickText(inputtext,"Uloit tuning"))
			{
				new slot = GetPVarInt(playerid,"GarageSlotID");
				format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(playerid),slot);
				if(!fexist(dfile)) return SM(playerid,"Vyskytla se chyba");
				new car = SavedCar[playerid][slot];
				ParkInfo[playerid][slot][TuneSlot0] = GetVehicleComponentInSlot(car,CARMODTYPE_SPOILER);
				ParkInfo[playerid][slot][TuneSlot1] = GetVehicleComponentInSlot(car,CARMODTYPE_HOOD);
				ParkInfo[playerid][slot][TuneSlot2] = GetVehicleComponentInSlot(car,CARMODTYPE_ROOF);
				ParkInfo[playerid][slot][TuneSlot3] = GetVehicleComponentInSlot(car,CARMODTYPE_SIDESKIRT);
				ParkInfo[playerid][slot][TuneSlot4] = GetVehicleComponentInSlot(car,CARMODTYPE_LAMPS);
				ParkInfo[playerid][slot][TuneSlot5] = GetVehicleComponentInSlot(car,CARMODTYPE_NITRO);
				ParkInfo[playerid][slot][TuneSlot6] = GetVehicleComponentInSlot(car,CARMODTYPE_EXHAUST);
				ParkInfo[playerid][slot][TuneSlot7] = GetVehicleComponentInSlot(car,CARMODTYPE_WHEELS);
				ParkInfo[playerid][slot][TuneSlot8] = GetVehicleComponentInSlot(car,CARMODTYPE_STEREO);
				ParkInfo[playerid][slot][TuneSlot9] = GetVehicleComponentInSlot(car,CARMODTYPE_HYDRAULICS);
				ParkInfo[playerid][slot][TuneSlot10] = GetVehicleComponentInSlot(car,CARMODTYPE_FRONT_BUMPER);
				ParkInfo[playerid][slot][TuneSlot11] = GetVehicleComponentInSlot(car,CARMODTYPE_REAR_BUMPER);
				ParkInfo[playerid][slot][TuneSlot12] = GetVehicleComponentInSlot(car,CARMODTYPE_VENT_RIGHT);
				ParkInfo[playerid][slot][TuneSlot13] = GetVehicleComponentInSlot(car,CARMODTYPE_VENT_LEFT);
				DOF2_SetInt(dfile,"Color1",ParkInfo[playerid][slot][Color1]);
				DOF2_SetInt(dfile,"Color2",ParkInfo[playerid][slot][Color2]);
				DOF2_SetInt(dfile,"PaintJob",ParkInfo[playerid][slot][PaintJob]);
				DOF2_SetString(dfile,"SPZ",ParkInfo[playerid][slot][SPZ]);
				DOF2_SetInt(dfile,"TuneSlot0",ParkInfo[playerid][slot][TuneSlot0]);
				DOF2_SetInt(dfile,"TuneSlot1",ParkInfo[playerid][slot][TuneSlot1]);
				DOF2_SetInt(dfile,"TuneSlot2",ParkInfo[playerid][slot][TuneSlot2]);
				DOF2_SetInt(dfile,"TuneSlot3",ParkInfo[playerid][slot][TuneSlot3]);
				DOF2_SetInt(dfile,"TuneSlot4",ParkInfo[playerid][slot][TuneSlot4]);
				DOF2_SetInt(dfile,"TuneSlot5",ParkInfo[playerid][slot][TuneSlot5]);
				DOF2_SetInt(dfile,"TuneSlot6",ParkInfo[playerid][slot][TuneSlot6]);
				DOF2_SetInt(dfile,"TuneSlot7",ParkInfo[playerid][slot][TuneSlot7]);
				DOF2_SetInt(dfile,"TuneSlot8",ParkInfo[playerid][slot][TuneSlot8]);
				DOF2_SetInt(dfile,"TuneSlot9",ParkInfo[playerid][slot][TuneSlot9]);
				DOF2_SetInt(dfile,"TuneSlot10",ParkInfo[playerid][slot][TuneSlot10]);
				DOF2_SetInt(dfile,"TuneSlot11",ParkInfo[playerid][slot][TuneSlot11]);
				DOF2_SetInt(dfile,"TuneSlot12",ParkInfo[playerid][slot][TuneSlot12]);
				DOF2_SetInt(dfile,"TuneSlot13",ParkInfo[playerid][slot][TuneSlot13]);
				DOF2_SaveFile();
//				SpawnCar(playerid,slot);
//				TuneCar(playerid,slot);
				format(str,sizeof(str),"Tuning vozidla ~r~%s ~w~uspesne ~y~ulozen",GetVehicleNameByCarID(ParkInfo[playerid][slot][Model]));
				CreateInfoBox(playerid,str,5);
			}
		    else if(GetClickText(inputtext,"Smazat tuning"))
			{
				new slot = GetPVarInt(playerid,"GarageSlotID");
				format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(playerid),slot);
				if(!fexist(dfile)) return SM(playerid,"Vyskytla se chyba");
				ParkInfo[playerid][slot][Color1] = random(128);
				ParkInfo[playerid][slot][Color2] = random(128);
				ParkInfo[playerid][slot][PaintJob] = 3;
				ParkInfo[playerid][slot][TuneSlot0] = 0;
				ParkInfo[playerid][slot][TuneSlot1] = 0;
				ParkInfo[playerid][slot][TuneSlot2] = 0;
				ParkInfo[playerid][slot][TuneSlot3] = 0;
				ParkInfo[playerid][slot][TuneSlot4] = 0;
				ParkInfo[playerid][slot][TuneSlot5] = 0;
				ParkInfo[playerid][slot][TuneSlot6] = 0;
				ParkInfo[playerid][slot][TuneSlot7] = 0;
				ParkInfo[playerid][slot][TuneSlot8] = 0;
				ParkInfo[playerid][slot][TuneSlot9] = 0;
				ParkInfo[playerid][slot][TuneSlot10] = 0;
				ParkInfo[playerid][slot][TuneSlot11] = 0;
				ParkInfo[playerid][slot][TuneSlot12] = 0;
				ParkInfo[playerid][slot][TuneSlot13] = 0;
				DOF2_SetInt(dfile,"Color1",ParkInfo[playerid][slot][Color1]);
				DOF2_SetInt(dfile,"Color2",ParkInfo[playerid][slot][Color2]);
				DOF2_SetInt(dfile,"PaintJob",ParkInfo[playerid][slot][PaintJob]);
				DOF2_SetInt(dfile,"TuneSlot0",ParkInfo[playerid][slot][TuneSlot0]);
				DOF2_SetInt(dfile,"TuneSlot1",ParkInfo[playerid][slot][TuneSlot1]);
				DOF2_SetInt(dfile,"TuneSlot2",ParkInfo[playerid][slot][TuneSlot2]);
				DOF2_SetInt(dfile,"TuneSlot3",ParkInfo[playerid][slot][TuneSlot3]);
				DOF2_SetInt(dfile,"TuneSlot4",ParkInfo[playerid][slot][TuneSlot4]);
				DOF2_SetInt(dfile,"TuneSlot5",ParkInfo[playerid][slot][TuneSlot5]);
				DOF2_SetInt(dfile,"TuneSlot6",ParkInfo[playerid][slot][TuneSlot6]);
				DOF2_SetInt(dfile,"TuneSlot7",ParkInfo[playerid][slot][TuneSlot7]);
				DOF2_SetInt(dfile,"TuneSlot8",ParkInfo[playerid][slot][TuneSlot8]);
				DOF2_SetInt(dfile,"TuneSlot9",ParkInfo[playerid][slot][TuneSlot9]);
				DOF2_SetInt(dfile,"TuneSlot10",ParkInfo[playerid][slot][TuneSlot10]);
				DOF2_SetInt(dfile,"TuneSlot11",ParkInfo[playerid][slot][TuneSlot11]);
				DOF2_SetInt(dfile,"TuneSlot12",ParkInfo[playerid][slot][TuneSlot12]);
				DOF2_SetInt(dfile,"TuneSlot13",ParkInfo[playerid][slot][TuneSlot13]);
				DOF2_SaveFile();
				SpawnCar(playerid,slot);
				TuneCar(playerid,slot);
				format(str,sizeof(str),"Tuning vozidla ~r~%s ~w~uspesne ~y~smazan",GetVehicleNameByCarID(ParkInfo[playerid][slot][Model]));
				CreateInfoBox(playerid,str,5);
			}
		    else if(GetClickText(inputtext,"Prodat vozidlo") || GetClickText(inputtext,"Smazat vozidlo"))
			{
				new slot = GetPVarInt(playerid,"GarageSlotID"),price;
				price = GetVehiclePrice(ParkInfo[playerid][slot][Model]);
				if(ParkInfo[playerid][slot][pCashBack] < gettime())
				    price = price/2;
				if(price > 0)
				{
			    	format(str,sizeof(str),"Opravdu si pøejete prodat Vae vozidlo "g"%s "w"(Slot: "y"%d"w") za "r"%d bodù"w"?\nMùete vozidlo prodat také hráèi za vyí cenu pøíkazem\n"r"/sellcar [ ID ] [ Slot ID ] [ Cena ( body ) ]",GetVehicleNameByCarID(ParkInfo[playerid][slot][Model]),slot+1,price);
				}
				else
				{
			    	format(str,sizeof(str),"Opravdu si pøejete odstranit Vae vozidlo "g"%s "w"(Slot: "y"%d"w") z garáe ?\nMùete vozidlo prodat také hráèi za vyí cenu pøíkazem\n"r"/sellcar [ ID ] [ Slot ID ] [ Cena ( body ) ]",GetVehicleNameByCarID(ParkInfo[playerid][slot][Model]),slot+1);
				}
				SPD(playerid,UNNAMED+93,DIALOG_STYLE_MSGBOX,"Gará",str,"Ano","Ne");
			}
			else if(GetClickText(inputtext,"Koupit pancíø"))
			{
				new DIALOG[500];
				for(new i; i < sizeof(vArmors); i ++)
				{
				    format(str,sizeof(str),"Pancíø: "g"%d %%\tCena: "c"%d bodù\tVýdr: "g"%0.1fx\n",vArmors[i][0],vArmors[i][1],float(vArmors[i][2])/1000);
					strcat(DIALOG,str);
				}
				SPD(playerid,UNNAMED+162,DIALOG_STYLE_TABLIST,"Pancíø",DIALOG,"Vybrat","Zavøít");
			}
		}
		return 1;
	}
	if(dialogid == UNNAMED+92)
	{
	    if(response)
	    {
	        if(GetPVarInt(playerid,"NotBuyVehicle") != 1)
	        {
				if(listitem == sizeof(GarageCategories)-1 && Elite[playerid] == false)
				{
				    ShowGarageCategories(playerid);
				    SM(playerid,"Nejste èlen Elity -> /help - Elita");
				    return 0;
				}
			}
			new Cache:cache,query[250],DIALOG[2000],vehs;
			mysql_format(mysql,query,sizeof(query),"SELECT * FROM `GarageVehicles` WHERE `Kategorie`=%d ORDER BY `Price` DESC",listitem);
			cache = mysql_query(mysql,query);
			for(new i; i < cache_get_row_count(mysql); i ++)
			{
			    vehs ++;
			    format(str,sizeof(str),"%s\t{ffb15e}%d bodù\n",GetVehicleNameByCarID(cache_get_field_content_int(i,"Model")),cache_get_field_content_int(i,"Price"));
			    strcat(DIALOG,str);
			}
			SetPVarInt(playerid,"CategoryID",listitem);
			if(vehs)
				if(GetPVarInt(playerid,"NotBuyVehicle") != 1) SPD(playerid,UNNAMED+94,DIALOG_STYLE_TABLIST,"Koupit vozidlo",DIALOG,"Vybrat","Zpìt");
				else SPD(playerid,0,DIALOG_STYLE_TABLIST,"Vozidla",DIALOG,"Zavøít","");
			else SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Koupit vozidlo","V této kategorii nejsou ádná vozidla","Zavøít","");
			cache_delete(cache,mysql);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+93)
	{
	    if(response)
	    {
			new slot = GetPVarInt(playerid,"GarageSlotID");
			format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(playerid),slot);
			if(fexist(dfile))
			{
			    fremove(dfile);
				new price = GetVehiclePrice(ParkInfo[playerid][slot][Model]);
				if(price > 0)
				{
				    if(ParkInfo[playerid][slot][pCashBack] < gettime())
				        price = price/2;
					GivePoints(playerid,price);
					format(str,sizeof(str),"Vozidlo ~g~%s ~w~uspesne prodano za ~b~%d bodu",GetVehicleNameByCarID(ParkInfo[playerid][slot][Model]),price);
				}
				else
				{
					format(str,sizeof(str),"Vozidlo ~g~%s ~w~uspesne odebrano z garaze",GetVehicleNameByCarID(ParkInfo[playerid][slot][Model]));
				}
				CreateInfoBox(playerid,str,7);
			    for(new i; i < MAX_S_OBJECTS; i ++)
			    {
			        DestroyDynamicObject(ParkInfo[playerid][slot][SpecialObjects][i]);
			        ParkInfo[playerid][slot][SpecialObjects][i] = 0;
			    }
			    DestroyVehicle(SavedCar[playerid][slot]);
			    SavedCar[playerid][slot] = 0;
			    ParkInfo[playerid][slot][pX] = 0;
			    ParkInfo[playerid][slot][pY] = 0;
			    ParkInfo[playerid][slot][pZ] = 0;
			    ParkInfo[playerid][slot][pA] = 0;
			    ParkInfo[playerid][slot][Model] = 0;
			    ParkInfo[playerid][slot][Color1] = 0;
			    ParkInfo[playerid][slot][Color2] = 0;
			    ParkInfo[playerid][slot][PaintJob] = 0;
			    ParkInfo[playerid][slot][TuneSlot0] = 0;
			    ParkInfo[playerid][slot][TuneSlot1] = 0;
			    ParkInfo[playerid][slot][TuneSlot2] = 0;
			    ParkInfo[playerid][slot][TuneSlot3] = 0;
			    ParkInfo[playerid][slot][TuneSlot4] = 0;
			    ParkInfo[playerid][slot][TuneSlot5] = 0;
			    ParkInfo[playerid][slot][TuneSlot6] = 0;
			    ParkInfo[playerid][slot][TuneSlot7] = 0;
			    ParkInfo[playerid][slot][TuneSlot8] = 0;
			    ParkInfo[playerid][slot][TuneSlot9] = 0;
			    ParkInfo[playerid][slot][TuneSlot10] = 0;
			    ParkInfo[playerid][slot][TuneSlot11] = 0;
			    ParkInfo[playerid][slot][TuneSlot12] = 0;
			    ParkInfo[playerid][slot][TuneSlot13] = 0;
			    ParkInfo[playerid][slot][pCashBack] = 0;
			    format(ParkInfo[playerid][slot][Password],30,"Locked");
			    CheckPlayerDrazbaVehicle(playerid,slot);
			}
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+94)
	{
	    if(response)
	    {
			new slot = GetPVarInt(playerid,"GarageSlotID"),Cache:cache,query[250],category = GetPVarInt(playerid,"CategoryID");
			mysql_format(mysql,query,sizeof(query),"SELECT * FROM `GarageVehicles` WHERE `Kategorie`=%d ORDER BY `Price` DESC",category);
			cache = mysql_query(mysql,query);
			new price = cache_get_field_content_int(listitem,"Price",mysql),modelid = cache_get_field_content_int(listitem,"Model",mysql);
			cache_delete(cache,mysql);
	        if(Points[playerid] < price) return SM(playerid,"Nemáte dostatek bodù");
	        if(IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Nesmíte být ve vozidle");
			GivePoints(playerid,-price);
	        new Float:X,Float:Y,Float:Z,Float:Angle;
	        GetPlayerPos(playerid,X,Y,Z);
	        GetPlayerFacingAngle(playerid,Angle);
			new rand = random(128);
			SavedCar[playerid][slot] = 0;
			ParkInfo[playerid][slot][pX] = X + 4*floatcos(90+Angle, degrees);
			ParkInfo[playerid][slot][pY] = Y + 4*floatsin(90-Angle, degrees);
			ParkInfo[playerid][slot][pZ] = Z;
            ParkInfo[playerid][slot][pA] = Angle;
			ParkInfo[playerid][slot][Color1] = rand;
			ParkInfo[playerid][slot][Color2] = rand;
			ParkInfo[playerid][slot][pCashBack] = gettime()+60*5;
		    format(ParkInfo[playerid][slot][Password],30,"Locked");
			format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(playerid),slot);
			if(!fexist(dfile))
			{
			    DOF2_CreateFile(dfile);
				DOF2_SetInt(dfile,"Model",modelid);
				DOF2_SetFloat(dfile,"X",ParkInfo[playerid][slot][pX]);
				DOF2_SetFloat(dfile,"Y",ParkInfo[playerid][slot][pY]);
				DOF2_SetFloat(dfile,"Z",ParkInfo[playerid][slot][pZ]);
				DOF2_SetFloat(dfile,"A",ParkInfo[playerid][slot][pA]);
				DOF2_SetInt(dfile,"Color1",ParkInfo[playerid][slot][Color1]);
				DOF2_SetInt(dfile,"Color2",ParkInfo[playerid][slot][Color2]);
				DOF2_SetInt(dfile,"PaintJob",3);
                DOF2_SaveFile();
			}
			ParkInfo[playerid][slot][PaintJob] = 3;
			ParkInfo[playerid][slot][Model] = modelid;
			format(str,sizeof(str),"Vozidlo "g"%s "w"úspìnì zakoupeno za "c"%d bodu\n\n"r"Po dobu 5 minut mùete vozidlo prodat za plnou cenu!",GetVehicleNameByCarID(modelid),price);
			SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Vozidlo",str,"Zavøít","");
			if(Achiv[playerid][GARAGE_1] == 0)
			{
			    SetPlayerAchievement(playerid,GARAGE_1);
			}
			SpawnCar(playerid,slot);
		}
		else ShowGarageCategories(playerid);
   		return 1;
	}
	if(dialogid == UNNAMED+95)
	{
	    if(response)
	    {
		    new year,month,day;
		    getdate(year,month,day);
			SetPVarString(playerid,"Titul",inputtext);
			if(GetClickText(inputtext,"Donator"))
			{
			    SetPVarString(playerid,"TitulColor","FFFF00");
			}
			else if(GetClickText(inputtext,"Elita"))
			{
				SetPVarString(playerid,"Titul","Eli{0077FF}ta");
			    SetPVarString(playerid,"TitulColor","FFFFFF");
			}
			else if(GetClickText(inputtext,"Legenda"))
			{
			    SetPVarString(playerid,"TitulColor","FFBF00");
			}
			else if(GetClickText(inputtext,"Pumpkin"))
			{
		       	if(month == 11)
			    	SetPVarString(playerid,"TitulColor","FF6A00");
			}
			else if(GetClickText(inputtext,"Jeíek"))
			{
		       	if(month == 1 || month==12)
			    	SetPVarString(playerid,"TitulColor","00FFFF");
			}
			else if(GetClickText(inputtext,"Stromeèek"))
			{
		       	if(month == 1 || month==12)
			    	SetPVarString(playerid,"TitulColor","00FF00");
			}
			else if(GetClickText(inputtext,"Santa"))
			{
		       	if(month == 1 || month==12)
			    	SetPVarString(playerid,"TitulColor","FF0000");
			}
			else
			{
			    SetPVarString(playerid,"TitulColor","FFFFFF");
			}
	        format(str,sizeof(str),"Titul nastaven na: {%s}%s",GetPlayerTitulColor(playerid),GetPlayerTitul(playerid));
	        SM(playerid,str);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+96)
	{
	    if(response)
	    {
	        new name[128];
	        if(Points[playerid] < 300) return SPD(playerid,UNNAMED+96,DIALOG_STYLE_INPUT,"Zmìna nicku","Nemáte dostatek bodù [ "g"300 "w"]","Zmìnit","Zruit");
	        if(sscanf(inputtext,"z",name)) return SPD(playerid,UNNAMED+96,DIALOG_STYLE_INPUT,"Zmìna nicku","Zadejte nový nick, zmìna bude stát "g"300 bodù","Zmìnit","Zruit");
			if(strlen(name) < 3) return SPD(playerid,UNNAMED+96,DIALOG_STYLE_INPUT,"Zmìna nicku","Musíte pouít minimálnì 3 znaky","Zmìnit","Zruit");
			if(strlen(name) > 19) return SPD(playerid,UNNAMED+96,DIALOG_STYLE_INPUT,"Zmìna nicku","Mùete pouít maximálnì 20 znakù","Zmìnit","Zruit");
			if(IsNickSame(name)) return SPD(playerid,UNNAMED+96,DIALOG_STYLE_INPUT,"Zmìna nicku","Tento nick u nìkdo pouívá","Zmìnit","Zruit");
			if(strcmp(name,"[AFK]",true) == 0) return SPD(playerid,UNNAMED+96,DIALOG_STYLE_INPUT,"Zmìna nicku","Nepovolený nick","Zmìnit","Zruit");
			for(new i; i < MAX_PLAYER_NAME; i ++)
			{
			    if(name[i] < 48 && name[i] != 36 && name[i] != 0 && name[i] != 46 && name[i] != 41 && name[i] != 40 || name[i] > 57 && name[i] < 65 && name[i] != 61 || name[i] > 90 && name[i] < 97 && name[i] != 95 && name[i] != 91 && name[i] != 93 || name[i] > 122) return SPD(playerid,UNNAMED+96,DIALOG_STYLE_INPUT,"Zmìna nicku","Nový nick obsahuje nepovolené znaky","Zmìnit","Zruit");
			}
			format(dfile,sizeof(dfile),USER_FILES,name);
			if(fexist(dfile)) return SPD(playerid,UNNAMED+96,DIALOG_STYLE_INPUT,"Zmìna nicku","Tento nick u nìkdo pouívá","Zmìnit","Zruit");
			for(new i; i <= GetPlayerPoolSize(); i ++)
			{
       			if(IPC(i))
			    {
			        if(i != playerid)
			        {
			        	if(strcmp(name,Jmeno(i),true) == 0) return SPD(playerid,UNNAMED+96,DIALOG_STYLE_INPUT,"Zmìna nicku","Tento nick u nìkdo pouívá","Zmìnit","Zruit");
					}
			    }
			}
			format(str,sizeof(str),"Zmìna nicku probìhla "g"úspìnì"w"!\nVá starý nick: "r"%s\n"w"Vá nový nick: "g"%s\n\n"r"Nezapomeòte si nick zmìnit i v clientu !",Jmeno(playerid),name);
			SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Zmìna nicku",str,"Zavøít","");
			format(str,sizeof(str),"%s "w"%s {FF006A}si zmìnil nick, jeho nový nick je: "w"%s",Players(playerid),Jmeno(playerid),name);
  			SCMTA(0xFF006AFF,str);
			ChangeName(playerid,name);
			GivePoints(playerid,-300);
		}
	    return 1;
	}
 	if(dialogid == UNNAMED+97)
	{
		new slotid = GetPVarInt(playerid,"SellSlotID"),price = GetPVarInt(playerid,"SellPrice"),id = GetPVarInt(playerid,"SellPlayerID");
		Shopping[playerid] = false;
		Shopping[id] = false;
	    if(response)
	    {
	        if(Points[playerid] < price) return SM(playerid,"Nemáte dostatek bodù");
	        for(new i; i < MAX_SLOTS; i ++)
	        {
	            format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(playerid),i);
	            if(!fexist(dfile))
	            {
					new ofile[50];
				    GivePoints(playerid,-price);
				    GivePoints(id,price);
					format(ofile,sizeof(ofile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(id),slotid);
					ReNameFile(ofile,dfile);
				    DestroyVehicle(SavedCar[id][slotid]);
			    	SavedCar[id][slotid] = 0;
					ParkInfo[id][slotid][pX] = 0;
				    ParkInfo[id][slotid][pY] = 0;
				    ParkInfo[id][slotid][pZ] = 0;
				    ParkInfo[id][slotid][pA] = 0;
				    ParkInfo[id][slotid][Model] = 0;
				    ParkInfo[id][slotid][Color1] = 0;
				    ParkInfo[id][slotid][Color2] = 0;
				    ParkInfo[id][slotid][PaintJob] = 0;
				    ParkInfo[id][slotid][TuneSlot0] = 0;
				    ParkInfo[id][slotid][TuneSlot1] = 0;
				    ParkInfo[id][slotid][TuneSlot2] = 0;
				    ParkInfo[id][slotid][TuneSlot3] = 0;
				    ParkInfo[id][slotid][TuneSlot4] = 0;
				    ParkInfo[id][slotid][TuneSlot5] = 0;
				    ParkInfo[id][slotid][TuneSlot6] = 0;
				    ParkInfo[id][slotid][TuneSlot7] = 0;
				    ParkInfo[id][slotid][TuneSlot8] = 0;
				    ParkInfo[id][slotid][TuneSlot9] = 0;
				    ParkInfo[id][slotid][TuneSlot10] = 0;
				    ParkInfo[id][slotid][TuneSlot11] = 0;
				    ParkInfo[id][slotid][TuneSlot12] = 0;
				    ParkInfo[id][slotid][TuneSlot13] = 0;
				    ParkInfo[id][slotid][pCashBack] = 0;
					for(new x; x < MAX_S_OBJECTS; x ++)
					{
					    DestroyDynamicObject(ParkInfo[id][slotid][SpecialObjects][x]);
						ParkInfo[id][slotid][SpecialObjects][x] = 0;
					}
					new Float:X,Float:Y,Float:Z;
				    GetPlayerPos(playerid,X,Y,Z);
      				format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(playerid),i);
				    DOF2_SetFloat(dfile,"X",X+2);
				    DOF2_SetFloat(dfile,"Y",Y+2);
				    DOF2_SetFloat(dfile,"Z",Z);
				    DOF2_SaveFile();
				    LoadData(playerid);
				    SpawnCar(playerid,i);
				    TuneCar(playerid,i);
				    format(str,sizeof(str),"%s "r"%s "w"PØIJMUL Vaí nabídku, Vozidlo "g"%s úspìnì prodáno za "c"%d Bodù",Players(playerid),Jmeno(playerid),GetVehicleNameByCarID(ParkInfo[playerid][i][Model]),price);
				    SPD(id,0,DIALOG_STYLE_MSGBOX,"Prodej vozidla",str,"Zavøít","");
				    format(str,sizeof(str),"Pøijmul si nabídku, koupil si vozidlo "g"%s "w"za "c"%d bodù "w"od hráèe "r"%s\n"w"Pro správu vozidla --> "g"/garaz",GetVehicleNameByCarID(ParkInfo[playerid][i][Model]),price,Jmeno(id));
				    SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Koupení vozidla",str,"Zavøít","");
				    format(str,sizeof(str),"%s "r"%s "w"odkoupil od hráèe "g"%s "w"vozidlo: {0077FF}%s "w"za "y"%d bodù",Players(playerid),Jmeno(playerid),Jmeno(id),GetVehicleNameByCarID(ParkInfo[playerid][i][Model]),price);
					printEx(str);
					CheckPlayerDrazbaVehicle(id,slotid);
					break;
	            }
	        }
	    }
	    else
		{
		    format(str,sizeof(str),"%s "r"%s "w"ZAMÍTNUL Vaí nabídku, Vozidlo "g"%s "w"(Slot: "y"%d "w") "w"nebylo prodáno",Players(playerid),Jmeno(playerid),GetVehicleNameByCarID(ParkInfo[playerid][slotid][Model]),slotid);
		    SPD(id,0,DIALOG_STYLE_MSGBOX,"Prodej vozidla",str,"Zavøít","");
			SM(playerid,"Zamítnul si nabídku");
		}
	    return 1;
	}
	if(dialogid == UNNAMED+98)
	{
	    if(response)
	    {
			new health,armour;
			if(!sscanf(inputtext,"ii",health,armour))
			{

			}
			else if(!sscanf(inputtext,"i",health))
			{
			    armour = 0;
			}
			else
			{
			    health = 100;
			    armour = 100;
			}
			if(health < 0 || armour < 0) return SM(playerid,"Hodnoty nemùou jít do -");
			for(new i; i <= GetPlayerPoolSize(); i ++)
			{
			    if(OnEvent[i] == true)
			    {
			        SetPlayerHealth(i,health);
			        SetPlayerArmour(i,armour);
				}
			}
	        format(str,sizeof(str),"%s "w"%s "r"nastavil ivoty vem hráèùm na eventu.",Players(playerid),Jmeno(playerid));
	        SCMTA(red,str);
	        format(str,sizeof(str),"[ ivot: "w"%d "r"] [ Vesta: "w"%d "r"].",health,armour);
	        SCMTA(red,str);
			ShowPlayerEventSettings(playerid);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+99)
	{
	    if(response)
	    {
	        new price,name[128];
	        if(!sscanf(inputtext,"iz",price,name))
	        {
				format(SlevaMSG,sizeof(SlevaMSG),name);
	        }
	        else if(!sscanf(inputtext,"i",price))
	        {
	            SlevaMSG = "";
	        }
	        else
	        {
				SPD(playerid,UNNAMED+99,DIALOG_STYLE_INPUT,"Nastavení","Zadejte cenu jednoho bodu [ Popø. mezeru a název slevy ]","Nastavit","Zavøít");
				return 0;
	        }
			if(price < 1 || price > 10000000) return SPD(playerid,UNNAMED+99,DIALOG_STYLE_INPUT,"Nastavení","Pouijte minimálnì 1$ a maximálnì 10 000 000$","Nastavit","Zavøít");
			DOF2_SetString(CONFIG,"Sleva",name);
			DOF2_SetInt(CONFIG,"PPRICE",price);
			DOF2_SaveFile();
			POINT_PRICE = price;
			format(str,sizeof(str),"Cena jednoho bodu nastavena na "g"%s$",Split(price));
			SM(playerid,str);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+100)
	{
		if(response)
		{
		    new page = GetPVarInt(playerid,"Page");
			if(listitem < 20 && page*20+listitem < MAX_ACHIEVEMENTS)
			{
				new DIALOG_INFO[500],id=listitem+page*20;
				format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
				format(str,sizeof(str),"Achievement\t"g"%s\n"w"Úkol\t"g"%s\n"w"",AchievementsNames[id][AchievName],AchievementsNames[id][AchievPopis]);
				strcat(DIALOG_INFO,str);
				new text[50];
				format(text,sizeof(text),"AchievementDate[%d]",id);
				if(strlen(DOF2_GetString(dfile,text)) > 0)
				{
				    format(str,sizeof(str),"Datum splnìní\t"g"%s\n"w"",DOF2_GetString(dfile,text));
					strcat(DIALOG_INFO,str);
				}
				else
				{
					strcat(DIALOG_INFO,"Datum splnìní\t"r"Nesplnìno\n"w"");
				}
				format(dfile,sizeof(dfile),"UnNamed/Achievements.txt");
				format(text,sizeof(text),"Achievement[%d]",id);
				format(str,sizeof(str),"Odmìna\t"g"%d bodù\n"w"Achievement splnilo\t"g"%d hráèù",AchievementsNames[id][AchievReward],DOF2_GetInt(dfile,text));
				strcat(DIALOG_INFO,str);
				format(str,sizeof(str),"Achievement: {0088FF}%s",AchievementsNames[id][AchievName]);
				SPD(playerid,UNNAMED+184,DIALOG_STYLE_TABLIST,str,DIALOG_INFO,"Zpìt","Zavøít");
			}
			else if(listitem == 20)
				ShowAchievements(playerid,page+1);
			else if(page*20+listitem == MAX_ACHIEVEMENTS || listitem == 21)
				ShowAchievements(playerid,page-1);

		}
		return 1;
	}
	if(dialogid == UNNAMED+101)
	{
	    if(response)
	    {
			new id = GetPVarInt(playerid,"ShoppingID"),amount = GetPVarInt(playerid,"ShoppingAmount"),price = GetPVarInt(playerid,"ShoppingPrice");
			Shopping[id] = true;
			format(str,sizeof(str),"%s "g"%s "w"Vám nabízí "r"%d bodù "w"za "g"%s$"w"\n\nPøíjmáte tuto nabídkù?",Players(playerid),Jmeno(playerid),amount,Split(price));
			SPD(id,UNNAMED+102,DIALOG_STYLE_MSGBOX,"Potvrzení nabídky",str,"Ano","Ne");
			format(str,sizeof(str),"Poslal jste nabídku hráèi "g"%s"w". Vyèkejte na odpovìï",Jmeno(id));
			SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Potvrzení nabídky",str,"Zavøít","");
			SetPVarInt(id,"ShoppingID",playerid);
		}
	    else
	    {
	        Shopping[playerid] = false;
			SM(playerid,"Zrueno");
		}
	    return 1;
	}
	if(dialogid == UNNAMED+102)
	{
		new id = GetPVarInt(playerid,"ShoppingID"),amount = GetPVarInt(id,"ShoppingAmount"),price = GetPVarInt(id,"ShoppingPrice");
		Shopping[id] = false;
		Shopping[playerid] = false;
		transactionid++;
		DOF2_SetInt(CONFIG,"TransactionID",transactionid);
		DOF2_SaveFile();
	    if(response)
	    {
			if(GetMoney(playerid) < price)
			{
			    SM(id,"Hráè nemá dostatek pìnìz");
			    SM(playerid,"Nemáte dostatek penìz");
			    format(str,sizeof(str),"[ Transaction: %04d ] %s -> %s Points: %d | Price: %d$ - FAILED ! [ Not enough money ]",GetPVarInt(id,"TransactionID"),Jmeno(id),Jmeno(playerid),amount,price);
			    WriteTextInToFile(TRANS_FILE,str);
			    return 0;
			}
			GivePoints(id,-amount);
			GivePoints(playerid,amount);
			format(str,sizeof(str),"Obchod s hráèem %s | +body",Jmeno(id));
			GiveMoney(playerid,-price,str);
			format(str,sizeof(str),"Obchod s hráèem %s | -body",Jmeno(playerid));
			GiveMoney(id,price,str);
			format(str,sizeof(str),"Potvrdil si nabídku hráèe "g"%s"w". Zakoupeno: "r"%d bodù "w"za "g"%s$",Jmeno(id),amount,Split(price));
			SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Obchod",str,"Zavøít","");
			format(str,sizeof(str),"%s "g"%s "w"potvrdil Vaí nabídku. Prodáno: "r"%d bodù "w"za "g"%s$\n\n"w"ID Transakce: "g"%04d",Players(playerid),Jmeno(playerid),amount,Split(price),GetPVarInt(id,"TransactionID"));
			SPD(id,0,DIALOG_STYLE_MSGBOX,"Obchod",str,"Zavøít","");
		    format(str,sizeof(str),"[ Transaction: %04d ] %s -> %s Points: %d | Price: %d$ - SUCCESFUL !",GetPVarInt(id,"TransactionID"),Jmeno(id),Jmeno(playerid),amount,price);
		    WriteTextInToFile(TRANS_FILE,str);
			format(str,sizeof(str),"{03C900}%s "w"%s {03C900}si koupil "w"%d bodù {03C900}od hráèe "w"%s",Players(playerid),Jmeno(playerid),amount,Jmeno(id));
   			SCMTA(0x03C900FF,str);
   			printEx(str);
		}
	    else
	    {
			format(str,sizeof(str),"Zamítnul si nabídku hráèe "g"%s"w". Nezakoupeno: "r"%d bodù "w"za "g"%s$",Jmeno(id),amount,Split(price));
			SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Obchod",str,"Zavøít","");
			format(str,sizeof(str),"%s "g"%s "w"zamítnul Vaí nabídku. Neprodáno: "r"%d bodù "w"za "g"%s$",Players(playerid),Jmeno(playerid),amount,Split(price));
			SPD(id,0,DIALOG_STYLE_MSGBOX,"Obchod",str,"Zavøít","");
		    format(str,sizeof(str),"[ Transaction: %04d ] %s -> %s Points: %d | Price: %d$ - FAILED ! [ Player declined the offer ]",GetPVarInt(id,"TransactionID"),Jmeno(id),Jmeno(playerid),amount,price);
		    WriteTextInToFile(TRANS_FILE,str);
	    }
		return 1;
	}
	if(dialogid == UNNAMED+103)
	{
	    if(response)
	    {
			if(GetClickText(inputtext,"Pøidat rádio"))
			{
			    SPD(playerid,UNNAMED+105,DIALOG_STYLE_INPUT,"Pøidat rádio","Zadejte {00FFFF}Název "w"rádia","Pøidat","Zpìt");
				for(new i; i < MAX_RADIOS; i ++)
				{
				    if(strlen(Radio[i][RadioName]) == 0)
				    {
			 			SetPVarInt(playerid,"RadioID",i);
						break;
				    }
				}
			}
			else
			{
	 			SetPVarInt(playerid,"RadioID",listitem);
				SPD(playerid,UNNAMED+104,DIALOG_STYLE_LIST,"Nastavení rádií","Odstranit rádio","Vybrat","Zpìt");
			}
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+104)
	{
	    if(response)
	    {
			switch(listitem)
			{
				case 0:
				{
					new id = GetPVarInt(playerid,"RadioID");
					for(new i; i < id+1; i ++)
					{
						if(strlen(Radio[i][RadioName]) == 0)
						{
						    id++;
						}
					}
					format(str,sizeof(str),"Rádio {00FFFF}%s "w"úspìnì smazáno",Radio[id][RadioName]);
					SM(playerid,str);
					Radio[id][RadioListeners] = 0;
					for(new i; i <= GetPlayerPoolSize(); i ++)
					{
					    if(IPC(i) && !IsPlayerNPC(i))
					    {
					        if(Listening[playerid] == id)
					        {
					            Listening[playerid] = -1;
					        }
					    }
					}
					format(Radio[id][RadioName],256,"");
					format(Radio[id][RadioLang],256,"");
					format(Radio[id][RadioURL],256,"");
					format(str,sizeof(str),"Name%d",id);
					DOF2_SetString(CONFIG,str,"");
					format(str,sizeof(str),"Language%d",id);
					DOF2_SetString(CONFIG,str,"");
					format(str,sizeof(str),"URL%d",id);
					DOF2_SetString(CONFIG,str,"");
					DOF2_SaveFile();
				}
			}
		}
	    return 1;
	}
	if(dialogid == UNNAMED+105)
	{
	    if(response)
	    {
	        new id = GetPVarInt(playerid,"RadioID");
	        if(strlen(Radio[id][RadioName]) > 0) return SM(playerid,"V tomto slotu u je nìjaké rádio");
	        if(strlen(inputtext) == 0) return SPD(playerid,UNNAMED+105,DIALOG_STYLE_INPUT,"Pøidat rádio","Zadejte {00FFFF}Název "w"rádia","Pøidat","Zpìt");
			if(strlen(inputtext) > 30) return SPD(playerid,UNNAMED+105,DIALOG_STYLE_INPUT,"Pøidat rádio","Zadal jste pøíli dlouhý název","Pøidat","Zpìt");
			format(Radio[id][RadioName],256,inputtext);
			format(str,sizeof(str),"Name%d",id);
			DOF2_SetString(CONFIG,str,inputtext);
			DOF2_SaveFile();
			format(str,sizeof(str),"Název {00FFFF}%s "w"nastaven",inputtext);
			SM(playerid,str);
			SPD(playerid,UNNAMED+106,DIALOG_STYLE_INPUT,"Pøidat rádio","Zadejte {00FFFF}Jazyk "w"rádia","Pøidat","Zavøít");
	    }
		return 1;
	}
	if(dialogid == UNNAMED+106)
	{
        new id = GetPVarInt(playerid,"RadioID");
	    if(response)
	    {
	        if(strlen(Radio[id][RadioLang]) > 0) return SM(playerid,"V tomto slotu u je nìjaké rádio");
	        if(strlen(inputtext) == 0) return SPD(playerid,UNNAMED+106,DIALOG_STYLE_INPUT,"Pøidat rádio","Zadejte {00FFFF}Název "w"rádia","Pøidat","Zpìt");
			if(strlen(inputtext) > 30) return SPD(playerid,UNNAMED+106,DIALOG_STYLE_INPUT,"Pøidat rádio","Zadal jste pøíli dlouhý jazyk","Pøidat","Zpìt");
			format(Radio[id][RadioLang],256,inputtext);
			format(str,sizeof(str),"Language%d",id);
			DOF2_SetString(CONFIG,str,inputtext);
			DOF2_SaveFile();
			format(str,sizeof(str),"Jazyk rádia {00FFFF}%s "w"nastaven na {00FFFF}%s",Radio[id][RadioName],inputtext);
			SM(playerid,str);
			SPD(playerid,UNNAMED+107,DIALOG_STYLE_INPUT,"Pøidat rádio","Zadejte {00FFFF}URL Adresu "w"rádia","Pøidat","Zavøít");
	    }
	    else
	    {
	        format(Radio[id][RadioName],256,"");
	        format(Radio[id][RadioLang],256,"");
	        format(Radio[id][RadioURL],256,"");
			format(str,sizeof(str),"Name[%d]",id);
			DOF2_SetString(CONFIG,str,"");
			format(str,sizeof(str),"Language[%d]",id);
			DOF2_SetString(CONFIG,str,"");
			format(str,sizeof(str),"URL[%d]",id);
			DOF2_SetString(CONFIG,str,"");
			DOF2_SaveFile();
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+107)
	{
        new id = GetPVarInt(playerid,"RadioID");
	    if(response)
	    {
	        if(strlen(Radio[id][RadioURL]) > 0) return SM(playerid,"V tomto slotu u je nìjaké rádio");
	        if(strlen(inputtext) == 0) return SPD(playerid,UNNAMED+107,DIALOG_STYLE_INPUT,"Pøidat rádio","Zadejte {00FFFF}URL Adresu "w"rádia","Pøidat","Zpìt");
			if(strlen(inputtext) > 128) return SPD(playerid,UNNAMED+107,DIALOG_STYLE_INPUT,"Pøidat rádio","Zadal jste pøíli dlouhou URL Adresu","Pøidat","Zpìt");
			format(Radio[id][RadioURL],256,inputtext);
			format(str,sizeof(str),"URL%d",id);
			DOF2_SetString(CONFIG,str,inputtext);
			DOF2_SaveFile();
			format(str,sizeof(str),"Rádio {00FFFF}%s "w"pøidáno",Radio[id][RadioName]);
			SM(playerid,str);
	    }
	    else
	    {
	        format(Radio[id][RadioName],256,"");
	        format(Radio[id][RadioLang],256,"");
	        format(Radio[id][RadioURL],256,"");
			format(str,sizeof(str),"Name[%d]",id);
			DOF2_SetString(CONFIG,str,"");
			format(str,sizeof(str),"Language[%d]",id);
			DOF2_SetString(CONFIG,str,"");
			format(str,sizeof(str),"URL[%d]",id);
			DOF2_SetString(CONFIG,str,"");
			DOF2_SaveFile();
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+108)
	{
	    if(response)
		{
		    new text[150];
			format(dfile,sizeof(dfile),"%s.txt",Jmeno(playerid));
			if(!fexist(dfile)) return SM(playerid,"Chyba");
			if(strlen(inputtext) == 0) return SPD(playerid,UNNAMED+108,DIALOG_STYLE_INPUT,"Zmìna hesla","Zadejte Vae "g"Aktualní heslo","Zadat","Zruit");
			if(IsPasswordBad(Jmeno(playerid),inputtext)) return SPD(playerid,UNNAMED+108,DIALOG_STYLE_INPUT,"Zmìna hesla","Zadal jste patné heslo","Zadat","Zruit");
			format(text,sizeof(text),"Zadejte "g"nové heslo");
			if(!strlen(Player[playerid][pMail]))
			{
			    format(str,sizeof(str),"\n\n"dc"Nemáte nastavený E-Mail, v pøípadì zapomenutí hesla není moná obnova,\nE-Mail si nastavíte v "g"/nastaveni");
			    strcat(text,str);
			}
			else
			{
			    format(str,sizeof(str),"\n\n"dc"E-Mail pro obnovu hesla: "sb"%s",Player[playerid][pMail]);
			    strcat(text,str);
			}
			SPD(playerid,UNNAMED+109,DIALOG_STYLE_INPUT,"Zmìna hesla",text,"Zadat","Zruit");
		}
	    return 1;
	}
	if(dialogid == UNNAMED+109)
	{
	    if(response)
	    {
			format(dfile,sizeof(dfile),"%s.txt",Jmeno(playerid));
			if(!fexist(dfile)) return SM(playerid,"Chyba");
			if(strlen(inputtext) < 3) return SPD(playerid,UNNAMED+109,DIALOG_STYLE_INPUT,"Zmìna hesla","Zadejte "g"nové heslo\n\n"r"Minimálnì 3 znaky","Zadat","Zruit");
			if(strlen(inputtext) > 30) return SPD(playerid,UNNAMED+109,DIALOG_STYLE_INPUT,"Zmìna hesla","Zadejte "g"nové heslo\n\n"r"Maximálnì 30 znakù","Zadat","Zruit");
            ChangePassword(Jmeno(playerid),inputtext);
			format(str,sizeof(str),""dc"Zmìna hesla probìhla úspìnì.\n\nNové heslo: "g"%s",inputtext);
			SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Zmìna hesla",str,"Zavøít","");
			new query[200];
			mysql_format(mysql,query,sizeof(query),"UPDATE `Users` SET `Password`=PASSWORD('%e') WHERE `Nick`='%e'",inputtext,Jmeno(playerid));
			mysql_tquery(mysql,query,"","");
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+110)
	{
	    if(response)
    	{
            new pid = GetPVarInt(playerid,"PropertyID");
			if(GetClickText(inputtext,"Koupit"))
			{
				if(POwner[playerid] >= PropSlots[playerid]) return SM(playerid,"U vlastní maximální poèet nemovitostí "g"/myprops "w"pro navýìní");
				if(GetPlayerPlayedTime(playerid) < 60*60*24*1) return SM(playerid,"Nemovitost si mùete koupit, a odehrajete na serveru minimálnì 24 hodin");
				if(strcmp(Property[pid][PropertyOwner],"-1",false) == 0)
				{
					if(GetMoney(playerid) < Property[pid][PropertyPrice]) return SM(playerid,"Nemá dostatek penìz");
					GiveMoney(playerid,-Property[pid][PropertyPrice],"Zakoupení nemovitosti");
					format(dfile,sizeof(dfile),"UnNamed/Properties/Property%d.txt",pid);
					DOF2_SetString(dfile,"Owner",Jmeno(playerid));
					DOF2_SetInt(dfile,"Earning",0);
					DOF2_SetInt(dfile,"Hours",336);
					DOF2_SetInt(dfile,"OnSale",0);

					DOF2_SaveFile();
					Property[pid][PropertyEarning] = 0;
					Property[pid][PropertyOnSale] = 0;
					Property[pid][PropertyTime] = 336;
					format(Property[pid][PropertyOwner],24+1,Jmeno(playerid));
					format(str,sizeof(str),"Nemovitost %s "w"zakoupena za "g"%s$",Property[pid][PropertyName],Split(Property[pid][PropertyPrice]));
					SM(playerid,str);
					POwner[playerid] ++;
					UpdatePropertyText(pid);
					GiveXP(playerid,80,"Zakoupena nemovitost");
					format(str,sizeof(str),"%s "r"%s "w"si koupil nemovitost {0077FF}%s "w"[ LVL: %d ] [ Cena: "g"%s$"w" ]",Players(playerid),Jmeno(playerid),Property[pid][PropertyName],Property[pid][PropertyLevel],Split(Property[pid][PropertyPrice]));
					printEx(str);
					if(Achiv[playerid][BUSINESS_1] == 0)
					{
					    if(POwner[playerid] >= 1)
					    {
					        SetPlayerAchievement(playerid,BUSINESS_1);
					    }
					}
				}
				else
				{
					if(GetMoney(playerid) < Property[pid][PropertyOnSale]) return SM(playerid,"Nemá dostatek penìz");
					GiveMoney(playerid,-Property[pid][PropertyOnSale],"Zakoupení nemovitosti");
					new id = GetPlayerIdFromName(Property[pid][PropertyOwner]);
					if(IPC(id))
					{
		    			CheckPlayerDrazbaProperty(id,pid);
					}
					format(dfile,sizeof(dfile),"UnNamed/Properties/Property%d.txt",pid);
					DOF2_SetString(dfile,"Owner",Jmeno(playerid));
					DOF2_SetInt(dfile,"Earning",0);
					DOF2_SetInt(dfile,"OnSale",0);
					DOF2_SaveFile();
					new string[400];
					format(string,sizeof(string),"Vae nemovitost {0077FF}%s "dc"byla prodána hráèi: "g"%s "dc"za "g"%s$\n"dc"Výdìleky nemovitosti ("g"%s$"dc") + prodejní cena, byly pøevedeny do záloního trezoru: "g"/trezor",Property[pid][PropertyName],Jmeno(playerid),Split(Property[pid][PropertyOnSale]),Split(Property[pid][PropertyEarning]));
					SendPlayerNotification(Property[pid][PropertyOwner],"Prodaná nemovitost",string);
					GivePlayerMoneyToTrezor(Property[pid][PropertyOwner],Property[pid][PropertyEarning]+Property[pid][PropertyOnSale]);
					format(str,sizeof(str),"Nemovitost %s "w"zakoupena za "g"%s$",Property[pid][PropertyName],Split(Property[pid][PropertyOnSale]));
					SM(playerid,str);
					Property[pid][PropertyEarning] = 0;
					Property[pid][PropertyOnSale] = 0;
					format(Property[pid][PropertyOwner],24+1,Jmeno(playerid));
					POwner[playerid] ++;
					UpdatePropertyText(pid);
					GiveXP(playerid,80,"Zakoupena nemovitost");
					format(str,sizeof(str),"%s "r"%s "w"si koupil nemovitost {0077FF}%s "w"[ LVL: %d ] [ Cena: "g"%s$"w" ]",Players(playerid),Jmeno(playerid),Property[pid][PropertyName],Property[pid][PropertyLevel],Split(Property[pid][PropertyOnSale]));
					printEx(str);
					if(Achiv[playerid][BUSINESS_1] == 0)
					{
					    if(POwner[playerid] >= 1)
					    {
					        SetPlayerAchievement(playerid,BUSINESS_1);
					    }
					}
				}
			}
	        else if(GetClickText(inputtext,"Vykrást"))
	        {
	            if(WorkMission[playerid] > 0) return SM(playerid,"Jsi v misi, nemùe vykrást nemovitost");
	            if(RobTime[playerid] > 0) return SM(playerid,"U vykrádá nemovitost");
				if(PropertyTakeTime[playerid] > 0) return SM(playerid,"U zabírá nemovitost");
				if(Property[pid][PropertyEarning] < 15000 || Property[pid][PropertyRobbed] == true) return SM(playerid,"Nemovitost má prázdnou kasu");
				new weapons[] = {0,1,14,17,40,41,42,43,44,45,46};
				for(new i; i < sizeof(weapons); i ++)
				{
					if(GetPlayerWeapon(playerid) == weapons[i]) return SM(playerid,"Musíte mít v ruce zbraò");
				}
				RobTime[playerid] = 9+Property[pid][PropertyLevel];
			    PlayerTextDrawShow(playerid,Textdraw26[playerid]);
				format(str,sizeof(str),"00:%02d",RobTime[playerid]);
				PlayerTextDrawSetString(playerid,Textdraw26[playerid],str);
				SetTimerEx("Rob",1000,false,"ii",playerid,pid);
				SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+1);
				Property[pid][PropertyRobbed] = true;
				for(new i; i <= GetPlayerPoolSize(); i ++)
				{
				    if(IPC(i) && !IsPlayerNPC(i))
				    {
				        if(IsPlayerPropertyOwner(i,pid))
				        {
			                format(str,sizeof(str),"%s {FF8C00}%s {00FFFF}Vám vykrádá nemovitost {FF8C00}%s{00FFFF}.",Players(playerid),Jmeno(playerid),Property[pid][PropertyName]);
							SCM(i,0x00FFFFFF,str);
				            break;
				        }
				    }
				}
	        }
	        else if(GetClickText(inputtext,"Zabrat"))
	        {
				if(GetPlayerJob(playerid) != 1 && GetPlayerJob(playerid) != 2) return SM(playerid,"Nejste zamìstnán u mafie");
				if(Property[pid][PropertyTaken] == true) return SM(playerid,"Tuto nemovitost u nìkdo zabírá");
			    if(RobTime[playerid] > 0) return SM(playerid,"U vykrádá nemovitost");
				if(PropertyTakeTime[playerid] > 0) return SM(playerid,"U zabírá nemovitost");
				if(Property[pid][PropertyMafia] == GetPlayerJob(playerid)) return SM(playerid,"Nemovitost u patøí vaí rodinì");
			    format(str,sizeof(str),"Mafián "w"%s "jc"pøebírá pro Vai rodinu podnik "w"%s",Jmeno(playerid),Property[pid][PropertyName]);
			    SendJobMessage(GetPlayerJob(playerid),str);
				if(Property[pid][PropertyMafia] != 0)
				{
				    format(str,sizeof(str),"Mafián "w"%s "jc"pøebírá Vaí rodinì podnik "w"%s",Jmeno(playerid),Property[pid][PropertyName]);
				    SendJobMessage(Property[pid][PropertyMafia],str);
				}
				PlayerTextDrawShow(playerid,Textdraw26[playerid]);
				PropertyTakeTime[playerid] = 20;
				format(str,sizeof(str),"%s",SecondsToMinutes(PropertyTakeTime[playerid]));
				PlayerTextDrawSetString(playerid,Textdraw26[playerid],str);
				PropertyTakeID[playerid] = pid;
				Property[pid][PropertyTaken] = true;
		    }
	        else if(GetClickText(inputtext,"Pøejmenovat nemovitost"))
	        {
				SPD(playerid,UNNAMED+111,DIALOG_STYLE_INPUT,Property[pid][PropertyName],"Zadejte nový název pro Vai nemovitost","Zadat","Zavøít");
	        }
			else if(GetClickText(inputtext,"Výdìlek"))
			{
			    format(str,sizeof(str),"Výdìlek nemovistoti %s\n\n"w"Prùmìrný výdìlek za hodinu: "g"%s$ "w"[ Level "g"%d "w"]\nObsah kasy: "g"%s$"w" / "r"%s$ "w"[ Level "g"%d "w"]",Property[pid][PropertyName],Split(Property[pid][PropertyLevel]*EARNING_PER_LEVEL),Property[pid][PropertyLevel],Split(Property[pid][PropertyEarning]),Split(Property[pid][PropertyCashLevel]*CASH_PER_LEVEL),Property[pid][PropertyCashLevel]);
			   	SPD(playerid,0,DIALOG_STYLE_MSGBOX,Property[pid][PropertyName],str,"Zavøít","");
			}
			else if(GetClickText(inputtext,"Vyplatit"))
			{
			    format(str,sizeof(str),"Zadejte èástku kterou si pøejete z nemovitosti vybrat\nK dispozici máte: "g"%s$"w"\n\n"r"Pokud vybíráte vìtí èástky, doporuèuji si postup screenovat",Split(Property[pid][PropertyEarning]));
			    SPD(playerid,UNNAMED+112,DIALOG_STYLE_INPUT,Property[pid][PropertyName],str,"Zadat","Zavøít");
			}
			else if(GetClickText(inputtext,"Upgrade nemovitosti"))
			{
			    SPD(playerid,UNNAMED+203,DIALOG_STYLE_LIST,Property[pid][PropertyName],"Vylepení produkce\nVylepení kasy","Vybrat","Zavøít");
/*			    if(Property[pid][PropertyLevel] >= MAX_PROPERTY_LEVEL) return SM(playerid,"Nemovitost je u vylepená na maximální level");
			    new text[300];
				format(text,sizeof(text),"Opravdu si pøejete vylepit nemovitost %s"w" na level "r"%d "w"za "g"%d bodù"w"?\n\n"g"+ "w"Prùmìrný výdìlek: "g"%s$\n"g"+ "w"Navýen èas vykrádání o 1 sekundu",Property[pid][PropertyName],Property[pid][PropertyLevel]+1,UPGRADE_COST,Split((Property[pid][PropertyLevel]+1)*EARNING_PER_LEVEL));
				SPD(playerid,UNNAMED+113,DIALOG_STYLE_MSGBOX,Property[pid][PropertyName],text,"Ano","Ne");
*/			}
			else if(GetClickText(inputtext,"Prodlouit pronájem"))
			{
				format(str,sizeof(str),"Zadejte poèet hodin, cena jedné hodiny je "g"%0.2f bodu"w"\nMùete si pronájem prodlouit o "g"%d hodin "w"za "g"%.1f bodù",HOUR_COST,720-Property[pid][PropertyTime],(720-Property[pid][PropertyTime])*HOUR_COST);
				SPD(playerid,UNNAMED+117,DIALOG_STYLE_INPUT,Property[pid][PropertyName],str,"Prodlouit","Zavøít");
			}
			else if(GetClickText(inputtext,"Prodat"))
			{
				format(str,sizeof(str),"Opravdu si pøejete prodat nemovitost %s "w"za "g"%s$"w"?",Property[pid][PropertyName],Split((Property[pid][PropertyLevel]*PROPERTY_DPRICE+Property[pid][PropertyCashLevel]*PROPERTY_DPRICE)*3/4));
				SPD(playerid,UNNAMED+114,DIALOG_STYLE_MSGBOX,Property[pid][PropertyName],str,"Ano","Ne");
			}
			else if(GetClickText(inputtext,"Vystavit nemovitost na prodej"))
			{
			    SPD(playerid,UNNAMED+158,DIALOG_STYLE_INPUT,Property[pid][PropertyName],"Zadejte cenu, za kterou chcete nemovitost prodat","Potvrdit","Zavøít");
			}
			else if(GetClickText(inputtext,"Stáhnout nemovitost z prodeje"))
			{
				Property[pid][PropertyOnSale] = 0;
				format(dfile,sizeof(dfile),"UnNamed/Properties/Property%d.txt",pid);
				DOF2_SetInt(dfile,"OnSale",0);
				DOF2_SaveFile();
				SM(playerid,"Nemovitost byla stáhnuta z prodeje");
				UpdatePropertyText(pid);
			}
		}
	    return 1;
	}
	if(dialogid == UNNAMED+111)
	{
	    if(response)
	    {
            new pid = GetPVarInt(playerid,"PropertyID");
			if(!IsPlayerPropertyOwner(playerid,pid)) return SM(playerid,"Nejsi vlastníkem nemovitosti");
	        if(strlen(inputtext) < 3) return SPD(playerid,UNNAMED+111,DIALOG_STYLE_INPUT,Property[pid][PropertyName],"Zadejte nový název pro Vai nemovitost\n"r"Minimálnì 3 znaky","Zadat","Zavøít");
			if(strlen(inputtext) > 24) return SPD(playerid,UNNAMED+111,DIALOG_STYLE_INPUT,Property[pid][PropertyName],"Zadejte nový název pro Vai nemovitost\n"r"Maximálnì 24 znakù","Zadat","Zavøít");
//			for(new i; i < 24; i ++)
//			{
//			    if(inputtext[i] > 47 && inputtext[i] < 58) return SPD(playerid,UNNAMED+111,DIALOG_STYLE_INPUT,Property[pid][PropertyName],"Zadejte nový název pro Vai nemovitost\n"r"Èísla v názvu nejsou povolené","Zadat","Zavøít");
//			}
			format(dfile,sizeof(dfile),"UnNamed/Properties/Property%d.txt",pid);
			DOF2_SetString(dfile,"Name",inputtext);
			DOF2_SaveFile();
			format(Property[pid][PropertyName],24+1,inputtext);
			format(str,sizeof(str),"Název zmìnìn! Nový název: "g"%s",inputtext);
			SM(playerid,str);
			UpdatePropertyText(pid);
		}
	    return 1;
	}
	if(dialogid == UNNAMED+112)
	{
	    if(response)
		{
			new castka,pid = GetPVarInt(playerid,"PropertyID");
			if(!IsPlayerPropertyOwner(playerid,pid)) return SM(playerid,"Nejsi vlastníkem nemovitosti");
		    format(str,sizeof(str),"Zadejte èástku kterou si pøejete z nemovitosti vybrat\nK dispozici máte: "g"%s$"w"",Split(Property[pid][PropertyEarning]));
			if(sscanf(inputtext,"i",castka)) return SPD(playerid,UNNAMED+112,DIALOG_STYLE_INPUT,Property[pid][PropertyName],str,"Zadat","Zavøít");
		    format(str,sizeof(str),"Zadejte èástku kterou si pøejete z nemovitosti vybrat\nK dispozici máte: "g"%s$\n\n"r"Mùete si vybrat minimálnì 1$",Split(Property[pid][PropertyEarning]));
			if(castka < 1) return SPD(playerid,UNNAMED+112,DIALOG_STYLE_INPUT,Property[pid][PropertyName],str,"Zadat","Zavøít");
		    format(str,sizeof(str),"Zadejte èástku kterou si pøejete z nemovitosti vybrat\nK dispozici máte: "g"%s$\n\n"r"Tolik penìz v nemovitosti nemáte",Split(Property[pid][PropertyEarning]));
			if(castka > Property[pid][PropertyEarning]) return SPD(playerid,UNNAMED+112,DIALOG_STYLE_INPUT,Property[pid][PropertyName],str,"Zadat","Zavøít");
		    format(str,sizeof(str),"Zadejte èástku kterou si pøejete z nemovitosti vybrat\nK dispozici máte: "g"%s$\n\n"r"Nemùete mít u sebe více jak 2.147.483.647$",Split(Property[pid][PropertyEarning]));
			if(GetMoney(playerid) + castka < 0) return SPD(playerid,UNNAMED+112,DIALOG_STYLE_INPUT,Property[pid][PropertyName],str,"Zadat","Zavøít");
			Property[pid][PropertyEarning] -= castka;
			GiveMoney(playerid,castka,"Výbìr z nemovitosti");
			format(dfile,sizeof(dfile),"UnNamed/Properties/Property%d.txt",pid);
			DOF2_SetInt(dfile,"Earning",Property[pid][PropertyEarning]);
			DOF2_SaveFile();
			format(str,sizeof(str),"Vybral jste si z nemovisti %s: "g"%s$ "w"zùstatek: "g"%s$",Property[pid][PropertyName],Split(castka),Split(Property[pid][PropertyEarning]));
			SM(playerid,str);
			format(str,sizeof(str),"%s %s si vybral z podniku %s %s$, zùstatek: %s$",Players(playerid),Jmeno(playerid),Property[pid][PropertyName],Split(castka),Split(Property[pid][PropertyEarning]));
			printEx(str);
			print(str);
		}
		return 1;
	}
	if(dialogid == UNNAMED+113)
	{
	    if(response)
	    {
            new pid = GetPVarInt(playerid,"PropertyID"),type = GetPVarInt(playerid,"LevelUpgradeType"),price;
			if(!IsPlayerPropertyOwner(playerid,pid)) return SM(playerid,"Nejsi vlastníkem nemovitosti");
			switch(type)
			{
			    case 0:
			    {
					if(listitem < Property[pid][PropertyLevel]) return SM(playerid,"Tento level u máte zakoupený");
					price = (listitem+1-Property[pid][PropertyLevel])*UPGRADE_COST;
					format(str,sizeof(str),"Opravdu chcete koupit "r"vylepení produkce "w"z levelu "g"%d "w"na level "r"%d "w"za "g"%d bodù"w"?",Property[pid][PropertyLevel],listitem+1,price);
			    }
			    case 1:
			    {
					if(listitem < Property[pid][PropertyCashLevel]) return SM(playerid,"Tento level u máte zakoupený");
					price = (listitem+1-Property[pid][PropertyCashLevel])*UPGRADE_CASH_COST;
					format(str,sizeof(str),"Opravdu chcete koupit "r"vylepení kasy "w"z levelu "g"%d "w"na level "r"%d "w"za "g"%d bodù"w"?",Property[pid][PropertyCashLevel],listitem+1,price);
			    }
			}
			SetPVarInt(playerid,"LevelUpgrade",listitem+1);
			SPD(playerid,UNNAMED+204,DIALOG_STYLE_MSGBOX,Property[pid][PropertyName],str,"Ano","Ne");
	    }
		return 1;
	}
	if(dialogid == UNNAMED+114)
	{
	    if(response)
	    {
            new pid = GetPVarInt(playerid,"PropertyID");
			if(!IsPlayerPropertyOwner(playerid,pid)) return SM(playerid,"Nejsi vlastníkem nemovitosti");
			format(dfile,sizeof(dfile),"UnNamed/Properties/Property%d.txt",pid);
			DOF2_SetString(dfile,"Owner","-1");
			DOF2_SetInt(dfile,"OnSale",0);
			DOF2_SaveFile();
			Property[pid][PropertyOnSale] = 0;
			format(Property[pid][PropertyOwner],24+1,"-1");
			GiveMoney(playerid,(Property[pid][PropertyLevel]*PROPERTY_DPRICE+Property[pid][PropertyCashLevel]*PROPERTY_DPRICE)*3/4,"Prodej nemovitosti");
			format(str,sizeof(str),"Nemovitost %s "w"úspìnì prodána za "g"%s$",Property[pid][PropertyName],Split((Property[pid][PropertyLevel]*PROPERTY_DPRICE+Property[pid][PropertyCashLevel]*PROPERTY_DPRICE)*3/4));
			SM(playerid,str);
			POwner[playerid] --;
			format(str,sizeof(str),"%s "r"%s "w"prodal nemovitost {0077FF}%s "w"[ LVL: %d ] [ Cena: "g"%s$"w" ]",Players(playerid),Jmeno(playerid),Property[pid][PropertyName],Property[pid][PropertyLevel],Split((Property[pid][PropertyLevel]*PROPERTY_DPRICE+Property[pid][PropertyCashLevel]*PROPERTY_DPRICE)*3/4));
			printEx(str);
			Property[pid][PropertyPrice] = Property[pid][PropertyLevel]*PROPERTY_DPRICE+Property[pid][PropertyCashLevel]*PROPERTY_DPRICE;
			UpdatePropertyText(pid);
			CheckPlayerDrazbaProperty(playerid,pid);
	    }
	    return 1;
 	}
	if(dialogid == UNNAMED+115)
	{
	    if(response)
	    {
			if(listitem == 0)
			{
			    SPD(playerid,UNNAMED+119,DIALOG_STYLE_INPUT,"Hledat nemovitost","Zadejte nick hráèe nebo název nemovitosti","Hledat","Zavøít");
				return 0;
			}
			new DIALOG_PROP[10000],page = GetPVarInt(playerid,"PropPage");
			strcat(DIALOG_PROP,"Název\t"w"Majitel\t"w"Vyprí\t"w"Obsah kasy\n");
			strcat(DIALOG_PROP,"Hledat podle vlastníka/názvu\nDalí stránka\n \n");
			for(new i = page*40; i < (page*40)+40; i ++)
			{
			    if(strcmp(Property[i][PropertyOwner],"0",false) != 0)
			    {
			        if(strcmp(Property[i][PropertyOwner],"-1",false) != 0)
			        {
				    	format(str,sizeof(str),"%d. %s"w" [ %d ]\t%s\t"g"%d Hodin\t"g"%s$\n",i,Property[i][PropertyName],Property[i][PropertyLevel],Property[i][PropertyOwner],Property[i][PropertyTime],Split(Property[i][PropertyEarning]));
					}
					else
					{
				    	format(str,sizeof(str),"%d. %s"w" [ %d ]\tNikdo\t"g"Nikdy\t"g"%s$\n",i,Property[i][PropertyName],Property[i][PropertyLevel],Split(Property[i][PropertyEarning]));
					}
					strcat(DIALOG_PROP,str);
				}
			}
			if((page*40)+40 > propertyid)
			{
				SPD(playerid,0,DIALOG_STYLE_TABLIST_HEADERS,"Vechny Nemovitosti",DIALOG_PROP,"Zavøít","");
			}
			else
			{
				SetPVarInt(playerid,"PropPage",page+1);
				SPD(playerid,UNNAMED+115,DIALOG_STYLE_TABLIST_HEADERS,"Vechny Nemovitosti",DIALOG_PROP,"Vybrat","Zavøít");
			}
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+116)
	{
		if(response)
		{
		    if(listitem > 0)
		    {
			    if(GetClickText(inputtext,"Pøidat slot"))
			    {
					if(Points[playerid] < 1000) return SM(playerid,"Nemáte dostatek bodù [ "g"1000 "w"]");
					GivePoints(playerid,-1000);
			        PropSlots[playerid] ++;
			        format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
			        DOF2_SetInt(dfile,"PropertySlots",PropSlots[playerid]);
			        DOF2_SaveFile();
			        format(str,sizeof(str),"Slot "g"%d "w"úspìnì pøidán",PropSlots[playerid]);
			        SM(playerid,str);
					new DIALOG_PROP[1000];
					strcat(DIALOG_PROP,"Název\t"w"Level\t"w"Prùmìrný Výdìlek\t"w"Obsah kasy\n");
					strcat(DIALOG_PROP,""r"Nemovitosti:\n");
					for(new i; i < MAX_PROPERTIES; i ++)
					{
					    if(strcmp(Property[i][PropertyOwner],"0",false) != 0)
					    {
							if(IsPlayerPropertyOwner(playerid,i))
							{
							    format(str,sizeof(str),"%s\t%d\t"g"%s$\t"g"%s$\n",Property[i][PropertyName],Property[i][PropertyLevel],Split(Property[i][PropertyLevel]*EARNING_PER_LEVEL),Split(Property[i][PropertyEarning]));
							    strcat(DIALOG_PROP,str);
							}
						}
					}
					for(new i = POwner[playerid]; i < PropSlots[playerid]; i ++)
					{
					    strcat(DIALOG_PROP,"{898989}Volný slot\t-\t-\t-\n");
					}
					if(PropSlots[playerid] < MAX_PROPERTIES_PER_PLAYER)
					{
					    strcat(DIALOG_PROP,"Pøidat slot [ "g"1000 Bodù "w"]");
					}
					if(PlayerHouse[playerid] != -1)
					{
						strcat(DIALOG_PROP,"\n"r"Domy:\n");
						format(str,sizeof(str),"%s\t \t \t \n",House[PlayerHouse[playerid]][hName]);
						strcat(DIALOG_PROP,str);
					}
					SPD(playerid,UNNAMED+116,DIALOG_STYLE_TABLIST_HEADERS,"Moje Nemovitosti",DIALOG_PROP,"Vybrat","Zavøít");
			    }
			    else
			    {
			        if(!GetClickText(inputtext,"Volný slot"))
			        {
						if(WorkMission[playerid] == 0)
						{
							if(listitem-1 < PropSlots[playerid])
							{
								new id = PlayerProps[playerid][listitem-1];
								NavigatePlayerToPos(playerid,Property[id][PropertyX],Property[id][PropertyY],Property[id][PropertyZ]);
								CreateInfoBox(playerid,"Nemovitost byla vyznacena na mape",5);
							}
						    if(PropSlots[playerid] < MAX_PROPERTIES_PER_PLAYER)
						    {
								if(listitem-1 == PropSlots[playerid]+2)
								{
									new id = PlayerHouse[playerid];
									NavigatePlayerToPos(playerid,House[id][hX],House[id][hY],House[id][hZ]);
									CreateInfoBox(playerid,"Dum byl vyznacen na mape",5);
								}
								if(listitem-1 == PropSlots[playerid]+4)
								{
								    if(GetPlayerSpecialProperty(playerid) != -1)
								    {
								        CreateInfoBox(playerid,"Vyrobna zbrani vyznacena na mape",5);
								        CallRemoteFunction("NavigateToSpecialProperty","ii",playerid,GetPlayerSpecialProperty(playerid));
								    }
								}
							}
							if(PropSlots[playerid] == MAX_PROPERTIES_PER_PLAYER)
							{
								if(listitem-1 == PropSlots[playerid]+1)
								{
									new id = PlayerHouse[playerid];
									if(id != -1)
									{
										NavigatePlayerToPos(playerid,House[id][hX],House[id][hY],House[id][hZ]);
										CreateInfoBox(playerid,"Dum byl vyznacen na mape",5);
									}
								}
								if(listitem-1 == PropSlots[playerid]+3)
								{
								    if(GetPlayerSpecialProperty(playerid) != -1)
								    {
								        CreateInfoBox(playerid,"Vyrobna zbrani vyznacena na mape",5);
								        CallRemoteFunction("NavigateToSpecialProperty","ii",playerid,GetPlayerSpecialProperty(playerid));
								    }
								}
							}
						}
					}
			    }
			}
		}
		return 1;
	}
	if(dialogid == UNNAMED+117)
	{
	    if(response)
	    {
            new pid = GetPVarInt(playerid,"PropertyID"),hours;
			if(!IsPlayerPropertyOwner(playerid,pid)) return SM(playerid,"Nejsi vlastníkem nemovitosti");
			format(str,sizeof(str),"Zadejte poèet hodin, cena jedné hodiny je "g"%.2f bodu"w"\nMùete si pronájem prodlouit o "g"%d hodin "w"za "g"%.1f bodù",HOUR_COST*Property[pid][PropertyLevel],720-Property[pid][PropertyTime],(720-Property[pid][PropertyTime])*HOUR_COST);
			if(sscanf(inputtext,"d",hours)) return SPD(playerid,UNNAMED+117,DIALOG_STYLE_INPUT,Property[pid][PropertyName],str,"Prodlouit","Zavøít");
			format(str,sizeof(str),"Zadejte poèet hodin, cena jedné hodiny je "g"%.2f bodu"w"\nMùete si pronájem prodlouit o "g"%d hodin "w"za "g"%.1f bodù\n\n"r"Minimálnì 1 hodina",HOUR_COST*Property[pid][PropertyLevel],720-Property[pid][PropertyTime],(720-Property[pid][PropertyTime])*HOUR_COST);
			if(hours < 1) return SPD(playerid,UNNAMED+117,DIALOG_STYLE_INPUT,Property[pid][PropertyName],str,"Prodlouit","Zavøít");
			format(str,sizeof(str),"Zadejte poèet hodin, cena jedné hodiny je "g"%.2f bodu"w"\nMùete si pronájem prodlouit o "g"%d hodin "w"za "g"%.1f bodù\n\n"r"Maximálnì %d hodin",HOUR_COST*Property[pid][PropertyLevel],720-Property[pid][PropertyTime],(720-Property[pid][PropertyTime])*HOUR_COST,720-Property[pid][PropertyTime]);
			if(hours > 720-Property[pid][PropertyTime]) return SPD(playerid,UNNAMED+117,DIALOG_STYLE_INPUT,Property[pid][PropertyName],str,"Prodlouit","Zavøít");
			format(str,sizeof(str),"Zadejte poèet hodin, cena jedné hodiny je "g"%.2fbodu"w"\nMùete si pronájem prodlouit o "g"%d hodin "w"za "g"%.1f bodù\n\n"r"Nemáte %.1f bodù ",HOUR_COST*Property[pid][PropertyLevel],720-Property[pid][PropertyTime],(720-Property[pid][PropertyTime])*HOUR_COST,hours*HOUR_COST);
			if(Points[playerid] < hours*HOUR_COST) return SPD(playerid,UNNAMED+117,DIALOG_STYLE_INPUT,Property[pid][PropertyName],str,"Prodlouit","Zavøít");
			format(str,sizeof(str),"Opravdu si pøejete prodlouit pronájem o "g"%d hodin "w"za "g"%0.1f bodù?",hours,hours*HOUR_COST);
			SPD(playerid,UNNAMED+118,DIALOG_STYLE_MSGBOX,Property[pid][PropertyName],str,"Ano","Ne");
			SetPVarInt(playerid,"PropHours",hours);
		}
	    return 1;
	}
	if(dialogid == UNNAMED+118)
	{
	    if(response)
	    {
	        new pid = GetPVarInt(playerid,"PropertyID"),hours = GetPVarInt(playerid,"PropHours");
			if(!IsPlayerPropertyOwner(playerid,pid)) return SM(playerid,"Nejsi vlastníkem nemovitosti");
			format(dfile,sizeof(dfile),"UnNamed/Properties/Property%d.txt",pid);
			Property[pid][PropertyTime] += hours;
			DOF2_SetInt(dfile,"Hours",Property[pid][PropertyTime]);
			DOF2_SaveFile();
			format(str,sizeof(str),"[ ! ] "w"Pronájem nemovitosti "g"%s "w"navýen o "g"%d hodin "w"za "g"%0.1f bodù",Property[pid][PropertyName],hours,hours*HOUR_COST);
			SCM(playerid,red,str);
			format(str,sizeof(str),"Nemovitost vyprí za "g"%d hodin",Property[pid][PropertyTime]);
			SM(playerid,str);
			GivePoints(playerid,-hours*HOUR_COST);
			UpdatePropertyText(pid);
			format(str,sizeof(str),"%s "r"%s "w"si prodlouil pronájem u nemovitosti {0077FF}%s "w"[ LVL: %d ] [ %d -> %d hodin ]",Players(playerid),Jmeno(playerid),Property[pid][PropertyName],Property[pid][PropertyLevel],Property[pid][PropertyTime]-hours,Property[pid][PropertyTime]);
			printEx(str);
		}
	    return 1;
	}
	if(dialogid == UNNAMED+119)
	{
	    if(response)
	    {
	        if(!strlen(inputtext)) return SPD(playerid,UNNAMED+119,DIALOG_STYLE_INPUT,"Hledat nemovitost","Zadejte nick hráèe nebo název nemovitosti","Hledat","Zavøít");
			if(strlen(inputtext) > 24) return SPD(playerid,UNNAMED+119,DIALOG_STYLE_INPUT,"Hledat nemovitost","Zadejte nick hráèe nebo název nemovitosti\n\n"r"Zadal jste pøíli dlouhý text","Hledat","Zavøít");
			new DIALOG_PROP[10000],vysledek;
			strcat(DIALOG_PROP,"Název\t"w"Majitel\t"w"Vyprí\t"w"Obsah kasy\n");
	        for(new i; i < MAX_PROPERTIES; i ++)
        	{
	            if(strcmp(Property[i][PropertyOwner],"0",false) != 0)
	            {
					if(strfind(Property[i][PropertyOwner],inputtext,true) != -1 || strfind(Property[i][PropertyName],inputtext,true) != -1 )
					{
					    vysledek++;
				        if(strcmp(Property[i][PropertyOwner],"-1",false) != 0)
				        {
					    	format(str,sizeof(str),"%d. %s"w" [ %d ]\t%s\t"g"%d Hodin\t"g"%s$\n",i,Property[i][PropertyName],Property[i][PropertyLevel],Property[i][PropertyOwner],Property[i][PropertyTime],Split(Property[i][PropertyEarning]));
						}
						else
						{
					    	format(str,sizeof(str),"%d. %s"w" [ %d ]\tNikdo\t"g"Nikdy\t"g"%s$\n",i,Property[i][PropertyName],Property[i][PropertyLevel],Split(Property[i][PropertyEarning]));
						}
						strcat(DIALOG_PROP,str);
					}
				}
	        }
	        if(vysledek > 50)
	        {
	            format(str,sizeof(str),"Nalezeno pøíli mnoho nemovitostí ( {0077FF}%d "w")",vysledek);
			    SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Hledané nemovitosti",str,"Zavøít","");
	        }
	        else if(vysledek > 0)
	        {
		        format(str,sizeof(str),"Nalezené nemovitsti: [ "g"%d "w"]",vysledek);
				SPD(playerid,0,DIALOG_STYLE_TABLIST_HEADERS,str,DIALOG_PROP,"Zavøít","");
			}
			else
			{
			    SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Hledané nemovitosti","Nic nenalezeno","Zavøít","");
			}
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+120)
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0: ShowTop(playerid,"Users","Points","Nick",Jmeno(playerid));
	            case 1: ShowTop(playerid,"Users","Kills","Nick",Jmeno(playerid));
	            case 2: ShowTop(playerid,"Users","Events","Nick",Jmeno(playerid));
	            case 3: ShowTop(playerid,"Users","Duels","Nick",Jmeno(playerid));
	            case 4: ShowTop(playerid,"Users","Sumos","Nick",Jmeno(playerid));
	            case 5: ShowTop(playerid,"Users","Postrehu","Nick",Jmeno(playerid));
	            case 6: ShowTop(playerid,"Users","Races","Nick",Jmeno(playerid));
	            case 7: ShowTop(playerid,"Users","Missions","Nick",Jmeno(playerid));
	            case 8: ShowTop(playerid,"Users","Hours","Nick",Jmeno(playerid));
	            case 9: ShowTop(playerid,"Users","Level","Nick",Jmeno(playerid));
	            case 10: ShowTop(playerid,"Users","Robbed","Nick",Jmeno(playerid));
	            case 11: ShowTop(playerid,"Users","DMKills","Nick",Jmeno(playerid));
	            case 12: ShowTop(playerid,"Users","DMScore","Nick",Jmeno(playerid));
	            case 13: ShowTop(playerid,"Users","Marihuana","Nick",Jmeno(playerid));
	            case 14: ShowTop(playerid,"Users","Stunts","Nick",Jmeno(playerid));
	            case 15: ShowTop(playerid,"Users","MinceWin","Nick",Jmeno(playerid));
	            case 16: ShowTop(playerid,"Users","MinceLose","Nick",Jmeno(playerid));
	            case 17: ShowTop(playerid,"Users","Dailys","Nick",Jmeno(playerid));
			    case 18:
				{
				    new text[144];
				    if(GetGang(playerid) != -1)
				    {
					    format(dfile,sizeof(dfile),"GangSystem/Gang[%d].ini",GetGang(playerid));
						format(text,sizeof(text),"%s",dini_Get(dfile,"Name"));
					}
					else
					    format(text,sizeof(text),"-1");
					ShowTop(playerid,"Gangs","Respect","Name",text,"RS");
				}
			}
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+121)
	{
	    if(response)
	    {
			new DIALOG[1000],query[500],rows,fields,Cache:cache;
			cache = mysql_query(mysql,"SELECT * FROM `Dotazy` WHERE `Odpovezeno`='0'");
			cache_get_data(rows,fields,mysql);
			if(rows)
			{
				new dotaz[144],nick[24];
				cache_get_field_content(listitem,"Dotaz",dotaz,mysql);
				cache_get_field_content(listitem,"Nick",nick,mysql);
				format(str,sizeof(str),""dc"Zadejte odpovìï na dotaz:\n[%s] {FF3030}%s\n\n"r"Dotaz smaete ;dùvod",DATE(cache_get_field_content_int(listitem,"Time")),dotaz);
				strcat(DIALOG,str);
				cache_delete(cache,mysql);
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Dotazy` WHERE `Nick`='%e' ORDER BY `Time` DESC LIMIT 5",nick);
				cache = mysql_query(mysql,query);
				cache_get_data(rows,fields,mysql);
				if(rows > 1)
				{
				    strcat(DIALOG,"\n\n"r"Historie dotazù:\n");
					for(new i = 1; i < rows; i ++)
					{
						new dotazy[144],admin[24],odpoved[144];
						cache_get_field_content(i,"Dotaz",dotazy,mysql);
						cache_get_field_content(i,"Odpovedel",admin,mysql);
						cache_get_field_content(i,"Odpoved",odpoved,mysql);
						format(str,sizeof(str),""dc"%s -> %s\n",admin,odpoved);
						strcat(DIALOG,str);
						format(str,sizeof(str),""dc"[%s] %s\n",DATE(cache_get_field_content_int(i,"Time",mysql)),dotazy);
						strcat(DIALOG,str);
					}
				}
				SPD(playerid,UNNAMED+122,DIALOG_STYLE_INPUT,"Dotaz",DIALOG,"Odeslat","Zavøít");
				SetPVarInt(playerid,"Odpoved",listitem);
			}
			cache_delete(cache,mysql);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+122)
	{
	    if(response)
	    {
			new id = GetPVarInt(playerid,"Odpoved"),query[500],rows,fields,Cache:cache;
			cache = mysql_query(mysql,"SELECT * FROM `Dotazy` WHERE `Odpovezeno`='0'");
			cache_get_data(rows,fields,mysql);
			if(rows)
			{
			    new nick[24],dotaz[144];
			    cache_get_field_content(id,"Nick",nick,mysql);
			    cache_get_field_content(id,"Dotaz",dotaz,mysql);
				if(inputtext[0] != ';')
				{
				    mysql_format(mysql,query,sizeof(query),"UPDATE `Dotazy` SET `Odpoved`='%e',`Odpovedel`='%e' WHERE `Nick` = '%e' AND `Odpovezeno` = '0'",inputtext,Jmeno(playerid),nick);
				    mysql_query(mysql,query,false);
				    new player = GetPlayerIdFromName(nick);
				    if(IPC(player))
				    {
				        new DIALOG[500];
						format(str,sizeof(str),""dc"%s {30FFE0}%s "dc"Vám odpovìdìl na Vá dotaz\n\nDotaz: {FF3030}%s",Players(playerid),Jmeno(playerid),dotaz);
						strcat(DIALOG,str);
						format(str,sizeof(str),"\n"dc"Odpovìï: {45FF30}%s\n\n"dc"Archiv dotazù zobrazíte pøíkazem: {30FFE0}/mojedotazy",inputtext);
						strcat(DIALOG,str);
						SPD(player,0,DIALOG_STYLE_MSGBOX,"Dotaz",DIALOG,"Zavøít","");
					    mysql_format(mysql,query,sizeof(query),"UPDATE `Dotazy` SET `Readed`='%d' WHERE `Nick` = '%e' AND `Odpovezeno` = '0'",gettime(),nick);
					    mysql_query(mysql,query,false);
					    format(str,sizeof(str),"%s "w"%s "c"Vám odpovìdìl na Vá dotaz -> "g"/mojedotazy",Players(playerid),Jmeno(playerid));
					    SCM(player,cyan,str);
				    }
				    else
				    {
				        new string[300];
				        format(string,sizeof(string),"%s "g"%s "dc"Vám odpovìdìl na Vá dotaz: "g"%s\n"dc"Odpovìï zobrazíte po napsání pøíkazu: "g"/mojedotazy",Players(playerid),Jmeno(playerid),dotaz);
						SendPlayerNotification(nick,"Zodpovìzený dotaz",string);
					}
				    mysql_format(mysql,query,sizeof(query),"UPDATE `Dotazy` SET `Odpovezeno`='%d' WHERE `Nick` = '%e' AND `Odpovezeno` = '0'",gettime(),nick);
				    mysql_query(mysql,query,false);
				    format(str,sizeof(str),""y"%s "c"%s "y"odpovìdìl na dotaz hráèi "c"%s",Players(playerid),Jmeno(playerid),nick);
					SendAdminMessage(str);
				    format(str,sizeof(str),""y"Dotaz: "c"%s",dotaz);
					SendAdminMessage(str);
				    format(str,sizeof(str),""y"Odpovìï: "c"%s",inputtext);
					SendAdminMessage(str);
					cache_delete(cache,mysql);
				}
				else
				{
					mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Dotazy` WHERE `Nick` = '%e' AND `Odpovezeno` = '0' LIMIT 1",nick);
					cache = mysql_query(mysql,query);
					cache_get_data(rows,fields,mysql);
					if(rows)
					{
					    new tnick[24];
					    cache_get_field_content(0,"Nick",tnick,mysql);
					    format(str,sizeof(str),"%s "w"%s "r"smazal dotaz hráèe "w"%s"r".",Players(playerid),Jmeno(playerid),tnick);
					    SCMTA(red,str);
					    format(str,sizeof(str),"[ Dùvod: "w"%s "r"]",inputtext[1]);
					    SCMTA(red,str);
						mysql_format(mysql,query,sizeof(query),"DELETE FROM `Dotazy` WHERE `ID`='%d' LIMIT 1",cache_get_field_content_int(0,"ID",mysql));
						mysql_query(mysql,query,false);
					}
					else
					{
					    SM(playerid,"Chybnì zadané ID");
					}
					cache_delete(cache,mysql);
				}
			}
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+123)
	{
	    if(response)
	    {
	        if(strlen(inputtext))
	        {
				new query[200],rows,fields,escape[128];
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `SoutezOdpovedi` WHERE `Nick` = '%s' AND `Soutez` = %d",Jmeno(playerid),GetPVarInt(playerid,"SoutezID"));
				new Cache:cache = mysql_query(mysql,query);
				cache_get_data(rows,fields,mysql);
				mysql_real_escape_string(inputtext,escape);
				if(!rows)
				{
				  	mysql_format(mysql,query,sizeof(query),"INSERT INTO `SoutezOdpovedi` (`Nick`,`Odpoved`,`Soutez`,`Cas`,`Win`) VALUES ('%s','%s','%d','%d','0')",Jmeno(playerid),escape,GetPVarInt(playerid,"SoutezID"),gettime());
				  	mysql_query(mysql,query,false);
				}
				else
				{
				    if(GetPVarInt(playerid,"MultipleChoices") == 1)
				    {
				  		mysql_format(mysql,query,sizeof(query),"UPDATE `SoutezOdpovedi` SET `Odpoved` = '%s',`Cas` = '%d' WHERE `Nick` = '%s' AND `Soutez` = %d",escape,gettime(),Jmeno(playerid),GetPVarInt(playerid,"SoutezID"));
					}
					else
					{
					  	mysql_format(mysql,query,sizeof(query),"INSERT INTO `SoutezOdpovedi` (`Nick`,`Odpoved`,`Soutez`,`Cas`,`Win`) VALUES ('%s','%s','%d','%d','0')",Jmeno(playerid),escape,GetPVarInt(playerid,"SoutezID"),gettime());
					}
					mysql_query(mysql,query,false);
				}
				cache_delete(cache,mysql);
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Soutez` WHERE `ID`=%d LIMIT 1",GetPVarInt(playerid,"SoutezID"));
				cache = mysql_query(mysql,query);
				if(cache_get_row_count(mysql))
				{
					if(Points[playerid] < cache_get_field_content_int(0,"ChoicePrice"))
					{
					    cache_delete(cache,mysql);
					    SM(playerid,"Nemáte dostatek bodù");
					    return 0;
					}
					GivePoints(playerid,-cache_get_field_content_int(0,"ChoicePrice"));
				    mysql_format(mysql,query,sizeof(query),"UPDATE `Soutez` SET `Odmena`=`Odmena`+%d WHERE `ID`=%d",cache_get_field_content_int(0,"ChoicePrice",mysql),GetPVarInt(playerid,"SoutezID"));
					mysql_query(mysql,query,false);
				}
				cache_delete(cache,mysql);
				format(str,sizeof(str),"Vae odpovìï:\n"g"%s\n"w"Odeslána",inputtext);
				SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Soutì",str,"Zavøít","");
			}
	    }
		return 1;
	}
	if(dialogid == UNNAMED+124)
	{
	    if(response)
	    {
			new slot = GetPVarInt(playerid,"GarageSlotID");
			if(strlen(inputtext) > 30) return SPD(playerid,UNNAMED+124,DIALOG_STYLE_INPUT,"Zamknout vozidlo","patná délka hesla","Zamknout","Zavøít");
			format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(playerid),slot);
			if(fexist(dfile))
			{
				if(strlen(inputtext))
				{
					DOF2_SetString(dfile,"Password",inputtext);
					DOF2_SaveFile();
					format(str,sizeof(str),"Vozidlo zamknuto na heslo: "g"%s",inputtext);
					SM(playerid,str);
					format(ParkInfo[playerid][slot][Password],30,inputtext);
				}
				else
				{
				    DOF2_SetString(dfile,"Password","Locked");
				    DOF2_SaveFile();
				    SM(playerid,"Vozidlo zamknuto");
					format(ParkInfo[playerid][slot][Password],30,"Locked");
				}
			}
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+125)
	{
	    new Float:X,Float:Y,Float:Z;
	    GetPlayerPos(playerid,X,Y,Z);
	    if(response)
	    {
			new id = GetPVarInt(playerid,"PlayerVehicle"),slot = GetPVarInt(playerid,"GarageSlotID");
			format(str,sizeof(str),"Toto vozidlo patøí hráèi: "g"%s\n"w"Pro odemknutí vozidla zadejte heslo",Jmeno(id));
			if(strlen(inputtext) == 0) return SPD(playerid,UNNAMED+125,DIALOG_STYLE_INPUT,"Heslo",str,"Zadat","Zavøít");
			if(strlen(inputtext) > 30) return SPD(playerid,UNNAMED+125,DIALOG_STYLE_INPUT,"Heslo","Zadal jste pøíli dlouhé heslo","Zadat","Zavøít");
			if(strcmp(ParkInfo[id][slot][Password],inputtext,false) == 0)
			{
			    PutPlayerInVehicle(playerid,SavedCar[id][slot],0);
			}
			else
			{
			    SPD(playerid,UNNAMED+125,DIALOG_STYLE_INPUT,"Heslo","Zadal jste "r"patné heslo","Zadat","Zavøít");
			    SetPlayerPos(playerid,X,Y,Z);
			}
	    }
	    else
		{
		    SetPlayerPos(playerid,X,Y,Z);
		}
	    return 1;
	}
	if(dialogid == UNNAMED+126)
	{
	    if(response)
	    {
			new query[200],rows,fields,Nazev[50],Ukol[800],Text[1000],Cache:cache;
			for(new i; i < listitem+1; i ++)
			{
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Soutez` ORDER BY `Start` DESC",i);
				cache = mysql_query(mysql,query);
				cache_get_data(rows,fields,mysql);
				if(!rows)
				{
				    listitem++;
				}
				cache_delete(cache,mysql);
			}
			mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Soutez` ORDER BY `Start` DESC",listitem);
			cache = mysql_query(mysql,query);
			cache_get_data(rows,fields,mysql);
			new id = cache_get_field_content_int(listitem,"ID",mysql);
			if(gettime() > cache_get_field_content_int(listitem,"End",mysql))
			{
				mysql_format(mysql,query,sizeof(query),"UPDATE `Soutez` SET `Active` = 0 WHERE `ID` = %d",id);
			    mysql_query(mysql,query,false);
			}
			cache_get_field_content(listitem,"Nazev",Nazev,mysql);
			cache_get_field_content(listitem,"Text",Ukol,mysql);
			SetPVarInt(playerid,"SoutezID",id);
			format(Text,sizeof(Text),"Název soutìe: "g"%s\n"w"Zaèátek soutìe: "g"%s\n"w"Konec soutìe: "g"%s\n"w"Odmìna: "g"%d bodù "w"+ "c"%d XP\n\n"w"Zadání soutìe:\n"g"%s",Nazev,DATE(cache_get_field_content_int(listitem,"Start",mysql)),DATE(cache_get_field_content_int(listitem,"End",mysql)),cache_get_field_content_int(listitem,"Odmena",mysql),cache_get_field_content_int(listitem,"OdmenaXP",mysql),Ukol);
			if(cache_get_field_content_int(listitem,"ChoicePrice") > 0)
			{
			    format(str,sizeof(str),"\n\n"r"Cena jedné odpovìdi je: "g"%d bodù",cache_get_field_content_int(listitem,"ChoicePrice"));
			    strcat(Text,str);
			}
			if(gettime() < cache_get_field_content_int(listitem,"Start",mysql))
			{
				strcat(Text,""r"\n\nSoutì jetì nezaèala");
				SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Soutì",Text,"Zavøít","");
			}
			else if(gettime() > cache_get_field_content_int(listitem,"End",mysql))
			{
				strcat(Text,""r"\n\nSoutì u skonèila");
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `SoutezOdpovedi` WHERE `Soutez` = %d AND `Win` = 1 LIMIT 1",id);
				new Cache:cache2 = mysql_query(mysql,query);
				cache_get_data(rows,fields,mysql);
				if(rows)
				{
				    new vyherce[25],odpoved[128];
					cache_get_field_content(0,"Nick",vyherce,mysql);
					cache_get_field_content(0,"Odpoved",odpoved,mysql);
					format(str,sizeof(str),"\n\n"w"Výherce: "g"%s\n"w"Odpovìï: "g"%s",vyherce,odpoved);
					strcat(Text,str);
				}
				else
				{
				    strcat(Text,"\n\n"r"Výherce zatím nebyl oznámen");
				}
				cache_delete(cache2,mysql);
				SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Soutì",Text,"Zavøít","");
			}
			else
			{
				if(cache_get_field_content_int(listitem,"MultipleChoices") == 0)
				{
			    	strcat(Text,"\n\n"w"Lze odeslat pouze jednu odpovìï, pokud jich odelete více bude zaznamenána ta poslední");
			    	SetPVarInt(playerid,"MultipleChoices",1);
				}
				else
				{
			    	strcat(Text,"\n\n{0077FF}V této soutìi lze pouít více odpovìdí");
			    	SetPVarInt(playerid,"MultipleChoices",0);
				}
				SPD(playerid,UNNAMED+123,DIALOG_STYLE_INPUT,"Soutì",Text,"Odeslat","Zavøít");
			}
			cache_delete(cache,mysql);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+127)
	{
	    if(response)
	    {
			if(!strlen(inputtext)) return SPD(playerid,UNNAMED+127,DIALOG_STYLE_INPUT,"Rádio - Vlastí URL","Zadejte URL pro pøehrání vlastního rádia/písnièky","Pøehrát","Zavøít");
			if(strlen(inputtext) < 8) return SPD(playerid,UNNAMED+127,DIALOG_STYLE_INPUT,"Rádio - Vlastí URL","Zadejte URL pro pøehrání vlastního rádia/písnièky\n\n"r"Neplatná URL","Pøehrát","Zavøít");
			if(strlen(inputtext) > 128) return SPD(playerid,UNNAMED+127,DIALOG_STYLE_INPUT,"Rádio - Vlastí URL","Zadejte URL pro pøehrání vlastního rádia/písnièky\n\n"r"Pøíli dlouhý název","Pøehrát","Zavøít");
			StopAudioStreamForPlayer(playerid);
			PlayAudioStreamForPlayer(playerid,inputtext);
		    Listening[playerid] = MAX_RADIOS+1;
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+128)
	{
	    if(response)
	    {
	        new name[24],iip[16];
            GetPVarString(playerid,"GetAiName",name,sizeof(name));
            GetPVarString(playerid,"GetAiIP",iip,sizeof(iip));
			if(GetClickText(inputtext,"IP Adresa:") || GetClickText(inputtext,"Nick:"))
			{
			    SPD(playerid,0,DIALOG_STYLE_INPUT,"IP Adresa",inputtext,"Zavøít","");
			}
			else if(GetClickText(inputtext,"Poslední pøihláení:"))
			{
			    ShowLoginLog(playerid,name);
			}
			else if(GetClickText(inputtext,"Zobrazit PM Archiv"))
			{
			    ShowPMLog(playerid,name,0);
			}
	        else if(GetClickText(inputtext,"Zobrazit nicky"))
	        {
	            new query[500],rows,fields,Cache:cache,DIALOG[5000];
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Accounts` WHERE `IP` = '%s'",iip);
				cache = mysql_query(mysql,query);
				cache_get_data(rows,fields,mysql);
				if(rows)
				{
					for(new i; i < rows; i ++)
					{
					    new uname[24],ip[16];
					    cache_get_field_content(i,"Nick",uname,mysql);
					    cache_get_field_content(i,"IP",ip,mysql);
					    format(str,sizeof(str),"%s\t%s\n",uname,ip);
					    strcat(DIALOG,str);
					}
				}
				else
				{
				    strcat(DIALOG,"Chyba v naèítání úètù\t ");
				}
				SPD(playerid,UNNAMED+129,DIALOG_STYLE_TABLIST,"Seznam nickù",DIALOG,"Vybrat","Zavøít");
				cache_delete(cache,mysql);
	        }
	        else if(GetClickText(inputtext,"Zobrazit IP Adresy"))
	        {
	            new query[500],rows,fields,Cache:cache,DIALOG[5000];
	            format(dfile,sizeof(dfile),USER_FILES,name);
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Accounts` WHERE `Nick` = '%s'",name);
				cache = mysql_query(mysql,query);
				cache_get_data(rows,fields,mysql);
				if(rows)
				{
					for(new i; i < rows; i ++)
					{
					    new uname[24],ip[16];
					    cache_get_field_content(i,"Nick",uname,mysql);
					    cache_get_field_content(i,"IP",ip,mysql);
					    format(str,sizeof(str),"%s\t%s\n",ip,uname);
					    strcat(DIALOG,str);
					}
				}
				else
				{
				    strcat(DIALOG,"Chyba v naèítání úètù\t ");
				}
				SPD(playerid,UNNAMED+139,DIALOG_STYLE_TABLIST,"Seznam IP Adres",DIALOG,"Vybrat","Zavøít");
				cache_delete(cache,mysql);
	        }
			else if(GetClickText(inputtext,"Zobrazit umlèení"))
			{
			    new query[500],rows,fields,Cache:cache,DIALOG[5000];
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Prestupky` WHERE `Nick` = '%e' AND `Type` = '%d'",name,TYPE_MUTE);
				cache = mysql_query(mysql,query);
				cache_get_data(rows,fields,mysql);
				if(rows)
				{
				    strcat(DIALOG,"Datum\t"w"Dùvod\t"w"Admin\t"w"Konec umlèení\n");
					for(new i; i < rows; i ++)
					{
					    new duvod[100],admin[24];
					    cache_get_field_content(i,"Reason",duvod,mysql);
					    cache_get_field_content(i,"Admin",admin,mysql);
				    	format(str,sizeof(str),"%s\t%s\t%s\t%d minut\n",DATE(cache_get_field_content_int(i,"Time",mysql)),duvod,admin,cache_get_field_content_int(i,"EndTime",mysql)/60);
						strcat(DIALOG,str);
					}
					SPD(playerid,0,DIALOG_STYLE_TABLIST_HEADERS,"Seznam time banù",DIALOG,"Zavøít","");
				}
			    strcat(DIALOG,str);
				cache_delete(cache,mysql);
			}
			else if(GetClickText(inputtext,"Zobrazit bloknutí pøíkazù"))
			{
			    new query[500],rows,fields,Cache:cache,DIALOG[5000];
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Prestupky` WHERE `Nick` = '%e' AND `Type` = '%d'",name,TYPE_CBLOCK);
				cache = mysql_query(mysql,query);
				cache_get_data(rows,fields,mysql);
				if(rows)
				{
				    strcat(DIALOG,"Datum\t"w"Dùvod\t"w"Admin\t"w"Konec umlèení\n");
					for(new i; i < rows; i ++)
					{
					    new duvod[100],admin[24];
					    cache_get_field_content(i,"Reason",duvod,mysql);
					    cache_get_field_content(i,"Admin",admin,mysql);
				    	format(str,sizeof(str),"%s\t%s\t%s\t%d minut\n",DATE(cache_get_field_content_int(i,"Time",mysql)),duvod,admin,cache_get_field_content_int(i,"EndTime",mysql)/60);
						strcat(DIALOG,str);
					}
					SPD(playerid,0,DIALOG_STYLE_TABLIST_HEADERS,"Seznam time banù",DIALOG,"Zavøít","");
				}
			    strcat(DIALOG,str);
				cache_delete(cache,mysql);
			}
			else if(GetClickText(inputtext,"Zobrazit varování"))
			{
			    new query[500],rows,fields,Cache:cache,DIALOG[5000];
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Prestupky` WHERE `Nick` = '%e' AND `Type` = '%d'",name,TYPE_VAR);
				cache = mysql_query(mysql,query);
				cache_get_data(rows,fields,mysql);
				if(rows)
				{
				    strcat(DIALOG,"Datum\t"w"Dùvod\t"w"Admin\n");
					for(new i; i < rows; i ++)
					{
					    new duvod[100],admin[24];
					    cache_get_field_content(i,"Reason",duvod,mysql);
					    cache_get_field_content(i,"Admin",admin,mysql);
					    format(str,sizeof(str),"%s\t%s\t%s\n",DATE(cache_get_field_content_int(i,"Time",mysql)),duvod,admin);
					    strcat(DIALOG,str);
					}
					SPD(playerid,0,DIALOG_STYLE_TABLIST_HEADERS,"Seznam kickù",DIALOG,"Zavøít","");
				}
			    strcat(DIALOG,str);
				cache_delete(cache,mysql);
			}
			else if(GetClickText(inputtext,"Zobrazit kicky"))
			{
			    new query[500],rows,fields,Cache:cache,DIALOG[5000];
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Prestupky` WHERE `Nick` = '%e' AND `Type` = '%d'",name,TYPE_KICK);
				cache = mysql_query(mysql,query);
				cache_get_data(rows,fields,mysql);
				if(rows)
				{
				    strcat(DIALOG,"Datum\t"w"Dùvod\t"w"Admin\n");
					for(new i; i < rows; i ++)
					{
					    new duvod[100],admin[24];
					    cache_get_field_content(i,"Reason",duvod,mysql);
					    cache_get_field_content(i,"Admin",admin,mysql);
					    format(str,sizeof(str),"%s\t%s\t%s\n",DATE(cache_get_field_content_int(i,"Time",mysql)),duvod,admin);
					    strcat(DIALOG,str);
					}
					SPD(playerid,0,DIALOG_STYLE_TABLIST_HEADERS,"Seznam kickù",DIALOG,"Zavøít","");
				}
			    strcat(DIALOG,str);
				cache_delete(cache,mysql);
			}
			else if(GetClickText(inputtext,"Zobrazit time bany"))
			{
			    new query[500],rows,fields,Cache:cache,DIALOG[5000];
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Prestupky` WHERE `Nick` = '%e' AND `Type` = '%d'",name,TYPE_TBAN);
				cache = mysql_query(mysql,query);
				cache_get_data(rows,fields,mysql);
				if(rows)
				{
				    strcat(DIALOG,"Datum\t"w"Dùvod\t"w"Admin\t"w"Konec banu\n");
					for(new i; i < rows; i ++)
					{
					    new duvod[100],admin[24];
					    cache_get_field_content(i,"Reason",duvod,mysql);
					    cache_get_field_content(i,"Admin",admin,mysql);
						if(gettime() > cache_get_field_content_int(i,"EndTime",mysql))
						{
					    	format(str,sizeof(str),"%s\t%s\t%s\t"g"%s\n",DATE(cache_get_field_content_int(i,"Time",mysql)),duvod,admin,DATE(cache_get_field_content_int(i,"EndTime",mysql)));
						}
						else
						{
					    	format(str,sizeof(str),"%s\t%s\t%s\t"r"%s\n",DATE(cache_get_field_content_int(i,"Time",mysql)),duvod,admin,DATE(cache_get_field_content_int(i,"EndTime",mysql)));
						}
						strcat(DIALOG,str);
					}
					SPD(playerid,0,DIALOG_STYLE_TABLIST_HEADERS,"Seznam time banù",DIALOG,"Zavøít","");
				}
			    strcat(DIALOG,str);
				cache_delete(cache,mysql);
			}
			else if(GetClickText(inputtext,"Zobrazit bany"))
			{
			    new query[500],rows,fields,Cache:cache,DIALOG[5000];
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Prestupky` WHERE `Nick` = '%e' AND `Type` = '%d'",name,TYPE_BAN);
				cache = mysql_query(mysql,query);
				cache_get_data(rows,fields,mysql);
				if(rows)
				{
				    strcat(DIALOG,"Datum\t"w"Dùvod\t"w"Admin\tKonec banu\n");
					for(new i; i < rows; i ++)
					{
					    new duvod[100],admin[24];
					    cache_get_field_content(i,"Reason",duvod,mysql);
					    cache_get_field_content(i,"Admin",admin,mysql);
				    	format(str,sizeof(str),"%s\t%s\t%s\t"r"Perma Ban\n",DATE(cache_get_field_content_int(i,"Time",mysql)),duvod,admin);
						strcat(DIALOG,str);
					}
					SPD(playerid,0,DIALOG_STYLE_TABLIST_HEADERS,"Seznam banù",DIALOG,"Zavøít","");
				}
			    strcat(DIALOG,str);
				cache_delete(cache,mysql);
			}

	    }
	    return 1;
	}
	if(dialogid == UNNAMED+129)
	{
	    if(response)
    	{
			ShowAdminInfoByName(playerid,inputtext);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+130)
	{
	    if(response)
	    {
			new query[1000],DIALOG[500],rows,fields,Cache:cache;
			mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Dotazy` WHERE `Nick` = '%e' AND `Odpovezeno` > 0 ORDER BY `Time` DESC, `Readed`=0 ASC LIMIT 20",Jmeno(playerid));
			cache = mysql_query(mysql,query);
			cache_get_data(rows,fields,mysql);
			if(rows)
			{
			    new odpoved[144],dotaz[144];
			    cache_get_field_content(listitem,"Odpoved",odpoved,mysql);
			    cache_get_field_content(listitem,"Dotaz",dotaz,mysql);
				format(str,sizeof(str),""dc"Dotaz: {FF3030}%s",dotaz);
				strcat(DIALOG,str);
				format(str,sizeof(str),"\n"dc"Odpovìï: {45FF30}%s",odpoved);
				strcat(DIALOG,str);
				SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Dotaz",DIALOG,"Zavøít","");
			    mysql_format(mysql,query,sizeof(query),"UPDATE `Dotazy` SET `Readed`='%d' WHERE `Nick` = '%e' AND `Dotaz` = '%e'",gettime(),Jmeno(playerid),dotaz);
			    mysql_query(mysql,query,false);
				SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Dotaz",DIALOG,"Zavøít","");
			}
			cache_delete(cache,mysql);
	    }
		return 1;
	}
	if(dialogid == UNNAMED+131)
	{
	    if(response)
	    {
            new id = GetPVarInt(playerid,"HouseID"),hint = House[id][hInt];
	        if(GetClickText(inputtext,"Vejít"))
	        {
				if(strcmp(House[id][hOwner],"-1",false) != 0)
				{
					if(!IsPlayerHouseOwner(playerid,id))
					{
					    if(strlen(House[id][hPassword]) > 0) return SPD(playerid,UNNAMED+132,DIALOG_STYLE_PASSWORD,"Dùm","Tento dùm je zabezpeèen heslem","Vstoupit","Zavøít");
					}
				}
				printf("%s",House[id][hPassword]);
				SetPlayerVirtualWorld(playerid,id+1);
				SetPlayerInterior(playerid,HouseInteriors[hint][HouseIntID]);
				SetPlayerPos(playerid,HouseInteriors[hint][HouseInteriorX],HouseInteriors[hint][HouseInteriorY],HouseInteriors[hint][HouseInteriorZ]);
				if(HouseInteriors[hint][HouseInteriorLoading] == true)
				{
					LoadObjects(playerid,HouseInteriors[hint][HouseInteriorX],HouseInteriors[hint][HouseInteriorY],HouseInteriors[hint][HouseInteriorZ],0);
				}
		    }
		    else if(GetClickText(inputtext,"Koupit"))
		    {
		        format(str,sizeof(str),"Tento dùm lze koupit a od "g"%d hodin",House[id][hNeedHours]);
		        if(GetPlayerPlayedTime(playerid)/60/60 < House[id][hNeedHours]) return SM(playerid,str);
				if(House[id][hPrice] == 0 && strcmp(House[id][hOwner],"-1",false) != 0) return SM(playerid,"Tento dùm není na prodej");
		        new owned;
				for(new i; i < MAX_HOUSES; i ++)
				{
				    if(IsPlayerHouseOwner(playerid,i))
				    {
				    	owned ++;
					}
				}
				if(owned >= MAX_HOUSES_PER_PLAYER) return SM(playerid,"U vlastníte maximální poèet domù");
				if(strcmp(House[id][hOwner],"-1",false) == 0)
				{
					format(str,sizeof(str),"Nemáte dostatek penìz ( "g"%s$ "w")",Split(HouseInteriors[hint][HouseInteriorPrice]));
					if(GetMoney(playerid) < HouseInteriors[hint][HouseInteriorPrice]) return SM(playerid,str);
					GiveMoney(playerid,-HouseInteriors[hint][HouseInteriorPrice],"Zakoupení domu");
					format(str,sizeof(str),"%s "r"%s "w"si zakoupil dùm è.p: "g"%d"w"/ID: "g"%d "w"za "c"%s$",Players(playerid),Jmeno(playerid),id+1,id,Split(HouseInteriors[hint][HouseInteriorPrice]));
					printEx(str);
					new player = GetPlayerIdFromName(House[id][hOwner]);
					if(IPC(player))
					{
					    CheckPlayerDrazbaHouse(player,id);
					}
					format(House[id][hOwner],24,Jmeno(playerid));
					format(House[id][hName],30,"%s's House",Jmeno(playerid));
					format(House[id][hPassword],30,"%d",Hash(Jmeno(playerid)));
					House[id][hPrice] = 0;
					new query[500],rows,fields,Cache:cache;
					mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Houses` WHERE `ID`='%d'",House[id][hID]);
					cache = mysql_query(mysql,query);
					cache_get_data(rows,fields,mysql);
					if(rows)
					{
					    mysql_format(mysql,query,sizeof(query),"UPDATE `Houses` SET `Owner`='%e',`Password`='%e', `Name`= '%e', `Price`=0 WHERE `ID`='%d'",Jmeno(playerid),House[id][hPassword],House[id][hName],House[id][hID]);
						mysql_query(mysql,query,false);
					}
					cache_delete(cache,mysql);
					UpdateHouse(id);
					format(str,sizeof(str),"Dùm è.p.: "g"%d "w"úspìnì zakoupen\n\nHeslo k domu: "g"%d "w"(lze zmìnit v domì)",id+1,Hash(Jmeno(playerid)));
					SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Dùm",str,"Zavøít","");
				    PlayerHouse[playerid] = id;
				    mysql_format(mysql,query,sizeof(query),"UPDATE `Houses` SET `OwnerActivity`=%d WHERE `ID`=%d",gettime(),House[id][hID]);
				    mysql_query(mysql,query,false);
				}
				else
				{
					format(str,sizeof(str),"Nemáte dostatek penìz ( "g"%s$ "w")",Split(House[id][hPrice]));
					if(GetMoney(playerid) < House[id][hPrice]) return SM(playerid,str);
					GiveMoney(playerid,-House[id][hPrice],"Zakoupení domu");
					format(str,sizeof(str),"%s "r"%s "w"si zakoupil dùm è.p: "g"%d"w"/ID: "g"%d "w"za "c"%s  bodù",Players(playerid),Jmeno(playerid),id+1,id,Split(House[id][hPrice]));
					printEx(str);
					new string[400];
					format(string,sizeof(string),"Vá dùm {0077FF}%s "dc"byl prodán hráèi: "g"%s "dc"za "g"%s$\n"dc"Peníze za prodej, byly pøevedeny do záloního trezoru: "g"/trezor",House[id][hName],Jmeno(playerid),Split(House[id][hPrice]));
					SendPlayerNotification(House[id][hOwner],"Prodán dùm",string);
					GivePlayerMoneyToTrezor(House[id][hOwner],House[id][hPrice]);
					format(House[id][hOwner],24,Jmeno(playerid));
					format(House[id][hName],30,"%s's House",Jmeno(playerid));
					format(House[id][hPassword],30,"%d",Hash(Jmeno(playerid)));
					House[id][hPrice] = 0;
					new query[500],rows,fields,Cache:cache;
					mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Houses` WHERE `ID`='%d'",House[id][hID]);
					cache = mysql_query(mysql,query);
					cache_get_data(rows,fields,mysql);
					if(rows)
					{
					    mysql_format(mysql,query,sizeof(query),"UPDATE `Houses` SET `Owner`='%e',`Password`='%e', `Name`= '%e', `Price`=0 WHERE `ID`='%d'",Jmeno(playerid),House[id][hPassword],House[id][hName],House[id][hID]);
						mysql_query(mysql,query,false);
					}
					cache_delete(cache,mysql);
					UpdateHouse(id);
					format(str,sizeof(str),"Dùm è.p.: "g"%d "w"úspìnì zakoupen\n\nHeslo k domu: "g"%d "w"(lze zmìnit v domì)",id+1,Hash(Jmeno(playerid)));
					SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Dùm",str,"Zavøít","");
				    PlayerHouse[playerid] = id;
				    mysql_format(mysql,query,sizeof(query),"UPDATE `Houses` SET `OwnerActivity`=%d WHERE `ID`=%d",gettime(),House[id][hID]);
				    mysql_query(mysql,query,false);
				}
			}
			else if(GetClickText(inputtext,"Prodat"))
			{
				if(!IsPlayerHouseOwner(playerid,id)) return SM(playerid,"Nejste vlastník tohoto domu");
				format(str,sizeof(str),"Opravdu si pøejete prodat dùm "r"%s "w"(è.p.: "g"%d "w") ?\nBude vám vrácena polovina ceny domu",House[id][hName],id+1);
				SPD(playerid,UNNAMED+133,DIALOG_STYLE_MSGBOX,"Dùm",str,"Ano","Ne");
			}
			else if(GetClickText(inputtext,"Zamknout"))
			{
				if(!IsPlayerHouseOwner(playerid,id)) return SM(playerid,"Nejste vlastník tohoto domu");
			    SPD(playerid,UNNAMED+134,DIALOG_STYLE_INPUT,"Dùm","Napite heslo, na které se dùm zamkne","Zadat","");
			}
			else if(GetClickText(inputtext,"Odemknout"))
			{
				if(!IsPlayerHouseOwner(playerid,id)) return SM(playerid,"Nejste vlastník tohoto domu");
			    new query[300],rows,fields,Cache:cache;
			    SM(playerid,"Dùm odemknut pro veøejnost");
				format(House[id][hPassword],30,"");
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Houses` WHERE `ID`='%d'",House[id][hID]);
				cache = mysql_query(mysql,query);
				cache_get_data(rows,fields,mysql);
				if(rows)
				{
				    mysql_format(mysql,query,sizeof(query),"UPDATE `Houses` SET `Password`='' WHERE `ID`='%d'",House[id][hID]);
				    mysql_query(mysql,query,false);
				}
				cache_delete(cache,mysql);
				UpdateHouse(id);
			}
			else if(GetClickText(inputtext,"Zmìnit interiér"))
			{
                new DIALOG[1000];
                for(new i; i < sizeof(HouseInteriors); i ++)
                {
                    if(House[id][hInt] == i)
                    {
                        format(str,sizeof(str),""r"%s\t"r"%d bodù\n",HouseInteriors[i][HouseInteriorName],HouseInteriors[i][HouseInteriorPriceB]);
                    }
					else
					{
                        format(str,sizeof(str),"%s\t{0088FF}%d bodù\n",HouseInteriors[i][HouseInteriorName],HouseInteriors[i][HouseInteriorPriceB]);
					}
					strcat(DIALOG,str);
                }
                SPD(playerid,UNNAMED+135,DIALOG_STYLE_TABLIST,"Dùm",DIALOG,"Koupit","Zavøít");
			}
			else if(GetClickText(inputtext,"Pøejmenovat"))
			{
			    SPD(playerid,UNNAMED+137,DIALOG_STYLE_INPUT,"Dùm","Zadejte nový název domu","Zmìnit","Zavøít");
			}
			else if(GetClickText(inputtext,"Nastavit spawn"))
			{
			    if(GetPlayerSpawn(playerid) != SPAWN_TYPE_HOUSE)
			    {
			        SetPlayerSpawn(playerid,SPAWN_TYPE_HOUSE);
			        SM(playerid,"Spawn nastaven u domu");
			    }
			    else
			    {
			        SetPlayerSpawn(playerid,SPAWN_TYPE_NONE);
			        SM(playerid,"Spawn nastaven u povolání");
			    }
			}
			else if(GetClickText(inputtext,"Vystavit dùm na prodej"))
			{
			    SPD(playerid,UNNAMED+161,DIALOG_STYLE_INPUT,"Dùm","Zadejte cenu, za kterou chcete dùm prodat","Potvrdit","Zavøít");
			}
			else if(GetClickText(inputtext,"Stáhnout dùm z prodeje"))
			{
				new query[100],Cache:cache,rows,fields;
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Houses` WHERE `ID`='%d'",House[id][hID]);
				cache = mysql_query(mysql,query);
				cache_get_data(rows,fields,mysql);
				if(rows)
				{
				    mysql_format(mysql,query,sizeof(query),"UPDATE `Houses` SET `Price`=0 WHERE `ID`='%d'",House[id][hID]);
				    mysql_query(mysql,query,false);
				}
				cache_delete(cache,mysql);
				House[id][hPrice] = 0;
				SM(playerid,"Dùm byl stáhnout z prodeje");
				UpdateHouse(id);
			}
		}
		return 1;
	}
	if(dialogid == UNNAMED+132)
	{
	    if(response)
	    {
            new id = GetPVarInt(playerid,"HouseID"),hint = House[id][hInt];
	        if(!strlen(inputtext)) return SPD(playerid,UNNAMED+132,DIALOG_STYLE_PASSWORD,"Dùm","Tento dùm je zabezpeèen heslem","Vstoupit","Zavøít");
			if(strlen(inputtext) > 30) return SPD(playerid,UNNAMED+132,DIALOG_STYLE_PASSWORD,"Dùm","Tento dùm je zabezpeèen heslem\n\n"r"Zadal jste pøíli dlouhé heslo","Vstoupit","Zavøít");
	        if(strcmp(House[id][hPassword],inputtext,false) != 0) return SPD(playerid,UNNAMED+132,DIALOG_STYLE_PASSWORD,"Dùm","Tento dùm je zabezpeèen heslem\n\n"r"Chybnì zadané heslo","Vstoupit","Zavøít");
			SetPlayerVirtualWorld(playerid,id+1);
			SetPlayerInterior(playerid,HouseInteriors[hint][HouseIntID]);
			SetPlayerPos(playerid,HouseInteriors[hint][HouseInteriorX],HouseInteriors[hint][HouseInteriorY],HouseInteriors[hint][HouseInteriorZ]);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+133)
	{
	    if(response)
	    {
            new id = GetPVarInt(playerid,"HouseID"),hint = House[id][hInt];
			if(!IsPlayerHouseOwner(playerid,id)) return SM(playerid,"Nejste vlastník tohoto domu");
            GiveMoney(playerid,HouseInteriors[hint][HouseInteriorPrice]/2,"Prodání domu");
            format(str,sizeof(str),"Dùm úspìnì prodán za "g"%s$",Split(HouseInteriors[hint][HouseInteriorPrice]/2));
			SM(playerid,str);
			House[id][hPrice] = 0;
			format(House[id][hOwner],24,"-1");
			format(House[id][hName],30,"Dùm na prodej");
			UpdateHouse(id);
			new query[500],fields,rows,Cache:cache;
			mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Houses` WHERE `ID` = '%d'",House[id][hID]);
			cache = mysql_query(mysql,query);
			cache_get_data(mysql,rows,fields);
			if(rows)
			{
			    mysql_format(mysql,query,sizeof(query),"UPDATE `Houses` SET `Owner`='-1',`Name`='Dùm na prodej',`Password`='', `Price`=0 WHERE `ID`='%d'",House[id][hID]);
				mysql_query(mysql,query,false);
			}
			cache_delete(cache,mysql);
		    PlayerHouse[playerid] = -1;
		    CheckPlayerDrazbaHouse(playerid,id);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+134)
	{
		if(response)
		{
            new id = GetPVarInt(playerid,"HouseID"),query[300],rows,fields,Cache:cache;
			if(!IsPlayerHouseOwner(playerid,id)) return SM(playerid,"Nejste vlastník tohoto domu");
		    if(!strlen(inputtext)) return SPD(playerid,UNNAMED+134,DIALOG_STYLE_INPUT,"Dùm","Napite heslo, na které se dùm zamkne","Zadat","");
		    if(strlen(inputtext) > 30) return SPD(playerid,UNNAMED+134,DIALOG_STYLE_INPUT,"Dùm","Napite heslo, na které se dùm zamkne\n\n"r"Maximálnì 30 znakù","Zadat","");
			format(House[id][hPassword],30,inputtext);
			mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Houses` WHERE `ID`='%d'",House[id][hID]);
			cache = mysql_query(mysql,query);
			cache_get_data(rows,fields,mysql);
			if(rows)
			{
			    mysql_format(mysql,query,sizeof(query),"UPDATE `Houses` SET `Password`='%s' WHERE `ID`='%d'",inputtext,House[id][hID]);
				mysql_query(mysql,query,false);
			}
			cache_delete(cache,mysql);
			format(str,sizeof(str),"Heslo domu nastaveno na: "g"%s",inputtext);
			SM(playerid,str);
			UpdateHouse(id);
		}
		return 1;
	}
	if(dialogid == UNNAMED+135)
	{
	    if(response)
	    {
	        new id = GetPVarInt(playerid,"HouseID");
			if(!IsPlayerHouseOwner(playerid,id)) return SM(playerid,"Nejste vlastník tohoto domu");
			if(House[id][hInt] == listitem) return SM(playerid,"Tento interiér nyní pouíváte");
			SetPlayerInterior(playerid,HouseInteriors[listitem][HouseIntID]);
			SetPlayerPos(playerid,HouseInteriors[listitem][HouseInteriorInX],HouseInteriors[listitem][HouseInteriorInY],HouseInteriors[listitem][HouseInteriorInZ]);
			format(str,sizeof(str),"Opravdu si pøejete koupit "r"%s "w"interiér za {0088FF}%d bodù"w"?",HouseInteriors[listitem][HouseInteriorName],HouseInteriors[listitem][HouseInteriorPriceB]);
			SPD(playerid,UNNAMED+136,DIALOG_STYLE_MSGBOX,"Dùm",str,"Ano","Ne");
			SetPVarInt(playerid,"HouseInterior",listitem);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+136)
	{
        new id = GetPVarInt(playerid,"HouseID"),intid = GetPVarInt(playerid,"HouseInterior");
		if(!IsPlayerHouseOwner(playerid,id)) return SM(playerid,"Nejste vlastník tohoto domu");
	    if(response)
	    {
			if(Points[playerid] < HouseInteriors[intid][HouseInteriorPriceB]) return SM(playerid,"Nemáte dostatek bodù");
	        GivePoints(playerid,-HouseInteriors[intid][HouseInteriorPriceB]);
			House[id][hInt] = intid;
			format(str,sizeof(str),""r"%s "w"interiér úspìnì zakoupen za {0088FF}%d bodù",HouseInteriors[intid][HouseInteriorName],HouseInteriors[intid][HouseInteriorPriceB]);
			SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Dùm",str,"Zavøít","");
			UpdateHouse(id);
			new query[300],rows,fields,Cache:cache;
			mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Houses` WHERE `ID`='%d'",House[id][hID]);
			cache = mysql_query(mysql,query);
			cache_get_data(rows,fields,mysql);
			if(rows)
			{
			    mysql_format(mysql,query,sizeof(query),"UPDATE `Houses` SET `Interior`='%d' WHERE `ID`='%d'",intid,House[id][hID]);
			    mysql_query(mysql,query,false);
			}
			cache_delete(cache,mysql);
	    }
	    else
	    {
	        SetPlayerInterior(playerid,HouseInteriors[House[id][hInt]][HouseIntID]);
	        SetPlayerPos(playerid,HouseInteriors[House[id][hInt]][HouseInteriorInX],HouseInteriors[House[id][hInt]][HouseInteriorInY],HouseInteriors[House[id][hInt]][HouseInteriorInZ]);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+137)
	{
	    if(response)
	    {
			new id = GetPVarInt(playerid,"HouseID");
			if(!IsPlayerHouseOwner(playerid,id)) return SM(playerid,"Nejste vlastník tohoto domu");
	        if(!strlen(inputtext)) return SPD(playerid,UNNAMED+137,DIALOG_STYLE_INPUT,"Dùm","Zadejte nový název domu","Zmìnit","Zavøít");
			if(strlen(inputtext) > 30) return SPD(playerid,UNNAMED+137,DIALOG_STYLE_INPUT,"Dùm","Zadejte nový název domu\n\n"r"Pøíli dlouhý název","Zmìnit","Zavøít");
			format(str,sizeof(str),"Název domu aktualizován na: "g"%s",inputtext);
			SM(playerid,str);
			format(House[id][hName],30,inputtext);
			UpdateHouse(id);
			new query[300],rows,fields,Cache:cache;
			mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Houses` WHERE `ID` = '%d'",House[id][hID]);
			cache = mysql_query(mysql,query);
			cache_get_data(rows,fields,mysql);
			if(rows)
			{
				mysql_format(mysql,query,sizeof(query),"UPDATE `Houses` SET `Name`='%e' WHERE `ID`='%d'",inputtext,House[id][hID]);
				mysql_query(mysql,query,false);
			}
			cache_delete(cache,mysql);
		}
		return 1;
	}
/*	if(dialogid == UNNAMED+138)
	{
		format(str,sizeof(str),"Opite prosím bezpeènostní kód:\n\n"g"%s",TextKOpsani);
	    if(!strlen(inputtext)) return SPD(playerid,UNNAMED+138,DIALOG_STYLE_INPUT,"Opi text",str,"Zadat","");
		format(str,sizeof(str),"Opite prosím bezpeènostní kód:\n\n"g"%s\n\n"r"patnì opsaný kód",TextKOpsani);
	    if(strlen(inputtext) > sizeof(TextKOpsani)) return SPD(playerid,UNNAMED+138,DIALOG_STYLE_INPUT,"Opi text",str,"Zadat","");
		format(str,sizeof(str),"Opite prosím bezpeènostní kód:\n\n"g"%s\n\n"r"patnì opsaný kód",TextKOpsani);
	    if(strcmp(inputtext,TextKOpsani,false) != 0) return SPD(playerid,UNNAMED+138,DIALOG_STYLE_INPUT,"Opi text",str,"Zadat","");
		CreateInfoBox(playerid,"Kod prijat",5);
		return 1;
	}
*/
	if(dialogid == UNNAMED+139)
	{
	    if(response)
	    {
	        ShowAdminInfoByIP(playerid,inputtext);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+140)
	{
	    if(response)
	    {
        	new rows,fields,Cache:cache;
			cache = mysql_query(mysql,"SELECT * FROM `Positions`");
			cache_get_data(rows,fields,mysql);
			if(rows)
			{
				new Float:X,Float:Y,Float:Z,VW,INT;
				X = cache_get_field_content_float(listitem,"X",mysql);
				Y = cache_get_field_content_float(listitem,"Y",mysql);
				Z = cache_get_field_content_float(listitem,"Z",mysql);
				VW = cache_get_field_content_int(listitem,"VW",mysql);
				INT = cache_get_field_content_int(listitem,"INTERIOR",mysql);
				SetPlayerVirtualWorld(playerid,VW);
				SetPlayerInterior(playerid,INT);
				if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			    {
			        SetVehiclePos(GetPlayerVehicleID(playerid),X,Y,Z);
			        SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),VW);
					LinkVehicleToInterior(GetPlayerVehicleID(playerid),INT);
				}
				else
				{
				    SetPlayerPos(playerid,X,Y,Z);
				}
				CreateInfoBox(playerid,"Pozice nactena",3);
			}
			else
			{
			    SM(playerid,"Není k dispozici ádná pozice");
			}
			cache_delete(cache,mysql);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+141)
	{
	    if(response)
	    {
	        new Float:X,Float:Y,Float:Z;
	        GetPlayerPos(playerid,X,Y,Z);
	        CreateInteriorEnter(listitem,X,Y,Z);
	        format(str,sizeof(str),"Interiér {0088FF}%s "w"úspìnì vytvoøen",Interiors[listitem][iName]);
	        SM(playerid,str);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+142)
	{
	    if(response)
	    {
	        new Float:X,Float:Y,Float:Z;
	        GetPlayerPos(playerid,X,Y,Z);
	        CreateHouse(X,Y,Z,listitem,GetPVarInt(playerid,"HouseHours"));
	        format(str,sizeof(str),"Dùm {0088FF}%s "w"interiérem úspìnì vytvoøen",HouseInteriors[listitem][HouseInteriorName]);
	        SM(playerid,str);
            format(str,sizeof(str),"Tento dùm bude moné koupit od "g"%d hodin",GetPVarInt(playerid,"HouseHours"));
            SM(playerid,str);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+143)
	{
	    if(response)
	    {
			switch(listitem)
			{
			    case 0:
			    {
			        if(Sex[playerid] == 2)
			        {
			            Sex[playerid] = 1;
			        }
			        else
			        {
			            Sex[playerid] = 2;
			        }
			        format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
			        DOF2_SetInt(dfile,"Sex",Sex[playerid]);
			        DOF2_SaveFile();
			    }
			    case 1:
			    {
			        SPD(playerid,UNNAMED+201,DIALOG_STYLE_INPUT,"E-Mail","Zadejte Vá E-Mail (slouí pro obnovu hesla)","Zadat","Zavøít");
			    }
			    case 2:
			    {
			        HideTextDraws(playerid);
			    }
			    case 3:
			    {
			        if(BlockedStream[playerid] == 0)
			        {
			            BlockedStream[playerid] = 1;
			        }
			        else
			        {
			            BlockedStream[playerid] = 0;
			        }
			        format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
					DOF2_SetInt(dfile,"Stream",BlockedStream[playerid]);
				    DOF2_SaveFile();
			    }
			    case 4:
			    {
			        if(BlockedPMsAll[playerid] == false)
			        {
			            BlockedPMsAll[playerid] = true;
			        }
			        else
			        {
			            BlockedPMsAll[playerid] = false;
			        }
			    }
			    case 5:
				{
			        if(PMSounds[playerid] == false)
			        {
			            PMSounds[playerid] = true;
			        }
			        else
			        {
			            PMSounds[playerid] = false;
			        }
			        format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
					DOF2_SetInt(dfile,"PMSounds",PMSounds[playerid]);
				    DOF2_SaveFile();
				}
			    case 6:
				{
			        if(RealnyTime[playerid] == false)
			        {
						pHours[playerid] = -1;
						pMinutes[playerid] = -1;
			            RealnyTime[playerid] = true;
						new hour,minute;
						gettime(hour,minute);
						format(str,sizeof(str),"~g~~h~%02d~w~:~g~~h~%02d",hour,minute);
			            PlayerTextDrawSetString(playerid,TDTime[playerid],str);
			            SetPlayerTime(playerid,hour,minute);
			        }
			        else
			        {
			            RealnyTime[playerid] = false;
						format(str,sizeof(str),"~g~~h~%02d~w~:~g~~h~%02d",hodiny,minuty);
			            PlayerTextDrawSetString(playerid,TDTime[playerid],str);
			            SetPlayerTime(playerid,hodiny,minuty);
			        }
			        format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
					DOF2_SetBool(dfile,"RealTime",RealnyTime[playerid]);
				    DOF2_SaveFile();
				}
			    case 7:
				{
			        if(AutoBank[playerid] == false)
			        {
			            AutoBank[playerid] = true;
			        }
			        else
			        {
			            AutoBank[playerid] = false;
			        }
			        format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
					DOF2_SetBool(dfile,"AutoBank",AutoBank[playerid]);
				    DOF2_SaveFile();
				}
			    case 8:
				{
			        if(UseLastPos[playerid] == false)
			        {
			            UseLastPos[playerid] = true;
			        }
			        else
			        {
			            UseLastPos[playerid] = false;
			        }
			        format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
					DOF2_SetBool(dfile,"LastPos",UseLastPos[playerid]);
				    DOF2_SaveFile();
				}
			    case 9:
				{
			        if(BlockedVgoto[playerid] == false)
			        {
			            BlockedVgoto[playerid] = true;
			        }
			        else
			        {
			            BlockedVgoto[playerid] = false;
			        }
				}
			    case 10:
				{
			        if(BlockedGangInvite[playerid] == false)
			        {
			            BlockedGangInvite[playerid] = true;
			        }
			        else
			        {
			            BlockedGangInvite[playerid] = false;
			        }
				}
			    case 11:
				{
					if(GetPlayerSpawn(playerid) == SPAWN_TYPE_NONE)
					{
						SetPlayerSpawn(playerid,SPAWN_TYPE_HOUSE);
					}
					else if(GetPlayerSpawn(playerid) == SPAWN_TYPE_HOUSE)
					{
						SetPlayerSpawn(playerid,SPAWN_TYPE_GANG);
					}
					else if(GetPlayerSpawn(playerid) == SPAWN_TYPE_GANG)
					{
						SetPlayerSpawn(playerid,SPAWN_TYPE_NONE);
					}
			        format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
					DOF2_SetInt(dfile,"SpawnType",GetPlayerSpawn(playerid));
				    DOF2_SaveFile();
				}
			    case 12:
				{
			        if(bOprava[playerid] == false)
			        {
			            bOprava[playerid] = true;
			        }
			        else
			        {
			            bOprava[playerid] = false;
			        }
			        format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
			        DOF2_SetInt(dfile,"bOprava",bOprava[playerid]);
			        DOF2_SaveFile();
				}
			    case 13:
				{
			        if(bFlip[playerid] == false)
			        {
			            bFlip[playerid] = true;
			        }
			        else
			        {
			            bFlip[playerid] = false;
			        }
			        format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
			        DOF2_SetInt(dfile,"bFlip",bFlip[playerid]);
			        DOF2_SaveFile();
				}
			    case 14:
				{
			        if(HitSound[playerid] == false)
			        {
			            HitSound[playerid] = true;
			        }
			        else
			        {
			            HitSound[playerid] = false;
			        }
			        format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
			        DOF2_SetInt(dfile,"HitSound",HitSound[playerid]);
			        DOF2_SaveFile();
				}
			    case 15:
				{
					BlockedKostka[playerid] = !BlockedKostka[playerid];
			        format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
			        DOF2_SetInt(dfile,"bKostka",BlockedKostka[playerid]);
			        DOF2_SaveFile();
				}
			}
			ShowPlayerSettings(playerid);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+144)
	{
	    if(response)
	    {
	        if(!strlen(inputtext)) return SPD(playerid,UNNAMED+144,DIALOG_STYLE_INPUT,"Aktivaèní kód","Zadejte aktivaèní kód","Zadat","Zavøít");
	        if(strlen(inputtext) > 50) return SPD(playerid,UNNAMED+144,DIALOG_STYLE_INPUT,"Aktivaèní kód","Zadejte aktivaèní kód\n\n"r"Pøíli dlouhý text","Zadat","Zavøít");
			new query[200],rows,fields,Cache:cache;
			mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Codes` WHERE `CODE`='%e' LIMIT 1",inputtext);
			cache = mysql_query(mysql,query);
			cache_get_data(rows,fields,mysql);
			if(rows)
			{
			    new cNick[24],cVIP,cBody,cXP,cVehicle,cCode[50],DIALOG[500];
			    cache_get_field_content(0,"CODE",cCode,mysql);
			    if(strcmp(inputtext,cCode,false) != 0)
			    {
			        SPD(playerid,UNNAMED+144,DIALOG_STYLE_INPUT,"Aktivaèní kód","Zadejte aktivaèní kód\n\n"r"Tento kód neexistuje","Zadat","Zavøít");
					cache_delete(cache,mysql);
					return 0;
			    }
			    cache_get_field_content(0,"CODE_PICKER",cNick,mysql);
			    cVIP = cache_get_field_content_int(0,"CODE_VIP",mysql);
			    cBody = cache_get_field_content_int(0,"CODE_BODY",mysql);
			    cXP = cache_get_field_content_int(0,"CODE_XP",mysql);
			    cVehicle = cache_get_field_content_int(0,"CODE_VEHICLE",mysql);
			    if(strcmp(cNick,"NULL",false) != 0)
				{
					SPD(playerid,UNNAMED+144,DIALOG_STYLE_INPUT,"Aktivaèní kód","Zadejte aktivaèní kód\n\n"r"Tento kód u nìkdo pouil","Zadat","Zavøít");
					cache_delete(cache,mysql);
					return 0;
				}
				mysql_format(mysql,query,sizeof(query),"UPDATE `Codes` SET `CODE_PICKER`='%e', `CODE_TIME_PICK`=%d WHERE `CODE`='%e' LIMIT 1",Jmeno(playerid),gettime(),inputtext);
				mysql_query(mysql,query,false);
				format(str,sizeof(str),"Aktivaèní kód "r"%s "w"úspenì aktivován\nZískáváte tyto vìci:\n\n",inputtext);
				strcat(DIALOG,str);
				if(cBody > 0)
				{
				    GivePoints(playerid,cBody);
					format(str,sizeof(str),""dc"Body: "g"%d\n",cBody);
					strcat(DIALOG,str);
				}
				if(cXP > 0)
				{
					GiveXP(playerid,cXP,"aktivacni kod",false);
					format(str,sizeof(str),""dc"XP: "g"%d\n",cXP);
					strcat(DIALOG,str);
				}
				if(cVIP > 0)
				{
				    SetPlayerVIP(playerid,cVIP);
					format(str,sizeof(str),""dc"VIP Úèet na: "g"%d dní\n",cVIP);
					strcat(DIALOG,str);
				}
				if(cVehicle > 0)
				{
					AddVehicleToGarage(playerid,cVehicle);
					format(str,sizeof(str),""dc"Vozidlo: "g"%s",GetVehicleNameByCarID(cVehicle));
					strcat(DIALOG,str);
				}
				SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Aktivaèní kód",DIALOG,"Zavøít","");
				format(str,sizeof(str),"%s "w"%s {03C900}pouil aktivaèní kód.",Players(playerid),Jmeno(playerid));
				SCMTA(0x03C900FF,str);
			}
			else
			{
			    SPD(playerid,UNNAMED+144,DIALOG_STYLE_INPUT,"Aktivaèní kód","Zadejte aktivaèní kód\n\n"r"Tento kód neexistuje","Zadat","Zavøít");
			}
			cache_delete(cache,mysql);
		}
	    return 1;
	}
	if(dialogid == UNNAMED+145)
	{
	    if(response)
	    {
			if(listitem == 0)
			{
				new query[200],rows,fields,Cache:cache,DIALOG[5000],page = GetPVarInt(playerid,"Pages");
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Codes` ORDER BY `CODE_TIME` DESC LIMIT %d,30",30*page);
				cache = mysql_query(mysql,query);
				cache_get_data(rows,fields,mysql);
				strcat(DIALOG,""dc"Kód\tAutor\tObsah\tPouil\n");
				if(rows)
				{
					strcat(DIALOG,""r"Dalí stránka\n \n");
				    for(new i; i < rows; i ++)
				    {
					    new cNick[24],cAutor[24],cVIP,cBody,cXP,cVehicle,cCode[50];
					    cache_get_field_content(i,"CODE",cCode,mysql);
					    cache_get_field_content(i,"CODE_PICKER",cNick,mysql);
					    cache_get_field_content(i,"CODE_AUTHOR",cAutor,mysql);
					    cVIP = cache_get_field_content_int(i,"CODE_VIP",mysql);
					    cBody = cache_get_field_content_int(i,"CODE_BODY",mysql);
					    cXP = cache_get_field_content_int(i,"CODE_XP",mysql);
					    cVehicle = cache_get_field_content_int(i,"CODE_VEHICLE",mysql);
					    new obsah[100];
					    if(cBody > 0)
					    {
					        format(str,sizeof(str),"Body: %d ",cBody);
					        strcat(obsah,str);
					    }
					    if(cVIP > 0)
					    {
					        format(str,sizeof(str),"VIP: %d ",cVIP);
					        strcat(obsah,str);
					    }
					    if(cXP > 0)
					    {
					        format(str,sizeof(str),"XP: %d ",cXP);
					        strcat(obsah,str);
					    }
					    if(cVehicle > 0)
					    {
					        format(str,sizeof(str),"Vozidlo: %s ",GetVehicleNameByCarID(cVehicle));
					        strcat(obsah,str);
					    }
					    if(strcmp(cNick,"NULL",false) == 0)
					    {
					        format(cNick,24,"Dosud nepouito");
					    }
					    format(str,sizeof(str),"%d. {0088FF}%s\t%s\t%s\t%s\n",((page*30)+i)+1,cCode,cAutor,obsah,cNick);
					    strcat(DIALOG,str);
					    SetPVarInt(playerid,"Pages",page+1);
				    }
					SPD(playerid,UNNAMED+145,DIALOG_STYLE_TABLIST_HEADERS,"Aktivaèní kódy",DIALOG,"Vybrat","Zavøít");
				}
				else
				{
				    SM(playerid,"Dalí stránka není k dispozici");
				}
				cache_delete(cache,mysql);
			}
			if(listitem > 1)
			{
			    new code[50],query[200],rows,fields,Cache:cache,page = GetPVarInt(playerid,"Pages")-1;
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Codes` ORDER BY `CODE_TIME` DESC LIMIT %d,%d",30*page,(page+1)*30);
				cache = mysql_query(mysql,query);
				cache_get_data(rows,fields,mysql);
				if(rows)
				{
					cache_get_field_content(listitem-2,"CODE",code,mysql);
				    format(str,sizeof(str),"Aktivaèní kód: {0088FF}%s",code);
				    SPD(playerid,0,DIALOG_STYLE_INPUT,"Aktivaèní kód",str,"Zavøít","");
				}
				cache_delete(cache,mysql);
			}
		}
	}
	if(dialogid == UNNAMED+147)
	{
	    if(response)
	    {
			new pages = GetPVarInt(playerid,"Pages");
			if(GetClickText(inputtext,"Dalí stránka"))
			{
				ShowMusicList(playerid,pages+1);
				SetPVarInt(playerid,"Pages",pages+1);
			}
			else if(GetClickText(inputtext,"Auto Play"))
			{
			    if(AutoPlay[playerid] == 0)
			    {
			        AutoPlay[playerid] = 1;
					if(MusicLenght[playerid] < 1)
					{
						new query[100],Cache:cache;
						mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Music` WHERE `MUSIC_HIDE` IS NULL ORDER BY `MUSIC_PINNED` DESC, `MUSIC_PLAYED` DESC, `MUSIC_TIME` DESC");
						cache = mysql_query(mysql,query);
						PlaySong(playerid,random(cache_get_row_count(mysql)));
						cache_delete(cache,mysql);
					}
			    }
			    else if(AutoPlay[playerid] == 1)
			    {
			        AutoPlay[playerid] = 0;
			    }
			    SetPVarInt(playerid,"Pages",0);
			    ShowMusicList(playerid,0);
			}
			else
			{
				new musicid = ((pages)*20)+listitem;
				PlaySong(playerid,musicid);
			}
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+148)
	{
	    if(response)
	    {
            SaveBeforeEventData(playerid);
			RandomDMSpawn(playerid,listitem);
			InDM[playerid] = listitem;
			DM[listitem][DMPlayers] ++;
			PlayerTextDrawShow(playerid,Textdraw33[playerid]);
			PlayerTextDrawShow(playerid,Textdraw34[playerid]);
			PlayerTextDrawShow(playerid,Textdraw37[playerid]);
			format(str,sizeof(str),"%s "w"%s {E43F4D}se pøipojil do DeathMatche "w"%s {E43F4D}( %d %s ) ( /dm )",Players(playerid),Jmeno(playerid),DM[listitem][DMName],DM[listitem][DMPlayers],PluralWord(DM[listitem][DMPlayers],"hráè","hráèi","hráèù"));
			SCMTA(0xE43F4DFF,str);
			SCM(playerid,0xE43F4DFF,"Pro odchod z DeathMatche pouijte pøíkaz "w"/leave");
		}
	    return 1;
	}
	if(dialogid == UNNAMED+149)
	{
	    if(response)
	    {
			new nick[24];
			GetPVarString(playerid,"LogNick",nick,sizeof(nick));
	        ShowPMLog(playerid,nick,GetPlayerPage(playerid)+1);
	    }
	}
	if(dialogid == UNNAMED+150)
	{
	    if(response)
	    {
	        if(XPBoostPercent[playerid] > 0)
				SM(playerid,"U máte zakoupený XP boost, xp boost bude nahrazen novì zakoupeným");
	        SetPVarInt(playerid,"XPBoostSelected",listitem);
	        format(str,sizeof(str),"Zadejete poèet hodin, na který si chcete koupit "g"x%0.2f "w"XP Boost\nCena jedné hodiny je: "c"%d bodù",(float(XPBoosts[listitem][0])/100)+1,XPBoosts[listitem][1]);
	        SPD(playerid,UNNAMED+151,DIALOG_STYLE_INPUT,"XP Boost",str,"Koupit","Zavøít");
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+151)
	{
	    if(response)
	    {
	        new xpboost = GetPVarInt(playerid,"XPBoostSelected"),pocet = strval(inputtext),price = XPBoosts[xpboost][1]*pocet;
	        format(str,sizeof(str),"Zadejete poèet hodin, na který si chcete koupit "g"x%0.2f "w"XP Boost\nCena jedné hodiny je: "c"%d bodù",(float(XPBoosts[xpboost][0])/100)+1,XPBoosts[xpboost][1]);
	        if(pocet <= 0) return SPD(playerid,UNNAMED+151,DIALOG_STYLE_INPUT,"XP Boost",str,"Koupit","Zavøít");
	        format(str,sizeof(str),"Zadejete poèet hodin, na který si chcete koupit "g"x%0.2f "w"XP Boost\nCena jedné hodiny je: "c"%d bodù",(float(XPBoosts[xpboost][0])/100)+1,XPBoosts[xpboost][1]);
	        if(pocet > 4) return SPD(playerid,UNNAMED+151,DIALOG_STYLE_INPUT,"XP Boost",str,"Koupit","Zavøít");
	        format(str,sizeof(str),"Zadejete poèet hodin, na který si chcete koupit "g"x%0.2f "w"XP Boost\nCena jedné hodiny je: "c"%d bodù",(float(XPBoosts[xpboost][0])/100)+1,XPBoosts[xpboost][1]);
	        if(price <= 0) return SPD(playerid,UNNAMED+151,DIALOG_STYLE_INPUT,"XP Boost",str,"Koupit","Zavøít");
	        format(str,sizeof(str),"Zadejete poèet hodin, na který si chcete koupit "g"x%0.2f "w"XP Boost\nCena jedné hodiny je: "c"%d bodù",(float(XPBoosts[xpboost][0])/100)+1,XPBoosts[xpboost][1]);
	        if(price > Points[playerid]) return SPD(playerid,UNNAMED+151,DIALOG_STYLE_INPUT,"XP Boost",str,"Koupit","Zavøít");
	        SetPVarInt(playerid,"XPBoostAmount",pocet);
	        format(str,sizeof(str),"Opravdu si pøejete koupit "g"x%0.2f "w"XP Boost za "c"%d %s"w" na "y"%d %s"w"?",(float(XPBoosts[xpboost][0])/100)+1,price,PluralWord(price,"bod","body","bodù"),pocet,PluralWord(pocet,"hodinu","hodiny","hodin"));
			SPD(playerid,UNNAMED+152,DIALOG_STYLE_MSGBOX,"XP Boost",str,"Ano","Ne");
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+152)
	{
	    if(response)
	    {
			new xpboost = GetPVarInt(playerid,"XPBoostSelected"),pocet = GetPVarInt(playerid,"XPBoostAmount"),price = pocet * XPBoosts[xpboost][1];
			if(price > Points[playerid]) return SM(playerid,"Nemáte dostatek bodù");
			GivePoints(playerid,-price);
			XPBoostPercent[playerid] = XPBoosts[xpboost][0];
			XPBoostSeconds[playerid] = pocet*60*60;
			format(str,sizeof(str),""g"x%0.2f "w"XP Boost úspìnì zakoupen na "g"%d %s "w"za "c"%d %s\n\n"w"XP Boost vám skonèí po %d %s %s na serveru",(float(XPBoosts[xpboost][0])/100)+1,pocet,PluralWord(pocet,"hodinu","hodiny","hodin"),price,PluralWord(price,"bod","body","bodù"),pocet,PluralWord(pocet,"odehranné","odehranných","odehranných"),PluralWord(pocet,"hodinì","hodinách","hodinách"));
			SPD(playerid,0,DIALOG_STYLE_MSGBOX,"XP Boost",str,"Zavøít","");
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+153)
	{
	    if(response)
	    {
	        new nick[24];
	        GetPVarString(playerid,"LogNick",nick,sizeof(nick));
	        ShowLoginLog(playerid,nick,GetPVarInt(playerid,"Pages")+1);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+154)
	{
		if(response)
		{
			if(Admin[playerid] > 0) return SM(playerid,"U jste pøihláen");
		    if(!strlen(inputtext)) return SPD(playerid,UNNAMED+154,DIALOG_STYLE_PASSWORD,"Heslo","Zadejte heslo","Pøihlásit","Zavøít");
			new query[200];
			mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Users` WHERE `IP`='%e' AND",GetIP(playerid));
			strcat(query," `Hodnost` LIKE '%a%' LIMIT 1");
			new Cache:cache = mysql_query(mysql,query);
			new Nick[24],bool:logged,soubor[50],rows = cache_get_row_count(mysql);
			if(rows == 0) return SM(playerid,"Nemáte právo pouívat Admin Level");
			cache_get_field_content(0,"Nick",Nick,mysql);
			format(soubor,sizeof(soubor),USER_FILES,Nick);
			if(fexist(soubor))
			{
				if(!IsPasswordBad(Nick,inputtext))
				{
					logged = true;
					format(soubor,sizeof(soubor),USER_FILES,Nick);
					if(fexist(soubor))
					{
					    Admin[playerid] = DOF2_GetInt(soubor,"Admin level");
					    AdminHide[playerid] = true;
					    SetPVarString(playerid,"AdminName",Nick);
					    format(str,sizeof(str),"Admin Level úètu "g"%s "w"úspìnì naèten",Nick);
					    SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Admin úèet",str,"Zavøít","");
					}
					else
					{
  						SPD(playerid,UNNAMED+154,DIALOG_STYLE_PASSWORD,"Heslo","Zadejte heslo\n\n"r"Chyba kontaktujte tvùrce scriptu","Pøihlásit","Zavøít");
					}
				}
			}
			if(logged == false) return SPD(playerid,UNNAMED+154,DIALOG_STYLE_PASSWORD,"Heslo","Zadejte heslo\n\n"r"Chybnì zadané heslo","Pøihlásit","Zavøít");
			cache_delete(cache,mysql);
 		}
	}
	if(dialogid == UNNAMED+155)
	{
	    if(response)
	    {
	        new page = GetPVarInt(playerid,"Pages");
	        ShowNews(playerid,page+1);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+156)
	{
	    if(response)
	    {
	        if(listitem < 19)
	        {
				new query[200],rows,Cache:cache;
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Notifications` WHERE `Nick`='%e' ORDER BY `Date` DESC LIMIT %d,20",Jmeno(playerid),GetPlayerPage(playerid)*19);
				cache = mysql_query(mysql,query);
				rows = cache_get_row_count(mysql);
				if(rows)
				{
				    new DIALOG[1000],text[500],nadpis[50],date = cache_get_field_content_int(listitem,"Date",mysql);
				    cache_get_field_content(listitem,"Text",text,mysql);
				    cache_get_field_content(listitem,"Nadpis",nadpis,mysql);
				    format(str,sizeof(str),""g"%s\n"dc"",nadpis);
				    strcat(DIALOG,str);
				    strcat(DIALOG,text);
				    if(cache_get_field_content_int(listitem,"Readed",mysql) == 0)
				    {
				        date = gettime();
				        mysql_format(mysql,query,sizeof(query),"UPDATE `Notifications` SET `Readed`=%d WHERE `ID`=%d",date,cache_get_field_content_int(listitem,"ID",mysql));
				        mysql_query(mysql,query,false);
				    }
				    format(str,sizeof(str),"\n\n"dc"Zobrazeno: %s",DATE(date));
				    strcat(DIALOG,str);
				    format(str,sizeof(str),"Oznámení: "g"%s",nadpis);
				    SPD(playerid,UNNAMED+157,DIALOG_STYLE_MSGBOX,str,DIALOG,"Zpìt","Zavøít");
				}
				cache_delete(cache,mysql);
	        }
	        else
	        {
	            ShowNotifications(playerid,GetPlayerPage(playerid)+1);
	        }
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+157)
	{
	    if(response)
	    {
	        ShowNotifications(playerid,GetPlayerPage(playerid));
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+158)
	{
	    if(response)
	    {
            new pid = GetPVarInt(playerid,"PropertyID"),cena;
            if(sscanf(inputtext,"i",cena)) return SPD(playerid,UNNAMED+158,DIALOG_STYLE_MSGBOX,Property[pid][PropertyName],"Zadejte cenu, za kterou chcete nemovitost prodat","Potvrdit","Zavøít");
            if(cena < 1 || cena > 999999999) return SPD(playerid,UNNAMED+158,DIALOG_STYLE_MSGBOX,Property[pid][PropertyName],"Zadejte cenu, za kterou chcete nemovitost prodat\n\n"r"Chybnì zadaná èástka ( 1 - 999.999.999$ )","Potvrdit","Zavøít");
			Property[pid][PropertyOnSale] = cena;
			format(dfile,sizeof(dfile),"UnNamed/Properties/Property%d.txt",pid);
			DOF2_SetInt(dfile,"OnSale",Property[pid][PropertyOnSale]);
			DOF2_SaveFile();
			format(str,sizeof(str),"Nemovitost {0077FF}%s "w"vystavena na prodej za: "g"%s$",Property[pid][PropertyName],Split(Property[pid][PropertyOnSale]));
			SM(playerid,str);
			UpdatePropertyText(pid);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+159)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
				ShowPlayerBank(playerid);
	        }
	        else
	        {
	            for(new i; i < listitem; i ++)
	            {
	                if(Trezor[playerid][i] == 0)
	                {
	                    listitem++;
	                }
	            }
	            format(str,sizeof(str),"Zadejte èástku, kterou si pøejete "g"vybrat "w"ze záloního trezoru "g"è.%d"w"\nK dispozici máte: "g"%s$",listitem,Split(Trezor[playerid][listitem-1]));
	            SPD(playerid,UNNAMED+160,DIALOG_STYLE_INPUT,"Záloní Trezor",str,"Vybrat","Zavøít");
	            SetPVarInt(playerid,"ZalozniTrezor",listitem-1);
	        }
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+160)
	{
	    if(response)
	    {
	        new id = GetPVarInt(playerid,"ZalozniTrezor"),cash,trezor[11];
			format(str,sizeof(str),"Zadejte èástku, kterou si pøejete "g"vybrat "w"ze záloního trezoru "g"è.%d"w"\nk dispozici máte: "g"%s$",id+1,Split(Trezor[playerid][id]));
	        if(sscanf(inputtext,"i",cash)) return SPD(playerid,UNNAMED+160,DIALOG_STYLE_INPUT,"Záloní Trezor",str,"Vybrat","Zavøít");
			format(str,sizeof(str),"Zadejte èástku, kterou si pøejete "g"vybrat "w"ze záloního trezoru "g"è.%d\n\n"r"Chybnì zadaná èástka, k dispozici máte: "g"%s$",id+1,Split(Trezor[playerid][id]));
			if(cash < 1 || cash > Trezor[playerid][id]) return SPD(playerid,UNNAMED+160,DIALOG_STYLE_INPUT,"Záloní Trezor",str,"Vybrat","Zavøít");
			format(str,sizeof(str),"Zadejte èástku, kterou si pøejete "g"vybrat "w"ze záloního trezoru "g"è.%d\nk dispozici máte: "g"%s$\n\n"r"Nesmíte mít u sebe více jak 2.147.483.647$$",id+1,Split(Trezor[playerid][id]));
			if(GetMoney(playerid) + cash < 0) return SPD(playerid,UNNAMED+160,DIALOG_STYLE_INPUT,"Záloní Trezor",str,"Vybrat","Zavøít");
			GiveMoney(playerid,cash,"Výbìr ze záloního trezoru");
			Trezor[playerid][id] -= cash;
			format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
			format(trezor,sizeof(trezor),"Trezor%d",id);
			DOF2_SetInt(dfile,trezor,Trezor[playerid][id]);
			DOF2_SaveFile();
			format(str,sizeof(str),"Ze záloního trezoru ~y~è.%d ~w~jste si vybral ~g~%s$",id+1,Split(cash));
			CreateInfoBox(playerid,str,5);
		    format(str,sizeof(str),"%s %s si vybral z trezoru %s$ Zùstatek: %s$",Players(playerid),Jmeno(playerid),Split(cash),Split(Trezor[playerid][id]));
			print(str);
			printEx(str);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+161)
	{
	    if(response)
	    {
            new id = GetPVarInt(playerid,"HouseID"),cena;
            if(sscanf(inputtext,"i",cena)) return SPD(playerid,UNNAMED+161,DIALOG_STYLE_INPUT,"Dùm","Zadejte cenu, za kterou chcete dùm prodat","Potvrdit","Zavøít");
            if(cena < 1 || cena > 999999999) return SPD(playerid,UNNAMED+161,DIALOG_STYLE_INPUT,"Dùm","Zadejte cenu, za kterou dùm nemovitost prodat\n\n"r"Chybnì zadaná èástka ( 1 - 999.999.999$ )","Potvrdit","Zavøít");
			House[id][hPrice] = cena;
			format(str,sizeof(str),"Dùm {0077FF}%s "w"vystaven na prodej za: "g"%s$",House[id][hName],Split(cena));
			SM(playerid,str);
			new query[100],rows,fields,Cache:cache;
			mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Houses` WHERE `ID`='%d'",House[id][hID]);
			cache = mysql_query(mysql,query);
			cache_get_data(rows,fields,mysql);
			if(rows)
			{
			    mysql_format(mysql,query,sizeof(query),"UPDATE `Houses` SET `Price`=%d WHERE `ID`='%d'",cena,House[id][hID]);
			    mysql_query(mysql,query,false);
			}
			cache_delete(cache,mysql);
			UpdateHouse(id);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+162)
	{
	    if(response)
	    {
			new slot = GetPVarInt(playerid,"GarageSlotID");
			if(Points[playerid] < vArmors[listitem][1]) return SM(playerid,"Nemáte dostatek bodù");
			if(ParkInfo[playerid][slot][pPancir] > 1000) return SM(playerid,"Vozidlo u má na sobì pancíø");
			GivePoints(playerid,-vArmors[listitem][1]);
			RepairVehicle(SavedCar[playerid][slot]);
			SetVehicleHealth(SavedCar[playerid][slot],vArmors[listitem][2]);
			ParkInfo[playerid][slot][pPancir] = vArmors[listitem][2];
			format(str,sizeof(str),""g"%d %% "w"Pancíø úspìnì zakoupena za "c"%d bodù"w", vozidlo vydí "g"%0.1fx "w"déle",vArmors[listitem][0],vArmors[listitem][1],float(vArmors[listitem][2])/1000);
			SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Pancíø",str,"Zavøít","");
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+163)
	{
	    if(response)
	    {
			if(listitem < sizeof(ReportReasons))
			{
			    new query[300],id = GetPVarInt(playerid,"ReportID");
			    if(!IPC(id)) return SM(playerid,"Hráè se odpojil");
			    mysql_format(mysql,query,sizeof(query),"INSERT INTO `Reports` (`Nick`,`Date`,`Duvod`,`Reporter`) VALUES ('%e',%d,'%e','%e')",Jmeno(id),gettime(),ReportReasons[listitem],Jmeno(playerid));
				mysql_query(mysql,query,false);
				new string[350];
				format(string,sizeof(string),""dc"Dìkujeme, e jste nahlásili urálivý obsah a pomáháte nám tak udrovat komunitu "w""SRV_WEB"\n"dc"bezpeènou a pøátelskou. Kupte si lízatko, zaslouíte si ho.\n\n"r"Zneuívání pøíkazu se trestá!");
				SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Report",string,"Zavøít","");
				format(str,sizeof(str),""w"%s {0077FF}%s "w"nahlásil hráèe "r"%s "y"[ /reports ]",Players(playerid),Jmeno(playerid),Jmeno(id));
				SendAdminMessage(str);
			}
			else
			{
			    SPD(playerid,UNNAMED+164,DIALOG_STYLE_INPUT,"Report","Zadejte vlastní dùvod nahláení","Zadat","Zavøít");
			}
		}
	    return 1;
	}
	if(dialogid == UNNAMED+164)
	{
	    if(response)
	    {
	        if(!strlen(inputtext)) return SPD(playerid,UNNAMED+164,DIALOG_STYLE_INPUT,"Report","Zadejte vlastní dùvod nahláení","Zadat","Zavøít");
		    new query[300],id = GetPVarInt(playerid,"ReportID");
		    if(!IPC(id)) return SM(playerid,"Hráè se odpojil");
		    mysql_format(mysql,query,sizeof(query),"INSERT INTO `Reports` (`Nick`,`Date`,`Duvod`,`Reporter`) VALUES ('%e',%d,'%e','%e')",Jmeno(id),gettime(),inputtext,Jmeno(playerid));
			mysql_query(mysql,query,false);
			new string[350];
			format(string,sizeof(string),""dc"Dìkujeme, e jste nahlásili urálivý obsah a pomáháte nám tak udrovat komunitu "w""SRV_WEB"\n"dc"bezpeènou a pøátelskou. Kupte si lízatko, zaslouíte si ho.\n\n"r"Zneuívání pøíkazu se trestá!");
			SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Report",string,"Zavøít","");
			format(str,sizeof(str),""w"%s {0077FF}%s "w"nahlásil hráèe "r"%s "y"[ /reports ]",Players(playerid),Jmeno(playerid),Jmeno(id));
			SendAdminMessage(str);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+165)
	{
	    if(response)
	    {
	        if(listitem < 19)
	        {
				new statuses[][] =
				{
				    "Nevyøeil","Vyøeil","Odloil","Smazal"
				};
				new query[300],Cache:cache;
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Reports` ORDER BY `Date` DESC LIMIT %d,20",GetPlayerPage(playerid)*19);
				cache = mysql_query(mysql,query);
				new nick[30],reporter[30],solved[30],duvod[145],string[300];
				cache_get_field_content(listitem,"Nick",nick);
				cache_get_field_content(listitem,"Reporter",reporter);
				cache_get_field_content(listitem,"Duvod",duvod);
				cache_get_field_content(listitem,"Solved",solved);
				new id = GetPlayerIdFromName(nick),id2 = GetPlayerIdFromName(reporter),id3 = GetPlayerIdFromName(solved);
				if(IPC(id))
				{
				    format(nick,sizeof(nick),"%s (%d)",nick,id);
				}
				if(IPC(id2))
				{
					format(reporter,sizeof(reporter),"%s (%d)",reporter,id2);
				}
				if(IPC(id3))
				{
				    format(solved,sizeof(solved),"%s (%d)",solved,id3);
				}
				SetPVarInt(playerid,"ReportID",cache_get_field_content_int(listitem,"ID",mysql));
				format(string,sizeof(string),""dc"Datum:"y" %s\n"dc"Nahláený: "r"%s\n"dc"Nahlásil: "g"%s\n"dc"%s: "w"%s\n\n{0077FF}%s",DATE(cache_get_field_content_int(listitem,"Date",mysql)),nick,reporter,statuses[cache_get_field_content_int(listitem,"Status",mysql)],solved,duvod);
				SPD(playerid,UNNAMED+166,DIALOG_STYLE_MSGBOX,"Report",string,"Øeit","Zpìt");
				cache_delete(cache,mysql);
			}
	        else
	        {
	            ShowReports(playerid,GetPlayerPage(playerid)+1);
	        }
		}
	    return 1;
	}
	if(dialogid == UNNAMED+166)
	{
	    if(response)
	    {
	        SPD(playerid,UNNAMED+167,DIALOG_STYLE_LIST,"Report",""g"Vyøeit\n"y"Odloit\n"r"Smazat","Vybrat","Zpìt");
	    }
	    else
	    {
			ShowReports(playerid,GetPlayerPage(playerid));
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+167)
	{
	    if(response)
	    {
	        new id = GetPVarInt(playerid,"ReportID"),query[150];
			mysql_format(mysql,query,sizeof(query),"UPDATE `Reports` SET `Status`=%d, `Solved`='%e' WHERE `ID`=%d",listitem+1,Jmeno(playerid),id);
			mysql_query(mysql,query,false);
			ShowReports(playerid,GetPlayerPage(playerid));
	    }
	    else
	    {
			ShowReports(playerid,GetPlayerPage(playerid));
		}
	    return 1;
	}
	if(dialogid == UNNAMED+168)
	{
	    if(response)
	    {
	        if(listitem == sizeof(Events)-1)
	        {
				SPD(playerid,UNNAMED+38,DIALOG_STYLE_INPUT,""y"Název "w"Eventu","Zadejte "y"název eventu","Dalí","Zruit");
	        }
	        else if(listitem == 0)
	        {
	            SPD(playerid,UNNAMED+179,DIALOG_STYLE_INPUT,"{0077FF}Nastavení "w"Eventu","Zadejte {0077FF}poèet pater "w"mezera {0077FF}Strana 'a' "w"(a*a)","Dalí","Zruit");
	        }
	        else if(listitem == 8)
	        {
				if(EventTDMPos[0][0] == 0.0) return SM(playerid,"Nejsou nastaveny pozice pro Team 1 [/setpostdm 1]");
				if(EventTDMPos[1][0] == 0.0) return SM(playerid,"Nejsou nastaveny pozice pro Team 2 [/setpostdm 2]");
    			SPD(playerid,UNNAMED+169,DIALOG_STYLE_INPUT,"{0077FF}Odmìna "w"Eventu","Zadejte {0077FF}výherní èástku "w"mezera {0077FF}body","Zaloit","Zruit");
				SetPVarInt(playerid,"EventType",listitem);
	        }
	        else if(listitem == 9)
	        {
				new used;
				for(new i; i < sizeof(EventDMPos); i ++)
				    if(EventDMPos[i][0] != 0.0)
				        used ++;
				if(used < 5) return SM(playerid,"Nastav minimálnì 5 spawn pozic ( /setposdm )");
				SetPVarInt(playerid,"Page",0);
	            SPD(playerid,UNNAMED+196,DIALOG_STYLE_INPUT,"{0077FF}Nastavení "w"Eventu","Zadejte {0077FF}poèet sekund "w"jak má dlouho event trvat","Dalí","Zruit");
	        }
			else if(listitem == 10)
			{
				new used;
				for(new i; i < sizeof(EventDMPos); i ++)
				    if(EventDMPos[i][0] != 0.0)
				        used ++;
				if(used < 5) return SM(playerid,"Nastav minimálnì 5 spawn pozic ( /setposdm )");
				SetPVarInt(playerid,"EventType",listitem);
    			SPD(playerid,UNNAMED+169,DIALOG_STYLE_INPUT,"{0077FF}Odmìna "w"Eventu","Zadejte {0077FF}výherní èástku "w"mezera {0077FF}body","Zaloit","Zruit");
			}
	        else
			{
				SetPVarInt(playerid,"EventType",listitem);
    			SPD(playerid,UNNAMED+169,DIALOG_STYLE_INPUT,"{0077FF}Odmìna "w"Eventu","Zadejte {0077FF}výherní èástku "w"mezera {0077FF}body","Zaloit","Zruit");
			}
			format(str,sizeof(str),"%s "r"%s"w" zakládá event: "g"%s",Players(playerid),Jmeno(playerid),inputtext);
			SendAdminMessage(str);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+169)
	{
	    if(response)
	    {
	        new id = GetPVarInt(playerid,"EventType"),cash,body;
	        if(sscanf(inputtext,"ii",cash,body)) return SPD(playerid,UNNAMED+169,DIALOG_STYLE_INPUT,"{0077FF}Odmìna "w"Eventu","Zadejte {0077FF}výherní èástku "w"mezera {0077FF}body","Zaloit","Zruit");
			if(cash < 0 || cash > 100000000) return SPD(playerid,UNNAMED+169,DIALOG_STYLE_INPUT,"{0077FF}Odmìna "w"Eventu","Zadejte {0077FF}výherní èástku "w"mezera {0077FF}body\n\n"r"Chybnì zadaná èastka (0 - 100.000.000$)","Zaloit","Zruit");
			if(body < 0 || body > 200) return SPD(playerid,UNNAMED+169,DIALOG_STYLE_INPUT,"{0077FF}Odmìna "w"Eventu","Zadejte {0077FF}výherní èástku "w"mezera {0077FF}body\n\n"r"Chybnì zadané body (0 - 100 bodù)","Zaloit","Zruit");
		   	for(new i; i < sizeof(eObjects); i ++)
		    {
		        if(IsValidDynamicObject(eObjects[i]))
			        DestroyDynamicObject(eObjects[i]);
		    }
		    for(new i; i < sizeof(ePickups); i ++)
		    {
				DestroyEventPickup(i);
		    }
			for(new i; i < sizeof(eVehicles); i ++)
			{
			    if(eVehicles[i] != 0)
			    {
			        DestroyVehicle(eVehicles[i]);
					eVehicles[i] = 0;
			    }
			}
			if(EventWorld == 0)
			{
				if(GetPlayerVirtualWorld(playerid) == 0)
					EventWorld = 1;
				else
					EventWorld = GetPlayerVirtualWorld(playerid);
			}
		    EventState = 0;
		    interior = 0;
            if(id == 0)
            {
	            EventText(Events[id],"Spadnout jako posledni","/port",Jmeno(playerid),cash,body);
				CreateFalloutObjects(eventpatra,eventobjects);
			    new Float:X,Float:Y,Float:Z,rand = random(eventobjects*eventobjects);
			    GetObjectPos(Fallout[rand][eventpatra-1][FObject],X,Y,Z);
			    SetPlayerPos(playerid,X,Y,Z+1);
			    ResetPlayerWeaponsEx(playerid);
				SetPlayerVirtualWorld(playerid,EventWorld);
				SetPlayerInterior(playerid,0);
				SetPlayerSpecialAction(playerid,2);
			    RunEvent = 5;
			    portid = 5;
            }
			else if(id == 1)
			{
	            EventText(Events[id],"Prezit jako posledni na strese","/port",Jmeno(playerid),cash,body);
			    XX = 2250.0;
			    YY = 2188.0;
			    ZZ = 103.8;
			    ecarid = 411;
			    RunEvent = 3;
			    portid = 3;
			    SetPlayerPos(playerid,2239.7531,2188.2182,102.8786);
			    ResetPlayerWeaponsEx(playerid);
				SetPlayerVirtualWorld(playerid,EventWorld);
				SetPlayerInterior(playerid,0);
				SetPlayerSpecialAction(playerid,2);
			}
			else if(id == 2)
			{
	            EventText(Events[id],"Prezit jako posledni","/port",Jmeno(playerid),cash,body);
				XX = -186.0;
				YY = 1888.0;
				ZZ = 115.7;
				portid = 1;
				RunEvent = 1;
			    ResetPlayerWeaponsEx(playerid);
				SetPlayerVirtualWorld(playerid,EventWorld);
				SetPlayerInterior(playerid,0);
				CreateCarMenuVehicle(playerid,425);
		 	    SetVehiclePos(CCAR[playerid],XX,YY,ZZ+80);
			}
			else if(id == 3)
			{
	            EventText(Events[id],"Prezit jako posledni","/port",Jmeno(playerid),cash,body);
 				XX = 1668.0;
				YY = -1245.0;
				ZZ = 233.4;
				portid = 1;
				RunEvent = 1;
			    ResetPlayerWeaponsEx(playerid);
				SetPlayerVirtualWorld(playerid,EventWorld);
				SetPlayerInterior(playerid,0);
				CreateCarMenuVehicle(playerid,425);
		 	    SetVehiclePos(CCAR[playerid],XX,YY,ZZ+80);
			}
			else if(id == 4)
			{
	            EventText(Events[id],"Prezit jako posledni","/port",Jmeno(playerid),cash,body);
		 		XX = 1477.0;
				YY = 1706.0;
				ZZ = 10.8;
				portid = 1;
				RunEvent = 1;
			    ResetPlayerWeaponsEx(playerid);
				SetPlayerVirtualWorld(playerid,EventWorld);
				SetPlayerInterior(playerid,0);
				CreateCarMenuVehicle(playerid,519);
		 	    SetVehiclePos(CCAR[playerid],1477.5087,1685.5706,11.7341);
		 	    SetVehicleZAngle(CCAR[playerid],180.0);
			}
			else if(id == 5)
			{
	            EventText(Events[id],"Prezit jako posledni","/port",Jmeno(playerid),cash,body);
		 		XX = 234.3;
				YY = 1067.5;
				ZZ = 1084.2;
				portid = 1;
				interior = 6;
				RunEvent = 1;
			    ResetPlayerWeaponsEx(playerid);
			    GivePlayerWeaponEx(playerid,9,1);
				SetPlayerVirtualWorld(playerid,EventWorld);
				SetPlayerInterior(playerid,interior);
		 	    SetPlayerPos(playerid,XX,YY,ZZ);
			}
			else if(id == 6)
			{
	            EventText(Events[id],"Spadnout jako posledni","/port",Jmeno(playerid),cash,body);
		 	    SetPlayerPos(playerid,2387.9773,1123.2028,33.9812);
			    ResetPlayerWeaponsEx(playerid);
				SetPlayerVirtualWorld(playerid,EventWorld);
				SetPlayerInterior(playerid,0);
				SetPlayerSpecialAction(playerid,2);
			    RunEvent = 6;
			    portid = 6;
			}
			else if(id == 7)
			{
	            EventText(Events[id],"Pøeít jako poslední","/port",Jmeno(playerid),cash,body);
		 		XX = 51.9371;
				YY = -2490.9736;
				ZZ = 510.4141;
		 	    SetPlayerPos(playerid,51.9371,-2490.9736,510.4141);
			    ResetPlayerWeaponsEx(playerid);
				SetPlayerVirtualWorld(playerid,EventWorld);
				SetPlayerInterior(playerid,0);
				SetPlayerSpecialAction(playerid,2);
			    RunEvent = 8;
			    portid = 1;
			    EventState = 0;
				eObjects[0] = CreateDynamicObject(14553,45.845,-2491.00,511.242,11.9100037,0.0000000,270.6756592,1); //object(androm_des_obj) (1)
				eObjects[1] = CreateDynamicObject(14548,47.845,-2490.90,511.492,11.9100037,0.0000000,270.6756592,1); //object(cargo_test) (1)
				eObjects[2] = CreateDynamicObject(19129,71.782,-2491.33,510.09,0,90,0,1);
/*				EventRadiusPos[0] = 167;
				EventRadiusPos[1] = -3000;
				EventRadiusPos[2] = -1823;
				EventRadiusPos[3] = -3000;
*/
				EventRadiusPos[0] = 87;
				EventRadiusPos[1] = -2630;
				EventRadiusPos[2] = -1545;
				EventRadiusPos[3] = -2945;

				EventRadius = 1;
				EventZone[0] = GangZoneCreate(EventRadiusPos[1],EventRadiusPos[3],EventRadiusPos[0],EventRadiusPos[2]);
				for(new i; i < sizeof(PUBGVehicles); i ++)
				{
					if(i < sizeof(eVehicles))
					{
						new vehicles[] = {500,542,470,466,568};
						CreateEventVehicle(vehicles[random(sizeof(vehicles))],PUBGVehicles[i][0],PUBGVehicles[i][1],PUBGVehicles[i][2],PUBGVehicles[i][3],EventWorld);
					}
				}
				for(new i; i < sizeof(PUBGPos); i ++)
				{
				    if(i < sizeof(ePickups))
					{
				        new rand = random(sizeof(RandomPickups));
						CreateEventPickup(RandomPickups[rand][picModel],RandomPickups[rand][picAdd],RandomPickups[rand][picType],PUBGPos[i][0],PUBGPos[i][1],PUBGPos[i][2],EventWorld);
					}
				}
			}
			else if(id == 8)
			{
	            EventText(Events[id],"Poslední ijící hráèi vyhrávaji","/port",Jmeno(playerid),cash,body);
				SetPlayerVirtualWorld(playerid,EventWorld);
			    RunEvent = 9;
			    portid = 8;
				SetPlayerSpecialAction(playerid,2);
			}
			else if(id == 9)
			{
	            EventText(Events[id],"Vyhrává hráè s nejvíce zabití","/port",Jmeno(playerid),cash,body);
			    RunEvent = 11;
			    portid = 10;
				SetPlayerVirtualWorld(playerid,EventWorld);
				new rand = random(sizeof(EventDMPos));
				while(EventDMPos[rand][0] == 0.0)
					rand = random(sizeof(EventDMPos));
			    SetPlayerPos(playerid,EventDMPos[rand][0]-2+random(4),EventDMPos[rand][1]-2+random(4),EventDMPos[rand][2]);
				SetPlayerSpecialAction(playerid,2);
			}
			else if(id == 10)
			{
	            EventText(Events[id],"Po kadém killu zmìna zbranì","/port",Jmeno(playerid),cash,body);
			    RunEvent = 10;
			    portid = 9;
				new rand = random(sizeof(EventDMPos));
				while(EventDMPos[rand][0] == 0.0)
					rand = random(sizeof(EventDMPos));
			    SetPlayerPos(playerid,EventDMPos[rand][0]-2+random(4),EventDMPos[rand][1]-2+random(4),EventDMPos[rand][2]);
				SetPlayerVirtualWorld(playerid,EventWorld);
				SetPlayerSpecialAction(playerid,2);
			}
			else if(id == 11)
			{
	            EventText("Hledání dárkù","Najdete 10 vynocnich darku","/port",Jmeno(playerid),cash,body);
			    RunEvent = 12;
			    
		 		XX = -2301.6287;
				YY = -1656.6460;
				ZZ = 483.5222;
			    portid = 11;
			    EventWorld = CHRISTMAS_VW;
				SetPlayerVirtualWorld(playerid,EventWorld);
				SetPlayerPos(playerid,-2301.6287,-1656.6460,483.5222);
				SetPlayerSpecialAction(playerid,2);
			}
			format(str,sizeof(str),"~w~%s ~g~%s ~w~zalozil event.",TDPlayers(playerid),Jmeno(playerid));
			AddStringToTextDraw(str);
			Event = 1;
			KillTimer(EventTimer);
			EventTimer = 0;
			EventTime[0] = 0;
            EventTime[1] = 0;
			format(str,sizeof(str),"~y~%d %s ~w~probiha event ~g~%s ~w~na eventu je: ~r~%d %s",EventTime[0]/60,PluralWord(EventTime[0]/60,"minutu","minuty","minut"),EventName,EventPlayers,PluralWord(EventPlayers,"hrac","hraci","hracu"));
            TextDrawDiakritika(str);
			TextDrawSetString(Textdraw3,str);
			TextDrawShowForAll(Textdraw3);
			EventTimer = SetTimer("EventProgress",1000,false);
            ShowEventTextdraw();
			if(RunEvent != 6)
			{
            	format(str,sizeof(str),"~y~%s ~w~na ~>~ ~r~~h~/port ~<~",Events[id]);
			}
			else
			{
            	format(str,sizeof(str),"~y~%s ~w~na ~>~ ~r~~h~/port ~<~~n~~r~limit je %d hracu!",Events[id],sizeof(DerbyPos));
			}
			for(new i; i <= GetPlayerPoolSize(); i ++)
			    if(IPC(i))
	       			TextDrawShowForPlayer(i,Textdraw5);
			TextDrawDiakritika(str);
    		TextDrawSetString(Textdraw5,str);
    		if(IsBotConnected())
				if(playerid == botid)
				    BotEvent = true;
			if(RunEvent != 6 && RunEvent != 12)
			{
				odpocetsek = 30;
				format(str,sizeof(str),"~y~%d",odpocetsek);
				GameTextForAll(str,1000,3);
				SetTimer("Odpocet",1000,false);
			}
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+170)
	{
	    if(response)
	    {
			new inz[129];
			GetPVarString(playerid,"Inzerat",inz,sizeof(inz));
			if(!strlen(inz))
			{
		    	format(str,sizeof(str),"Jste umlèený, nemùete psát inzeráty (%s)",SecondsToMinutes(Mute[playerid]));
				if(Mute[playerid] > 0) return ShowAdvertisments(playerid,str);
				if(!strlen(inputtext)) return ShowAdvertisments(playerid);
				if(strlen(inputtext) < 10) return ShowAdvertisments(playerid,"Minimálnì 10 znakù");
				if(strlen(inputtext) > 100) return ShowAdvertisments(playerid,"Maximálnì 105 znakù");
				if(Points[playerid] < 10) return ShowAdvertisments(playerid,"Nedostatek bodù (10)");
				SetPVarString(playerid,"Inzerat",inputtext);
				GivePoints(playerid,-10);
				SM(playerid,"Inzerát úspìnì pøidán");
				format(str,sizeof(str),"[ /inzerat ] [ %s ]: "w"%s",Jmeno(playerid),inputtext);
				SCMTA(0xc7ff00FF,str);
				printEx(str);
			}
			else
			{
			    SetPVarString(playerid,"Inzerat","");
			    SM(playerid,"Inzerát úspìnì odstranìn");
			}
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+173)
	{
	    if(response)
	    {
	        new mapid = GetPVarInt(playerid,"SelectedMap");
			if(Map[mapid][MapSlotUsed] == false) return SM(playerid,"Vybral jste prázdný slot");
			switch(listitem)
			{
			    case 0:
			    {
					if(Map[mapid][MapLoaded] == false)
					{
					    new canload = -1;
						for(new i; i <= GetPlayerPoolSize(); i ++)
						    if(IPC(i))
						        if(MapEdit[i] == mapid)
						            canload = i;
						if(canload != -1)
							format(str,sizeof(str),"Mapu upravuje %s "g"%s",Players(canload),Jmeno(canload));
						if(canload != -1) return SM(playerid,str);
						LoadMap(mapid);
						Map[mapid][MapLoaded] = true;
						CreateInfoBox(playerid,"Mapa ~g~nactena",3);
					}
					else
					{
					    for(new i; i < MAX_OBJECTS_EX; i ++)
					    {
					        if(IsValidDynamicObject(Map[mapid][MapObject][i]))
					        {
					            DestroyDynamicObject(Map[mapid][MapObject][i]);
					            Map[mapid][MapObject][i] = 0;
					        }
					    }
						Map[mapid][MapLoaded] = false;
						CreateInfoBox(playerid,"Mapa ~g~odnactena",3);
					}
	 		   	}
	 		   	case 1:
	 		   	{
	 		   	    new vw = Map[mapid][MapVW];
					if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
						SetPlayerPos(playerid,Map[mapid][MapSX],Map[mapid][MapSY],Map[mapid][MapSZ]);
					else
					{
					    SetVehiclePos(GetPlayerVehicleID(playerid),Map[mapid][MapSX],Map[mapid][MapSY],Map[mapid][MapSZ]);
						if(vw != -1)
						SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),Map[mapid][MapVW]);
					}
					if(vw != -1)
						SetPlayerVirtualWorld(playerid,Map[mapid][MapVW]);
					CreateInfoBox(playerid,"Teleportnuto k mape",3);
	 		   	}
	 		   	case 2:
	 		   	{
					new query[100];
					if(Map[mapid][MapAutoLoad] == 0)
					{
					    Map[mapid][MapAutoLoad] = 1;
					    CreateInfoBox(playerid,"AutoLoad ~g~zapnut",3);
					}
					else
					{
					    Map[mapid][MapAutoLoad] = 0;
					    CreateInfoBox(playerid,"AutoLoad ~r~vypnut",3);
					}
					mysql_format(mysql,query,sizeof(query),"UPDATE `Maps` SET `AutoLoad`=%d WHERE `MapID`=%d",Map[mapid][MapAutoLoad],mapid);
					mysql_query(mysql,query,false);
	 		   	}
				case 3:
				{
				    if(CountObjects(playerid) != 0) return SM(playerid,"U máte vytvoøeny nìjaké objekty");
					if(Map[mapid][MapLoaded] == true) return SM(playerid,"Mapa nesmí být naètena");
					MapEdit[playerid] = mapid;
					new Float:X,Float:Y,Float:Z,Float:rX,Float:rY,Float:rZ;
					for(new i; i < MAX_OBJECTS_EX; i ++)
					{
					    if(Map[mapid][MapObjectID][i] != 0)
					    {
							X = Map[mapid][MapX][i];
						    Y = Map[mapid][MapY][i];
						    Z = Map[mapid][MapZ][i];
						    rX = Map[mapid][MapRX][i];
						    rY = Map[mapid][MapRY][i];
						    rZ = Map[mapid][MapRZ][i];
							ObjectsIDS[playerid][i] = Map[mapid][MapObjectID][i];
							Object[playerid][i] = CreateObject(Map[mapid][MapObjectID][i],X,Y,Z,rX,rY,rZ);
							format(str,sizeof(str),"Object ID: "w"%d\n"sb"Model: "w"%d",i,ObjectsIDS[playerid][i]);
							ObjectLabel[playerid][i] = CreateDynamic3DTextLabel(str,0x0077FFFF,X,Y,Z,50,.playerid = playerid);
						}
					}
	 		   	    new vw = Map[mapid][MapVW];
					if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
						SetPlayerPos(playerid,Map[mapid][MapSX],Map[mapid][MapSY],Map[mapid][MapSZ]);
					else
					{
					    SetVehiclePos(GetPlayerVehicleID(playerid),Map[mapid][MapSX],Map[mapid][MapSY],Map[mapid][MapSZ]);
						if(vw != -1)
						SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),Map[mapid][MapVW]);
					}
					if(vw != -1)
						SetPlayerVirtualWorld(playerid,Map[mapid][MapVW]);
				}
	 		   	case 4:
	 		   	{
					new query[100];
					mysql_format(mysql,query,sizeof(query),"DELETE FROM `Maps` WHERE `MapID`=%d",mapid);
					mysql_query(mysql,query,false);
					mysql_format(mysql,query,sizeof(query),"DELETE FROM `MapsObjects` WHERE `MapID`=%d",mapid);
					mysql_query(mysql,query,false);
					format(Map[mapid][MapName],24,"");
					format(Map[mapid][MapAutor],24,"");
					Map[mapid][MapAutoLoad] = false;
					Map[mapid][MapLoaded] = false;
					Map[mapid][MapSlotUsed] = false;
					Map[mapid][MapSX] = 0.0;
					Map[mapid][MapSY] = 0.0;
					Map[mapid][MapSZ] = 0.0;
					for(new i; i < MAX_OBJECTS_EX; i ++)
					{
						Map[mapid][MapObjectID][i] = 0;
						Map[mapid][MapX][i] = 0.0;
						Map[mapid][MapY][i] = 0.0;
						Map[mapid][MapZ][i] = 0.0;
						Map[mapid][MapRX][i] = 0.0;
						Map[mapid][MapRY][i] = 0.0;
						Map[mapid][MapRZ][i] = 0.0;
					}
				    for(new i; i < MAX_OBJECTS_EX; i ++)
				    {
				        if(IsValidDynamicObject(Map[mapid][MapObject][i]))
				        {
				            DestroyDynamicObject(Map[mapid][MapObject][i]);
				            Map[mapid][MapObject][i] = 0;
				        }
				    }
					Map[mapid][MapLoaded] = false;
				    CreateInfoBox(playerid,"Mapa ~r~odstranena",3);
	 		   	}
			}
			if(Map[mapid][MapSlotUsed] == true)
			{
				ShowMapOptions(playerid,mapid);
			}
		}
	    return 1;
	}
	if(dialogid == UNNAMED+174)
	{
	    if(response)
	    {
	        new modelid;
	        if(sscanf(inputtext,"i",modelid)) return SPD(playerid,UNNAMED+174,DIALOG_STYLE_INPUT,"Vlastní Object","Zadejete ID objectu, který chcete vytvoøit","Zadat","Zavøít");
		    new Float:X,Float:Y,Float:Z,Float:Angle;
			GetPlayerPos(playerid,X,Y,Z);
			if(!IsPlayerInAnyVehicle(playerid))
			{
				GetPlayerFacingAngle(playerid,Angle);
			}
			else
			{
				GetVehicleZAngle(GetPlayerVehicleID(playerid),Angle);
			}
			for(new i;i < MAX_OBJECTS_EX;i++)
			{
				if(Object[playerid][i] == 0)
				{
					Object[playerid][i] = CreateObject(modelid,X + 8*floatcos(90+Angle, degrees), Y+ 8*floatsin(90-Angle, degrees),Z,0,0,Angle);
					if(!IsValidObject(Object[playerid][i]))
					{
						DestroyObject(Object[playerid][i]);
						Object[playerid][i] = 0;
					 	SPD(playerid,UNNAMED+174,DIALOG_STYLE_INPUT,"Vlastní Object","Zadejete ID objectu, který chcete vytvoøit\n\n"r"Chybnì zadané ID","Zadat","Zavøít");
						return 0;
					}
					ObjectsIDS[playerid][i] = modelid;
					EditObject(playerid,Object[playerid][i]);
					format(str,sizeof(str),"Object (Model: ~y~%d~w~ / ID: ~y~%d~w~/~r~%d~w~) uspesne ~g~vytvoren",modelid,i,MAX_OBJECTS_EX);
					CreateInfoBox(playerid,str,5);
					break;
				}
				else
				{
					continue;
				}
			}
		}
	    return 1;
 	}
	if(dialogid == UNNAMED+175)
	{
		if(response)
		{
			if(listitem == 19)
			{
			    ShowBanList(playerid,GetPlayerPage(playerid)+1);
			}
			else
			{
			    new nick[24],query[100],Cache:cache;
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Bans` WHERE `End` > %d OR `End`=0 ORDER BY `Start` DESC LIMIT %d,20",gettime(),GetPlayerPage(playerid)*19);
				cache = mysql_query(mysql,query);
				cache_get_field_content(listitem,"Nick",nick,mysql);
				SetPVarInt(playerid,"BanID",cache_get_field_content_int(listitem,"ID",mysql));
				cache_delete(cache,mysql);
			    format(str,sizeof(str),"Opravdu si pøejete odbanovat hráèe: "g"%s"w"?",nick);
			    SPD(playerid,UNNAMED+176,DIALOG_STYLE_MSGBOX,nick,str,"Ano","Ne");
			}
		}
		return 1;
	}
	if(dialogid == UNNAMED+176)
	{
	    if(response)
	    {
	        new id = GetPVarInt(playerid,"BanID"),query[100],Cache:cache;
	        mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Bans` WHERE `ID`=%d",id);
	        cache = mysql_query(mysql,query);
	        new nick[24],ip[16+1],end = cache_get_field_content_int(0,"End",mysql);
	        cache_get_field_content(0,"IP",ip,mysql);
	        if(end == 0)
	        {
				format(str,sizeof(str),"unbanip %s",ip);
	            SendRconCommand(str);
				SendRconCommand("reloadbans");
				SM(playerid,"Perma ban, unbanned");
	        }
	        cache_get_field_content(0,"Nick",nick,mysql);
			format(str,sizeof(str),"%s "r"%s "w"odbanoval hráèe "g"%s {adadad}(%s)",Players(playerid),Jmeno(playerid),nick,ip);
			SendAdminMessage(str);
	        cache_delete(cache,mysql);
	        mysql_format(mysql,query,sizeof(query),"DELETE FROM `Bans` WHERE `ID`=%d",id);
			mysql_query(mysql,query,false);
	    }
		ShowBanList(playerid,GetPlayerPage(playerid));
	    return 1;
	}
	if(dialogid == UNNAMED+178)
	{
	    if(response)
	    {
	        new radius,Float:X,Float:Y,Float:Z;
	        if(sscanf(inputtext,"i",radius)) return SPD(playerid,UNNAMED+178,DIALOG_STYLE_INPUT,"Event Settings","Zadejte velikost oblasti","Zadat","Zpìt");
			if(radius == 0)
			{
				if(EventRadius == 0) return SPD(playerid,UNNAMED+178,DIALOG_STYLE_INPUT,"Event Settings","Zadejte velikost oblasti\n\n"r"ádná zóna není vytvoøena","Zadat","Zpìt");
				else
				{
				    format(str,sizeof(str),"%s "w"%s "r"%s event zónu.",Players(playerid),Jmeno(playerid),SexWord(playerid,"zruil","zruila"));
				    SCMTA(red,str);
				    EventRadius = 0;
				    GangZoneDestroy(EventZone[0]);
				    GangZoneDestroy(EventZone[1]);
				    ShowPlayerEventSettings(playerid);
				    return 0;
				}
			}
	        if(radius < 50 || radius > 2000) return SPD(playerid,UNNAMED+178,DIALOG_STYLE_INPUT,"Event Settings","Zadejte velikost oblasti\n\n"r"Minimálnì lze pouít oblast 50 metrù a maximálnì 2000 metrù","Zadat","Zpìt");
			if(radius > 0 && EventRadius > 0)
			{
			    GangZoneDestroy(EventZone[0]);
			    GangZoneDestroy(EventZone[1]);
			}
			EventRadius = radius;
			GetPlayerPos(playerid,X,Y,Z);
			EventRadiusPos[0] = X+radius;
			EventRadiusPos[1] = X-radius;
			EventRadiusPos[2] = Y+radius;
			EventRadiusPos[3] = Y-radius;
			EventZone[0] = GangZoneCreate(EventRadiusPos[1],EventRadiusPos[3],EventRadiusPos[0],EventRadiusPos[2]);
			for(new i; i <= GetPlayerPoolSize(); i ++)
			{
			    if(IPC(i) && !IsPlayerNPC(i))
			    {
			        if(OnEvent[i] == true)
			        {
			            GangZoneShowForPlayer(i,EventZone[0],0xFFFFFF70);
			        }
			    }
			}
		    format(str,sizeof(str),"%s "w"%s "r"%s event zónu v okruhu %d %s.",Players(playerid),Jmeno(playerid),SexWord(playerid,"vytvoøil","vytvoøila"),radius,PluralWord(radius,"metru","mterù","metrù"));
		    SCMTA(red,str);
	    }
	    ShowPlayerEventSettings(playerid);
	    return 1;
	}
	if(dialogid == UNNAMED+179)
	{
	    if(response)
	    {
			new patra,obj = 5;
			if(sscanf(inputtext,"ii",patra,obj)) return SPD(playerid,UNNAMED+179,DIALOG_STYLE_INPUT,"{0077FF}Nastavení "w"Eventu","Zadejte {0077FF}poèet pater "w"mezera {0077FF}Strana 'a' "w"(a*a)","Dalí","Zruit");
			format(str,sizeof(str),"Zadejte {0077FF}poèet pater "w"mezera {0077FF}Strana 'a' "w"(a*a)\n\n"r"Minimálnì 1 a maximálnì %d pater",MAX_FALLOUT_FLOOR);
	        if(patra < 1 || patra > MAX_FALLOUT_FLOOR) return SPD(playerid,UNNAMED+179,DIALOG_STYLE_INPUT,"{0077FF}Nastavení "w"Eventu",str,"Dalí","Zruit");
			format(str,sizeof(str),"Zadejte {0077FF}poèet pater "w"mezera {0077FF}Strana 'a' "w"(a*a)\n\n"r"Minimálnì 3 a maximálnì %d hodnoty strany a",MAX_FALLOUT_SIDE_A);
			if(obj < 3 || obj > MAX_FALLOUT_SIDE_A) return SPD(playerid,UNNAMED+179,DIALOG_STYLE_INPUT,"{0077FF}Nastavení "w"Eventu",str,"Dalí","Zruit");
			eventpatra = patra;
			eventobjects = obj;
			SPD(playerid,UNNAMED+169,DIALOG_STYLE_INPUT,"{0077FF}Odmìna "w"Eventu","Zadejte {0077FF}výherní èástku "w"mezera {0077FF}body","Zaloit","Zruit");
			SetPVarInt(playerid,"EventType",0);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+180)
	{
	    if(response)
	    {
			if(EventRace == listitem || RaceReady[listitem] == true || RaceStart[listitem] == true) return SM(playerid,"Závod momentálnì nejde smazat (pouívají ho hráèi)");
			format(dfile,sizeof(dfile),"UnNamed/Races/Race[%d].txt",listitem);
			DOF2_RemoveFile(dfile);
			format(str,sizeof(str),"Závod "g"%s "w"úspìnì smazán",Race[listitem][CPName]);
			SM(playerid,str);
			for(new i; i < MAX_CPS+2; i ++)
			{
			    Race[listitem][CP][i] = 0;
			    Race[listitem][CPX][i] = 0.0;
			    Race[listitem][CPY][i] = 0.0;
			    Race[listitem][CPZ][i] = 0.0;
				Race[listitem][CPVeh][i] = 0;
			}
			cps[listitem] = 0;
			format(Race[listitem][CPName],25,"");
			format(Race[listitem][CPAutor],MAX_PLAYER_NAME+1,"");
			Race[listitem][CPHide] = 0;
			Race[listitem][CPA] = 0.0;
			Race[listitem][CPVW] = 0;
			Race[listitem][CPAR] = 0;
			Race[listitem][CPLetecky] = 0;
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+181)
	{
	    if(response)
	    {
	        new page = GetPVarInt(playerid,"Page");
			if(page*20+listitem == sizeof(StuntPos) || listitem == 21)
				ShowStuntMenu(playerid,page-1);
	        else if(listitem < 20)
				ConnectToStunt(playerid,listitem+page*20);
	        else
				ShowStuntMenu(playerid,page+1);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+182)
	{
	    if(response && pStunt[playerid][sStuntID] == -1)
			ConnectToStunt(playerid,GetPVarInt(playerid,"LastID"));
	    return 1;
	}
	if(dialogid == UNNAMED+183)
	{
	    if(response)
	    {
	        new page = GetPVarInt(playerid,"Page"), query[150],Cache:cache;
			mysql_format(mysql,query,sizeof(query),"SELECT * FROM `TrestneBody` WHERE `hrac`='%e' ORDER BY `time` DESC LIMIT %d,21",Jmeno(playerid),page*20);
			cache = mysql_query(mysql,query);
			new lines = cache_get_row_count(mysql);
			if(listitem == 20)
			    ShowPlayerPenaltyPoints(playerid,page+1);
			else if(listitem == 21 || listitem == lines)
			    ShowPlayerPenaltyPoints(playerid,page-1);
			else if(listitem < 20)
			{
			    new DIALOG[1000],admin[MAX_PLAYER_NAME+1],reason[256],id,tb,time;
				cache_get_field_content(listitem,"admin",admin);
				cache_get_field_content(listitem,"reason",reason);
				id = cache_get_field_content_int(listitem,"trest_id");
				tb = cache_get_field_content_int(listitem,"tb");
				time = cache_get_field_content_int(listitem,"time");
				format(str,sizeof(str),"ID: "g"%05d\n"w"Datum: "g"%s\n"w"Bude prominuto: "g"%s\n"w"Trestných bodù: "g"%d\n"w"Admin: "g"%s\n",id,DATE(time),DATE(time+60*60*24*30),cache_get_field_content_int(listitem,"tb_z",mysql),admin);
				strcat(DIALOG,str);
				format(str,sizeof(str),""w"Dùvod: "g"%s\n",reason);
				strcat(DIALOG,str);
				format(str,sizeof(str),""w"Status: %s",(tb == 0) ? (""y"Prominuto") : (""r"V platnosti"));
				strcat(DIALOG,str);
				mysql_format(mysql,query,sizeof(query),"UPDATE `TrestneBody` SET `showed`=1 WHERE `trest_id`=%d",id);
				mysql_query(mysql,query,false);
				SPD(playerid,UNNAMED+185,DIALOG_STYLE_MSGBOX,"Trestné body",DIALOG,"Zpìt","Zavøít");
			}
			cache_delete(cache,mysql);
		}
	    return 1;
	}
	if(dialogid == UNNAMED+184)
	{
		if(response)
            ShowAchievements(playerid,GetPVarInt(playerid,"Page"));
		return 1;
	}
	if(dialogid == UNNAMED+185)
	{
		if(response)
			ShowPlayerPenaltyPoints(playerid,GetPVarInt(playerid,"Page"));
		return 1;
	}
	if(dialogid == UNNAMED+186)
	{
	    if(response)
	    {
	        new page = GetPVarInt(playerid,"Page"),query[150],Cache:cache,player[MAX_PLAYER_NAME+1];
	        GetPVarString(playerid,"PlayerName",player,sizeof(player));
			mysql_format(mysql,query,sizeof(query),"SELECT * FROM `TrestneBody` WHERE `hrac`='%e' ORDER BY `time` DESC LIMIT %d,21",player,page*20);
			cache = mysql_query(mysql,query);
			new lines = cache_get_row_count(mysql);
			if(listitem == 20)
			    ShowPenaltyPointsForAdmins(playerid,player,page+1);
			else if(listitem == 21 || listitem == lines)
			    ShowPenaltyPointsForAdmins(playerid,player,page-1);
			else if(listitem < 20)
			{
			    new DIALOG[1000],admin[MAX_PLAYER_NAME+1],reason[256],id,tb,time;
				cache_get_field_content(listitem,"admin",admin);
				cache_get_field_content(listitem,"reason",reason);
				id = cache_get_field_content_int(listitem,"trest_id");
				tb = cache_get_field_content_int(listitem,"tb");
				time = cache_get_field_content_int(listitem,"time");
				SetPVarInt(playerid,"LastID",id);
				format(str,sizeof(str),"ID\t"g"%05d\nTrestných bodù\t"g"%d\nAdmin\t"g"%s\n",id,cache_get_field_content_int(listitem,"tb_z",mysql),admin);
				strcat(DIALOG,str);
				format(str,sizeof(str),"Datum\t"g"%s\nBude prominuto\t"g"%s\n",DATE(time),DATE(time+60*60*24*30));
				strcat(DIALOG,str);
				format(str,sizeof(str),"Dùvod\t"g"%s\n",reason);
				strcat(DIALOG,str);
				format(str,sizeof(str),"Status\t%s\n",(tb == 0) ? (""y"Prominuto") : (""r"V platnosti"));
				strcat(DIALOG,str);
				if(strcmp(Jmeno(playerid),admin,false) == 0 || Admin[playerid] > 3)
				    if(tb > 0)
				        strcat(DIALOG,""sb"Odstranit trestné body");
					else
				        strcat(DIALOG,""sb"Obnovit trestné body");
				strcat(DIALOG,"\n"sb"Zpìt");
				SPD(playerid,UNNAMED+187,DIALOG_STYLE_TABLIST,"Trestné body",DIALOG,"Zpìt","Zavøít");
			}
			cache_delete(cache,mysql);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+187)
	{
	    if(response)
	    {
	        new page = GetPVarInt(playerid,"Page"),query[150],Cache:cache,player[MAX_PLAYER_NAME+1],id = GetPVarInt(playerid,"LastID"),pid;
	        GetPVarString(playerid,"PlayerName",player,sizeof(player));
	        pid = GetPlayerIdFromName(player);
	        if(listitem < 7)
	            ShowPenaltyPointsForAdmins(playerid,player,page);
			if(listitem == 7)
			{
			    new admin[MAX_PLAYER_NAME+1];
				mysql_format(mysql,query,sizeof(query),"SELECT * FROM `TrestneBody` WHERE `trest_id`='%d' LIMIT 1",id);
				cache = mysql_query(mysql,query);
			    cache_get_field_content(0,"admin",admin,mysql);
				new tb = cache_get_field_content_int(0,"tb",mysql);
				new tbz = cache_get_field_content_int(0,"tb_z",mysql);
				cache_delete(cache,mysql);
				if(strcmp(Jmeno(playerid),admin,false) != 0 && Admin[playerid] <= 3)
			            ShowPenaltyPointsForAdmins(playerid,player,page);
				else
				{
					if(tb == 0)
					    mysql_format(mysql,query,sizeof(query),"UPDATE `TrestneBody` SET `tb`=%d WHERE `trest_id`=%d",tbz,id);
					else if(tb > 0)
					    mysql_format(mysql,query,sizeof(query),"UPDATE `TrestneBody` SET `tb`=0 WHERE `trest_id`=%d",id);
					mysql_query(mysql,query,false);
					format(str,sizeof(str),"%s "r"%s "w"%s hráèi "g"%s "w"trestné body [ "g"%d "w"]",Players(playerid),Jmeno(playerid),(tb == 0) ? ("obnovil") : ("odstranil"),player,tbz);
					SendAdminMessage(str);
				    format(str,sizeof(str),"%s "r"%s "w"Vám %s trestné body [ "g"%d "w"] -> "sb"/trestnebody",Players(playerid),Jmeno(playerid),(tb == 0) ? ("obnovil") : ("odstranil"),tbz);
					if(IPC(pid))
					    SPD(pid,0,DIALOG_STYLE_MSGBOX,"Trestné body",str,"Zavøít","");
					else
						SendPlayerNotification(player,"Trestné body",str);
	            	ShowPenaltyPointsForAdmins(playerid,player,page);
				}
			}
			if(listitem == 6)
	            ShowPenaltyPointsForAdmins(playerid,player,page);

	    }
	    return 1;
	}
	if(dialogid == UNNAMED+188)
	{
		new page = GetPVarInt(playerid,"Page");
	    if(response)
	    {
			switch(page)
			{
			    case 0:
				{
					SPD(playerid,UNNAMED+188,DIALOG_STYLE_INPUT,"Hod mincí","Zadejte poèet bodù, který chcete vsadit","Dalí","Zpìt");
					SetPVarInt(playerid,"LastID",listitem);
				}
				case 1:
				{
			        new body,znameni = GetPVarInt(playerid,"LastID");
			        if(sscanf(inputtext,"i",body)) return SPD(playerid,UNNAMED+188,DIALOG_STYLE_INPUT,"Hod mincí","Zadejte poèet bodù, který chcete vsadit","Dalí","Zpìt");
			        if(body < 10) return SPD(playerid,UNNAMED+188,DIALOG_STYLE_INPUT,"Hod mincí","Zadejte poèet bodù, který chcete vsadit\n\n"r"Minimálnì 10 bodù","Dalí","Zpìt");
			        if(body > 1000) return SPD(playerid,UNNAMED+188,DIALOG_STYLE_INPUT,"Hod mincí","Zadejte poèet bodù, který chcete vsadit\n\n"r"Maximálnì 1000 bodù","Dalí","Zpìt");
					if(Points[playerid] < body) return SPD(playerid,UNNAMED+188,DIALOG_STYLE_INPUT,"Hod mincí","Zadejte poèet bodù, který chcete vsadit\n\n"r"Nemáte dostatek bodù","Dalí","Zpìt");
					SetPVarInt(playerid,"Body",body);
					format(str,sizeof(str),"Opravdu si pøejete vsadit "g"%d bodù"w" na "r"%s"w"?",body,(znameni == 0) ? ("Pannu") : ("Orla"));
					SPD(playerid,UNNAMED+188,DIALOG_STYLE_MSGBOX,"Hod mincí",str,"Ano","Zpìt");
				}
				case 2:
				{
				    new body = GetPVarInt(playerid,"Body"),znameni = GetPVarInt(playerid,"LastID"),chance = random(100),str3[145],str2[145];
					if(chance >= 0 && chance <= 47)
					{
						format(str3,sizeof(str3),"%s "w"%s "y"%s na "w"%s "y"a %s "g"%d bodù"y".",Players(playerid),Jmeno(playerid),SexWord(playerid,"vsadil","vsadila"),(znameni == 0) ? ("Pannu") : ("Orla"),SexWord(playerid,"vyhrál","vyhrála"),body);
						format(str2,sizeof(str2),"%s jste na "y"%s "w"a "g"%s "w"jste "g"%d bodù",SexWord(playerid,"Vsadil","Vsadila"),(znameni == 0) ? ("Pannu") : ("Orla"),SexWord(playerid,"vyhrál","vyhrála"),body);
						GivePoints(playerid,body);
						MinceWin[playerid] += body;
						GiveServerPoints(-body);
					}
					else if(chance >= 48 && chance <= 99)
					{
						format(str3,sizeof(str3),"%s "w"%s "y"%s na "w"%s "y"a %s "r"%d bodù"y".",Players(playerid),Jmeno(playerid),SexWord(playerid,"vsadil","vsadila"),(znameni == 0) ? ("Pannu") : ("Orla"),SexWord(playerid,"prohrál","prohrála"),body);
						format(str2,sizeof(str2),"%s jste na "y"%s "w"a "r"%s "w"jste "g"%d bodù",SexWord(playerid,"Vsadil","Vsadila"),(znameni == 0) ? ("Pannu") : ("Orla"),SexWord(playerid,"prohrál","prohrála"),body);
						GivePoints(playerid,-body);
						MinceLose[playerid] += body;
						GiveServerPoints(body);
					}
					format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
					if(fexist(dfile))
					{
					    DOF2_SetInt(dfile,"MinceWin",MinceWin[playerid]);
					    DOF2_SetInt(dfile,"MinceLose",MinceLose[playerid]);
					    DOF2_SaveFile();
					}
					NextHod[playerid] = gettime()+60;
					SCMTA(yellow,str3);
					SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Hod mincí",str2,"Zavøít","");
				}
			}
	        SetPVarInt(playerid,"Page",page+1);
	    }
	    else
	    {
	        SetPVarInt(playerid,"Page",page-1);
	        switch(page)
	        {
	            case 1: SPD(playerid,UNNAMED+188,DIALOG_STYLE_LIST,"Hod mincí","Panna\nOrel","Dalí","Zavøít");
	            case 2: SPD(playerid,UNNAMED+188,DIALOG_STYLE_INPUT,"Hod mincí","Zadejte poèet bodù, který chcete vsadit","Dalí","Zpìt");
	        }
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+189)
	{
	    if(response)
	    {
	        new used,nlistitem = listitem,freeid = -1;
			for(new i; i < MAX_PLAYER_VYBAVA; i ++)
				if(!strlen(pVybava[playerid][i][vybName])){
				    if(i < nlistitem+1)
				    	nlistitem++;
				    if(freeid == -1)
				        freeid = i;
				}
				else used ++;
			if(listitem < used)
			{
		        SetPVarInt(playerid,"LastID2",nlistitem);
	        	ShowPlayerEquipMenu(playerid,nlistitem);
			}
			else
			{
			    new weapon[2][MAX_VYBAVA_SLOTS],wps;
				for(new i; i < sizeof(weapon[]); i ++)
			    {
					if(!IsVybavaSlotBlocked(i))
					{
				        GetPlayerWeaponData(playerid,i,weapon[0][i],weapon[1][i]);
				        for(new x; x < sizeof(VybavaAllowedWeapons); x ++)
				        {
					        if(weapon[0][i] != 0 && weapon[0][i] == VybavaAllowedWeapons[x])
					        {
						    	GivePlayerEquip(playerid,freeid,GetWeaponSlot(weapon[0][i]),weapon[0][i]);
								wps++;
							}
						}
					}
				}
				if(wps == 0)
				    GivePlayerEquip(playerid,freeid,0,0);
	     	   	SetPVarInt(playerid,"LastID2",freeid);
				ShowPlayerEquipMenu(playerid,freeid);
			}
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+190)
	{
	    if(response)
	    {
	        new id = GetPVarInt(playerid,"LastID2");
	        if(listitem == 0)
	        {
	            if(id == 0)
				{
	                SM(playerid,"Spawn výbavu nelze pøejmenovat");
	                ShowPlayerEquipMenu(playerid,id);
	            }
	            else
				{
					format(str,sizeof(str),"Zadejte nový název pro výbavu {0077FF}%s",pVybava[playerid][id][vybName]);
					SPD(playerid,UNNAMED+192,DIALOG_STYLE_INPUT,"Název výbavy",str,"Zadat","Zpìt");
				}
			}
	        else if(listitem == 1)
	        {
	        	new DIALOG[500],weps;
	        	strcat(DIALOG,""dc"Obdrel jste zbranì:{00FF00}\n\n");
	        	for(new i; i < MAX_VYBAVA_SLOTS; i ++)
	        	{
	        	    if(pVybava[playerid][id][vybID][i] != 0)
					{
		        	    strcat(DIALOG,WeaponsNames(pVybava[playerid][id][vybID][i]));
		        	    strcat(DIALOG,"\n");
		        	    weps++;
					}
				}
	        	if(weps != 0){
					SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Výbava",DIALOG,"Zavøít","");
    	        	GivePlayerGear(playerid,id);
				}
	        	else
	        	{
		      	    SM(playerid,"V této výbavì nejsou ádné zbranì");
					ShowPlayerEquipMenu(playerid,id);
	        	}
	        }
	        else if(listitem == 2)
	        {
  	          	if(id == 0){
	                SM(playerid,"Spawn výbavu nelze odstranit");
	                ShowPlayerEquipMenu(playerid,id);
	            }
	            else
	            {
	                format(str,sizeof(str),"Opravdu chete smazat výbavu: "g"%s"w"?",pVybava[playerid][id][vybName]);
					SPD(playerid,UNNAMED+193,DIALOG_STYLE_MSGBOX,"Výbava",str,"Ano","Ne");
				}
			}
	        else
	        {
	            listitem -= 3;
		        new DIALOG[500],wp;
		        strcat(DIALOG,""r"Nic\n");
		        for(new i; i <= listitem; i ++)
		        {
		            if(IsVybavaSlotBlocked(i))
		                listitem ++;
		        }
		        for(new i; i < sizeof(VybavaAllowedWeapons); i ++)
		        {
		            if(GetWeaponSlot(VybavaAllowedWeapons[i]) == listitem && GetWeaponSlot(VybavaAllowedWeapons[i]) < MAX_VYBAVA_SLOTS)
		            {
		                strcat(DIALOG,WeaponsNames(VybavaAllowedWeapons[i]));
		                strcat(DIALOG,"\n");
		                wp ++;
					}
		        }
				SetPVarInt(playerid,"LastID",listitem);
				if(wp != 0 ) SPD(playerid,UNNAMED+191,DIALOG_STYLE_LIST,"Vybavení",DIALOG,"Vybrat","Zpìt");
				else SM(playerid,"Chyba");
			}
		}
		else ShowPlayerVybava(playerid);
	    return 1;
	}
	if(dialogid == UNNAMED+191)
	{
        new id = GetPVarInt(playerid,"LastID2");
	    if(response)
	    {
	        new slot = GetPVarInt(playerid,"LastID"),wp[8],last;
	        if(listitem == 0)
	            GivePlayerEquip(playerid,id,slot,0);
			else
			{
		        for(new i; i < sizeof(VybavaAllowedWeapons); i ++)
		        {
		            if(GetWeaponSlot(VybavaAllowedWeapons[i]) == slot)
		            {
						wp[last] = VybavaAllowedWeapons[i];
						last ++;
		            }
		        }
		        GivePlayerEquip(playerid,id,slot,wp[listitem-1]);
			}
	        ShowPlayerEquipMenu(playerid,id);
	    }
	    else ShowPlayerEquipMenu(playerid,id);
	    return 1;
	}
	if(dialogid == UNNAMED+192)
	{
		new id = GetPVarInt(playerid,"LastID2");
		if(response)
	    {
	        new query[150];
			format(str,sizeof(str),"Zadejte nový název pro výbavu {0077FF}%s",pVybava[playerid][id][vybName]);
			if(!strlen(inputtext)) return SPD(playerid,UNNAMED+192,DIALOG_STYLE_INPUT,"Název výbavy",str,"Zadat","Zpìt");
            format(str,sizeof(str),"Zadejte nový název pro výbavu {0077FF}%s\n\n"r"Maximálnì 24 znakù",pVybava[playerid][id][vybName]);
			if(strlen(inputtext) > 24) return SPD(playerid,UNNAMED+192,DIALOG_STYLE_INPUT,"Název výbavy",str,"Zadat","Zpìt");
			format(pVybava[playerid][id][vybName],24,inputtext);
			mysql_format(mysql,query,sizeof(query),"UPDATE `Vybava` SET `vybava_nazev`='%e' WHERE `nick`='%e' AND `vybava`=%d",inputtext,Jmeno(playerid),id);
			mysql_query(mysql,query,false);
	    }
	    ShowPlayerEquipMenu(playerid,id);
	    return 1;
	}
	if(dialogid == UNNAMED+193)
	{
        new id = GetPVarInt(playerid,"LastID2"),query[100];
	    if(response)
	    {
			format(pVybava[playerid][id][vybName],24,"");
			for(new i; i < MAX_VYBAVA_SLOTS; i ++)
				pVybava[playerid][id][vybID][i] = 0;
			mysql_format(mysql,query,sizeof(query),"DELETE FROM `Vybava` WHERE `Nick`='%e' AND `vybava`=%d",Jmeno(playerid),id);
			mysql_query(mysql,query,false);
			ShowPlayerVybava(playerid);
	    }
	    else ShowPlayerEquipMenu(playerid,id);
	    return 1;
	}
	if(dialogid == UNNAMED+194)
	{
		if(response)
		{
			new DIALOG[500];
			strcat(DIALOG,""dc"losy\tCena\n");
			for(new i; i < sizeof(tTickets); i ++)
			{
				format(str,sizeof(str),"%d %s\t"g"%d "c"bodù\n",tTickets[i][0],PluralWord(tTickets[i][0],"los","losy","losù"),tTickets[i][1]);
				strcat(DIALOG,str);
			}
			SPD(playerid,UNNAMED+195,DIALOG_STYLE_TABLIST_HEADERS,"Tombola",DIALOG,"Vybrat","Zavøít");
		}
		return 1;
	}
	if(dialogid == UNNAMED+195)
	{
		if(response)
		{
			if(Points[playerid] < tTickets[listitem][1]) return SM(playerid,"Nemáte dostatek bodù");
			new query[150],Cache:cache,DIALOG[700];
			GivePoints(playerid,-tTickets[listitem][1]);
			for(new i; i < tTickets[listitem][0]; i ++)
			{
				mysql_format(mysql,query,sizeof(query),"INSERT INTO `Tombola` (`Nick`,`Price`) VALUES ('%e',%f)",Jmeno(playerid),float(tTickets[listitem][1])/float(tTickets[listitem][0]));
				cache = mysql_query(mysql,query);
				format(str,sizeof(str),""dc"Zakoupen los è.: "g"%d\n",cache_insert_id());
				strcat(DIALOG,str);
				cache_delete(cache,mysql);
			}
		    cache = mysql_query(mysql,"SELECT SUM(`Price`) FROM `Tombola`");
		    new Float:win = cache_get_field_content_float(0,"SUM(`Price`)",mysql);
		    cache_delete(cache,mysql);
			format(str,sizeof(str),"\n"w"Úspìnì %s "g"%d %s "w"za "g"%d bodù"w". Aktuální výhra: "g"%0.1f bodù",PluralWord(tTickets[listitem][0],"zakoupen","zakoupeny","zakoupeno"),tTickets[listitem][0],PluralWord(tTickets[listitem][0],"los","losy","losù"),tTickets[listitem][1],win);
			strcat(DIALOG,str);
			SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Tombola",DIALOG,"Zavøít","");
		}
		return 1;
	}
	if(dialogid == UNNAMED+196)
	{
		if(response)
		{
		    new page = GetPVarInt(playerid,"Page");
			if(page == 0)
			{
	            new time;
	            if(sscanf(inputtext,"i",time)) return SPD(playerid,UNNAMED+196,DIALOG_STYLE_INPUT,"{0077FF}Nastavení "w"Eventu","Zadejte {0077FF}poèet sekund "w"jak má dlouho event trvat","Dalí","Zruit");
				if(time < 60 || time > 900) return SPD(playerid,UNNAMED+196,DIALOG_STYLE_INPUT,"{0077FF}Nastavení "w"Eventu","Zadejte {0077FF}poèet sekund "w"jak má dlouho event trvat\n\n"r"Event nemùe trvat ménì ne 60 a více ne 900 sekund","Dalí","Zruit");
				EventEndTime = time;
				SPD(playerid,UNNAMED+196,DIALOG_STYLE_INPUT,"{0077FF}Nastavení "w"Eventu","Zadejte {0077FF}Zbraò 1"w".","Dalí","Zruit");
			}
			if(page <= sizeof(EventGuns) && page > 0)
			{
			    new wep;
			    format(str,sizeof(str),"Zdajete {0077FF}Zbraò %d"w".",page);
			    if(sscanf(inputtext,"i",wep)) return SPD(playerid,UNNAMED+196,DIALOG_STYLE_INPUT,"{0077FF}Nastavení "w"Eventu",str,"Dalí","Zruit");
                format(str,sizeof(str),"Zdajete {0077FF}Zbraò %d"w".\n\n"r"Chybné ID",page);
				if(!IsWeaponValid(wep)) return SPD(playerid,UNNAMED+196,DIALOG_STYLE_INPUT,"{0077FF}Nastavení "w"Eventu",str,"Dalí","Zruit");
				EventGuns[page-1] = wep;
				format(str,sizeof(str),"Zbraò %d: "g"%s",page,WeaponsNames(wep));
				SCM(playerid,0xadadadFF,str);
				if(page == sizeof(EventGuns))
				{
		   			SPD(playerid,UNNAMED+169,DIALOG_STYLE_INPUT,"{0077FF}Odmìna "w"Eventu","Zadejte {0077FF}výherní èástku "w"mezera {0077FF}body","Zaloit","Zruit");
					SetPVarInt(playerid,"EventType",9);
				}
				else
				{
				    format(str,sizeof(str),"Zdajete {0077FF}Zbraò %d"w".",page+1);
					SPD(playerid,UNNAMED+196,DIALOG_STYLE_INPUT,"{0077FF}Nastavení "w"Eventu",str,"Dalí","Zruit");
				}
		    }
			SetPVarInt(playerid,"Page",page+1);
		}
		return 1;
	}
	if(dialogid == UNNAMED+197)
	{
	    if(response)
	    {
	        new raceid = GetPVarInt(playerid,"RaceID"),zapisne = strval(inputtext);
			if(RacePlayer[playerid] > -1) return SM(playerid,"U si pøipojen v závodì");
			if(RaceStart[raceid] == true) return SM(playerid,"Závod u je odstartován");
			if(EventRace == raceid) return SM(playerid,"Tento závod je u vytovøený jako event");
	        if(zapisne < 0 || zapisne > Points[playerid]) return SPD(playerid,UNNAMED+197,DIALOG_STYLE_INPUT,"Vytvoøení závodu","Zadejte zapisné v bodech\n\n"r"Chybnì zadané body\n\n"r"! V pøípadì oputìní serveru èi pádu hry jsou body nevratné !","Dalí","Zavøít");
			Race[raceid][RaceZapisne] = zapisne;
			Race[raceid][RaceWin] = 0;
			format(str,sizeof(str),"%s "w"%s "sb"%s závod "w"%s"sb" (Zápisné: %d bodù).",Players(playerid),Jmeno(playerid),SexWord(playerid,"zaloil","zaloila"),Race[raceid][CPName],Race[raceid][RaceZapisne]);
			SCMTA(0x0055FFFF,str);
			format(str,sizeof(str),"Pro pøipojení pouij: "w"/race %d"sb".",raceid);
			SCMTA(0x0055FFFF,str);
			TimeToStartSeconds[raceid] = 60;
			SetTimerEx("TimeToStart",1000,false,"i",raceid);
			RaceReady[raceid] = true;
			RaceVehicle[raceid] = GetPVarInt(playerid,"RaceVehicle");
			SaveBeforeEventData(playerid);
			ConnectToRace(playerid,raceid);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+198)
	{
	    if(response)
	    {
			new id = GetPVarInt(playerid,"RaceID");
			JailCmdBlock(playerid);
			if(pStunt[playerid][sStuntID] != -1) return SM(playerid,"Kdy plní stunt, nemùe se pøipojit do závodu");
			if(IsPlayerSupplyRun(playerid)) return SM(playerid,"Právì plní misi, nemùe vykonat tuto akci");
			if(InDM[playerid] != -1) return SM(playerid,"V DeathMatchi se nemùe pøipojit do závodu "r"/leave");
			if(IsPlayerHitted(playerid)) return SM(playerid,"V boji se nemùe pøipojit do závodu");
			if(WorkMission[playerid] > 0) return SM(playerid,"U má nìco na práci "r"/zrusmisi");
			if(id < 0 || id > MAX_RACES) return SM(playerid,"Chybnì zadané ID");
			if(strlen(Race[id][CPName]) == 0) return SM(playerid,"Tento závod neexistuje");
			if(RacePlayer[playerid] > -1) return SM(playerid,"U si pøipojen v závodì");
			if(RaceReady[id] == false) return SM(playerid,"Závod není zaloen "g"/zavody");
			if(RaceStart[id] == true) return SM(playerid,"Tento závod u je odstartován");
			if(EventRace == id) return SM(playerid,"Tento závod u je zaloený jako Event závod");
			if(Points[playerid] < Race[id][RaceZapisne]) return SM(playerid,"Nemáte dostatek bodù pro pøipojení");
			CancelAntiSK(playerid);
		    SaveBeforeEventData(playerid);
			ConnectToRace(playerid,id);
			format(str,sizeof(str),"%s "w"%s "sb"se pøipojil do závodu "w"%s"sb" (Zápisné: %d bodù).",Players(playerid),Jmeno(playerid),Race[id][CPName],Race[id][RaceZapisne]);
			SCMTA(0x0055FFFF,str);
			format(str,sizeof(str),"Pro pøipojení pouij: "w"/race %d"sb".",id);
			SCMTA(0x0055FFFF,str);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+199)
	{
	    if(response)
	    {
	        SetPVarInt(playerid,"OriginalSkin",GetPlayerSkinEx(playerid));
	        SetPVarInt(playerid,"BuySkinID",listitem);
	        SetPlayerSkin(playerid,CustomSkin[listitem][sSkinID]+SHOP_SKIN);
			if(Player[playerid][pSkinOwned][listitem] == false)
		        format(str,sizeof(str),""dc"Chcete si koupit skin "sb"%s"dc" za "sb"%d bodù"dc"?",CustomSkin[listitem][sSkinName],CustomSkin[listitem][sSkinPrice]);
			else
		        format(str,sizeof(str),""dc"Chcete si nasadit skin "sb"%s"dc"?",CustomSkin[listitem][sSkinName],CustomSkin[listitem][sSkinPrice]);
	        SPD(playerid,UNNAMED+200,DIALOG_STYLE_MSGBOX,"Obchod se skiny",str,"Ano","Ne");
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+200)
	{
	    new oskin = GetPVarInt(playerid,"OriginalSkin"),id = GetPVarInt(playerid,"BuySkinID"),error = -1;
	    if(response)
	    {
			if(Player[playerid][pSkinOwned][id] == false)
			{
				if(Points[playerid] < CustomSkin[id][sSkinPrice]) error = 0;
				if(Level[playerid] < CustomSkin[id][sSkinLevel] && CustomSkin[id][sSkinLevel] >= 0) error = 1;
				else if(CustomSkin[id][sSkinLevel] == -1 && Elite[playerid] == false) error = 2;
				else if(CustomSkin[id][sSkinLevel] == -2 && Legend[playerid] == false) error = 3;
				if(error != -1) SetPlayerSkin(playerid,oskin);
			}
			switch(error)
			{
				case 0: SM(playerid,"Nemáte dostatek bodù");
				case 1: SM(playerid,"Nemáte dostateèný level");
				case 2: SM(playerid,"Musíte být èlen Elity (/help - Elita)");
				case 3: SM(playerid,"Musíte být na serveru Legendou");
			    default:
			    {

		        	SetPlayerSkinEx(playerid,CustomSkin[id][sSkinID]+SHOP_SKIN);
					if(Player[playerid][pSkinOwned][id] == false)
					{
				        new query[150];
				        mysql_format(mysql,query,sizeof(query),"INSERT INTO `Skins` (`Nick`,`SkinID`) VALUES('%e',%d)",Jmeno(playerid),id);
				        mysql_query(mysql,query,false);
				        Player[playerid][pSkinOwned][id] = true;
						GivePoints(playerid,-CustomSkin[id][sSkinPrice]);
						format(str,sizeof(str),""dc"Skin "sb"%s "dc"úspìnì zakoupen za "sb"%d bodù",CustomSkin[listitem][sSkinName],CustomSkin[listitem][sSkinPrice]);
						SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Obchod se skiny",str,"Zavøít","");
					}
					else
					{
						format(str,sizeof(str),""dc"Skin "sb"%s "dc"úspìnì nasazen",CustomSkin[listitem][sSkinName]);
						SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Obchod se skiny",str,"Zavøít","");
					}
				}
			}
		}
	    else
	    {
	        SetPlayerSkin(playerid,oskin);
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+201)
	{
	    if(response)
	    {
			new zavinace,tecky;
	        if(strlen(inputtext) < 4) return SPD(playerid,UNNAMED+201,DIALOG_STYLE_INPUT,"E-Mail","Zadejte Vá E-Mail (slouí pro obnovu hesla)","Zadat","Zavøít");
			if(strlen(inputtext) > 50) return SPD(playerid,UNNAMED+201,DIALOG_STYLE_INPUT,"E-Mail","Zadejte Vá E-Mail (slouí pro obnovu hesla)\n\n"r"Max. 50 znakù","Zadat","Zavøít");
			for(new i = 1; i < strlen(inputtext); i ++)
			{
			    if(inputtext[i] == '@')
					zavinace++;
				if(inputtext[i] == '.')
				    tecky++;
			}
			if(zavinace == 0 && tecky == 0) return SPD(playerid,UNNAMED+201,DIALOG_STYLE_INPUT,"E-Mail","Zadejte Vá E-Mail (slouí pro obnovu hesla)\n\n"r"Chybnì zadaný E-Mail","Zadat","Zavøít");
			format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
			DOF2_SetString(dfile,"Mail",inputtext);
			DOF2_SaveFile();
			format(Player[playerid][pMail],50,inputtext);
			format(str,sizeof(str),"E-Mail aktualizován: "sb"%s",inputtext);
			SPD(playerid,0,DIALOG_STYLE_MSGBOX,"E-Mail",str,"Zavøít","");
		}
	    return 1;
	}
	if(dialogid == UNNAMED+202)
	{
	    if(response)
	    {
	        if(Points[playerid] < 30) return SM(playerid,"Máte nedostatek bodù [ 30 ]");
	        if(Player[playerid][pHide] > 0) return SM(playerid,"U jsi skrytý na mapì");
	        GivePoints(playerid,-30);
	       	format(str,sizeof(str),"Skryl si se na mape na ~b~~h~%d minut",300/60);
			CreateInfoBox(playerid,str,5);
        	HidePlayer(playerid,300);
	 	}
	    return 1;
	}
	if(dialogid == UNNAMED+203)
	{
	    if(response)
	    {
	        new pid = GetPVarInt(playerid,"PropertyID");
	        switch(listitem)
	        {
	            case 0: ShowPlayerLevels(playerid,Property[pid][PropertyLevel],MAX_PROPERTY_LEVEL,0);
	            case 1: ShowPlayerLevels(playerid,Property[pid][PropertyCashLevel],MAX_PROPERTY_LEVEL,1);
	        }
	    }
	    return 1;
	}
	if(dialogid == UNNAMED+204)
	{
		if(response)
		{
            new pid = GetPVarInt(playerid,"PropertyID"),type = GetPVarInt(playerid,"LevelUpgradeType"),level = GetPVarInt(playerid,"LevelUpgrade"),price;
			if(!IsPlayerPropertyOwner(playerid,pid)) return SM(playerid,"Nejsi vlastníkem nemovitosti");
			switch(type)
			{
			    case 0:
			    {
					if(level <= Property[pid][PropertyLevel]) return SM(playerid,"Tento level u máte zakoupený");
					price = (level-Property[pid][PropertyLevel])*UPGRADE_COST;
					format(str,sizeof(str),"Nemáte dostatek bodù [ "g"%d "w"]",price);
			        if(Points[playerid] < price) return SM(playerid,str);
					format(str,sizeof(str),"%s "r"%s "w"si vylepil nemovitost (produkce) {0077FF}%s "w"[ LVL: %d -> %d ]",Players(playerid),Jmeno(playerid),Property[pid][PropertyName],Property[pid][PropertyLevel],level);
					printEx(str);
					Property[pid][PropertyLevel] = level;
					format(str,sizeof(str),"Produkce nemovitosti %s "w"vylepena na level "r"%d "w"za "g"%d bodù",Property[pid][PropertyName],Property[pid][PropertyLevel],price);
					SM(playerid,str);
					format(str,sizeof(str),"Prùmìrný výdìlek za hodinu: "g"%s$",Split(Property[pid][PropertyLevel]*EARNING_PER_LEVEL));
					SM(playerid,str);
			    }
			    case 1:
			    {
					if(level <= Property[pid][PropertyCashLevel]) return SM(playerid,"Tento level u máte zakoupený");
					price = (level-Property[pid][PropertyCashLevel])*UPGRADE_CASH_COST;
					format(str,sizeof(str),"Nemáte dostatek bodù [ "g"%d "w"]",price);
			        if(Points[playerid] < price) return SM(playerid,str);
					format(str,sizeof(str),"%s "r"%s "w"si vylepil nemovitost (kasa) {0077FF}%s "w"[ LVL: %d -> %d ]",Players(playerid),Jmeno(playerid),Property[pid][PropertyName],Property[pid][PropertyCashLevel],level);
					printEx(str);
					Property[pid][PropertyCashLevel] = level;
					format(str,sizeof(str),"Kasa nemovitosti %s "w"vylepena na level "r"%d "w"za "g"%d bodù",Property[pid][PropertyName],Property[pid][PropertyCashLevel],price);
					SM(playerid,str);
					format(str,sizeof(str),"Maximální moný obsah kasy: "g"%s$",Split(Property[pid][PropertyCashLevel]*CASH_PER_LEVEL));
					SM(playerid,str);
			    }
			}
	        GivePoints(playerid,-price);
	        GiveXP(playerid,30*level,"upgrade nemovitosti");
			format(dfile,sizeof(dfile),"UnNamed/Properties/Property%d.txt",pid);
			DOF2_SetInt(dfile,"Level",Property[pid][PropertyLevel]);
			DOF2_SetInt(dfile,"CashLevel",Property[pid][PropertyCashLevel]);
			DOF2_SaveFile();
			UpdatePropertyText(pid);
		}
		return 1;
	}
	if(dialogid == UNNAMED+205)
	{
	    if(response)
			StartAutoEvent(listitem);
	    return 1;
	}
	
/*	if(dialogid == UNNAMED+194)
	{
		if(response)
		{
            new id = GetPVarInt(playerid,"EPropertyID"),query[100];
		    switch(listitem)
		    {
		        case 0:
		        {
		            if(!IsPlayerEPropOwner(playerid,id))
					{
		                if(GetPlayerEPropsFreeSlots(playerid) == 0) return SM(playerid,"Nemáte volný ádný slot");
		                format(str,sizeof(str),"Nemáte dostatek bodù ("g"%s"w").",EPROP_PRICE);
		                if(Points[playerid] < EPROP_PRICE) return SM(playerid,str);
		                GivePoints(playerid,-EPROP_PRICE);
		                Player[playerid][eProp][GetPlayerEPropsFreeSlot(playerid)] = id;
		                mysql_format(mysql,query,sizeof(query),"INSERT INTO `EliteProps` (`Nick`,`ElitePropID`) VALUES ('%e','%d')",Jmeno(playerid),id);
		                mysql_query(mysql,query,false);
						format(str,sizeof(str),"Nemovitost "g"%s "w"úspnì zakoupena za "g"%d bodù",ePropsNames[eProps[id][ePInt]],EPROP_PRICE);
						SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Nemovitost zakoupena",str,"Zavøít","");
					}
					else
					{
					    new intid = eProps[id][ePInt];
					    SetPlayerPos(playerid,ElitePropsInteriors[intid][0],ElitePropsInteriors[intid][1],ElitePropsInteriors[intid][2]);
					    SetPlayerFacingAngle(playerid,ElitePropsInteriors[intid][3]);
					}
		        }
		        case 1:
		        {
					format(str,sizeof(str),"Opravdu si pøejete prodat nemovitost "g"%s",ePropsNames[eProps[id][ePInt]]);
		            SPD(playerid,UNNAMED+195,DIALOG_STYLE_MSGBOX,"Prodat nemovitost",str,"Ano","Ne");
		        }
		    }
		}
		return 1;
	}
	if(dialogid == UNNAMED+195)
	{
	    if(response)
	    {
         	new id = GetPVarInt(playerid,"EPropertyID"),query[100],id2 = GetPlayerEPropSlot(playerid,id);
			if(id == -1) return SM(playerid,"Tuto elitní nemovitost nevlastní");
			Player[playerid][eProp][id2] = -1;
			mysql_format(mysql,query,sizeof(query),"DELETE FROM `EliteProps` WHERE `Nick`='%e' AND `ElitePropID`=%d",Jmeno(playerid),id);
			mysql_query(mysql,query,false);
			format(str,sizeof(str),"Nemovitost "g"%s "w"úspnì prodána",ePropsNames[eProps[id][ePInt]]);
			SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Nemovitost prodána",str,"Zavøít","");
	    }
	    return 1;
	}
*/	if(dialogid == D_DIALOG+1)
	{
	    if(response)
	    {
	        if(listitem < MAX_DUELS)
	        {
				SetPVarInt(playerid,"LastID",listitem);
				switch(Duel[listitem][DuelStatus])
				{
					case DUEL_STATUS_FREE:
					{
						Duel[listitem][DuelStatus] = DUEL_STATUS_CREATING;
						dPlayer[playerid][pDuelRoom] = listitem;
						dPlayer[playerid][pDuelStatus] = 0;
						SetPVarInt(playerid,"Page",0);
						SPD(playerid,D_DIALOG+2,DIALOG_STYLE_INPUT,"Duel - Vytvoøení duelu","Zadejte ID zbranì, se kterou chcete duel vytvoøit",""g"Dalí","Zpìt");
					}
					case DUEL_STATUS_CONNECT:
					{
						Duel[listitem][DuelStatus] = DUEL_STATUS_WAIT;
						JoinDuel(playerid,listitem,1);
					    format(str,sizeof(str),"Hráè "w"%s "co"se pøipojil do duelu (%d) proti hráèi "w"%s"co".",Jmeno(playerid),listitem+1,Jmeno(Duel[listitem][DuelPlayer][0]));
						SCMTA(ORANGE,str);
						format(str,sizeof(str),"[ Zbraò "w"%s "co" | Poèet kol: "w"%d "co"].",WeaponsNames(Duel[listitem][DuelWeapon]),Duel[listitem][DuelRounds]);
						SCMTA(ORANGE,str);
						SCM(playerid,ORANGE,"Pro odchod z duelu pouijte "w"/leave");
						dPlayer[playerid][pDuelStatus] = 1;
						dPlayer[playerid][pDuelRoom] = listitem;
					}
					case DUEL_STATUS_STARTED,DUEL_STATUS_WAIT:
					{
					    format(str,sizeof(str),"Pøejete sledovat duel (%d) "c"%s "w"vs. "g"%s "w"se zbraní "r"%s",listitem+1,Jmeno(Duel[listitem][DuelPlayer][0]),Jmeno(Duel[listitem][DuelPlayer][1]),WeaponsNames(Duel[listitem][DuelWeapon]));
					    SPD(playerid,D_DIALOG+3,DIALOG_STYLE_MSGBOX,"Sledovat duel",str,""g"Ano","Zpìt");
					}
					case DUEL_STATUS_CREATING:
					{
					    SM(playerid,"V této místností vytváøí duel jiný hráè");
					    ShowDuelDialog(playerid);
					}
				}
		    }
		    else if(listitem == MAX_DUELS)
		    {
				new DIALOG[1500];
				for(new i; i < 46; i ++)
					if(IsWeaponValid(i)){
						format(str,sizeof(str),"%s ("g"%d"w")\n",WeaponsNames(i),i);
						strcat(DIALOG,str);
						}
				SPD(playerid,D_DIALOG+4,DIALOG_STYLE_LIST,"ID Zbraní",DIALOG,"Vybrat","Zpìt");
			}
			else
			{
			    new DIALOG[250];
				format(str,sizeof(str),"Vyhráno kol:\t"g"%d\nProhráno kol:\t"g"%d\nRatio V/P:\t"g"%0.2f\n",DuelWins[playerid],DuelLose[playerid],float((DuelWins[playerid]+1))/float((DuelLose[playerid]+1)));
				strcat(DIALOG,str);
			    SPD(playerid,D_DIALOG+5,DIALOG_STYLE_TABLIST,"Statistiky",DIALOG,"Zpìt","");
			}
		}
	    return 1;
	}
	if(dialogid == D_DIALOG+2)
	{
	    new page = GetPVarInt(playerid,"Page"),room = GetPVarInt(playerid,"LastID");
	    if(response)
	    {
	        switch(page)
	        {
	            case 0:
	            {
	                if(!IsNumeric(inputtext) || !strlen(inputtext)) return SPD(playerid,D_DIALOG+2,DIALOG_STYLE_INPUT,"Duel - Vytvoøení duelu","Zadejte ID zbranì, se kterou chcete duel vytvoøit\n\n"r"Pouijte pouze ID zbranì (èíslo)",""g"Dalí","Zpìt");
					new id = strval(inputtext);
					if(!IsWeaponValid(id)) return SPD(playerid,D_DIALOG+2,DIALOG_STYLE_INPUT,"Duel - Vytvoøení duelu","Zadejte ID zbranì, se kterou chcete duel vytvoøit\n\n"r"Chybnì zadané ID zbranì",""g"Dalí","Zpìt");
					Duel[room][DuelWeapon] = id;
				    SPD(playerid,D_DIALOG+2,DIALOG_STYLE_INPUT,"Duel - Vytvoøení duelu","Zadejte poèet kol, se kterým chcete duel vytvoøit",""g"Dalí","Zpìt");
				}
				case 1:
				{
				    if(!IsNumeric(inputtext) || !strlen(inputtext)) return SPD(playerid,D_DIALOG+2,DIALOG_STYLE_INPUT,"Duel - Vytvoøení duelu","Zadejte poèet kol, se kterým chcete duel vytvoøit\n"r"Pouijte pouze poèet kol (èíslo)",""g"Dalí","Zpìt");
					new rounds = strval(inputtext);
					format(str,sizeof(str),"Zadejte poèet kol, se kterým chcete duel vytvoøit\n"r"Rozmezí kol je od %d - %d",MIN_ROUNDS,MAX_ROUNDS);
					if(rounds < MIN_ROUNDS || rounds > MAX_ROUNDS) return SPD(playerid,D_DIALOG+2,DIALOG_STYLE_INPUT,"Duel - Vytvoøení duelu",str,""g"Dalí","Zpìt");
					Duel[room][DuelRounds] = rounds;
					Duel[room][DuelStatus] = DUEL_STATUS_CONNECT;
					JoinDuel(playerid,room,0);
				    format(str,sizeof(str),"Hráè "w"%s "co"zaloil duel (%d) se zbraní "w"%s "co"[ Poèet kol: "w"%d "co"].",Jmeno(playerid),room+1,WeaponsNames(Duel[room][DuelWeapon]),Duel[room][DuelRounds]);
					SCMTA(ORANGE,str);
					SCM(playerid,ORANGE,"Pro odchod z duelu pouijte "w"/leave");
				}
	        }
	        SetPVarInt(playerid,"Page",page+1);
	    }
	    else
	    {
	        SetPVarInt(playerid,"Page",page-1);
	        switch(page)
	        {
	            case 0:
				{
     				Duel[room][DuelStatus] = DUEL_STATUS_FREE;
					ShowDuelDialog(playerid);
					dPlayer[playerid][pDuelStatus] = -1;
					dPlayer[playerid][pDuelRoom] = -1;
				}
	            case 1: SPD(playerid,D_DIALOG+2,DIALOG_STYLE_INPUT,"Duel - Vytvoøení duelu","Zadejte ID zbranì, se kterou chcete duel vytvoøit",""g"Dalí","Zpìt");
	        }
	    }
	    return 1;
	}
	if(dialogid == D_DIALOG+3)
	{
	    if(response)
	    {
	        new rand = random(2),room = GetPVarInt(playerid,"LastID");
            SaveBeforeEventData(playerid);
			TogglePlayerSpectating(playerid,true);
			SetPlayerVirtualWorld(playerid,DUEL_WORLD+room);
			for(new i; i <= GetPlayerPoolSize(); i ++)
			    if(IPC(i) && dPlayer[i][pDuelRoom] == room)
			    {
					format(str,sizeof(str),"%s "w"%s "co"pøiel sledovat tento duel",Players(playerid),Jmeno(playerid));
				    SCM(i,ORANGE,str);
				}
			dPlayer[playerid][pDuelSpec] = rand;
			dPlayer[playerid][pDuelRoom] = room;
			dPlayer[playerid][DuelPlayer] = rand;
			dPlayer[playerid][pDuelStatus] = 1;
            PlayerSpectatePlayer(playerid,Duel[room][DuelPlayer][rand]);
			for(new x; x < MAX_DUEL_TD; x ++)
			{
		        PlayerTextDrawSetString(playerid,DuelTD[playerid][x],"_");
		        PlayerTextDrawShow(playerid,DuelTD[playerid][x]);
			}
			SCM(playerid,ORANGE,"Pro vypnutí sledování duelu pouíjte "w"/leave"co", pro zmìnu hráèe stisknìte "w"ENTER");
		}
		else ShowDuelDialog(playerid);
		return 1;
	}
	if(dialogid == D_DIALOG+4)
	{
		if(response)
		{
		    for(new i; i <= listitem; i ++)
		    {
		        if(!IsWeaponValid(i))
		            listitem++;
		    }
			for(new i; i < MAX_DUELS; i ++)
			    if(Duel[i][DuelStatus] == DUEL_STATUS_FREE)
			    {
					Duel[i][DuelStatus] = DUEL_STATUS_CREATING;
					dPlayer[playerid][pDuelRoom] = i;
					dPlayer[playerid][pDuelStatus] = 0;
					SetPVarInt(playerid,"Page",1);
					Duel[i][DuelWeapon] = listitem;
				    SPD(playerid,D_DIALOG+2,DIALOG_STYLE_INPUT,"Duel - Vytvoøení duelu","Zadejte poèet kol, se kterým chcete duel vytvoøit",""g"Dalí","Zpìt");
			        break;
			    }
		}
		else ShowDuelDialog(playerid);
	    return 1;
	}
	if(dialogid == D_DIALOG+5)
	{
	    ShowDuelDialog(playerid);
	    return 1;
	}
	if(dialogid == DIALOG_BULLETS)
	{
	    if(response)
	    {
	        if(listitem == 0)
	        {
	            if(EB[playerid] == 0)
				{
					if(Naboje[playerid] < 1) return SCM(playerid,red,"[ ! ] "w"Nemùe si aktivovat výbuné náboje, kdy ádné nevlastní !");
					EB[playerid] = 1;
					CreateInfoBox(playerid,"Vybusne naboje ~g~Aktivovany",5);
				}
				else if(EB[playerid] == 1)
				{
					EB[playerid] = 0;
					CreateInfoBox(playerid,"Vybusne naboje ~r~Deaktivovany",5);
				}
	        }
	        if(listitem == 1)
	        {
				format(str,sizeof(str),""g"Napi poèet nábojù, kolik si jich chce koupit. Cena jednoho náboje je "c"%d "g"$",DOF2_GetInt(CONFIG,"Cena"));
				SPD(playerid,DIALOG_BUYBULLETS,DIALOG_STYLE_INPUT,""c"Obchod",str,"Koupit","Zavøit");
	        }
			if(listitem == 2)
			{
			    SPD(playerid,DIALOG_GIVEBULLETS,DIALOG_STYLE_INPUT,""c"Dát náboje",""g"Napite ID hráèe, poèet nábojù (oddìlujte mezerou)","Darovat","Zavøít");
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_BUYBULLETS)
	{
		if(response)
	    {
			new mnozstvi;
			if(sscanf(inputtext,"i",mnozstvi)) return SPD(playerid,DIALOG_BUYBULLETS,DIALOG_STYLE_INPUT,""c"Obchod",""g"Nezadal si poèet nábojù !","Koupit","Zavøít");
			format(str,sizeof(str),""g"ERROR: Chybnì zadané naboje ( "c"%d "g").",mnozstvi);
			if(mnozstvi < 1 || mnozstvi > 1000000) return SPD(playerid,DIALOG_BUYBULLETS,DIALOG_STYLE_INPUT,""c"Obchod",str,"Koupit","Zavøít");
			format(str,sizeof(str),""g"Nemá dostatek penìz ( Potøeba: "c"%d )",DOF2_GetInt(CONFIG,"Cena")*mnozstvi);
			if(GetMoney(playerid) < DOF2_GetInt(CONFIG,"Cena")*mnozstvi) return SPD(playerid,DIALOG_BUYBULLETS,DIALOG_STYLE_INPUT,""c"Obchod",str,"Koupit","Zavøít");
			Naboje[playerid] += mnozstvi;
			format(str,sizeof(str),"Koupil jste si vybusne streli: ~n~[~y~Mnozstvi: ~g~%d ~w~/ ~y~Cena: ~b~%d~g~$ ~w~/ ~y~Celkem: ~b~%d~w~]",mnozstvi,DOF2_GetInt(CONFIG,"Cena")*mnozstvi,Naboje[playerid]);
			CreateInfoBox(playerid,str,10);
			GiveMoney(playerid,-DOF2_GetInt(CONFIG,"Cena")*mnozstvi,"Zakoupení výbuného náboje");
			format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
			DOF2_SetInt(dfile,"Naboje",Naboje[playerid]);
			DOF2_SaveFile();
			format(str,sizeof(str),"%s(%d) gets %d ebullets",Jmeno(playerid),playerid,mnozstvi);
			printEx(str);
		}
		return 1;
	}
	if(dialogid == DIALOG_GIVEBULLETS)
	{
	    if(response)
	    {
			new mnozstvi,id,DIALOG_GIVEBULLET[1000];
			if(sscanf(inputtext,"ii",id,mnozstvi)) return SPD(playerid,DIALOG_GIVEBULLETS,DIALOG_STYLE_INPUT,""c"Dát náboje",""g"Pouij ID mezera Mnoství nábojù","Dát","Zavøít");
			format(str,sizeof(str),""g"Hráè s ID: "c"%d "g"není pøipojen\n",id);
			strcat(DIALOG_GIVEBULLET,str);
			if(!IsPlayerConnected(id)) return SPD(playerid,DIALOG_GIVEBULLETS,DIALOG_STYLE_INPUT,""c"Dát náboje",DIALOG_GIVEBULLET,"Dát","Zavøít");
			format(str,sizeof(str),""g"ERROR: Chybnì zadané naboje ( "c"%d "g").",mnozstvi);
			if(mnozstvi < -1000000  || mnozstvi > 1000000) return SPD(playerid,DIALOG_GIVEBULLETS,DIALOG_STYLE_INPUT,""c"Dát náboje",str,"Dát","Zavøít");
			Naboje[id] += mnozstvi;
			format(str,sizeof(str),"%s "w"%s "r"dal hráèi "w"%s "r"výbuné náboje (Mnoství: "c"%d "r")",Players(playerid),Jmeno(playerid),Jmeno(id),mnozstvi);
			SCMTA(red,str);
			format(dfile,sizeof(dfile),USER_FILES,Jmeno(id));
			DOF2_SetInt(dfile,"Naboje",Naboje[id]);
			DOF2_SaveFile();
			format(str,sizeof(str),"%s(%d) gets %d ebullets",Jmeno(playerid),playerid,mnozstvi);
			printEx(str);
		}
		return 1;
	}
	return 0;
}
//============================================================================//
forward EventProgress();

public EventProgress()
{
	if(RunEvent > 0)
	{
		if(RunEvent == 8 && EventState > 0)
		{
		    EventTime[1] ++;
		    new text[100];
		    format(text,sizeof(text),"Zona bude zmensena za: ~w~%s",SecondsToMinutes(120-EventTime[1]%120));
		    TextDrawSetString(Textdraw44,text);
			if(EventTime[1]%120 == 0)
			{
				new Float:PUBGZony[][4] =
				{
				 	{-2630.0, -2945.0, 87.0, -1545.0},
				 	{-2313.0, -2931.0, -603.0, -1498.0},
				 	{-2320.0, -2846.0, -1825.0, -1998.0},
				 	{-2250.0, -2544.0, -2079.0, -2225.0},
				 	{-2240.0, -2357.0, -2175.0, -2282.0}
				},rlid = EventState;
				if(EventState <= sizeof(PUBGZony))
				{
					EventRadiusPos[0] = PUBGZony[EventState-1][2];
					EventRadiusPos[1] = PUBGZony[EventState-1][0];
					EventRadiusPos[2] = PUBGZony[EventState-1][3];
					EventRadiusPos[3] = PUBGZony[EventState-1][1];
					GangZoneDestroy(EventZone[0]);
					GangZoneDestroy(EventZone[1]);
					EventZone[0] = GangZoneCreate(EventRadiusPos[1],EventRadiusPos[3],EventRadiusPos[0],EventRadiusPos[2]);
					if(rlid < sizeof(PUBGZony)){
						EventZone[1] = GangZoneCreate(PUBGZony[rlid][0],PUBGZony[rlid][1],PUBGZony[rlid][2],PUBGZony[rlid][3]);
						format(text,sizeof(text),"Zona zmenena, dostante se do ~g~zelene ~w~zony, pred vyprsenim casu");
					}
					else
						format(text,sizeof(text),"Zona zmenena, dostante se do posledni zony, pred vyprsenim casu");
					for(new i; i <= GetPlayerPoolSize(); i ++)
					{
					    if(IPC(i) && OnEvent[i] == true){
					        GangZoneShowForPlayer(i,EventZone[0],0xFFFFFF80);
							CreateInfoBox(i,text,5);
	                        if(rlid < sizeof(PUBGZony))
					    	    GangZoneShowForPlayer(i,EventZone[1],0x00FF0080);
							else
							    TextDrawHideForPlayer(i,Textdraw44);
						}
					}
					EventState++;
				}
			}
		}
	    EventTime[0]++;
		format(str,sizeof(str),"~y~%d %s ~w~probiha event ~g~%s ~w~na eventu je: ~r~%d %s",EventTime[0]/60,PluralWord(EventTime[0]/60,"minutu","minuty","minut"),EventName,EventPlayers,PluralWord(EventPlayers,"hrac","hraci","hracu"));
        TextDrawDiakritika(str);
		TextDrawSetString(Textdraw3,str);
		EventTimer = SetTimer("EventProgress",1000,false);
		if(EventTime[0]/60 == 30 && BotEvent == true)
		{
		    CallLocalFunction("cmd_eventend","i",botid);
		    CallLocalFunction("cmd_dann","is",botid," ");
		}
	}
	else
	{
	    KillTimer(EventTimer);
	    EventTimer = 0;
	}
	return 1;
}

forward Rob(playerid,propid);
forward ReloadRobbery(propid);

public ReloadRobbery(propid)
{
	Property[propid][PropertyRobbed] = false;
	return 1;
}

public Rob(playerid,propid)
{
	if(RobTime[playerid] > 0)
	{
		if(IsPlayerInRangeOfPoint(playerid,20,Property[propid][PropertyX],Property[propid][PropertyY],Property[propid][PropertyZ]))
		{
		    RobTime[playerid]--;
			if(RobTime[playerid] > 0)
			{
				SetTimerEx("Rob",1000,false,"ii",playerid,propid);
				format(str,sizeof(str),"00:%02d",RobTime[playerid]);
				PlayerTextDrawSetString(playerid,Textdraw26[playerid],str);
			}
   			else if(RobTime[playerid] == 0)
			{
				new weapons[] = {0,1,14,17,40,41,42,43,44,45,46};
				for(new i; i < sizeof(weapons); i ++)
				{
					if(GetPlayerWeapon(playerid) == weapons[i])
					{
						SM(playerid,"Musíte mít v ruce zbraò");
					    PlayerTextDrawHide(playerid,Textdraw26[playerid]);
					    RobTime[playerid] = 0;
						Property[propid][PropertyRobbed] = false;
						return 0;
					}
				}
			    new rand = 30000+random((15000*Property[propid][PropertyLevel])/2);
				Property[propid][PropertyEarning] -= rand;
				Property[propid][PropertyRobbed] = true;
				SetTimerEx("ReloadRobbery",1000*60*30,false,"i",propid);
				GiveMoney(playerid,rand,"Vykradení nemovitosti");
				SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+1);
				format(str,sizeof(str),"%s "w"%s {D60000}pøepadl nemovitost "w"%s {D60000}ukradl "g"%s$",Players(playerid),Jmeno(playerid),Property[propid][PropertyName],Split(rand));
				SCMTA(0xD60000FF,str);
				GiveXP(playerid,10+random(20),"prepadena nemovitost");
				GivePlayerDailyValue(playerid,DAILY_TYPE_ROB,1);
			    PlayerTextDrawHide(playerid,Textdraw26[playerid]);
			    Robs[playerid] ++;
			    format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
			    DOF2_SetInt(dfile,"Vykradl",Robs[playerid]);
			    DOF2_SaveFile();
			    if(Achiv[playerid][ROB_10] == 0)
			    {
			        if(Robs[playerid] >= 10)
			        {
			            SetPlayerAchievement(playerid,ROB_10);
			        }
			    }
			    if(Achiv[playerid][ROB_75] == 0)
			    {
			        if(Robs[playerid] >= 75)
			        {
			            SetPlayerAchievement(playerid,ROB_75);
			        }
			    }
			    if(Achiv[playerid][ROB_150] == 0)
			    {
			        if(Robs[playerid] >= 150)
			        {
			            SetPlayerAchievement(playerid,ROB_150);
			        }
			    }
				for(new i; i <= GetPlayerPoolSize(); i ++)
				{
				    if(IPC(i) && !IsPlayerNPC(i))
				    {
				        if(strcmp(Property[propid][PropertyOwner],"0",false) != 0)
				        {
				            if(IsPlayerPropertyOwner(i,propid))
				            {
				                format(str,sizeof(str),"Byla pøepadena Vae nemovitost {FF8C00}%s {00FFFF}hráèem {FF8C00}%s {00FFFF}.",Property[propid][PropertyName],Jmeno(playerid));
								SCM(i,0x00FFFFFF,str);
								format(str,sizeof(str),"Bylo ukradeno {FF8C00}%s${00FFFF}.",Split(rand));
								SCM(i,0x00FFFFFF,str);
							}
				        }
				    }
				}
			}
		}
		else
		{
			Property[propid][PropertyRobbed] = false;
		    RobTime[playerid] = 0;
		    PlayerTextDrawHide(playerid,Textdraw26[playerid]);
		    CreateInfoBox(playerid,"Prilis jste se vzdalil od nemovitosti",3);
		}
	}
	return 1;
}
//============================================================================//
forward TimeToStart(raceid);
forward TimeToEndRace(raceid);

public TimeToEndRace(raceid)
{
	if(TimeToStartSeconds[raceid] > -1)
	{
		TimeToStartSeconds[raceid] --;
		SetTimerEx("TimeToEndRace",1000,false,"i",raceid);
		new text[50];
		format(text,sizeof(text),"~w~Zavod bude ukoncen za~n~~r~%d sekund",TimeToStartSeconds[raceid]);
		for(new i; i <= GetPlayerPoolSize(); i ++)
		{
		    if(IPC(i) && !IsPlayerNPC(i))
		    {
		        if(RacePlayer[i] == raceid)
		        {
		            GameTextForPlayer(i,text,1500,4);
		        }
		    }
		}
		if(TimeToStartSeconds[raceid] == 0)
		{
			for(new i; i <= GetPlayerPoolSize(); i ++)
			{
			    if(IPC(i) && !IsPlayerNPC(i))
			    {
			        if(RacePlayer[i] == raceid)
			        {
			            CancelEvent(i,"Doel èas");
			            GameTextForPlayer(i,str,1500,4);
					    DestroyVehicle(Ecar[i]);
					    Ecar[i] = 0;
					    SetPlayerVirtualWorld(i,0);
					    RacePlayer[i] = -1;
						DisablePlayerRaceCheckpoint(i);
						PlayerCP[i] = 0;
						RaceSeconds[i] = 0;
						RaceMinutes[i] = 0;
						TextDrawHideForPlayer(i,Textdraw20);
						PlayerTextDrawHide(i,Textdraw22[i]);
						PlayerTextDrawHide(i,Textdraw23[i]);
						TextDrawHideForPlayer(i,Textdraw21);
						PlayerTextDrawHide(i,Textdraw24[i]);
						DisableRemoteVehicleCollisions(i,0);
					    LoadBeforeEventData(i);
			        }
			    }
			}
			pozice[raceid] = 0;
			Race[raceid][RaceZapisne] = 0;
			Race[raceid][RaceWin] = 0;
			RaceReady[raceid] = false;
			RaceStart[raceid] = false;
			RacePlayers[raceid] = 0;
			if(EventRace == raceid && BotEvent == true)
			{
		        CallLocalFunction("cmd_eventend","is",botid," ");
		        CallLocalFunction("cmd_dann","is",botid," ");
			}
		}
	}
	return 1;
}

public TimeToStart(raceid)
{
	if(TimeToStartSeconds[raceid] > 0)
	{
		if(RacePlayers[raceid] > 0)
		{
			SetTimerEx("TimeToStart",1000,false,"i",raceid);
			TimeToStartSeconds[raceid] --;
			if(TimeToStartSeconds[raceid] == 40 || TimeToStartSeconds[raceid] == 20 || TimeToStartSeconds[raceid] == 10)
			{
			    format(str,sizeof(str),"Závod "w"%s "sb"bude odstartován za "w"%02d "sb"sekund "w"/race %d",Race[raceid][CPName],TimeToStartSeconds[raceid],raceid);
				SCMTA(0x0055FFFF,str);
				if(Race[raceid][RaceZapisne] > 0)
				{
					format(str,sizeof(str),"Zápisné: "w"%d bodù "sb"| Aktuální výhra: "w"%d bodù"sb".",Race[raceid][RaceZapisne],Race[raceid][RaceWin]);
					SCMTA(0x0055FFFF,str);
				}
			}
			if(TimeToStartSeconds[raceid] == 0)
			{
			    if(RacePlayers[raceid] < 2)
			    {
			        format(str,sizeof(str),"Závod "w"%s "sb"byl zruený z dùvodu nedostatku hráèù.",Race[raceid][CPName]);
			        SCMTA(0x0055FFFF,str);
					for(new i; i <= GetPlayerPoolSize(); i ++)
					{
						if(RacePlayer[i] == raceid)
						{
						    if(IPC(i))
						    {
							    GivePoints(i,Race[raceid][RaceZapisne]);
							    format(str,sizeof(str),"%s %s back %d points from race",Players(i),Jmeno(i),Race[raceid][RaceZapisne]);
							    printEx(str);
							    TogglePlayerControllable(i,true);
							    DestroyVehicle(Ecar[i]);
							    Ecar[i] = 0;
							    SetPlayerVirtualWorld(i,0);
							    RacePlayer[i] = -1;
								DisableRemoteVehicleCollisions(i,0);
							    LoadBeforeEventData(i);
							}
						}
					}
					RaceReady[raceid] = false;
					RaceStart[raceid] = false;
					Race[raceid][RaceWin] = 0;
					Race[raceid][RaceZapisne] = 0;
					RacePlayers[raceid] = 0;
				}
			    else
			    {
			        format(str,sizeof(str),"Závod "w"%s "sb"byl odstartován.",Race[raceid][CPName]);
			        SCMTA(0x0055FFFF,str);
			        RaceStart[raceid] = true;
					for(new i; i <= GetPlayerPoolSize(); i ++)
					{
						if(RacePlayer[i] == raceid)
						{
							DisablePlayerRaceCheckpoint(i);
							TogglePlayerControllable(i,false);
				   			SetTimerEx("raceOdpocet",1000,false,"i",i);
							PlayerPlaySound(i,1056,0.0,0.0,0.0);
							RaceOdpocet[i] = 5;
							SetCameraBehindPlayer(i);
							RaceSeconds[i] = 0;
							RaceMinutes[i] = 0;
							format(str,sizeof(str),"~y~%d",RaceOdpocet[i]);
							GameTextForPlayer(i,str,1000,3);
						}
					}
			    }
			}
		}
		else
		{
		    TimeToStartSeconds[raceid] = 0;
		}
	}
	return 1;
}



forward Dodpocet(playerid);

public Dodpocet(playerid)
{
	dos[playerid]--;
	if(dos[playerid] > -1)
	{
	    SetTimerEx("Dodpocet",1000,false,"i",playerid);
		format(str,sizeof(str),"~r~%d",dos[playerid]);
		GameTextForPlayer(playerid,str,1000,3);
		if(dos[playerid] == 0)
		{
			GameTextForPlayer(playerid,"~g~START !!",1000,3);
			TogglePlayerControllable(playerid,true);
		}
	}
	return 1;
}

forward IsPlayerPlayMusic(playerid);

public IsPlayerPlayMusic(playerid)
{
	if(Listening[playerid] > -1) return 1;
	if(BlockedStream[playerid] == 0)
	{
		if(MusicTimeSeconds > 0 && MusicTimeMinutes > 0) return 1;
	}
	return 0;
}

forward HideXP(playerid);

public HideXP(playerid)
{
	PlayerTextDrawHide(playerid,Textdraw30[playerid]);
}

#define aid "{ACACAC}"
#define aip "{0055FF}"
#define ais "{FFFF00}"

forward SetPlayerSpawn(playerid,spawntype);
forward GetPlayerSpawn(playerid);

public SetPlayerSpawn(playerid,spawntype)
{
	SpawnType[playerid] = spawntype;
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	DOF2_SetInt(dfile,"SpawnType",spawntype);
	DOF2_SaveFile();
	return 1;
}

public GetPlayerSpawn(playerid)
{
	return SpawnType[playerid];
}

forward IsPlayerWorking(playerid);

public IsPlayerWorking(playerid)
{
	if(WorkMission[playerid] > 0) return 1;
	return 0;
}

forward IsPlayerInDM(playerid);

public IsPlayerInDM(playerid)
{
	if(InDM[playerid] != -1) return 1;
	return 0;
}

forward IsPlayerHasBlockedGangInvites(playerid);

public IsPlayerHasBlockedGangInvites(playerid)
{
	if(BlockedGangInvite[playerid] == true) return 1;
	return 0;
}

function GetPlayerLevel(playerid)
{
	return Level[playerid];
}

forward BuyPoints(nick[],Float:pocet);

public BuyPoints(nick[],Float:pocet)
{
    new id = GetPlayerIdFromName(nick);
	if(IsPlayerConnected(id))
	{
	    new donatefile[50];
		format(donatefile,sizeof(donatefile),USER_FILES,Jmeno(id));
		Donate[id] += pocet;
		DOF2_SetFloat(donatefile,"Donate",Donate[id]);
		DOF2_SaveFile();
		GiveXP(id,pocet/2,"donate",false);
  		GivePoints(id,pocet);
	}
	else
	{
	    format(dfile,sizeof(dfile),USER_FILES,nick);
		if(fexist(dfile))
		{
			DOF2_SetFloat(dfile,"Body",DOF2_GetFloat(dfile,"Body")+pocet);
			DOF2_SetFloat(dfile,"Donate",DOF2_GetFloat(dfile,"Donate")+pocet);
            DOF2_SaveFile();
		}
	}
	return 1;
}

forward PlayAdminAudioStream(urladress[]);

public PlayAdminAudioStream(urladress[])
{
	KillTimer(TimerStream);
	TimerStream = 0;
	format(url,sizeof(url),urladress);
    for(new i; i <= GetPlayerPoolSize(); i ++)
    {
		if(IPC(i) && !IsPlayerNPC(i))
		{
		    if(Listening[i] == -1 && BlockedStream[i] == 0)
		    {
				StopAudioStreamForPlayer(i);
		        PlayAudioStreamForPlayer(i,urladress);
		    }
			else if(Listening[i] != -1)
			{
	  			SM(i,"Má zaplé radio, pokud chce pøehrát audio stream");
			    SM(i,"Pouij pøíkaz: "c"/prehrat");
			}
			else if(BlockedStream[i] == 1)
			{
			    SM(i,"Má bloknutý stream, pokud chce pøehrát tento stream,");
			    SM(i,"Pouij pøíkaz: "c"/prehrat");
			}
		}
	}
	MusicTimeMinutes = 4;
	MusicTimeSeconds = 0;
	TimerStream = SetTimer("UnBlockMusic",1000,false);
	return 1;
}

forward MutePlayer(playerid,time);
forward BlockPlayerCommands(playerid,time);

public BlockPlayerCommands(playerid,time)
{
	CBLOCK[playerid] = time*60;
	GivePenaltyPoints(Jmeno(playerid),time/60,BOT_NAME,"Bloknutí pøíkazù","Neznámý dùvod");
	if(time != 0)
	{
		CBlockTimer[playerid] = SetTimerEx("TCblock",1000,false,"i",playerid);
  	}
	return 1;
}

public MutePlayer(playerid,time)
{
	Mute[playerid] = time*60;
	GivePenaltyPoints(Jmeno(playerid),time/60,BOT_NAME,"Umlèení","Neznámý dùvod");
	if(time != 0)
	{
		MuteTimer[playerid] = SetTimerEx("TMute",1000,false,"i",playerid);
	}
	return 1;
}

forward SendChatMessage(nick[],text[]);

public SendChatMessage(nick[],text[])
{
	format(dfile,sizeof(dfile),USER_FILES,nick);
	if(fexist(dfile))
	{
	    new Text[2][69];
	    if(strlen(text) > 60)
	    {
	    	strmid(Text[0],text,0,60);
	    	strmid(Text[1],text,60,128);
			if(DOF2_GetInt(dfile,"VIP") == 0)
			{
				format(str,sizeof(str),"{%06x}%s"w": "w"%s",DOF2_GetInt(dfile,"BarvaNicku") >>> 8,nick,Text[0]);
				SCMTA(bila,str);
			}
			else if(DOF2_GetInt(dfile,"VIP") == 1 || DOF2_GetInt(dfile,"Admin level") > 0)
			{
				format(str,sizeof(str),"{%s}[ %s {%s}] {%06x}%s"w": {%s}%s",DOF2_GetString(dfile,"BarvaTitulu"),DOF2_GetString(dfile,"Prefix"),DOF2_GetString(dfile,"BarvaTitulu"),DOF2_GetInt(dfile,"BarvaNicku") >>> 8,nick,DOF2_GetString(dfile,"BarvaTextu"),Text[0]);
				SCMTA(bila,str);
			}
			if(DOF2_GetInt(dfile,"VIP") == 0)
			{
				format(str,sizeof(str),"%s",Text[1]);
			}
			else if(DOF2_GetInt(dfile,"VIP") == 1 || DOF2_GetInt(dfile,"Admin level") > 0)
			{
				format(str,sizeof(str),"{%s}%s",DOF2_GetString(dfile,"BarvaTextu"),Text[1]);
			}
			SCMTA(bila,str);
		}
		else
		{
	    	if(DOF2_GetInt(dfile,"VIP") == 0)
	    	{
				format(str,sizeof(str),"{%06x}%s"w": "w"%s",DOF2_GetInt(dfile,"BarvaNicku") >>> 8,nick,text);
				SCMTA(bila,str);
			}
			else if(DOF2_GetInt(dfile,"VIP") == 1 || DOF2_GetInt(dfile,"Admin level") > 0)
			{
				format(str,sizeof(str),"{%s}[ %s {%s}] {%06x}%s:"w" {%s}%s",DOF2_GetString(dfile,"BarvaTitulu"),DOF2_GetString(dfile,"Prefix"),DOF2_GetString(dfile,"BarvaTitulu"),DOF2_GetInt(dfile,"BarvaNicku") >>> 8,nick,DOF2_GetString(dfile,"BarvaTextu"),text);
				SCMTA(bila,str);
			}
		}
	}
	return 1;
}
forward GetPlayerVehiclePancir(vehicleid);

public GetPlayerVehiclePancir(vehicleid)
{
	for(new x; x <= GetPlayerPoolSize(); x ++)
	{
	    if(IPC(x))
	    {
			for(new i; i < MAX_SLOTS; i ++)
			{
				if(vehicleid == SavedCar[x][i])
				{
					if(ParkInfo[x][i][pPancir] > 1000)
					{
					    return floatround(ParkInfo[x][i][pPancir],floatround_ceil);
					}
			    }
			}
		}
	}
	return 0;
}



function IsVehicleFromGarage(playerid)
{
	for(new x; x < MAX_SLOTS; x ++)
	{
	    if(playerid == SavedCar[playerid][x]) return 1;
	}
	return 0;
}

function IsPlayerVIP(playerid)
{
	return vip[playerid];
}

function IsPlayerInDuel(playerid)
{
    if(dPlayer[playerid][pDuelRoom] != -1) return 1;
	return 0;
}

function IsPlayerOnEvent(playerid)
{
	return OnEvent[playerid];
}

function IsPlayerOnMiniEvent(playerid)
{
	if(OnEvent[playerid] == true) return 1;
	if(RacePlayer[playerid] != -1) return 1;
	if(InDM[playerid] != -1) return 1;
	if(dPlayer[playerid][pDuelStatus] != -1) return 1;
	if(InSumo[playerid] == true) return 1;
	return 0;
}

function GetPlayerHouse(playerid)
{
	return PlayerHouse[playerid];
}

function GetHouseNeedHours(house)
{
	return House[house][hNeedHours];
}

function ShowPlayerActualNew(playerid)
{
	new query[200],Cache:cache;
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `News` WHERE `Build` = %d LIMIT 1",floatround(BUILD,floatround_floor));
	cache = mysql_query(mysql,query);
	if(cache_get_row_count(mysql))
	{
		if(floatround(BUILD,floatround_floor) != BuildSaw[playerid])
		{
			if(NewBie[playerid] == false)
			{
				new DIALOG[1200],newstext[1100],date[30],text[70];
				cache_get_field_content(0,"DATE",date,mysql);
				format(text,sizeof(text),""g"%s (Update #%0.0f)\n"w"",date,cache_get_field_content_float(0,"BUILD"));
				strcat(DIALOG,text);
				cache_get_field_content(0,"TEXT",newstext,mysql);
				strcat(DIALOG,newstext);
				strcat(DIALOG,"\n\n"w"Pro seznam vech novinek: {0077FF}/novinky");
				SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Novinky",DIALOG,"Zavøít","");
			}
			BuildSaw[playerid] = cache_get_field_content_int(0,"BUILD",mysql);
			format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
			DOF2_SetInt(dfile,"Build",BuildSaw[playerid]);
			DOF2_SaveFile();
		}
	}
	cache_delete(cache,mysql);
	return 1;
}

function GetAdminLevel(playerid)
{
	return Admin[playerid];
}

function SetPlayerNavigation(playerid,Float:X,Float:Y,Float:Z)
{

	SetPlayerCheckpointEx(playerid,X,Y,Z,8);
	Finding[playerid] = 1;
	return 1;
}

function GetMaxVehicleSlots()
{
	return MAX_SLOTS;
}

function GetPlayerVehicle(playerid,slot)
{
	if(ParkInfo[playerid][slot][Model] >= 400) return ParkInfo[playerid][slot][Model];
	return -1;
}

function ChangeVehicleOwner(playerid,slotid,changeid)
{
    for(new i; i < MAX_SLOTS; i ++)
    {
        format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(changeid),i);
        if(!fexist(dfile))
        {
			new ofile[50];
			format(ofile,sizeof(ofile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(playerid),slotid);
			ReNameFile(ofile,dfile);
		    DestroyVehicle(SavedCar[playerid][slotid]);
	    	SavedCar[playerid][slotid] = 0;
			ParkInfo[playerid][slotid][pX] = 0;
		    ParkInfo[playerid][slotid][pY] = 0;
		    ParkInfo[playerid][slotid][pZ] = 0;
		    ParkInfo[playerid][slotid][pA] = 0;
		    ParkInfo[playerid][slotid][Model] = 0;
		    ParkInfo[playerid][slotid][Color1] = 0;
		    ParkInfo[playerid][slotid][Color2] = 0;
		    ParkInfo[playerid][slotid][PaintJob] = 0;
		    ParkInfo[playerid][slotid][TuneSlot0] = 0;
		    ParkInfo[playerid][slotid][TuneSlot1] = 0;
		    ParkInfo[playerid][slotid][TuneSlot2] = 0;
		    ParkInfo[playerid][slotid][TuneSlot3] = 0;
		    ParkInfo[playerid][slotid][TuneSlot4] = 0;
		    ParkInfo[playerid][slotid][TuneSlot5] = 0;
		    ParkInfo[playerid][slotid][TuneSlot6] = 0;
		    ParkInfo[playerid][slotid][TuneSlot7] = 0;
		    ParkInfo[playerid][slotid][TuneSlot8] = 0;
		    ParkInfo[playerid][slotid][TuneSlot9] = 0;
		    ParkInfo[playerid][slotid][TuneSlot10] = 0;
		    ParkInfo[playerid][slotid][TuneSlot11] = 0;
		    ParkInfo[playerid][slotid][TuneSlot12] = 0;
		    ParkInfo[playerid][slotid][TuneSlot13] = 0;
		    ParkInfo[playerid][slotid][pCashBack] = 0;
			for(new x; x < MAX_S_OBJECTS; x ++)
			{
			    DestroyDynamicObject(ParkInfo[playerid][slotid][SpecialObjects][x]);
				ParkInfo[playerid][slotid][SpecialObjects][x] = 0;
			}
			new Float:X,Float:Y,Float:Z;
		    GetPlayerPos(changeid,X,Y,Z);
			format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(changeid),i);
		    DOF2_SetFloat(dfile,"X",X+2);
		    DOF2_SetFloat(dfile,"Y",Y+2);
		    DOF2_SetFloat(dfile,"Z",Z);
		    DOF2_SaveFile();
		    LoadData(changeid);
		    SpawnCar(changeid,i);
		    TuneCar(changeid,i);
			break;
        }
    }
	return 1;
}

function CountPlayerVehicles(playerid)
{
	new vehicles;
	for(new i; i < MAX_SLOTS; i ++)
	{
	    if(ParkInfo[playerid][i][Model] >= 400)
	    {
	        vehicles ++;
	    }
	}
	return vehicles;
}

function GetMaxPropertiesPerPlayer()
{
	return MAX_PROPERTIES_PER_PLAYER;
}

function GetMaxProperties()
{
	return MAX_PROPERTIES;
}

function GetPlayerProperty(playerid,slot)
{
	new properties,property = -1;
	if(slot < PropSlots[playerid])
	{
	    for(new i = 1; i < MAX_PROPERTIES; i ++)
	    {
	        if(IsPlayerPropertyOwner(playerid,i))
	        {
				properties ++;
	            if(slot == properties-1)
	            {
	                property = i;
	                break;
	            }
	        }
	    }
	}
	return property;
}

function GetPropertyOwner(pid,field)
{
	return Property[pid][PropertyOwner][field];
}

function GetPropertyEarning(pid)
{
	return Property[pid][PropertyEarning];
}

function GetPropertyExpiration(pid)
{
	return Property[pid][PropertyTime];
}

function GetPropertyLevel(pid)
{
	return Property[pid][PropertyLevel];
}

function ChangeHouseOwner(house,owner[])
{
	format(str,sizeof(str),"{adadad}Zmìna majitele domu %d | %s -> %s |",house,House[house][hOwner],owner);
	printEx(str);
	House[house][hPrice] = 0;
	new id = GetPlayerIdFromName(House[house][hOwner]);
	if(IPC(id))
	{
	    PlayerHouse[id] = -1;
	}
	format(House[house][hOwner],24,owner);
	format(House[house][hName],30,"%s's House",owner);
	UpdateHouse(house);
	new query[500],fields,rows,Cache:cache;
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Houses` WHERE `ID` = '%d'",House[house][hID]);
	cache = mysql_query(mysql,query);
	cache_get_data(mysql,rows,fields);
	if(rows)
	{
	    mysql_format(mysql,query,sizeof(query),"UPDATE `Houses` SET `Owner`='%e',`Name`='%e' WHERE `ID`='%d'",owner,House[house][hName],House[house][hID]);
		mysql_query(mysql,query,false);
	}
	cache_delete(cache,mysql);
	id = GetPlayerIdFromName(owner);
	if(IPC(id))
	{
    	PlayerHouse[id] = house;
	}
	return 1;
}

function ChangePropertyOwner(pid,owner[])
{
	format(str,sizeof(str),"{adadad}Zmìna majitele nemovitosti %s (%d) | %s -> %s |",Property[pid][PropertyName],pid,Property[pid][PropertyOwner],owner);
	printEx(str);
	new id = GetPlayerIdFromName(Property[pid][PropertyOwner]);
	if(IPC(id))
	{
		POwner[id] --;
	}
	format(Property[pid][PropertyOwner],24,owner);
	Property[pid][PropertyEarning] = 0;
	id = GetPlayerIdFromName(owner);
	if(IPC(id))
	{
		POwner[id] ++;
	}
	if(Property[pid][PropertyTime] < 24*14)
	{
	    Property[pid][PropertyTime] = 24*14;
	}
	format(dfile,sizeof(dfile),"UnNamed/Properties/Property%d.txt",pid);
	if(fexist(dfile))
	{
		DOF2_SetString(dfile,"Owner",owner);
		DOF2_SetInt(dfile,"Earning",0);
		DOF2_SetInt(dfile,"Hours",Property[pid][PropertyTime]);
		DOF2_SaveFile();
	}
	UpdatePropertyText(pid);
	return 1;
}

function GetPropertyName(pid,field)
{
	return Property[pid][PropertyName][field];
}

function SetPlayerCameraAtPos(playerid,Float:X,Float:Y,Float:Z)
{
	if(IsPlayerOnMiniEvent(playerid) || IsPlayerOnEvent(playerid) || SpectatePlayer[playerid] != -1)
	    return SM(playerid,"Teï nemùete pouít reim náhledu");
	if(Hitted[playerid] > 0) return SM(playerid,"V boji nemùe pouít reim náhledu");
	if(IsPlayerInAnyVehicle(playerid)) return SM(playerid,"Nesmíte být ve vozidle");
	if(ViewMode[playerid] == 0)
	{
		TextDrawShowForPlayer(playerid,Textdraw42);
		SaveBeforeEventData(playerid);
		TogglePlayerSpectating(playerid,true);
	}
	new Float:Pos[3];
	GetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
	InterpolateCameraPos(playerid,Pos[0],Pos[1],Pos[2],X,Y+25,Z+25,1500);
	InterpolateCameraLookAt(playerid,Pos[0],Pos[1],Pos[2],X,Y,Z,1500);
	ViewMode[playerid] = 1;
	return 1;
}

function GetPlayerPrisonTime(playerid)
{
	return PrisonTime[playerid];
}

function GetPlayerDMArena(playerid)
{
	return InDM[playerid];
}

function SpawnPlayerAtSelectedSpawnPos(playerid)
{
	if(PlayerHouse[playerid] > -1)
	{
  		if(GetPlayerSpawn(playerid) == SPAWN_TYPE_HOUSE)
  		{
  		    new id = PlayerHouse[playerid];
  		    SetPlayerPos(playerid,House[id][hX],House[id][hY],House[id][hZ]);
  		}
	}
	if(GetPlayerSpawn(playerid) == SPAWN_TYPE_GANG)
	{
        SetGangMemberPos(playerid);
	}
	return 1;
}

function GetPlayerUniqueID(playerid)
{
	return PlayerID[playerid];
}

function GivePenaltyPoints(player[],points,admin[],type[],reason[])
{
	new query[300],Cache:cache;
	mysql_format(mysql,query,sizeof(query),"INSERT INTO `TrestneBody` (`hrac`,`reason`,`admin`,`time`,`tb`,`tb_z`) VALUES ('%e','%e: %e','%e',%d,%d,%d)",player,type,reason,admin,gettime(),points,points);
	mysql_query(mysql,query,false);
	new playerid = GetPlayerIdFromName(player),ppoints;
	mysql_format(mysql,query,sizeof(query),"UPDATE `TrestneBody` SET `tb`= '0' WHERE `hrac` = '%e' and `tb` > 0 and `time` < (%d)",player,gettime()-60*60*24*30);
	mysql_query(mysql,query,false);
	mysql_format(mysql,query,sizeof(query),"SELECT SUM(`tb`) FROM `TrestneBody` WHERE `hrac` = '%e' AND `time` > (%d)",player,gettime()-60*60*24*30);
	cache = mysql_query(mysql,query);
	ppoints = cache_get_field_content_int(0,"SUM(`tb`)",mysql);
	cache_delete(cache,mysql);
	if(ppoints < MAX_PENALTY_POINTS)
	{
		if(IPC(playerid))
		{
			PenaltyPoints[playerid] = ppoints;
			format(str,sizeof(str),""dc"Obdrel si "r"%d "dc"%s (%s: "g"%s"dc"), do banu zbývá "r"%d "dc"%s"dc"\nCelkem máte "r"%d "dc"%s"dc". Více info: {0077FF}/trestnebody",
			points,PluralWord(points,"trestný bod","trestné body","trestných bodù"),type,reason,MAX_PENALTY_POINTS-ppoints,PluralWord(MAX_PENALTY_POINTS-ppoints,"trestný bod","trestné body","trestných bodù"),ppoints,PluralWord(ppoints,"trestný bod","trestné body","trestných bodù"));
			SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Trestné body",str,"Zavøít","");
		}
		else
		{
			format(str,sizeof(str),""dc"Obdrel si "r"%d "dc"%s (%s: "g"%s"dc"), do banu zbývá "r"%d "dc"%s"dc"\nCelkem máte "r"%d "dc"%s"dc". Více info: {0077FF}/trestnebody",
			points,PluralWord(points,"trestný bod","trestné body","trestných bodù"),type,reason,MAX_PENALTY_POINTS-ppoints,PluralWord(MAX_PENALTY_POINTS-ppoints,"trestný bod","trestné body","trestných bodù"),ppoints,PluralWord(ppoints,"trestný bod","trestné body","trestných bodù"));
			SendPlayerNotification(player,"Trestné body",str);
		}
	}
	else
	{
		new string[145];
	    if(IPC(playerid))
	    {
			mysql_format(mysql,query,sizeof(query),"INSERT INTO `Bans` (`Nick`,`IP`,`Admin`,`Sign`,`Reason`,`Start`,`End`) VALUES ('%e','%s','%e','%e','%e','%d','%d')",Jmeno(playerid),GetIP(playerid),BOT_NAME,BOT_NAME,PENALTY_REASON,gettime(),gettime()+60*60*PENALTY_TIME);
			mysql_query(mysql,query,false);
			SpecialTBan(playerid,BOT_NAME,PENALTY_REASON,gettime()+60*60*PENALTY_TIME,BOT_NAME);
			KickPlayerAfterTime(playerid,50);
			format(string,sizeof(string),"%s "w"%s "r"byl zabanován za dosaení maximálního poètu trestých bodù na "w"%d hodin"r".",Players(playerid),Jmeno(playerid),PENALTY_TIME);
	    }
	    else
	    {
			mysql_format(mysql,query,sizeof(query),"SELECT `Nick`,`IP` FROM `Users` WHERE `Nick`='%e' ORDER BY `ID` ASC",player);
			cache = mysql_query(mysql,query);
			new ip[16];
			cache_get_field_content(0,"IP",ip,mysql,sizeof(ip));
			cache_delete(cache,mysql);
			mysql_format(mysql,query,sizeof(query),"INSERT INTO `Bans` (`Nick`,`IP`,`Admin`,`Sign`,`Reason`,`Start`,`End`) VALUES ('%e','%s','%e','%e','%e','%d','%d')",player,ip,BOT_NAME,BOT_NAME,PENALTY_REASON,gettime(),gettime()+60*60*PENALTY_TIME);
			mysql_query(mysql,query,false);
			mysql_format(mysql,query,sizeof(query),"INSERT INTO `Prestupky` (`Nick`,`IP`,`Type`,`Admin`,`Sign`,`Reason`,`Time`,`EndTime`) VALUES ('%e','%s','%d','%e','%e','%e','%d','%d')",player,ip,TYPE_TBAN,BOT_NAME,BOT_NAME,PENALTY_REASON,gettime(),gettime()+60*60*PENALTY_TIME);
			mysql_query(mysql,query,false);
			format(string,sizeof(string),"Hráè "w"%s "r"byl zabanován za dosaení maximálního poètu trestých bodù na "w"%d hodin"r".",player,PENALTY_TIME);
	    }
		SCMTA(red,string);
		mysql_format(mysql,query,sizeof(query),"UPDATE `TrestneBody` SET `tb`= '0' WHERE `hrac` = '%e' and `tb` > 0",player);
		mysql_query(mysql,query,false);
	}
	return 1;
}

function IsPlayerInCombat(playerid)
{
	return Hitted[playerid];
}

function GetEventType(playerid)
{
	if(OnEvent[playerid] == true)
		return RunEvent;
	return 0;
}

function GivePlayerGear(playerid,vybavaid)
{
	ResetPlayerWeapons(playerid);
	for(new i; i < MAX_VYBAVA_SLOTS; i ++)
	    if(pVybava[playerid][vybavaid][vybID][i] != 0)
	        GivePlayerWeapon(playerid,pVybava[playerid][vybavaid][vybID][i],15000);
	return 1;
}

function GetPlayerTotalAFKTime(playerid)
{
	return Player[playerid][pAFKTimeTotal];
}

function IsPlayerBanned(playerid)
{
	return Player[playerid][pBanned];
}

function SaveAccount(playerid,save)
{
	new fajl[50];
	format(fajl,sizeof(fajl),USER_FILES,Jmeno(playerid));
	if(fexist(fajl) && Spawned[playerid] == true && save == 1)
	{
	    DOF2_SetInt(fajl,"NextHod",NextHod[playerid]);
	    DOF2_SetInt(fajl,"ZrusMisiTime",Player[playerid][pZrusMisiTime]);
	    DOF2_SetInt(fajl,"Hide",Player[playerid][pHide]);
	    DOF2_SetInt(fajl,"DMKills",DMKillsTotal[playerid]);
	    DOF2_SetInt(fajl,"DMDeaths",DMDeathsTotal[playerid]);
	    DOF2_SetInt(fajl,"DMScore",DMScore[playerid]);
		DOF2_SetInt(fajl,"XPBoostPercent",XPBoostPercent[playerid]);
		DOF2_SetInt(fajl,"XPBoostSeconds",XPBoostSeconds[playerid]);
		DOF2_SetInt(fajl,"AFK",Player[playerid][pAFKTimeTotal]);
		DOF2_SetString(fajl,"Prefix",GetPlayerTitul(playerid));
		DOF2_SetString(fajl,"PrefixColor",GetPlayerTitulColor(playerid));
		DOF2_SetString(fajl,"TextColor",GetPlayerTextColor(playerid));
	    DOF2_SetInt(fajl,"Mute",Mute[playerid]);
	    DOF2_SetInt(fajl,"Cblock",CBLOCK[playerid]);
		new string[50];
		format(string,sizeof(string),"%d %d %d",Player[playerid][pDaily][0],Player[playerid][pDaily][1],Player[playerid][pDaily][2]);
		DOF2_SetString(fajl,"DailyIDs",string);
		DOF2_SetInt(fajl,"DailyID",DailyID);
		for(new i = 1; i < sizeof(Missions); i ++)
		{
			new key[15];
			format(key,sizeof(key),"Mission%d",i);
			DOF2_SetInt(fajl,key,MissionsCount[playerid][i]);
		}
		DOF2_SaveFile();
		return 1;
	}
	return 0;
}


function ResetProperties()
{
	for(new i = 1; i < MAX_PROPERTIES; i ++)
	{
	    new fajl[50];
	    format(fajl,sizeof(fajl),"UnNamed/Properties/Property%d.txt",i);
	    if(fexist(fajl))
	    {
			if(strlen(Property[i][PropertyOwner]))
			{
		        new lvl = Property[i][PropertyLevel];
			    if(strcmp(Property[i][PropertyOwner],"-1") != 0)
			    {
					format(str,sizeof(str),"Bylo vám Vráceno "g"%s$ "dc"za poøízení nemovitosti + "g"%s$ "dc"výdìlek,\nz dùvodu restartování nemovitosti "c"%s",Split(lvl*6000000),Split(Property[i][PropertyEarning]),Property[i][PropertyName]);
					SendPlayerNotification(Property[i][PropertyOwner],"Restartování nemovitosti",str);
			        GivePlayerMoneyToTrezor(Property[i][PropertyOwner],Property[i][PropertyEarning]+lvl*6000000);
			    }
				format(str,sizeof(str),"** | Nick: %s | Nemovitost: %s | Level: %d | Výdìlek: %s$ | Poøízeni: %s$ |",Property[i][PropertyOwner],Property[i][PropertyName],lvl,Split(Property[i][PropertyEarning]),Split(lvl*6000000));
				printEx(str);
				print(str);
				format(Property[i][PropertyOwner],24,"-1");
				Property[i][PropertyLevel] = 1;
				Property[i][PropertyCashLevel] = 1;
				Property[i][PropertyEarning] = 0;
				Property[i][PropertyTime] = 0;
				Property[i][PropertyOnSale] = false;
		        DOF2_SetString(fajl,"Owner","-1");
				DOF2_SetInt(fajl,"Level",1);
				DOF2_SetInt(fajl,"CashLevel",1);
				DOF2_SetInt(fajl,"Earning",0);
				DOF2_SetInt(fajl,"Hours",0);
				DOF2_SetInt(fajl,"OnSale",0);
				DOF2_SaveFile();
			}
		}
	}
	return 1;
}

function GivePlayerDailyValue(playerid,type,value)
{
	new completed;
	for(new i; i < 3; i ++)
	{
	    new id = ActiveDailyIDs[i];
	    if(DailyChallenges[id][dailyType] == type)
	    {
	        Player[playerid][pDaily][i] += value;
	        if(Player[playerid][pDaily][i] >= DailyChallenges[id][dailyValue] && Player[playerid][pDaily][i]-value < DailyChallenges[id][dailyValue])
	        {
		        format(str,sizeof(str),"Denní výzva "g"%s "w"dokonèena (%d/%d)",DailyChallenges[id][dailyDesc],Player[playerid][pDaily][i],DailyChallenges[id][dailyValue]);
		        SM(playerid,str);
		        SM(playerid,"Dostáváte odmìnu "g"50 bodù "w"a "c"150 XP");
		        GiveXP(playerid,150,"dokoncena denni vyzva");
				GivePoints(playerid,50);
				format(str,sizeof(str),"%s %s daily challenge %s dokonèen %d/%d",DailyChallenges[id][dailyDesc],Player[playerid][pDaily][i],DailyChallenges[id][dailyValue]);
				printEx(str);
	        }
			else if(type != DAILY_TYPE_TIME)
			{
		        format(str,sizeof(str),"Denní výzva "g"%s "w"splnìno %d/%d",DailyChallenges[id][dailyDesc],Player[playerid][pDaily][i],DailyChallenges[id][dailyValue]);
		        SM(playerid,str);
				format(str,sizeof(str),"%s %s daily challenge %s progress %d/%d",DailyChallenges[id][dailyDesc],Player[playerid][pDaily][i],DailyChallenges[id][dailyValue]);
				printEx(str);
	        }
	    }
	    if(Player[playerid][pDaily][i] >= DailyChallenges[id][dailyValue])
	        completed++;
	}
	if(completed == 3 && Player[playerid][pDailyComp] == false)
	{
	    format(str,sizeof(str),"%s "w"%s "y"dokonèil denní výzvu "w"/daily",Players(playerid),Jmeno(playerid));
	    SCMTA(yellow,str);
	    format(str,sizeof(str),"Dokonèeny vechny denní výzvy.");
	    SM(playerid,str);
	    SM(playerid,"Dostáváte odmìnu "g"150 bodù "w"a "c"450 XP");
	    GivePoints(playerid,150);
	    GiveXP(playerid,450,"dokonceny denni vyzvy");
	    Player[playerid][pDailyComp] = true;
	    Player[playerid][pDailyDone] ++;
	    format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	    DOF2_SetInt(dfile,"DailyDone",Player[playerid][pDailyDone]);
	    DOF2_SaveFile();
	}
	return 1;
}

stock IsPlayerInNoKillZone(playerid)
{
	for(new x; x < MAX_ZONES; x ++)
	{
	    if(IsPlayerInRangeOfPoint(playerid,NoKillZone[x][NRadius],NoKillZone[x][NX],NoKillZone[x][NY],NoKillZone[x][NZ]) && GetPlayerVirtualWorld(playerid) == 0)
	    {
	        return 1;
	    }
	}
	return 0;
}

stock GivePostrehStreak(playerid,odmena)
{
	if(Player[playerid][pPostrehStreak] < 5)
		Player[playerid][pPostrehStreak] ++;
	GivePoints(playerid,odmena*Player[playerid][pPostrehStreak]);
	if(Player[playerid][pPostrehStreak] > 1){
		format(str,sizeof(str),"Opakovaný postøeh "w"%dx "sb"za sebou, odmìna "w"x%d "sb"(%d bodù)",Player[playerid][pPostrehStreak],Player[playerid][pPostrehStreak],odmena*Player[playerid][pPostrehStreak]);
	    SCM(playerid,0x0077FFFF,str);
 	}
}

stock ReloadPostrehStreak(playerid = -1)
{
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(IPC(i) && !IsPlayerNPC(i) && i != playerid)
	    {
	        Player[i][pPostrehStreak] = 0;
	    }
	}
	return 1;
}

stock GenerateDaily()
{
	for(new i; i < sizeof(ActiveDailyIDs); i ++)
	{
        new rand = random(sizeof(DailyChallenges));
		ActiveDailyIDs[i] = rand;
		for(new x; x < sizeof(ActiveDailyIDs) && x!=i; x ++)
		{
		    while(ActiveDailyIDs[i] == ActiveDailyIDs[x] || DailyChallenges[ActiveDailyIDs[i]][dailyType] == DailyChallenges[ActiveDailyIDs[x]][dailyType])
		    {
		        rand = random(sizeof(DailyChallenges));
				ActiveDailyIDs[i] = rand;
		    }
  		}
	}
	if(fexist(CONFIG))
	{
	    new nday,nyear,nmonth,string[50];
	    getdate(nyear,nmonth,nday);
	    format(string,sizeof(string),"%d %d %d",ActiveDailyIDs[0],ActiveDailyIDs[1],ActiveDailyIDs[2]);
	    DailyID++;
	    DailyDay = nday;
	    DOF2_SetInt(DAILYCFG,"DailyID",DailyID);
		DOF2_SetString(DAILYCFG,"DailyIDs",string);
		DOF2_SetInt(DAILYCFG,"DailyDay",nday);
		DOF2_SaveFile();
	}
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(IPC(i) && !IsPlayerNPC(i)){
	   		ResetPlayerDaily(i);
	    }
	}
	SCMTA(0x0077FFFF,"K dispozici jsou nové denní výzvy! "g"/daily");
	printf("generated %d | %d | %d",ActiveDailyIDs[0],ActiveDailyIDs[1],ActiveDailyIDs[2]);
	return 1;
}

stock ResetPlayerDaily(playerid)
{
	for(new i; i < 3; i ++)
	{
	    Player[playerid][pDaily][i] = 0;
	    Player[playerid][pDailyComp] = false;
	    format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	    {
	        if(fexist(dfile))
	        {
				DOF2_SetString(dfile,"DailyIDs","0 0 0");
				DOF2_SetInt(dfile,"DailyID",DailyID);
				DOF2_SaveFile();
	        }
	    }
	}
	return 1;
}

stock MuteMessage(playerid)
{
    format(str,sizeof(str),"Jsi umlèený, nemùe psát do chatu [ "g"%s "w"]",SecondsToMinutes(Mute[playerid]));
	SM(playerid,str);
	return 1;
}

stock IsPlayerInSpecialProperty(playerid) return CallRemoteFunction("IsPlayerInSpecialProperty","i",playerid);

stock GiveServerPoints(Float:points)
{
	if(fexist(CONFIG))
	{
		ServerPoints += points;
		DOF2_SetFloat(CONFIG,"ServerPoints",ServerPoints);
		DOF2_SaveFile();
		return 1;
	}
	return 0;
}

stock IntToString(integer,addon[] = "")
{
	new text[10];
	format(text,sizeof(text),"%d",integer);
	if(strlen(addon)){
		strcat(text," ");
		strcat(text,addon);
	}
	return text;
}

stock GetPlayerMissionLevel(playerid,mission)
{
	new level = MissionsCount[playerid][mission]/25;
	if(level > 40) level = 40;
	switch(mission)
	{
		case 1: SetPlayerAchievementEx(playerid,MISE_TRUCK,level,40);
		case 2: SetPlayerAchievementEx(playerid,MISE_BUS,level,40);
		case 3: SetPlayerAchievementEx(playerid,MISE_DREVO,level,40);
		case 4: SetPlayerAchievementEx(playerid,MISE_KURYR,level,40);
		case 5: SetPlayerAchievementEx(playerid,MISE_PILOT,level,40);
		case 6: SetPlayerAchievementEx(playerid,MISE_MECHANIK,level,40);
		case 7: SetPlayerAchievementEx(playerid,MISE_POLICE,level,40);
		case 8: SetPlayerAchievementEx(playerid,MISE_PARAM,level,40);
	    case 9: SetPlayerAchievementEx(playerid,MISE_FIREMAN,level,40);
	}
	return level;
}

stock GetPlayerSpecialProperty(playerid)
{
	return CallRemoteFunction("GetPlayerSpecialProperty","i",playerid);
}

stock IsPlayerSupplyRun(playerid)
{
	return CallRemoteFunction("IsPlayerSupplyRun","i",playerid);
}

stock ShowPlayerLevels(playerid,level,maxlevel,type)
{
	if(level >= maxlevel) return SM(playerid,"U máte maximální level");
	new DIALOG[20*25];
	for(new i = 1; i <= maxlevel; i ++)
	{
		format(str,sizeof(str),"{%s}Level %d\n",(i <= level) ? ("00FF00") : ("FF0000"),i);
		strcat(DIALOG,str);
	}
	SetPVarInt(playerid,"LevelUpgradeType",type);
	SPD(playerid,UNNAMED+113,DIALOG_STYLE_LIST,"Vylepení",DIALOG,"Vybrat","Zavøít");
	return 1;
}

stock HideColor(col)
{
	new color[20];
	format(color,sizeof(color),"0x%06x00",col >>> 8);
	return HexToInt(color);
}

stock UnhidePlayer(playerid)
{
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	Color[playerid] = HexToInt(DOF2_GetString(dfile,"BarvaNicku"));
	CreateInfoBox(playerid,"Byl si automaticky odkryt z mapy, pro prodlouení pouij ~b~~h~/hide",5);
	format(str,sizeof(str),"~w~%s~g~ %s ~w~byl automaticky odkryt z mapy",TDPlayers(playerid),Jmeno(playerid));
	AddStringToTextDraw(str);
	return 1;
}

stock HidePlayer(playerid,seconds = 300)
{
	Player[playerid][pHide] = seconds;
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	Color[playerid] = HideColor(Color[playerid]);
	format(str,sizeof(str),"~w~%s~g~ %s ~w~se skryl na mape",TDPlayers(playerid),Jmeno(playerid));
	AddStringToTextDraw(str);
	return 1;
}

stock IsPlayerInTuneMenu(playerid)
{
	return CallRemoteFunction("IsPlayerInTuneMenu","i",playerid);
}

stock ShowCustomSkinsMenu(playerid)
{
	if(OnEvent[playerid] == true) return SM(playerid,"Na eventu si nemùe zmìnit skin");
	new DIALOG[sizeof(CustomSkin)*75],level[25];
	for(new i; i < sizeof(CustomSkin); i ++)
	{
	    if(CustomSkin[i][sSkinLevel] < 0)
	        format(level,sizeof(level),"%s",(CustomSkin[i][sSkinLevel] == -1) ? ("{FFFFFF}Eli{0077FF}ta") : ("{FFBF00}Legenda"));
		else
		    format(level,sizeof(level),"%d",CustomSkin[i][sSkinLevel]);
	    if(Player[playerid][pSkinOwned][i] == false)
		    format(str,sizeof(str),"{ff0059}%s\tCena: "sb"%db\tLevel: "sb"%s\n",CustomSkin[i][sSkinName],CustomSkin[i][sSkinPrice],level);
		else
		    format(str,sizeof(str),"{ff0059}%s\t"g"Zakoupeno\tLevel: "sb"%s\n",CustomSkin[i][sSkinName],level);
		strcat(DIALOG,str);
	}
	SPD(playerid,UNNAMED+199,DIALOG_STYLE_TABLIST,"Obchod se skiny",DIALOG,"Vybrat","Zavøít");
	return 1;
}

stock StartAutoEvent(eventid)
{
	new text[100];
	if(IsBotConnected())
	{
		new Float:Pos[][][] =
		{
		    {
				{48.4393,1517.4290,12.8156},
				{37.7698,1484.9094,12.8156},
				{-4.0676,1485.3416,12.8116},
				{-37.2688,1497.6107,12.8116},
				{-27.8506,1522.8428,12.8116},
				{-34.4338,1552.1475,12.8116},
				{-10.8117,1556.4936,12.8116},
				{15.0862,1542.9405,12.8156},
				{59.4973,1551.0797,12.8156},
				{32.5891,1567.4267,12.8156}
			},
			{
				{225.9731,1913.7281,17.6406},
				{271.7787,1905.9792,17.6480},
				{276.4520,1861.9023,17.6406},
				{249.6029,1809.2434,17.6406},
				{173.8335,1811.1094,17.6406},
				{128.9665,1859.5183,17.7657},
				{129.9275,1926.4029,19.1873},
				{181.6388,1904.4239,17.8901},
				{215.0306,1867.9553,13.1406},
				{198.2056,1855.7761,20.3234}
			},
			{
				{658.6917,916.4746,-40.5618},
				{680.9926,875.4484,-40.4580},
				{661.6170,846.0255,-42.9609},
				{622.7571,822.0385,-42.9609},
				{563.0386,857.5106,-42.9253},
				{490.1146,890.0068,-31.0072},
				{546.6589,899.8739,-42.9974},
				{577.1782,929.3223,-42.9609},
				{605.1526,888.1687,-43.6949},
				{643.4395,889.9711,-42.7127}
			}
		};
		new rand = random(sizeof(Pos));
		switch(eventid)
		{
		    case 0:
		    {
		        format(text,sizeof(text),"1 %d",4+random(2));
		        CallLocalFunction("OnDialogResponse","iiiis",botid,UNNAMED+179,1,0,text);
		        format(text,sizeof(text),"%d %d",hraci*1000000,hraci);
		        EventWorld = 2;
		        CallLocalFunction("OnDialogResponse","iiiis",botid,UNNAMED+169,1,0,text);
		    }
		    case 1:
		    {
				for(new i; i < sizeof(Pos[]); i ++)
				    for(new x; x < sizeof(Pos[][]); x ++)
						EventDMPos[i][x] = Pos[rand][i][x];
				SetPVarInt(botid,"EventType",10);
		        EventWorld = 2;
		        format(text,sizeof(text),"%d %d",hraci*1000000,hraci);
		        CallLocalFunction("OnDialogResponse","iiiis",botid,UNNAMED+169,1,0,text);
		    }
		    case 2:
		    {
		    	new RacesIDs[] = {0,1,3,5,6,7,11,12,26,28,31,50,91};
		    	new VehicleIDs[] = {411,541,415,451,560,562,502},id = VehicleIDs[random(sizeof(VehicleIDs))],raceid = random(sizeof(RacesIDs));
		        while(RaceReady[raceid] == true || cps[raceid] == 0)
                    raceid = random(sizeof(RacesIDs));
		    	EventRace = RacesIDs[raceid];
		        format(EventName,24,"Závod");
		        format(EventInfo,50,"Dojet do cíle (%s)",GetVehicleNameByCarID(id));
		        format(EventPlace,24,"/port");
		        EventReward[0] = 0;
		        EventWorld = 1;
		        format(text,sizeof(text),"%d 0",id);
		        CallLocalFunction("OnDialogResponse","iiiis",botid,UNNAMED+81,1,0,text);
		        format(text,sizeof(text),"%d %d",hraci*1000000,hraci);
		        CallLocalFunction("OnDialogResponse","iiiis",botid,UNNAMED+42,1,0,text);
		        CallLocalFunction("cmd_dann","is",botid,"závod na ~r~/port");
			    BotEvent = true;
				odpocetsek = 30;
				format(str,sizeof(str),"~y~%d",odpocetsek);
				GameTextForAll(str,1000,3);
				SetTimer("Odpocet",1000,false);
		    }
		    case 3:
			{
				SetPVarInt(botid,"EventType",9);
				for(new i; i < sizeof(Pos[]); i ++)
				    for(new x; x < sizeof(Pos[][]); x ++)
						EventDMPos[i][x] = Pos[rand][i][x];
                EventGuns[0] = 31;
                EventGuns[1] = 24;
                EventGuns[2] = 25;
                EventGuns[3] = 34;
                EventGuns[4] = 4;
		        EventEndTime = hraci*25;
		        EventWorld = 2;
				format(text,sizeof(text),"%d %d",hraci*1000000,hraci);
		        CallLocalFunction("OnDialogResponse","iiiis",botid,UNNAMED+169,1,0,text);
			}
		}
		SpawnPlayer(botid);
		SetPlayerPos(botid,0,0,2000);
	}
	return 1;
}

stock SetEventMista(players)
{
	switch(players)
	{
	    case 0..9: return 1;
	    case 10..14: return 2;
	    case 15..MAX_PLAYERS: return 3;
	}
	return 0;
}

stock IsPlayerInGangWar(playerid)
{
	return CallRemoteFunction("IsPlayerInGangWar","i",playerid);
}

stock DeleteUser(account[])
{
	new id = GetPlayerIdFromName(account),query[300],soubor[50];
	if(!IPC(id))
	{
		format(soubor,sizeof(soubor),USER_FILES,account);
		if(fexist(soubor))
		    DOF2_RemoveFile(soubor);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `Users` WHERE `Nick`='%e'",account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `Achievements` WHERE `Nick`='%e'",account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `Dotazy` WHERE `Nick`='%e'",account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `Reports` WHERE `Nick`='%e'",account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `Gifts` WHERE `Nick`='%e'",account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `Accounts` WHERE `Nick`='%e'",account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `Vybava` WHERE `nick`='%e'",account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `TrestneBody` WHERE `hrac`='%e'",account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `LoginLog` WHERE `Nick`='%e'",account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `Accounts` WHERE `Nick`='%e'",account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `Stunts` WHERE `Nick`='%e'",account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `Addons` WHERE `Nick`='%e'",account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `PlayerPackages` WHERE `Nick`='%e'",account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `UserTituls` WHERE `Nick`='%e'",account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `Vyhry` WHERE `Nick`='%e'",account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `Prestupky` WHERE `Nick`='%e'",account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `Tombola` WHERE `Nick`='%e'",account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `Notifications` WHERE `Nick`='%e'",account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `Inzeraty` WHERE `NICK`='%e'",account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `Skins` WHERE `Nick`='%e'",account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `SpecialProperties` WHERE `Nick`='%e'",account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `PMLog` WHERE `PM_SENDER`='%e' OR `PM_RECEIVER`='%e'",account,account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"DELETE FROM `GameAchievs` WHERE `Nick`='%e'",account);
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `Houses` SET `Owner`='-1', `Name`='Dùm na prodej', `Price`=0, `OwnerActivity`=NULL WHERE `Owner`='%e'",account);
		mysql_query(mysql,query,false);
		DOF2_RemoveFile(soubor);
		format(soubor,sizeof(soubor),"%s.txt",account);
		if(fexist(soubor))
		{
		    DOF2_RemoveFile(soubor);
		}
		for(new i; i < MAX_SLOTS; i ++)
		{
			format(soubor,sizeof(soubor),"UnNamed/Vehicles/%s[%d].txt",account,i);
			if(fexist(soubor))
			{
			    DOF2_RemoveFile(soubor);
			}
		}
		printf("account %s delete",account);
	}
	return 1;
}

stock GunGamePosition()
{
	if(RunEvent == 10)
	{
	    new maxpos = -1;
	    for(new i; i <= GetPlayerPoolSize(); i ++)
	    {
	        if(IPC(i) && !IsPlayerNPC(i) && OnEvent[i])
	        {
	            if(maxpos == -1)
					maxpos = i;
				if(Player[i][pEventKills] > Player[maxpos][pEventKills])
				{
				    maxpos = i;
				}
	        }
	    }
	    format(str,sizeof(str),"~r~Ve vedeni: ~y~%s",Jmeno(maxpos));
	    FixTextDrawFont2(str);
	    TextDrawSetString(Textdraw44,str);
	}
}

stock GetPlayerEPropsFreeSlot(playerid)
{
	for(new i; i < MAX_EPROP_PER_PLAYER; i ++)
	    if(Player[playerid][eProp][i] == -1)
			return i;
	return 0;
}

stock GetPlayerEPropsFreeSlots(playerid)
{
	new slots;
	for(new i; i < MAX_EPROP_PER_PLAYER; i ++)
	    if(Player[playerid][eProp][i] == -1)
	        slots++;
	return slots;
}

stock GetPlayerEPropSlot(playerid,propid)
{
	for(new i; i < MAX_EPROP_PER_PLAYER; i ++)
	{
	    if(Player[playerid][eProp][i] == propid) return i;
	}
	return -1;
}

stock IsPlayerEPropOwner(playerid,propid)
{
	for(new i; i < MAX_EPROP_PER_PLAYER; i ++)
	{
	    if(Player[playerid][eProp][i] == propid) return 1;
	}
	return 0;
}
/*
stock CreateEliteProperty(Float:X,Float:Y,Float:Z,intid)
{
	for(new i; i < sizeof(eProps); i ++)
	{
		if(eProps[i][ePUsed] == false)
		{
		    eProps[i][ePUsed] = true;
		    eProps[i][ePX] = X;
		    eProps[i][ePY] = Y;
		    eProps[i][ePZ] = Z;
			eProps[i][ePInt] = intid;
		    CreateDynamicPickup(19524,23,X,Y,Z,0);
		    CreateDynamic3DTextLabel(ePropsNames[intid],0x0077FFFF,X,Y,Z+0.5,30,.testlos = 1,.worldid = 0);
		    CreateDynamicPickup(1318,23,ElitePropsInteriors[intid][0],ElitePropsInteriors[intid][1],ElitePropsInteriors[intid][2]);
			CreateDynamic3DTextLabel("[ {0088FF}ENTER "w"]",bila,ElitePropsInteriors[intid][0],ElitePropsInteriors[intid][1],ElitePropsInteriors[intid][2],10,.testlos = 1);
		    CreateDynamicPickup(1239,23,ElitePropsInteriors[intid][4],ElitePropsInteriors[intid][5],ElitePropsInteriors[intid][6]);
		    break;
		}
	}
	return 1;
}
*/
stock DefaultSpawnEquip(playerid)
{
	GivePlayerEquip(playerid,0,GetWeaponSlot(31),31);
	GivePlayerEquip(playerid,0,GetWeaponSlot(29),29);
	GivePlayerEquip(playerid,0,GetWeaponSlot(26),26);
	GivePlayerEquip(playerid,0,GetWeaponSlot(16),16);
	GivePlayerEquip(playerid,0,GetWeaponSlot(24),24);
	GivePlayerEquip(playerid,0,GetWeaponSlot(34),34);
	GivePlayerEquip(playerid,0,GetWeaponSlot(43),43);
	GivePlayerEquip(playerid,0,GetWeaponSlot(1),1);
	return 1;
}

stock ShowPlayerVybava(playerid)
{
	new DIALOG[500],vbs;
	for(new i; i < MAX_PLAYER_VYBAVA; i ++)
	{
	    if(strlen(pVybava[playerid][i][vybName]))
	    {
	        format(str,sizeof(str),""g"%s\n",pVybava[playerid][i][vybName]);
	        strcat(DIALOG,str);
			vbs++;
	    }
	}
	if(vbs < MAX_PLAYER_VYBAVA)
	    strcat(DIALOG,"{adadad}Pøidat výbavu");
	SPD(playerid,UNNAMED+189,DIALOG_STYLE_LIST,"Výbavy",DIALOG,"Vybrat","Zavøít");
	return 1;
}

stock IsVybavaSlotBlocked(slotid)
{
	switch(slotid)
	{
		case 7: return 1;
	}
	return 0;
}

stock GivePlayerEquip(playerid,vybavaid,slotid,equip)
{
	new query[200],Cache:cache;
	pVybava[playerid][vybavaid][vybID][slotid] = equip;
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Vybava` WHERE `nick`='%e' AND `vybava`=%d",Jmeno(playerid),vybavaid);
	cache = mysql_query(mysql,query);
	if(cache_get_row_count(mysql))
	{
	    cache_get_field_content(0,"vybava_nazev",pVybava[playerid][vybavaid][vybName],mysql,24);
	    mysql_format(mysql,query,sizeof(query),"UPDATE `Vybava` SET `slot%d`=%d WHERE `nick`='%e' AND `vybava`=%d",slotid,equip,Jmeno(playerid),vybavaid);
	}
	else{
		if(vybavaid != 0)
			format(pVybava[playerid][vybavaid][vybName],24,"Výbava %d",vybavaid);
		else
			format(pVybava[playerid][vybavaid][vybName],24,"Spawn výbava");
     	mysql_format(mysql,query,sizeof(query),"INSERT INTO `Vybava` (`vybava`,`vybava_nazev`,`nick`,`slot%d`) VALUES (%d,'%e','%e',%d)",slotid,vybavaid,pVybava[playerid][vybavaid][vybName],Jmeno(playerid),equip);
	}
    mysql_query(mysql,query,false);
    cache_delete(cache);
	return 1;
}

stock ShowPlayerEquipMenu(playerid,vybid)
{
	new DIALOG[1000],slots;
	format(str,sizeof(str),"{0077FF}%s\t \n{0077FF}Naèíst výbavu\t \n"r"Smazat výbavu\t \n",pVybava[playerid][vybid][vybName]);
	strcat(DIALOG,str);
	for(new i; i < MAX_VYBAVA_SLOTS; i ++)
	{
	    if(!IsVybavaSlotBlocked(i))
	    {
		    new name[25+8];
		    slots++;
			format(name,sizeof(name),""g"%s",WeaponsNames(pVybava[playerid][vybid][vybID][i]));
		    format(str,sizeof(str),"Slot %d\t%s\n",slots,(pVybava[playerid][vybid][vybID][i] == 0) ? ("{adadad}Volný slot") : name);
		    strcat(DIALOG,str);
		}
	}
	SPD(playerid,UNNAMED+190,DIALOG_STYLE_TABLIST,"Výbava",DIALOG,"Zmìnit","Zpìt");
	return 1;
}

stock GetWeaponSlot(weaponid)
{
    switch(weaponid)
    {
        case 1: return 0;
        case 2..9: return 1;
        case 22..24: return 2;
        case 25..27: return 3;
        case 28, 29, 32: return 4;
        case 30, 31: return 5;
        case 33, 34: return 6;
        case 35..38: return 7;
        case 16..18, 39: return 8;
        case 41..43: return 9;
        case 10..15: return 10;
        case 44..46: return 11;
        case 40: return 12;
    }
    return -1;
}

stock GetWeaponGroup(id)
{
	switch(id)
	{
		case 0, 4:return 0;		// Melee
		case 22..24:return 1;	// Pistol
		case 25..27:return 2;	// Shotgun
		case 28, 32:return 3;	// SMG
		case 30, 31:return 4;	// Assault Rifle
		case 33, 34:return 5;	// Rifle
		case 35..38:return 6;	// Heavy
		default:return -1;
	}
	return -1;
}

stock DropWeapons(playerid,usemoney = 1, drop = 1, world = 0) return CallRemoteFunction("fDropWeapons","iiii",playerid,usemoney,drop,world);

stock DestroyEventPickup(pcid)
{
	if(ePickups[pcid][PickID] != 0)
	{
	    for(new i; i < 3; i ++)
		    ePickups[pcid][PickPos][i] = 0.0;
		DestroyDynamicPickup(ePickups[pcid][PickID]);
		ePickups[pcid][PickID] = 0;
	}
	return 1;
}

stock CreateEventVehicle(model,Float:X,Float:Y,Float:Z,Float:A,world)
{
	new bool:created;
	for(new i; i < sizeof(eVehicles); i ++)
	{
	    if(eVehicles[i] == 0)
	    {
	        eVehicles[i] = CreateVehicle(model,X,Y,Z,A,-1,-1,-1);
			SetVehicleVirtualWorld(eVehicles[i],world);
	        created = true;
	        break;
	    }
	}
	if(created == false)
	    print("Max event vozidel");
	return 1;
}

stock CreateEventPickup(model,pcid,type,Float:X,Float:Y,Float:Z,world)
{
	new bool:created = false;
	for(new i; i < sizeof(ePickups); i ++)
	{
	    if(ePickups[i][PickID] == 0)
	    {
	        ePickups[i][PickPos][0] = X;
	        ePickups[i][PickPos][1] = Y;
	        ePickups[i][PickPos][2] = Z;
			ePickups[i][PickType] = type;
			ePickups[i][PickModel] = pcid;
			ePickups[i][PickWorld] = world;
			ePickups[i][PickID] = CreateDynamicPickup(model,23,X,Y,Z,.worldid = world);
			created = true;
	        break;
	    }
	}
	if(created == false)
	    print("Max. event objektù");
	return 1;
}

stock ShowPlayerNavigation(playerid)
{
	new DIALOG[sizeof(GPS)*20],prevcat = -1;
	strcat(DIALOG,""sb"Lokace domu\n"sb"Lokace nemovitosti\n"sb"Lokace gangu\n"sb"Lokace výrobny zbraní\n");
	for(new i; i < sizeof(GPS); i ++)
	{
	    if(GPS[i][gCat] != prevcat){
	        strcat(DIALOG,GPS[i][gName]);
			strcat(DIALOG,"\n");
			prevcat = GPS[i][gCat];
		}
	}
	strcat(DIALOG,""r"Vypnout navigaci");
	SPD(playerid,UNNAMED+32,DIALOG_STYLE_LIST,"Navigace",DIALOG,"Vybrat","Zavøít");
	return 1;
}

stock WarpPlayer(playerid,warpid,status = 0)
{
	if(Warps[warpid][wVehicle] == -1 || status == 1 || GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
	{
	    if(Warps[warpid][wWeapon] != -1)
	        GivePlayerWeapon(playerid,Warps[warpid][wWeapon],10000);
	    CreateWarp(playerid,Warps[warpid][wX],Warps[warpid][wY],Warps[warpid][wZ],Warps[warpid][wPredlozka],Warps[warpid][wLokace],.vehicle = Warps[warpid][wVehicle]);
	}
	else if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && Warps[warpid][wVehicle] != -1 && status == 0){
	    SPD(playerid,UNNAMED+31,DIALOG_STYLE_MSGBOX,"Warpy",""dc"Portnutím na tuto pozici pøíjdete vozidlo, chcete se i pøes to odwarpovat?","Ano","Ne");
		SetPVarInt(playerid,"LastID",warpid);
	}
	return 1;
}

stock CountObjects(playerid)
{
	new objects = 0;
	for(new i; i < MAX_OBJECTS_EX; i ++)
	{
	    if(Object[playerid][i] != 0)
	        objects++;
	}
	return objects;
}

stock ShowAdvertisments(playerid,addition[] = "")
{
	new DIALOG[2000],advs,myin[129];
	GetPVarString(playerid,"Inzerat",myin,sizeof(myin));
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(IPC(i))
		{
			new inzerat[129];
			GetPVarString(i,"Inzerat",inzerat,sizeof(inzerat));
			if(strlen(inzerat))
			{
				format(str,sizeof(str),""g"[ %s(%d) ] "w"%s\n",Jmeno(i),i,inzerat);
				strcat(DIALOG,str);
				advs++;
			}
		}
	}
	if(advs == 0)
	    strcat(DIALOG,"Nikdo nenapsal ádný inzerát");
	if(!strlen(myin))
	{
		strcat(DIALOG,"\n\n"dc"Cena inzerátu je "g"10 bodù\n"r"");
		if(strlen(addition))
		{
		    strcat(DIALOG,addition);
		}
		SPD(playerid,UNNAMED+170,DIALOG_STYLE_INPUT,"Inzeráty",DIALOG,"Pøidat","Zavøít");
	}
	else
	{
		strcat(DIALOG,"\n\n"r"Pøejete si zruit Vá inzerát?");
		SPD(playerid,UNNAMED+170,DIALOG_STYLE_MSGBOX,"Inzeráty",DIALOG,"Ano","Ne");
	}
	return 1;
}

stock GetPlayerCountry(playerid,string[],const len = sizeof(string))
{
	GetPVarString(playerid,"PlayerCountry",string,len);
	if(!strlen(string))
	    format(string,8,"Unknown");
	return 1;
}

stock GetPlayerCity(playerid)
{
	new city[50];
	GetPVarString(playerid,"PlayerCity",city,sizeof(city));
	if(!strlen(city))
	    city = "Unknown";
	return city;
}

stock ShowPenaltyPointsForAdmins(playerid,player[],page = 0)
{
	SetPVarInt(playerid,"Page",page);
	SetPVarString(playerid,"PlayerName",player);
	new query[150],Cache:cache,lines,DIALOG[2000],ppoints;
    mysql_format(mysql,query,sizeof(query),"UPDATE `TrestneBody` SET `tb`=0,`showed`=0 WHERE `time` < %d",gettime()-60*60*24*30);
    mysql_query(mysql,query,false);
	mysql_format(mysql,query,sizeof(query),"SELECT SUM(`tb`) FROM `TrestneBody` WHERE `hrac` = '%e' AND `time` > (%d)",player,gettime()-60*60*24*30);
	cache = mysql_query(mysql,query);
	ppoints = cache_get_field_content_int(0,"SUM(`tb`)",mysql);
	cache_delete(cache,mysql);
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `TrestneBody` WHERE `hrac`='%e' ORDER BY `time` DESC LIMIT %d,21",player,page*20);
	cache = mysql_query(mysql,query);
	strcat(DIALOG,""dc"ID\tDatum\tAdmin | Dùvod\tTrestné body\n");
	for(new i; i < 20; i ++)
	{
	    if(i < cache_get_row_count(mysql))
		{
			lines++;
			new admin[MAX_PLAYER_NAME+1],reason[50],tb=cache_get_field_content_int(i,"tb",mysql),tbz=cache_get_field_content_int(i,"tb_z",mysql);
			cache_get_field_content(i,"admin",admin,mysql);
			cache_get_field_content(i,"reason",reason,mysql);
			if(tb > 0)
				format(str,sizeof(str),""r"%05d\t%s\t%s | %s\t"r"%d\n",cache_get_field_content_int(i,"trest_id",mysql),DATE(cache_get_field_content_int(i,"time",mysql)),admin,reason,tbz);
			else if(tb == 0)
				format(str,sizeof(str),""y"%05d\t%s\t%s | %s\t"y"%d\n",cache_get_field_content_int(i,"trest_id",mysql),DATE(cache_get_field_content_int(i,"time",mysql)),admin,reason,tbz);
			strcat(DIALOG,str);
			if(lines == 20)
			    strcat(DIALOG,""sb"Dalí stránka\n");
		}
	}
	if(page > 0)
	    strcat(DIALOG,""sb"Pøedchozí stránka");
	new nadpis[80];
	format(nadpis,sizeof(nadpis),"Trestné body - "g"%s "w"(%dtb)",player,ppoints);
	if(cache_get_row_count(mysql))
		SPD(playerid,UNNAMED+186,DIALOG_STYLE_TABLIST_HEADERS,nadpis,DIALOG,"Vybrat","Zavøít");
	else
	    SPD(playerid,0,DIALOG_STYLE_MSGBOX,nadpis,"Hráè nemá ádné trestné body","Zavøít","");
	cache_delete(cache,mysql);
	return 1;
}

stock ShowPlayerPenaltyPoints(playerid,page = 0)
{
	SetPVarInt(playerid,"Page",page);
	new query[150],Cache:cache,lines,DIALOG[2000],nadpis[50],ppoints;
    mysql_format(mysql,query,sizeof(query),"UPDATE `TrestneBody` SET `tb`=0,`showed`=0 WHERE `time` < %d",gettime()-60*60*24*30);
    mysql_query(mysql,query,false);
	mysql_format(mysql,query,sizeof(query),"SELECT SUM(`tb`) FROM `TrestneBody` WHERE `hrac` = '%e' AND `time` > (%d)",Jmeno(playerid),gettime()-60*60*24*30);
	cache = mysql_query(mysql,query);
	ppoints = cache_get_field_content_int(0,"SUM(`tb`)",mysql);
	cache_delete(cache,mysql);
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `TrestneBody` WHERE `hrac`='%e' ORDER BY `time` DESC LIMIT %d,21",Jmeno(playerid),page*20);
	cache = mysql_query(mysql,query);
	strcat(DIALOG,""dc"Dùvod\tTrestné body\tStatus\n");
	for(new i; i < 20; i ++)
	{
	    if(i < cache_get_row_count(mysql))
		{
			lines++;
			new reason[50];
			new tb=cache_get_field_content_int(i,"tb",mysql);
			cache_get_field_content(i,"reason",reason,mysql);
			if(tb > 0)
				format(str,sizeof(str),"%s\t"r"%d\t"r"%s\n",reason,cache_get_field_content_int(i,"tb_z",mysql),(cache_get_field_content_int(i,"showed") == 0) ? ("Nepøeèteno") : (" ") );
			else if(tb == 0)
				format(str,sizeof(str),"%s\t"y"%d\t"y"Prominuto\n",reason,cache_get_field_content_int(i,"tb_z",mysql));
			strcat(DIALOG,str);
			if(lines == 20)
			    strcat(DIALOG,""sb"Dalí stránka\n");
		}
	}
	if(page > 0)
	    strcat(DIALOG,""sb"Pøedchozí stránka");
	format(nadpis,sizeof(nadpis),"Trestné body ("g"%dtb"w")",ppoints);
	if(cache_get_row_count(mysql))
		SPD(playerid,UNNAMED+183,DIALOG_STYLE_TABLIST_HEADERS,nadpis,DIALOG,"Vybrat","Zavøít");
	else
	    SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Trestné body","Nemá ádné trestné body","Zavøít","");
	cache_delete(cache,mysql);
	return 1;
}

stock ShowAchievements(playerid,page = 0)
{
	SetPVarInt(playerid,"Page",page);
	new DIALOG_ACHIEV[1500],Float:completed = 0.0,achievs;
	for(new i; i < MAX_ACHIEVEMENTS; i ++)
	    if(Achiv[playerid][i] != 0)
	        completed ++;
	for(new i=page*20; i < (page+1)*20; i ++)
	{
	    if(i < MAX_ACHIEVEMENTS)
		{
		    achievs++;
		    if(Achiv[playerid][i] == 0)
		        format(str,sizeof(str),""r"%s\t"r"[ "w"Nesplnìn "r"]\n",AchievementsNames[i][AchievName]);
		    else
		        format(str,sizeof(str),""g"%s\t"g"[ "w"Splnìn "g"]\n",AchievementsNames[i][AchievName]);
		    strcat(DIALOG_ACHIEV,str);
		    if(achievs == 20 && achievs+1 < MAX_ACHIEVEMENTS)
		        strcat(DIALOG_ACHIEV,""sb"Dalí stránka\n");
		}
	}
	if(page > 0)
	    strcat(DIALOG_ACHIEV,""sb"Pøedchozí stránka");
	format(str,sizeof(str),"{00FF87}Achievementy [ "w"%.2f %% Splnìno {00FF87}]",completed/MAX_ACHIEVEMENTS*100);
	SPD(playerid,UNNAMED+100,DIALOG_STYLE_TABLIST,str,DIALOG_ACHIEV,"Vybrat","Zavøít");
	return 1;
}

stock ConnectToStunt(playerid,stuntid)
{
	if(stuntid < 0 || stuntid > sizeof(StuntPos)) return SM(playerid,"Chyba, zkuste to znovu");
	JailCmdBlock(playerid);
	if(ViewMode[playerid]) return SM(playerid,"Teï se nemùe pøipojit do stuntu");
	if(PrisonTime[playerid]) return SM(playerid,"Ve vìzení nemùe plnit stunt");
	if(OnEvent[playerid] == true) return SM(playerid,"Na eventu nemùe plnit stunt");
	if(IsPlayerSupplyRun(playerid)) return SM(playerid,"Právì plní misi, nemùe vykonat tuto akci");
	if(InDM[playerid] != -1) return SM(playerid,"V DM nemùe plnit stunt");
	if(WorkMission[playerid] > 0) return SM(playerid,"U má nìco na práci "r"/zrusmisi");
	if(RacePlayer[playerid] > -1) return SM(playerid,"V závodì nemùe plnit stunt");
	if(IsPlayerHitted(playerid)) return SM(playerid,"V boji nemùe plnit stunt");
	if(pStunt[playerid][sStuntID] == -1)
   		SaveBeforeEventData(playerid);
	if(pStunt[playerid][sStuntID] != stuntid)
	{
		format(str,sizeof(str),"%s ~g~%s ~w~zacal plnit ~r~stunt %d~w~.",Players(playerid),Jmeno(playerid),stuntid+1);
		AddStringToTextDraw(str);
	}
	DestroyVehicle(pStunt[playerid][sVeh]);
	pStunt[playerid][sVeh] = 0;
	SetPlayerPos(playerid,StuntPos[stuntid][0],StuntPos[stuntid][1],StuntPos[stuntid][2]);
	SetPlayerInterior(playerid,0);
	pStunt[playerid][sVeh] = CreateVehicle(522,StuntPos[stuntid][0],StuntPos[stuntid][1],StuntPos[stuntid][2],StuntPos[stuntid][3],-1,-1,0);
	SetVehicleVirtualWorld(pStunt[playerid][sVeh],GetPlayerVirtualWorld(playerid));
	PutPlayerInVehicle(playerid,pStunt[playerid][sVeh],0);
	SetPlayerVirtualWorld(playerid,stuntid+1500);
	SetVehicleVirtualWorld(pStunt[playerid][sVeh],stuntid+1500);
	DisableRemoteVehicleCollisions(playerid,true);
    DisablePlayerCheckpoint(playerid);
	SetPlayerCheckpointEx(playerid,StuntPos[stuntid][4],StuntPos[stuntid][5],StuntPos[stuntid][6],1.54);
	pStunt[playerid][sStuntID] = stuntid;
	pStunt[playerid][sTime] = 40;
    pStunt[playerid][sTakeTime] = -1;
	ResetPlayerWeapons(playerid);
	CreateInfoBox(playerid,"Pokracujte k ~r~checkpointu",3);
	return 1;
}

stock LeaveStunt(playerid)
{
	SetPVarInt(playerid,"LastID",pStunt[playerid][sStuntID]);
	pStunt[playerid][sStuntID] = -1;
    pStunt[playerid][sTakeTime] = -1;
	DestroyVehicle(pStunt[playerid][sVeh]);
	pStunt[playerid][sVeh] = 0;
    DisablePlayerCheckpoint(playerid);
    SetPlayerVirtualWorld(playerid,0);
	LoadBeforeEventData(playerid);
	DisableRemoteVehicleCollisions(playerid,false);
	return 1;
}

stock ShowStuntMenu(playerid,page = 0)
{
	new DIALOG[1000],stunts;
	SetPVarInt(playerid,"Page",page);
	for(new i = page*20; i < (page+1)*20; i ++)
	{
		if(i < sizeof(StuntPos))
		{
		    if(pStunt[playerid][sStatus][i] == true)
		    	format(str,sizeof(str),"Stunt: "c"%d\t"g"Splnìno (%dx)\n",i+1,pStunt[playerid][sEachCompleted][i]);
			else
		    	format(str,sizeof(str),"Stunt: "c"%d\t"r"Nesplnìno\n",i+1);
			strcat(DIALOG,str);
			stunts++;
		 	if(stunts == 20 && i+1 < sizeof(StuntPos)) strcat(DIALOG,""sb"Dalí stránka\n");
		}
	}
	if(page > 0) strcat(DIALOG,""sb"Pøedchozí stránka");
	format(str,sizeof(str),"Stunty - "g"Splnìno: %d/%d - "r"%0.2f%%",pStunt[playerid][sCompleted],sizeof(StuntPos),float(pStunt[playerid][sCompleted])/float(sizeof(StuntPos))*100.0);
	SPD(playerid,UNNAMED+181,DIALOG_STYLE_TABLIST,str,DIALOG,"Vybrat","Zavøít");
	return 1;
}

stock IsWeaponValid(weaponid)
{
	if(weaponid < 0 || weaponid > 46) return 0;
	switch(weaponid)
	{
	    case 19..21: return 0;
	    case 38: return 0;
	    case 40: return 0;
	    case 43..46: return 0;
	}
	return 1;
}


stock JoinDuel(playerid,room,asplayer)
{
	Duel[room][DuelPlayer][asplayer] = playerid;
	dPlayer[playerid][DuelPlayer] = asplayer;
    SaveBeforeEventData(playerid);
    SetPlayerPos(playerid,DuelPos[asplayer][0],DuelPos[asplayer][1],DuelPos[asplayer][2]);
    SetPlayerFacingAngle(playerid,DuelPos[asplayer][3]);
    TogglePlayerControllable(playerid,false);
    SetCameraBehindPlayer(playerid);
    SetPlayerVirtualWorld(playerid,DUEL_WORLD+room);
    ResetPlayerWeapons(playerid);
    GivePlayerWeapon(playerid,Duel[room][DuelWeapon],10000*2);
	SetPlayerHealth(playerid,100);
	SetPlayerArmour(playerid,0);
	if(GetGang(playerid) > 0)
	    SetGang(playerid,255);
    if(asplayer == 1)
    {
        Duel[room][DuelOdp] = 6;
        SetTimerEx("DuelOdpocet",1000,false,"i",room);
    }
	return 1;
}

forward DuelOdpocet(room);
forward DuelTimeTimer(room);

public DuelOdpocet(room)
{
	new string[50];
	if(Duel[room][DuelStatus] == DUEL_STATUS_WAIT)
	{
		Duel[room][DuelOdp] --;
		if(Duel[room][DuelOdp] > 0)
		{
			if(Duel[room][DuelRound] == 0)
				format(string,sizeof(string),"~r~Kolo %d~n~~y~%d",Duel[room][DuelRound]+1,Duel[room][DuelOdp]);
			else
				format(string,sizeof(string),"~r~Kolo %d~n~~b~pripravit",Duel[room][DuelRound]+1);
			SetTimerEx("DuelOdpocet",1000,false,"i",room);
		}
		else
		{
		    format(string,sizeof(string),"~r~Kolo %d~n~~g~START!!",Duel[room][DuelRound]+1);
			if(!Duel[room][DuelTimer])
				Duel[room][DuelTimer] = SetTimerEx("DuelTimeTimer",1000,true,"i",room);
		    Duel[room][DuelStatus] = DUEL_STATUS_STARTED;
		}
	    for(new i; i < 2; i ++)
	    {
	        GameTextForPlayer(Duel[room][DuelPlayer][i],string,1200,3);
			if(Duel[room][DuelOdp] == 0)
			{
		        UpdateDuelInfo(Duel[room][DuelPlayer][i]);
			    TogglePlayerControllable(Duel[room][DuelPlayer][i],true);
				if(Duel[room][DuelRound] == 0)
				{
				    for(new x; x < MAX_DUEL_TD; x ++)
				    {
					    if(Duel[room][DuelPlayer][i] != -1)
					    {
			        		new playerid = Duel[room][DuelPlayer][i];
					        PlayerTextDrawSetString(playerid,DuelTD[playerid][x],"_");
					        PlayerTextDrawShow(playerid,DuelTD[playerid][x]);
						}
				    }
				}
			}
	    }
	}
	return 1;
}

public DuelTimeTimer(room)
{
	Duel[room][DuelTime] ++;
	Duel[room][DuelRoundTime] ++;
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(IPC(i) && dPlayer[i][DuelPlayer] != -1)
	    {
			UpdateDuelInfo(i);
		}
	}
	return 1;
}

stock UpdateDuelInfo(playerid)
{
	new room = dPlayer[playerid][pDuelRoom];
	if(room > -1)
	{
	    format(str,sizeof(str),"~y~Kolo: ~w~%d/%d",Duel[room][DuelRound]+1,Duel[room][DuelRounds]);
		PlayerTextDrawSetString(playerid,DuelTD[playerid][0],str);
	    format(str,sizeof(str),"~y~Cas kola: ~w~%s",SecondsToMinutes(Duel[room][DuelRoundTime]));
		PlayerTextDrawSetString(playerid,DuelTD[playerid][1],str);
	    format(str,sizeof(str),"~y~Cas duelu: ~w~%s",SecondsToMinutes(Duel[room][DuelTime]));
		PlayerTextDrawSetString(playerid,DuelTD[playerid][2],str);
	    format(str,sizeof(str),"~y~Score: ~w~%02d : %02d",Duel[room][DuelKills][dPlayer[playerid][DuelPlayer]],Duel[room][DuelKills][(dPlayer[playerid][DuelPlayer]+1)%2]);
		PlayerTextDrawSetString(playerid,DuelTD[playerid][3],str);
	}
	return 1;
}

stock ResetDuel(room,reason[] = "")
{
	if(Duel[room][DuelStatus] == DUEL_STATUS_STARTED || Duel[room][DuelStatus] == DUEL_STATUS_WAIT)
	{
		if(strlen(reason))
		    format(str,sizeof(str),"Duel (%d) "c"%s "co"vs. "g"%s "co"skonèil pøedèasnì [ %s ].",room+1,Jmeno(Duel[room][DuelPlayer][0]),Jmeno(Duel[room][DuelPlayer][1]),reason);
		else
		    format(str,sizeof(str),"Duel (%d) "c"%s "co"vs. "g"%s "co"skonèil.",room+1,Jmeno(Duel[room][DuelPlayer][0]),Jmeno(Duel[room][DuelPlayer][1]));
	    SCMTA(ORANGE,str);
	    format(str,sizeof(str),"[ Score: "c"%d"co" : "g"%d "co"| Poèet kol: "w"%d/%d "co" | Èas: "w"%s "co"].",Duel[room][DuelKills][0],Duel[room][DuelKills][1],Duel[room][DuelRound],Duel[room][DuelRounds],SecondsToMinutes(Duel[room][DuelTime]));
	    SCMTA(ORANGE,str);
	}
	KillTimer(Duel[room][DuelTimer]);
	Duel[room][DuelTimer] = 0;
	Duel[room][DuelStatus] = DUEL_STATUS_FREE;
	Duel[room][DuelWeapon] = 0;
	Duel[room][DuelRound] = 0;
	Duel[room][DuelRounds] = 0;
	Duel[room][DuelOdp] = 0;
	Duel[room][DuelTime] = 0;
	Duel[room][DuelRoundTime] = 0;
	for(new i; i < 2; i ++)
	{
	    if(Duel[room][DuelPlayer][i] != -1)
	    {
	        new playerid = Duel[room][DuelPlayer][i];
			LeaveDuel(playerid);
	    }
		Duel[room][DuelPlayer][i] = -1;
		Duel[room][DuelKills][i] = 0;
	}
	for(new i; i <= GetPlayerPoolSize(); i ++)
	    if(dPlayer[i][pDuelSpec] != -1 && dPlayer[i][pDuelRoom] == room && IPC(i))
	    {
			DuelSpecOff(i);
		}
	return 1;
}

stock DuelSpecOff(playerid)
{
	if(dPlayer[playerid][pDuelSpec] != -1)
	{
	    dPlayer[playerid][pDuelSpec] = -1;
		dPlayer[playerid][pDuelRoom] = -1;
		dPlayer[playerid][DuelPlayer] = -1;
		dPlayer[playerid][pDuelStatus] = -1;
	    TogglePlayerSpectating(playerid,false);
	    SetPlayerVirtualWorld(playerid,0);
	    for(new x; x < MAX_DUEL_TD; x ++)
	    	PlayerTextDrawHide(playerid,DuelTD[playerid][x]);
	}
	return 1;
}

stock LeaveDuel(playerid)
{
	if(IPC(playerid))
	{
        for(new x; x < MAX_DUEL_TD; x ++)
        	PlayerTextDrawHide(playerid,DuelTD[playerid][x]);
		Duel[dPlayer[playerid][pDuelRoom]][DuelPlayer][dPlayer[playerid][pDuelStatus]] = -1;
		dPlayer[playerid][pDuelStatus] = -1;
		dPlayer[playerid][DuelPlayer] = -1;
		dPlayer[playerid][pDuelRoom] = -1;
		TogglePlayerControllable(playerid,true);
		if(GetGang(playerid) > 0)
		    SetGang(playerid,GetGang(playerid));
		if(GetPlayerState(playerid) != PLAYER_STATE_WASTED)
       		LoadBeforeEventData(playerid);
	}
	return 1;
}

stock ShowDuelDialog(playerid)
{
	new DIALOG[MAX_DUELS*150];
	for(new i; i < MAX_DUELS; i ++)
	{
		if(Duel[i][DuelStatus] == DUEL_STATUS_FREE)
			format(str,sizeof(str),"Duel místnost [ "g"%d "w"]\t"g"Nezaloeno\t \t \t\n",i+1);
		else if(Duel[i][DuelStatus] == DUEL_STATUS_CREATING)
			format(str,sizeof(str),"Duel místnost [ "co"%d "w"]\t"co"Vytváøí se\t \t \t\n",i+1);
		else if(Duel[i][DuelStatus] == DUEL_STATUS_CONNECT)
			format(str,sizeof(str),"Duel místnost [ "y"%d "w"]\t"y"Pøipojit\t["y" %s "w"]\t[ "y"%s "w" ]\n",i+1,Jmeno(Duel[i][DuelPlayer][0]),WeaponsNames(Duel[i][DuelWeapon]));
		else if(Duel[i][DuelStatus] == DUEL_STATUS_STARTED || Duel[i][DuelStatus] == DUEL_STATUS_WAIT)
			format(str,sizeof(str),"Duel místnost [ "r"%d "w"]\t"r"Probíhá (%d/%d)\t[ "r"%s v %s"w" ]\t["r" %s "w"]\n",i+1,Duel[i][DuelRound]+1,Duel[i][DuelRounds],Jmeno(Duel[i][DuelPlayer][0]),Jmeno(Duel[i][DuelPlayer][1]),WeaponsNames(Duel[i][DuelWeapon]));
		strcat(DIALOG,str);
	}
	strcat(DIALOG,"{0077FF}Zobrazit seznam zbraní\n");
	strcat(DIALOG,"{0077FF}Zobrazit osobní statistiky");
	SPD(playerid,D_DIALOG+1,DIALOG_STYLE_TABLIST,"Duel System",DIALOG,"Vybrat","Zavøít");
	return 1;
}

stock GetPlayerSign(playerid)
{
	new sign[24+1];
	GetPVarString(playerid,"Signature",sign,sizeof(sign));
	if(!strlen(sign))
	    sign = Jmeno(playerid);
	SetPVarString(playerid,"Signature",Jmeno(playerid));
	return sign;
}

stock IsNumeric(const string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
    return 1;
}

stock IsBotConnected()
{
	if(IPC(GetBotID()))
	{
	    if(strcmp(Jmeno(GetBotID()),BOT_NAME,false) == 0) return 1;
	}
	return 0;
}

stock GetBotID()
{
 	return botid;
}

stock GetWeekDay(day=0, month=0, year=0)
{
	if (!day)
		getdate(year, month, day);

	new
		weekday_str[10],
		j,
		e
		;

	if (month <= 2)
	{
		month += 12;
		--year;
	}

	j = year % 100;
	e = year / 100;

	switch ((day + (month+1)*26/10 + j + j/4 + e/4 - 2*e) % 7)
	{
		case 0: weekday_str = "Sobota";
		case 1: weekday_str = "Nedìle";
		case 2: weekday_str = "Pondìlí";
		case 3: weekday_str = "Úterý";
		case 4: weekday_str = "Støeda";
		case 5: weekday_str = "Ètvrtek";
		case 6: weekday_str = "Pátek";
	}

	return weekday_str;
}

stock ShowGarageCategories(playerid)
{
	new DIALOG[sizeof(GarageCategories)*30];
	for(new i; i < sizeof(GarageCategories); i ++)
	{
	    format(str,sizeof(str),"%s\n",GarageCategories[i][0]);
	    strcat(DIALOG,str);
	}
	SPD(playerid,UNNAMED+92,DIALOG_STYLE_LIST,"Kategorie vozidel",DIALOG,"Vybrat","Zavøít");
	return 1;
}

stock GetVehicleType(VehicleID)
{
	new model = GetVehicleModel(VehicleID);
	if(model > 399 && model < 613)
	{
		switch(model)
		{
		    case 417,425,447,469,465,487,488,501,497,563,548: return TYPE_HELI;
		    case 448,461,462,463,468,471,521,522,523,586,581: return TYPE_MOTO;
		    case 403,413,414,418,443,440,456,459,482,498,499,508,514,515,573,578,609: return TYPE_KAMION;
			case 590,569,537,538,570: return TYPE_TRAIN;
			case 449: return TYPE_TRAM;
			case 481,509,510: return TYPE_BIKES;
			case 464,476,511,512,513,519,520,553,577,592,593: return TYPE_LETADLA;
			case 446,452,453,454,472,473,484,493,539: return TYPE_BOATS;
			case 441,594,564: return TYPE_RC;
			default: return TYPE_CAR;
		}
	}
	return false;
}

stock GetVehicleMeter(vehicleid)
{
	if(vehicleid != INVALID_VEHICLE_ID)
 	{
  		new Float:Pos[3],Float:VS ;
    	GetVehicleVelocity(vehicleid, Pos[0], Pos[1], Pos[2]);
     	VS = floatsqroot(Pos[0]*Pos[0] + Pos[1]*Pos[1] + Pos[2]*Pos[2]) * 158.179;
      	return floatround(VS/ 7.2,floatround_round);
    }
    return INVALID_VEHICLE_ID;
}

stock GetPlayerNameIP(name[])
{
	new ip[16+1] = "255.255.255.255";
	format(dfile,sizeof(dfile),USER_FILES,name);
	if(fexist(dfile))
	{
		format(ip,sizeof(ip),DOF2_GetString(dfile,"IP"));
	}
	return ip;
}

stock GetPlayerMeter(playerid)
{
	if(playerid != INVALID_PLAYER_ID)
 	{
  		new Float:Pos[3],Float:VS ;
    	GetPlayerVelocity(playerid, Pos[0], Pos[1], Pos[2]);
     	VS = floatsqroot(Pos[0]*Pos[0] + Pos[1]*Pos[1] + Pos[2]*Pos[2]) * 158.179;
      	return floatround(VS/ 7.2,floatround_round);
    }
    return INVALID_PLAYER_ID;
}

stock GetPlayerTitul(playerid)
{
	new titul[25] = "";
	GetPVarString(playerid,"Titul",titul,sizeof(titul));
	return titul;
}

stock GetPlayerTitulColor(playerid)
{
	new color[7] = "";
	GetPVarString(playerid,"TitulColor",color,sizeof(color));
	return color;
}

stock GetPlayerTextColor(playerid)
{
	new color[7] = "";
	GetPVarString(playerid,"TextColor",color,sizeof(color));
	return color;
}

stock CreateNoKillZone(Float:X,Float:Y,Float:Z,Float:radius)
{
	new bool: canbecreated;
	for(new zoneid = 0; zoneid < MAX_ZONES; zoneid ++)
	{
		if(NoKillZone[zoneid][ZoneUsed] == false)
		{
		    canbecreated = true;
			new file[50];
			format(file,sizeof(file),NKZ_FILE,zoneid);
			if(!fexist(file))
			{
			    DOF2_CreateFile(file);
			    DOF2_SetFloat(file,"X",X);
			    DOF2_SetFloat(file,"Y",Y);
			    DOF2_SetFloat(file,"Z",Z);
		    	DOF2_SetFloat(file,"Radius",radius);
			    DOF2_SaveFile();
			}
			NoKillZone[zoneid][NX] = X;
			NoKillZone[zoneid][NY] = Y;
			NoKillZone[zoneid][NZ] = Z;
			NoKillZone[zoneid][NRadius] = radius;
			NoKillZone[zoneid][NPickup] = CreateDynamicPickup(1247,23,X,Y,Z,0);
			format(str,sizeof(str),"[ No Kill Zone ]\n"w"ID: "g"%d\n"w"Radius: "g"%0.0f metrù",zoneid,radius);
			NoKillZone[zoneid][NText] = CreateDynamic3DTextLabel(str,red,X,Y,Z,50);
			NoKillZone[zoneid][ZoneUsed] = true;
		    lastzone = zoneid;
			break;
		}
	}
	if(canbecreated == false)
	{
		print("Byl pøekroèen maximální poèet no kill zón");
	}
	return 1;
}


stock PlayerLogged(playerid)
{
	if(Admin[playerid] > 0)
	{
		new Cache:cache;
		cache = mysql_query(mysql,"SELECT * FROM `Dotazy` WHERE `Odpovezeno` = 0");
		if(cache_get_row_count(mysql) > 0)
		{
			format(str,sizeof(str),"Na server je "r"%d "w"nezodpovìzených dotazù",cache_get_row_count(mysql));
			SCM(playerid,bila,str);
		}
		cache_delete(cache,mysql);
	}
	return 1;
}

stock IsPlayerInArea(playerid, Float:MinX, Float:MinY, Float:MaxX, Float:MaxY)
{
	new Float:X, Float:Y, Float:Z;

	GetPlayerPos(playerid, X, Y, Z);
	if(X >= MinX && X <= MaxX && Y >= MinY && Y <= MaxY) {
		return 1;
	}
	return 0;
}

stock IsPlayerInEventZone(playerid)
{
	if(IsPlayerInArea(playerid,EventRadiusPos[1],EventRadiusPos[3],EventRadiusPos[0],EventRadiusPos[2])) return 1;
	return 0;
}

stock CreateFalloutObjectsEx(patra = 1,objects = 5)
{
	for(new x; x < patra; x ++)
	{
		new rad;
		for(new i; i < objects*objects; i ++)
		{
			if(i%objects == 0) rad ++;
			Fallout[i][x][FObject] = CreateObject(19376, 508.0+10.3*rad, 3092.0+(i%objects*9.6), 26.14126+x*5,   0.00000, 90.00000, 0.00000);
			if(x % 2 == 0 && CHRISTMAS_MODE == false)
				SetObjectMaterial(Fallout[i][x][FObject], 0, 17944, "lngblok_lae2", "white64bumpy", 0xFF0099FF);
			else
				SetObjectMaterial(Fallout[i][x][FObject], 0, 17944, "lngblok_lae2", "white64bumpy", 0xFFFFFFFF);
			if(CHRISTMAS_MODE)
				SetObjectMaterial(Fallout[i][x][FObject], 0, 17944, "lngblok_lae2", "white64bumpy", 0xFFFFFFFF);
//			format(str,sizeof(str),"Patro: "w"%d "r"| Øada: "w"%d "r"| Object: "w"%d (%d)",x+1,rad,i,(i+1)*(x+1));
//			CreateDynamic3DTextLabel(str,red,508.0+9.9*rad, 3092.0+(i%objects*9.75),26.14126+x*5,50);
//			print(str);
		}
	}
	return 1;
}

stock ShowPlayerEventSettings(playerid)
{
	new DIALOG_EVENTS[1000];
	strcat(DIALOG_EVENTS,"Doplnit vem zdraví / vestu\n");
	strcat(DIALOG_EVENTS,"Zmrazit vechny\nOdmrazit vechny\n");
	strcat(DIALOG_EVENTS,"Sebrat vem zbranì\n");
	strcat(DIALOG_EVENTS,"Bloknout vem pøíkazy\nOdbloknout vem pøíkazy\n");
	strcat(DIALOG_EVENTS,"Dát vem zbraò\nOpravit vem vozidla\n");
	strcat(DIALOG_EVENTS,"Zneviditelnit vechny\nZapnout automatickou opravu\n");
	strcat(DIALOG_EVENTS,"Vypnout automatickou opravu\nNastavit vem drunk level\n");
	strcat(DIALOG_EVENTS,"Zruit vem drunk level\nVypnout zabíjení na eventu\n");
	strcat(DIALOG_EVENTS,"Zapnout zabíjení na eventu\nNastavit radius");
	SPD(playerid,UNNAMED,DIALOG_STYLE_LIST,"Event Settings",DIALOG_EVENTS,"Vybrat","Zavøít");
	return 1;
}

stock ShowMapOptions(playerid,mapid)
{
    new DIALOG[500];
	if(Map[mapid][MapSlotUsed] == false) return SM(playerid,"Vybral jste prázdný slot");
    if(Map[mapid][MapLoaded] == false) strcat(DIALOG,"Naèíst mapu\n");
    else strcat(DIALOG,"Odnaèíst mapu\n");
    strcat(DIALOG,"Teleportovat se k mapì\n");
    if(Map[mapid][MapAutoLoad] == 0) strcat(DIALOG,"Zapnout AutoLoad\n");
    else strcat(DIALOG,"Vypnout AutoLoad\n");
    if(strcmp(Jmeno(playerid),Map[mapid][MapAutor],false) == 0 || IsPlayerOnHighestLevel(playerid))
    {
	    strcat(DIALOG,"Upravit mapu\n");
    	strcat(DIALOG,""r"Odstranit mapu");
	}
    format(str,sizeof(str),Map[mapid][MapName]);
    SPD(playerid,UNNAMED+173,DIALOG_STYLE_LIST,str,DIALOG,"Vybrat","Zavøít");
    SetPVarInt(playerid,"SelectedMap",mapid);
	return 1;
}

stock LoadMap(mapid)
{
    new Float:X,Float:Y,Float:Z,Float:rX,Float:rY,Float:rZ;
	for(new i; i < MAX_OBJECTS_EX; i ++)
	{
	    if(Map[mapid][MapObjectID][i] != 0)
	    {
		    X = Map[mapid][MapX][i];
		    Y = Map[mapid][MapY][i];
		    Z = Map[mapid][MapZ][i];
		    rX = Map[mapid][MapRX][i];
		    rY = Map[mapid][MapRY][i];
		    rZ = Map[mapid][MapRZ][i];
			Map[mapid][MapObject][i] = CreateDynamicObject(Map[mapid][MapObjectID][i],X,Y,Z,rX,rY,rZ,Map[mapid][MapVW]);
		}
	}
	Map[mapid][MapLoaded] = true;
	return 1;
}

stock GetPlayerDrazbaItem(playerid)
{
	return CallRemoteFunction("GetPlayerDrazbaItem","i",playerid);
}

stock GetPlayerDrazbaStatus(playerid)
{
	return CallRemoteFunction("GetPlayerDrazbaStatus","i",playerid);
}

stock GetPlayerDrazbaType(playerid)
{
	return CallRemoteFunction("GetPlayerDrazbaType","i",playerid);
}

stock GetPlayerDrazbaAmount(playerid)
{
	return CallRemoteFunction("GetPlayerDrazbaAmount","i",playerid);
}

stock ResetPlayerDrazba(playerid)
{
	return CallRemoteFunction("ResetPlayerDrazba","i",playerid);
}

stock IsPlayerLogged(playerid)
{
	return CallRemoteFunction("IsPlayerLogged","i",playerid);
}

stock GivePlayerWeaponEx(playerid,weaponid,ammo)
{
	return CallRemoteFunction("GivePlayerWeaponEx","iii",playerid,weaponid,ammo);
}

stock ResetPlayerWeaponsEx(playerid)
{
	return CallRemoteFunction("ResetPlayerWeaponsEx","i",playerid);
}

stock GetPlayerRacePlayers(raceid)
{
	new players;
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(IPC(i) && !IsPlayerNPC(i))
	    {
	        if(RacePlayer[i] == raceid)
	        {
	            players ++;
	        }
	    }
	}
	return players+pozice[raceid];
}

stock GetPlayerPosition(playerid, raceid)
{
	new index = 0;
	for(new j = 0; j <= GetPlayerPoolSize(); j++)
	{
		if(IPC(j))
		{
		    if(RacePlayer[playerid] == raceid)
		    {
		    	if(j != playerid)
		    	{
					if(PlayerCP[playerid] < PlayerCP[j])
					{
					    index++;
					}
					if(PlayerCP[playerid] == PlayerCP[j]) //who is in the same section as the player
					{
					    new PlayerCheckPoint = PlayerCP[playerid];
					    new ElseCheckPoint = PlayerCP[j];
	    				if(GetPlayerDistanceFromPoint(playerid,Race[raceid][CPX][PlayerCheckPoint]+1,Race[raceid][CPY][PlayerCheckPoint]+1,Race[raceid][CPZ][PlayerCheckPoint]+1) > GetPlayerDistanceFromPoint(j, Race[raceid][CPX][ElseCheckPoint]+1,Race[raceid][CPY][ElseCheckPoint]+1,Race[raceid][CPZ][ElseCheckPoint]+1))
						{
					    	index++;
					    }
					}
				}
			}
		}
	}
	return index+1+pozice[raceid];
}

stock GivePlayerGanja(playerid,amount,reason[],bool:drazba = false)
{
	return CallRemoteFunction("_GivePlayerGanja","iisi",playerid,amount,reason,drazba);
}

stock ShowPlayerInfo(toplayerid,playerid)
{
	return CallRemoteFunction("ShowPlayerInfo","ii",toplayerid,playerid);
}

function IsPlayerOnHighestLevel(playerid)
{
	if(TNick[playerid] == true) return 1;
	//if(Admin[playerid] == 6) return 1;
	return 0;
}

stock MakesPlayerDrivingSchool(playerid)
{
	return CallRemoteFunction("MakesPlayerDrivingSchool","i",playerid);
}

stock GetPlayerSkinEx(playerid)
{
	return CallRemoteFunction("GetPlayerSkinEx","i",playerid);
}

stock SetPlayerSkinEx(playerid,skinid)
{
	return CallRemoteFunction("SetPlayerSkinEx","ii",playerid,skinid);
}

stock GetPlayerPlayedTime(playerid)
{
	return CallRemoteFunction("GetPlayerPlayedTime","i",playerid);
}

stock ChangePassword(acc[],pass[])
{
	return CallRemoteFunction("ChangePassword","ss",acc,pass);
}

stock IsPasswordBad(acc[],pass[])
{
	return CallRemoteFunction("IsPasswordBad","ss",acc,pass);
}

stock GetPlayerGanja(playerid)
{
	return CallRemoteFunction("GetPlayerGanja","i",playerid);
}

stock ShowPlayerBank(playerid)
{
	return CallRemoteFunction("ShowBank","i",playerid);
}

stock GetPlayerBankMoney(playerid)
{
	return CallRemoteFunction("GetPlayerBankMoney","i",playerid);
}

stock GivePlayerVyplata(playerid,castka)
{
	return CallRemoteFunction("GivePlayerVyplata","ii",playerid,castka);
}

stock GivePlayerJobPoints(playerid,points)
{
	return CallRemoteFunction("GivePlayerJobPoints","ii",playerid,points);
}

stock SendJobMessage(jobtype,message[])
{
	return CallRemoteFunction("SendJobMessage","is",jobtype,message);
}

stock GivePlayerJobReward(playerid)
{
	return CallRemoteFunction("GivePlayerJobReward","i",playerid);
}

stock GetPlayerJob(playerid)
{
	return CallRemoteFunction("GetPlayerJob","i",playerid);
}

stock FRZE_FILES(playerid)
{
	new file[50];
	format(file,sizeof(file),"%s.txt",Jmeno(playerid));
	return file;
}

stock PlayerSpectatePlayerEx(playerid,id)
{
	if(!IsPlayerInAnyVehicle(id))
	{
		PlayerSpectatePlayer(playerid,id);
		SpectatePlayerType[playerid] = 0;
	}
	else
	{
		PlayerSpectateVehicle(playerid,GetPlayerVehicleID(id));
		SpectatePlayerType[playerid] = 1;
	}
	return 1;
}

stock IsPlayerInAnyGarage(playerid)
{
	return CallRemoteFunction("_IsPlayerInAnyGarage","i",playerid);
}

stock IsPlayerInGarage(playerid)
{
	return CallRemoteFunction("IsPlayerInGarage","i",playerid);
}

stock SetPlayerUnAFK(playerid)
{
	if(AFK[playerid] == true)
	{
	    new afktime = GetPVarInt(playerid,"AFKTime");
	    SetPVarInt(playerid,"AFKTime",0);
	    Player[playerid][pAFKTime] += gettime() - afktime;
	    Player[playerid][pAFKTimeTotal] += gettime() - afktime;
		AFK[playerid] = false;
		if(RacePlayer[playerid] == -1)
		{
	    	TogglePlayerControllable(playerid,true);
		}
		else
		{
		    if(RaceOdpocet[playerid] == 0)
		    {
		    	TogglePlayerControllable(playerid,true);
		    }
		}
		new pName[MAX_PLAYER_NAME+1];
		GetPVarString(playerid,"afkName",pName,sizeof(pName));
		SetPlayerName(playerid,pName);
		format(str,sizeof(str),"~y~%s ~w~%s ~y~se %s zpet do hry.",Players(playerid),Jmeno(playerid),SexWord(playerid,"vratil","vratila"));
		AddStringToTextDraw(str);
		format(str,sizeof(str),"%s jste se zpìt do hry, byl jste neaktivní: "w"%s",SexWord(playerid,"Vrátil","Vrátila"),SecondsToMinutes(gettime() - afktime));
		SCM(playerid,0x0077FFFF,str);
		SetPlayerWantedLevel(playerid,GetPVarInt(playerid,"AFKWL"));
		new Float:Health = GetPVarFloat(playerid,"AFKHP");
		if(Health != 0)
		{
		    SetPlayerHealth(playerid,Health);
		}
		else
		{
		    SetPlayerHealth(playerid,100);
		}
		SetPVarFloat(playerid,"AFKHP",0.0);
	}
}

stock SetPlayerAFK(playerid)
{
	CancelAntiSK(playerid);
	if(InDM[playerid] != -1)
	{
	    LeaveDM(playerid);
	}
	if(OnEvent[playerid] == true && BotEvent == true)
	{
	    new text[20];
	    format(text,sizeof(text),"%d AFK na eventu");
	    CallLocalFunction("cmd_ekick","is",botid,text);
	}
	if(dPlayer[playerid][pDuelStatus] != -1)
	{
		new room = dPlayer[playerid][pDuelRoom];
		if(dPlayer[playerid][pDuelSpec] == -1)
		{
			format(str,sizeof(str),"%s el AFK",Jmeno(playerid));
			ResetDuel(room,str);
		}
		else
			DuelSpecOff(playerid);
		SetCameraBehindPlayer(playerid);
	}
	format(str,sizeof(str),"~y~%s ~w~%s ~y~%s do AFK rezimu.",Players(playerid),Jmeno(playerid),SexWord(playerid,"presel","presla"));
	AddStringToTextDraw(str);
	SetPVarInt(playerid,"AFKWL",GetPlayerWantedLevel(playerid));
	new Float:Health;
	GetPlayerHealth(playerid,Health);
	if(Health <= 100)
	{
		SetPVarFloat(playerid,"AFKHP",Health);
	}
	SetPlayerHealth(playerid,1000000);
	SetPlayerWantedLevel(playerid,0);
	TogglePlayerControllable(playerid,false);
	SetPVarString(playerid,"afkName",Jmeno(playerid));
	new pName[MAX_PLAYER_NAME+1];
	GetPlayerName(playerid,pName,MAX_PLAYER_NAME);
	strins(pName,"[AFK]",0);
	SetPlayerName(playerid,pName);
   	AFK[playerid] = true;
	SetPVarInt(playerid,"AFKTime",gettime());
	return 1;
}

stock GetPlayerStatus(playerid)
{
	new Status[50];
    if(OnEvent[playerid] == true) format(Status,sizeof(Status),"Na eventu");
	else if(WorkMission[playerid] > 0) format(Status,sizeof(Status),"V misi %s",Missions[WorkMission[playerid]]);
	else if(InDM[playerid] > -1) format(Status,sizeof(Status),"V DM %s",DM[InDM[playerid]][DMName]);
	else if(RacePlayer[playerid] > -1) format(Status,sizeof(Status),"V závodì %s",Race[RacePlayer[playerid]][CPName]);
	else if(IsPlayerInAnyGarage(playerid)) format(Status,sizeof(Status),"V tunírnì");
	else if(IsPlayerHitted(playerid)) format(Status,sizeof(Status),"V boji (%ds)",Hitted[playerid]);
	else if(IsPlayerSupplyRun(playerid)) format(Status,sizeof(Status),"Doplnuje zasoby");
	else format(Status,sizeof(Status),"Neutral");
	return Status;
}

stock CheckAntiReklama(playerid,text[])
{
	#pragma unused playerid
	#pragma unused text
/*	if(Admin[playerid]  < 1)
	{
		for(new i; i < sizeof(Reklama); i ++)
		{
		  	if(strfind(text,Reklama[i],true) != -1 )
			{
				format(str,sizeof(str),"[ Anti - Cheat ] %s "w"%s "r"byl vyhozen ze serveru za moný pokus o "w"reklamu"r".",Players(playerid),Jmeno(playerid));
				SCMTA(red,str);
				SendAdminMessage(text);
				printEx(text);
				SpecialKick(playerid,BOT_NAME,"Reklama");
				return 0;
			}
		}
		if(stringContainsIP(text))
		{
			format(str,sizeof(str),"[ Anti - Cheat ] %s "w"%s "r"byl vyhozen ze serveru za moný pokus o "w"reklamu"r".",Players(playerid),Jmeno(playerid));
			SCMTA(red,str);
			SendAdminMessage(text);
			printEx(text);
			SpecialKick(playerid,BOT_NAME,"Reklama");
			return 0;
		}
	}
	for(new n1 = 1; n1 <= 9; n1 ++)
	{
	    for(new n2; n2 <= 9; n2 ++)
	    {
	        for(new n3; n3 <= 9; n3 ++)
	        {
	            for(new n4; n4 <= 9; n4 ++)
	            {
				    format(str,sizeof(str),":%d%d%d%d",n1,n2,n3,n4);
				    if(-1 != strfind(text,str,true))
 					{
						format(str,sizeof(str),"[ Anti - Cheat ] %s "w"%s "r"byl vyhozen ze serveru za pokus o "w"reklamu"r".",Players(playerid),Jmeno(playerid));
						SCMTA(red,str);
						SendAdminMessage(text);
						printEx(text);
						SpecialKick(playerid,BOT_NAME,"Reklama");
						return 0;
					}
				    format(str,sizeof(str),":%d %d %d %d",n1,n2,n3,n4);
				    if(-1 != strfind(text,str,false))
 					{
						format(str,sizeof(str),"[ Anti - Cheat ] %s "w"%s "r"byl vyhozen ze serveru za pokus o "w"reklamu"r".",Players(playerid),Jmeno(playerid));
						SCMTA(red,str);
						SendAdminMessage(text);
						printEx(text);
						SpecialKick(playerid,BOT_NAME,"Reklama");
						return 0;
					}
  				}
			}
		}
	}
*/

	return 1;
}

stock EventText(name[],info[],place[],admin[],cash,body)
{
	format(EventName,sizeof(EventName),name);
	format(EventInfo,sizeof(EventInfo),info);
	format(EventPlace,sizeof(EventPlace),place);
	format(EventAdmin,sizeof(EventAdmin),admin);
	EventReward[0] = 0;
	EventReward[1] = cash;
	EventBody = body;
	return 1;
}

stock CreateFalloutObjects(patra = 1,objects = 5)
{
    for(new i; i < sizeof(Fallout); i ++)
    {
        for(new x; x < sizeof(Fallout[]); x ++)
        {
	        DestroyObject(Fallout[i][x][FObject]);
	        Fallout[i][x][FDestroyed] = false;
		}
    }
	CreateFalloutObjectsEx(patra,objects);
	return 1;
}

stock ShowEventTextdraw()
{
	TextDrawShowForAll(Textdraw0);
	format(str,sizeof(str),"~y~Nazev: ~r~%s",EventName);
	TextDrawDiakritika(str);
	TextDrawSetString(event[0],str);
	format(str,sizeof(str),"~y~Info: ~r~%s",EventInfo);
	TextDrawDiakritika(str);
	TextDrawSetString(event[1],str);
	format(str,sizeof(str),"~y~Misto: ~r~%s",EventPlace);
	TextDrawDiakritika(str);
	TextDrawSetString(event[2],str);
	if(EventReward[0] == 0)
	{
		if(EventBody == 0)
		{
			format(str,sizeof(str),"~y~Odmena: ~r~%s~g~$",Split(EventReward[1]));
		}
		else if(EventBody > 0)
		{
			format(str,sizeof(str),"~y~Odmena: ~r~%s~g~$ ~y~+%d ~r~bodu",Split(EventReward[1]),EventBody);
		}
	}
	else if(EventReward[0] == 1)
	{
		if(EventBody == 0)
		{
			format(str,sizeof(str),"~y~Odmena: ~r~VIP Ucet na ~y~%d ~r~dni",EventReward[1]);
		}
		else if(EventBody > 0)
		{
			format(str,sizeof(str),"~y~Odmena: ~r~VIP Ucet na ~y~%d ~r~dni ~y~+%d ~r~bodu",EventReward[1],EventBody);
		}
	}
	TextDrawSetString(event[3],str);
	format(str,sizeof(str),"~y~Zalozil: ~r~%s",EventAdmin);
	convert_encoding(str);
	TextDrawSetString(event[4],str);
	for(new t; t < 5; t ++)
	{
		TextDrawShowForAll(event[t]);
	}
	return 1;
}

stock SetPlayerCheckpointEx(playerid,Float:X,Float:Y,Float:Z,Float:Radius)
{
	Finding[playerid] = 0;
	DisablePlayerCheckpoint(playerid);
    SetPlayerCheckpoint(playerid,X,Y,Z,Radius);
	return 1;
}

function CancelNavigation(playerid)
{
	if(Finding[playerid] == 1)
	{
	    DisablePlayerCheckpoint(playerid);
	    Finding[playerid] = 0;
	    CreateInfoBox(playerid,"Navigace zrusena",3);
	}
	return 1;
}

function NavigatePlayerToPos(playerid,Float:X,Float:Y,Float:Z)
{
	if(pStunt[playerid][sStuntID] != -1) return SM(playerid,"Kdy plní stunt, nemùe pouít navigaci");
	if(OnEvent[playerid] == true) return SM(playerid,"Na eventu nemùe pouít navigaci");
	if(InDM[playerid] != -1) return SM(playerid,"V DM nemùe pouít navigaci");
	if(WorkMission[playerid] > 0) return SM(playerid,"V misi nemùe pouít navigaci");
	if(RacePlayer[playerid] > -1) return SM(playerid,"V závodì nemùe pouít navigaci");
	if(IsPlayerSupplyRun(playerid)) return SM(playerid,"Plníte misi nemùete vykonat tuto akci");
	SetPlayerCheckpointEx(playerid,X,Y,Z,8);
	Finding[playerid] = 1;
	return 1;
}

function GivePlayerMoneyToTrezor(nick[],cash)
{
	new id = GetPlayerIdFromName(nick),tid = 0,trezor[11],tmoney;
    format(dfile,sizeof(dfile),USER_FILES,nick);
	if(IPC(id))
	{
		for(new i; i < MAX_TREZORS; i ++)
		{
			tmoney = Trezor[id][tid];
			if(tmoney + cash > 2147483647 || tmoney + cash < 0)
			{
			    tid++;
			}
			else
			{
			    break;
			}
		}
		if(tid < MAX_TREZORS)
		{
		    Trezor[id][tid] += cash;
		    format(trezor,sizeof(trezor),"Trezor%d",tid);
		    DOF2_SetInt(dfile,trezor,Trezor[id][tid]);
		}
		else
		{
		    SM(id,"Pøekorèil si limit trezorù ! Ihned si je vyber!");
		}
	}
	else
	{
		for(new i; i < MAX_TREZORS; i ++)
		{
			format(trezor,sizeof(trezor),"Trezor%d",tid);
			tmoney = DOF2_GetInt(dfile,trezor);
			if(tmoney + cash > 2147483647 || tmoney + cash < 0)
			{
			    tid++;
			}
			else
			{
			    break;
			}
		}
		if(tid < MAX_TREZORS)
		{
		    format(trezor,sizeof(trezor),"Trezor%d",tid);
		    DOF2_SetInt(dfile,trezor,DOF2_GetInt(dfile,trezor)+cash);
		}
		else
		{
		    SendPlayerNotification(nick,"Pøekroèení limitu","Pøekorèil si limit trezorù ! Ihned si je vyber!");
		}
	}
    DOF2_SaveFile();
	return 1;
}

forward SendPlayerNotification(nick[],nadpis[],text[]);

public SendPlayerNotification(nick[],nadpis[],text[])
{
	new query[500],rows,Cache:cache;
	mysql_format(mysql,query,sizeof(query),"INSERT INTO `Notifications` (`Nick`,`Date`,`Nadpis`,`Text`) VALUES ('%e',%d,'%e','%e')",nick,gettime(),nadpis,text);
	mysql_query(mysql,query,false);
	new playerid = GetPlayerIdFromName(nick);
	if(IPC(playerid))
	{
		mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Notifications` WHERE `Nick`='%e' AND `Readed` IS NULL",Jmeno(playerid));
		cache = mysql_query(mysql,query);
		rows = cache_get_row_count(mysql);
		format(str,sizeof(str),"Máte nové nepøeètené oznámení: {0077FF}%s "w"("g"/oznameni"w")",nadpis,rows,PluralWord(rows,"nepøeètené","nepøeètená","nepøeètených"));
		SCM(playerid,-1,str);
		cache_delete(cache,mysql);
	}
	return 1;
}

function SaveBeforeEventData(playerid)
{
	CancelAntiSK(playerid);
	GetPlayerPos(playerid,BeforeEvent[playerid][beX],BeforeEvent[playerid][beY],BeforeEvent[playerid][beZ]);
	BeforeEvent[playerid][beInt] = GetPlayerInterior(playerid);
	GetPlayerHealth(playerid,BeforeEvent[playerid][beHealth]);
	GetPlayerArmour(playerid,BeforeEvent[playerid][beArmor]);
	if(BeforeEvent[playerid][beHealth] > 100)
	{
	    BeforeEvent[playerid][beHealth] = 100;
	}
	if(BeforeEvent[playerid][beArmor] > 100)
	{
	    BeforeEvent[playerid][beArmor] = 100;
	}
	for(new i; i < 13; i ++)
	{
	    GetPlayerWeaponData(playerid,i,BeforeEvent[playerid][beWeapon][i],BeforeEvent[playerid][beAmmo][i]);
	}
	return 1;
}

function LoadMapObjects(id)
{
	for(new x; x < cache_get_row_count(mysql); x ++)
	{
		if(x < MAX_OBJECTS_EX)
		{
		    Map[id][MapObjectID][x] = cache_get_field_content_int(x,"ObjectID",mysql);
		    if(Map[id][MapObjectID][x] != 0)
		    {
		        Map[id][MapX][x] = cache_get_field_content_float(x,"X",mysql);
		        Map[id][MapY][x] = cache_get_field_content_float(x,"Y",mysql);
		        Map[id][MapZ][x] = cache_get_field_content_float(x,"Z",mysql);
		        Map[id][MapRX][x] = cache_get_field_content_float(x,"rX",mysql);
		        Map[id][MapRY][x] = cache_get_field_content_float(x,"rY",mysql);
		        Map[id][MapRZ][x] = cache_get_field_content_float(x,"rZ",mysql);
		    }
		}
	}
	if(Map[id][MapAutoLoad] == 1)
		LoadMap(id);
	return 1;
}
function LoadBeforeEventData(playerid)
{
	if(BeforeEvent[playerid][beX] != 0.0 && BeforeEvent[playerid][beX] != 0.0 && BeforeEvent[playerid][beX] != 0.0)
	{
		Hitted[playerid] = 0;
		HittedPL[playerid] = -1;
		SetPlayerPos(playerid,BeforeEvent[playerid][beX],BeforeEvent[playerid][beY],BeforeEvent[playerid][beZ]);
		SetPlayerHealth(playerid,BeforeEvent[playerid][beHealth]);
		SetPlayerArmour(playerid,BeforeEvent[playerid][beArmor]);
		SetPlayerInterior(playerid,BeforeEvent[playerid][beInt]);
		SetPlayerVirtualWorld(playerid,0);
		ResetPlayerWeaponsEx(playerid);
		for(new i; i < 13; i ++)
		{
		    if(BeforeEvent[playerid][beWeapon][i] != 0)
		    {
		    	GivePlayerWeaponEx(playerid,BeforeEvent[playerid][beWeapon][i],BeforeEvent[playerid][beAmmo][i]);
			}
		}
		if(AFK[playerid] == false)
		{
		    TogglePlayerControllable(playerid,true);
		}
		BeforeEvent[playerid][beX] = 0.0;
		BeforeEvent[playerid][beY] = 0.0;
		BeforeEvent[playerid][beZ] = 0.0;
		CancelAntiSK(playerid);
		return 1;
	}
	return 0;
}

stock GetVehiclePrice(modelid)
{
    new price,query[300],Cache:cache;
    mysql_format(mysql,query,sizeof(query),"SELECT * FROM `GarageVehicles` WHERE `Model`=%d AND `Elite`=0 LIMIT 1",modelid);
	cache = mysql_query(mysql,query);
	if(cache_get_row_count(mysql) == 1)
	{
	    price = cache_get_field_content_int(0,"Price",mysql);
	}
	cache_delete(cache,mysql);
	return price;
}

stock SexWord(playerid,male[],female[])
{
	new Nazev[30];
	if(Sex[playerid] == 2) format(Nazev,sizeof(Nazev),female);
	else format(Nazev,sizeof(Nazev),male);
	return Nazev;
}

stock PluralWord(numb,Nazev1[],Nazev2[],Nazev3[])
{
	new Nazev[25];
	if(numb == 1) format(Nazev,sizeof(Nazev),Nazev1);
	else if(numb > 1 && numb < 5) format(Nazev,sizeof(Nazev),Nazev2);
	else format(Nazev,sizeof(Nazev),Nazev3);
	return Nazev;
}

stock CreateFire(playerid)
{
	if(WorkMission[playerid] == 9 && IsPlayerLogged(playerid))
	{
		DestroyPlayerObject(playerid,MissionObject[playerid]);
		MissionObject[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
		new rand = random(sizeof(House));
	    new town = GetPlayerTown(playerid);
	    new htown = GetTown(House[rand][hX],House[rand][hY]);
	    while(town != htown)
	    {
     		rand = random(sizeof(House));
     		htown = GetTown(House[rand][hX],House[rand][hY]);
	    }
	    MissionObject[playerid] = CreatePlayerObject(playerid,18691,House[rand][hX],House[rand][hY],House[rand][hZ],0,0,0);
		SetPlayerCheckpointEx(playerid,House[rand][hX],House[rand][hY],House[rand][hZ],3);
		new Float:X,Float:Y,Float:Z;
		GetPlayerPos(playerid,X,Y,Z);
		MissionTimeSeconds[playerid] = floatround(GetDistanceBetweenPoints(X,Y,Z,House[rand][hX],House[rand][hY],House[rand][hZ])/10);
		if(MissionTimeSeconds[playerid] < 60)
		{
		    MissionTimeSeconds[playerid] = 60;
		}
		MissionPay[playerid] = 10000+MissionTimeSeconds[playerid]*100;
		new count = MissionsCount[playerid][9],level = GetPlayerMissionLevel(playerid,9);
		if(count > 1000) count = 1000;
		MissionPay[playerid] = MissionPay[playerid] + level*6500;
		PlayerTextDrawSetString(playerid,Textdraw26[playerid],SecondsToMinutes(MissionTimeSeconds[playerid]));
	}
	return 1;
}


stock GetTown(Float:X,Float:Y)
{
	if(X > 0 && Y < 0) return 0; // LS
	if(X < 0 && Y < 0) return 1; //SF
	if(X > 0 && Y > 0) return 2; //LV
	if(X < 0 && Y > 0) return 3; //SF, Pou
	return -1;
}

stock GetPlayerTown(playerid)
{
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	if(X > 0 && Y < 0) return 0; // LS
	if(X < 0 && Y < 0) return 1; //SF
	if(X > 0 && Y > 0) return 2; //LV
	if(X < 0 && Y > 0) return 3; //SF, Pou
	return -1;
}

stock ShowLoginLog(playerid,name[],page = 0)
{
	new query[200],rows,fields,Cache:cache;
	SetPVarInt(playerid,"Pages",page);
	SetPVarString(playerid,"LogNick",name);
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `LoginLog` WHERE `Nick`='%e' ORDER BY `Time` DESC LIMIT %d,20",name,page*20);
	cache = mysql_query(mysql,query);
	cache_get_data(rows,fields,mysql);
	if(rows)
	{
	    new DIALOG[2500],ip[16],text[50];
		strcat(DIALOG,""dc"Datum\tIP\tAkce\tOdehráno\n");
		for(new i; i < rows; i ++)
	    {
			cache_get_field_content(i,"IP",ip,mysql);
			cache_get_field_content(i,"Text",text,mysql);
			new time = cache_get_field_content_int(i,"Played",mysql),afk = cache_get_field_content_int(i,"AFK",mysql),afkt[15];
			format(afkt,sizeof(afkt)," (AFK: %s)",SecondsToMinutes(afk));
			if(time > 0)
			{
			   	format(str,sizeof(str),"{0077FF}%d. "w"%s\t{0088FF}%s\t%s\t%s%s\n",(i+1)+page*20,DATE(cache_get_field_content_int(i,"Time",mysql),1),ip,text,timec(time,0),(afk == 0) ? ("") : (afkt));
			}
			else
			{
			   	format(str,sizeof(str),"{0077FF}%d. "w"%s\t{0088FF}%s\t%s\t-\n",(i+1)+page*20,DATE(cache_get_field_content_int(i,"Time",mysql),1),ip,text);
			}
			strcat(DIALOG,str);
		}
		format(str,sizeof(str),"Log pøihláení [ {0088FF}%s "w"]",name);
		if(rows == 20)
		{
			SPD(playerid,UNNAMED+153,DIALOG_STYLE_TABLIST_HEADERS,str,DIALOG,"Dalí","Zavøít");
		}
		else
		{
			SPD(playerid,0,DIALOG_STYLE_TABLIST_HEADERS,str,DIALOG,"Zavøít","");
		}
	}
	cache_delete(cache,mysql);
	return 1;
}

stock IsPlayerHitted(playerid)
{
	if(Hitted[playerid] > 0) return 1;
	return 0;
}

stock GivePlayerDMScore(playerid,deathid,text[],score = 5)
{
	format(str,sizeof(str),"%s %s",Jmeno(playerid),text);
	convert_encoding(str);
	TextDrawSetString(Textdraw35[InDM[playerid]],str);
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(InDM[i] != -1)
	    {
	        if(InDM[i] == InDM[playerid])
	        {
				TextDrawShowForPlayer(i,Textdraw35[InDM[playerid]]);
			}
		}
	}
	format(str,sizeof(str),"+ %d score",score);
	DMScore[playerid] += score;
	PlayerTextDrawSetString(playerid,Textdraw36[playerid],str);
	PlayerTextDrawShow(playerid,Textdraw36[playerid]);
	format(str,sizeof(str),"~r~- %d score",5);
	DMScore[deathid] -= 5;
	PlayerTextDrawSetString(deathid,Textdraw36[deathid],str);
	PlayerTextDrawShow(deathid,Textdraw36[deathid]);
	if(DMTextTimer[InDM[playerid]])
	{
		KillTimer(DMTextTimer[InDM[playerid]]);
	}
	DMTextTimer[InDM[playerid]] = SetTimerEx("DeleteScoreText",2000,false,"i",InDM[playerid]);
	return 1;
}

forward DeleteScoreText(dmid);

public DeleteScoreText(dmid)
{
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(InDM[i] != -1)
	    {
	        if(InDM[i] == dmid)
	        {
		        TextDrawHideForPlayer(i,Textdraw35[dmid]);
				PlayerTextDrawHide(i,Textdraw36[i]);
			}
	    }
	}
	KillTimer(DMTextTimer[dmid]);
	DMTextTimer[dmid] = 0;
	return 1;
}


stock PlayDMVoice(dmid,odkaz[])
{
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(InDM[i] != -1)
	    {
	        if(InDM[i] == dmid)
	        {
				if(!ListeningSomething(i))
				{
				    StopAudioStreamForPlayer(i);
					PlayAudioStreamForPlayer(i,odkaz);
				}
			}
		}
	}
	return 1;
}

stock ListeningSomething(playerid)
{
    if(Listening[playerid] != -1 || MusicLenght[playerid] > 0) return 1;
	return 0;
}

stock RandomDMSpawn(playerid,dmid)
{
	SetPlayerInterior(playerid,DM[dmid][DMInt]);
	SetPlayerVirtualWorld(playerid,DM_VW+dmid);
	new rand = random(sizeof(DMPos[]));
	SetPlayerPos(playerid,DMPos[dmid][rand][0],DMPos[dmid][rand][1],DMPos[dmid][rand][2]);
	SetPlayerFacingAngle(playerid,DMPos[dmid][rand][3]);
	if(DM[dmid][DMLObjects] == true)
	{
		LoadObjects(playerid,DMPos[dmid][rand][0],DMPos[dmid][rand][1],DMPos[dmid][rand][2],DMPos[dmid][rand][3],1000,false);
	}
 	SetCameraBehindPlayer(playerid);
	ResetPlayerWeaponsEx(playerid);
	for(new i = MAX_DM_WEAPONS-1; i >= 0; i --)
	{
		if(DM[dmid][DMWeapon][i] != 0)
		{
			GivePlayerWeaponEx(playerid,DM[dmid][DMWeapon][i],39999);
		}
	}
	SetPlayerArmour(playerid,0);
	SetPlayerHealth(playerid,100);
	if(Player[playerid][pHide] <= 0)
	{
		SetPlayerColor(playerid,GetPlayerColor(playerid) & 0xFFFFFF00);
	}
	if(GetGang(playerid) > 0)
	{
	    SetGang(playerid,255);
	}
	return 1;
}

stock LeaveDM(playerid)
{
	if(InDM[playerid] > -1)
	{
	    DM[InDM[playerid]][DMPlayers] --;
	    DMKills[playerid] = 0;
    	DMRoundKills[playerid] = 0;
	    DMDeaths[playerid] = 0;
		SetPlayerVirtualWorld(playerid,0);
		PlayerTextDrawHide(playerid,Textdraw33[playerid]);
		PlayerTextDrawHide(playerid,Textdraw34[playerid]);
		PlayerTextDrawHide(playerid,Textdraw36[playerid]);
		PlayerTextDrawHide(playerid,Textdraw37[playerid]);
		TextDrawHideForPlayer(playerid,Textdraw35[InDM[playerid]]);
		InDM[playerid] = -1;
	    LoadBeforeEventData(playerid);
		if(GetGang(playerid) > 0)
		{
		    SetGang(playerid,GetGang(playerid));
		}
	}
	return 1;
}

stock SecondsToMinutes(seconds)
{
	new text[10];
	format(text,sizeof(text),"%02d:%02d",seconds/60,seconds%60);
	return text;
}

stock PlaySong(playerid,rowid)
{
	new Cache:cache = mysql_query(mysql,"SELECT * FROM `Music` WHERE `MUSIC_HIDE` IS NULL ORDER BY `MUSIC_PINNED` DESC, `MUSIC_PLAYED` DESC, `MUSIC_TIME` DESC"),mUrl[150],mName[150];
	cache_get_field_content(rowid,"MUSIC_URL",mUrl,mysql);
	cache_get_field_content(rowid,"MUSIC_NAME",mName,mysql);
	if(MusicID[playerid] != cache_get_field_content_int(rowid,"MUSIC_ID",mysql))
	{
	    new query[300];
		mysql_format(mysql,query,sizeof(query),"UPDATE `Music` SET `MUSIC_PLAYED`=%d WHERE `MUSIC_ID`=%d",cache_get_field_content_int(rowid,"MUSIC_PLAYED",mysql)+1,cache_get_field_content_int(rowid,"MUSIC_ID",mysql));
		mysql_tquery(mysql,query,"","");
	}
	MusicID[playerid] = cache_get_field_content_int(rowid,"MUSIC_ID",mysql);
	MusicLenght[playerid] = cache_get_field_content_int(rowid,"MUSIC_LENGHT",mysql);
    StopAudioStreamForPlayer(playerid);
	PlayAudioStreamForPlayer(playerid,mUrl);
	format(str,sizeof(str),"Skladba {00b0ff}%s "w"("g"%s"w") úspìnì pøehrána",mName,SecondsToMinutes(cache_get_field_content_int(rowid,"MUSIC_LENGHT",mysql)));
	SM(playerid,str);
	cache_delete(cache,mysql);
	if(Listening[playerid] != -1)
	{
	    if(Listening[playerid] <= MAX_RADIOS)
	    {
			Radio[Listening[playerid]][RadioListeners]--;
		}
		Listening[playerid] = -1;
	}
	return 1;
}

stock ShowPMLog(playerid,name[],page = 0)
{
	SetPVarInt(playerid,"Pages",page);
	SetPVarString(playerid,"LogNick",name);
	new query[300],Cache:cache;
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `PMLog` WHERE `PM_SENDER`='%e' OR `PM_RECEIVER`='%e' ORDER BY `PM_TIME` DESC LIMIT %d,20",name,name,page*20);
	cache = mysql_query(mysql,query);
	new pSender[24],pReceiver[24],pText[145],DIALOG[4500];
	strcat(DIALOG,""dc"");
	if(cache_get_row_count(mysql) > 0) {
		for(new i; i < cache_get_row_count(); i ++)
		{
			cache_get_field_content(i,"PM_SENDER",pSender,mysql);
			cache_get_field_content(i,"PM_RECEIVER",pReceiver,mysql);
			cache_get_field_content(i,"PM_TEXT",pText,mysql);
			format(str,sizeof(str),"%s | %s -> %s | %s\n",DATE(cache_get_field_content_int(i,"PM_TIME",mysql)),pSender,pReceiver,pText);
			strcat(DIALOG,str);
		}
		if(cache_get_row_count(mysql) == 20)
		{
			SPD(playerid,UNNAMED+149,DIALOG_STYLE_MSGBOX,"Archiv Soukromých Zpráv",DIALOG,"Dalí","Zavøít");
		}
		else
		{
			SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Archiv Soukromých Zpráv",DIALOG,"Zavøít","");
		}
	}
	else SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Archiv Soukromých Zpráv","Nenalezeny ádné soukrémé zprávy.","Zavøít","");
	cache_delete(cache,mysql);
	return 1;
}

stock GetPlayerPage(playerid)
{
	return GetPVarInt(playerid,"Pages");
}

stock ShowBanList(playerid,page = 0)
{
	SetPVarInt(playerid,"Pages",page);
	new query[100],rows,Cache:cache;
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Bans` WHERE `End` > %d OR `End`=0 ORDER BY `Start` DESC LIMIT %d,20",gettime(),page*19);
	cache = mysql_query(mysql,query);
	rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
		new DIALOG[4000],nick[24+1],admin[24+1],reason[100],ip[16],start,end;
		strcat(DIALOG,""dc"Nick(IP)\tAdmin\tDùvod\tTrvání\n");
		for(new i; i < rows; i ++)
		{
		    if(i < 19)
		    {
		        start = cache_get_field_content_int(i,"Start",mysql);
		        end = cache_get_field_content_int(i,"End",mysql);
				cache_get_field_content(i,"Nick",nick,mysql);
				cache_get_field_content(i,"Admin",admin,mysql);
				cache_get_field_content(i,"Reason",reason,mysql);
 				cache_get_field_content(i,"IP",ip,mysql);
				format(str,sizeof(str),"%s ({adadad}%s"w")\t%s\t%s\t%s -> %s\n",nick,ip,admin,reason,DATE(start),(end != 0) ? DATE(end) : ""r"Permanentní");
				strcat(DIALOG,str);
			}
		}
		if(rows == 20)
		{
		    strcat(DIALOG,"{0077FF}Dalí stránka");
		}
	    SPD(playerid,UNNAMED+175,DIALOG_STYLE_TABLIST_HEADERS,"Banlist",DIALOG,"Vybrat","Zavøít");
	}
	else
	{
	    SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Banlist","Na serveru nejsou ádní zabanovaní hráèi","Zavøít","");
	}
	cache_delete(cache,mysql);
	return 1;
}

stock ShowNotifications(playerid,page = 0)
{
	SetPVarInt(playerid,"Pages",page);
	new query[300],rows,Cache:cache;
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Notifications` WHERE `Nick`='%e' ORDER BY `Date` DESC LIMIT %d,20",Jmeno(playerid),page*19);
	cache = mysql_query(mysql,query);
	rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
		new DIALOG[2200],nadpis[50];
		for(new i; i < rows; i ++)
		{
		    if(i < 19)
		    {
				cache_get_field_content(i,"Nadpis",nadpis,mysql);
				if(cache_get_field_content_int(i,"Readed",mysql) == 0)
				{
					format(str,sizeof(str),"%s\t%s\t"r"Nepøeèteno\n",DATE(cache_get_field_content_int(i,"Date")),nadpis);
				}
				else
				{
					format(str,sizeof(str),"%s\t%s\t"g"Pøeèteno\n",DATE(cache_get_field_content_int(i,"Date")),nadpis);
				}
				strcat(DIALOG,str);
			}
		}
		if(rows == 20)
		{
		    strcat(DIALOG,"{0077FF}Dalí stránka");
		}
	    SPD(playerid,UNNAMED+156,DIALOG_STYLE_TABLIST,"Oznámení",DIALOG,"Vybrat","Zavøít");
	}
	else
	{
	    SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Oznámení","Nemá k dispozici ádná oznámení","Zavøít","");
	}
	cache_delete(cache,mysql);
	return 1;
}

stock ShowReports(playerid,page = 0)
{
	SetPVarInt(playerid,"Pages",page);
	new query[300],rows,Cache:cache;
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Reports` ORDER BY `Date` DESC LIMIT %d,20",page*19);
	cache = mysql_query(mysql,query);
	rows = cache_get_row_count(mysql);
	new DIALOG[2200],nick[24],duvod[145];
	if(rows > 0)
	{
	    strcat(DIALOG,""dc"Datum\tNahláený\tDùvod\tStatus\n");
		for(new i; i < rows; i ++)
		{
		    if(i < 19)
		    {
				cache_get_field_content(i,"Nick",nick,mysql);
				cache_get_field_content(i,"Duvod",duvod,mysql,50);
				if(strlen(duvod) == 50)
				{
				    format(duvod,sizeof(duvod),"%s [...]",duvod);
				}
				new statuses[][] =
				{
				    "{FF7200}Nevyøeeno",""g"Vyøeeno",""y"Odloeno",""r"Smazáno"
				};
				format(str,sizeof(str),"%s\t%s\t%s\t%s\n",DATE(cache_get_field_content_int(i,"Date",mysql)),nick,duvod,statuses[cache_get_field_content_int(i,"Status",mysql)]);
				strcat(DIALOG,str);
			}
		}
		if(rows == 20)
		{
			strcat(DIALOG,"{0077FF}Dalí stránka");
		}
	    SPD(playerid,UNNAMED+165,DIALOG_STYLE_TABLIST_HEADERS,"Reports",DIALOG,"Vybrat","Zavøít");
	}
	else
	{
	    SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Oznámení","Nejsou k dispozici ádná nahláení","Zavøít","");
	}
	cache_delete(cache,mysql);
	return 1;
}

stock ShowNews(playerid,page = 0)
{
	SetPVarInt(playerid,"Pages",page);
	new query[300],rows,Cache:cache;
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `News` WHERE `Build` <= %0.1f ORDER BY `Build` DESC LIMIT %d,5",BUILD+0.1,page*4);
	cache = mysql_query(mysql,query);
	rows = cache_get_row_count(mysql);
	new DIALOG[4400],newstext[1100],date[30],text[70];
	for(new i; i < rows; i ++)
	{
	    if(i < 4)
	    {
			cache_get_field_content(i,"DATE",date,mysql);
			format(text,sizeof(text),""g"%s (Update: #%0.1f)\n"w"",date,cache_get_field_content_float(i,"BUILD"));
			strcat(DIALOG,text);
			cache_get_field_content(i,"TEXT",newstext,mysql);
			strcat(DIALOG,newstext);
			strcat(DIALOG,"\n\n");
		}
	}
	if(rows < 5)
	{
	    SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Novinky",DIALOG,"Zavøít","");
	}
	else
	{
	    SPD(playerid,UNNAMED+155,DIALOG_STYLE_MSGBOX,"Novinky",DIALOG,"Dalí","Zavøít");
	}
	cache_delete(cache,mysql);
	return 1;
}

stock ShowMusicList(playerid,page = 0)
{
	new query[300];
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Music` WHERE `MUSIC_HIDE` IS NULL ORDER BY `MUSIC_PINNED` DESC, `MUSIC_PLAYED` DESC, `MUSIC_TIME` DESC LIMIT %d,20",page*20);
	new DIALOG[3000],Cache:cache = mysql_query(mysql,query);
	strcat(DIALOG,""dc"Název\tPøehráno\n");
	for(new i; i < cache_get_row_count(); i ++)
    {
        new mName[80];
        cache_get_field_content(i,"MUSIC_NAME",mName,mysql);
		if(gettime() - cache_get_field_content_int(i,"MUSIC_TIME",mysql) > 60*60*24*7)
		{
        	format(str,sizeof(str),"%d. {00b0ff}%s\t%dx\n",(i+1)+page*20,mName,cache_get_field_content_int(i,"MUSIC_PLAYED",mysql));
		}
		else
		{
        	format(str,sizeof(str),"%d. {00b0ff}%s "r"[ NOVINKA ]\t%dx\n",(i+1)+page*20,mName,cache_get_field_content_int(i,"MUSIC_PLAYED",mysql));
		}
        strcat(DIALOG,str);
    }
	if(cache_get_row_count(mysql) == 20)
	{
    	strcat(DIALOG,"Dalí stránka\n");
	}
	if(page == 0)
	{
	    new Names[][] = {""r"Vypnuto",""g"Náhodnì"};
	    format(str,sizeof(str),"Auto Play: %s",Names[AutoPlay[playerid]]);
	    strcat(DIALOG,str);
	}
	SPD(playerid,UNNAMED+147,DIALOG_STYLE_TABLIST_HEADERS,"Hudba",DIALOG,"Pøehrát","Zavøít");
	cache_delete(cache,mysql);
	return 1;
}


stock SetVehicleDefaultSPZ(vehicleid)
{
	new number[11];
	format(number,sizeof(number),DEFAULT_SPZ,random(9),Letters[random(sizeof(Letters))],random(9),Letters[random(sizeof(Letters))]);
	SetVehicleNumberPlate(vehicleid,number);
	SetVehicleToRespawn(vehicleid);
	return 1;
}

stock IsPlayerInBlockedMission(playerid)
{
	if(WorkMission[playerid] > 0 && WorkMission[playerid] != 7 && WorkMission[playerid] != 8) return 1;
	return 0;
}

stock SetGangMemberPos(playerid)
{
	return CallRemoteFunction("SetGangMemberPos","i",playerid);
}

stock GetPlayerGangMember(playerid)
{
	return CallRemoteFunction("GetPlayerGangMember","i",playerid);
}

stock JailPlayer(playerid,time)
{
	SetPlayerInterior(playerid,6);
	SetPlayerPos(playerid,264.6310,77.4839,1001.0391);
	SetPlayerVirtualWorld(playerid,10);
	ResetPlayerWeaponsEx(playerid);
	PrisonTime[playerid] = time;
	format(str,sizeof(str),"%02d:%02d",PrisonTime[playerid]/60,PrisonTime[playerid]%60);
	PlayerTextDrawSetString(playerid,Textdraw26[playerid],str);
	PlayerTextDrawShow(playerid,Textdraw26[playerid]);
	SetPlayerWantedLevel(playerid,0);
	return 1;
}


stock IsTextValid(text[])
{
	for(new i; i < strlen(text); i ++)
	{
		for(new x; x < sizeof(AllowedLetters); x ++)
		{
	    	if(text[i] != AllowedLetters[x]) return 0;
		}
	}
	return 0;
}

stock BlockVehicleDrive(playerid)
{
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	SetPlayerPos(playerid,X,Y,Z);
	return 1;
}

stock SetAntiSKTime(playerid,time)
{
	if(!IsPlayerNPC(playerid))
 	{
		AntiSK[playerid] = time;
	    SetPlayerHealth(playerid,100000);
	}
	return 1;
}

function SetAntiSK(playerid)
{
	if(!IsPlayerNPC(playerid))
 	{
		AntiSK[playerid] = 11;
	    SetPlayerHealth(playerid,100000);
	}
	return 1;
}

stock CancelAntiSK(playerid,bool:showmsg = false)
{
	if(AntiSK[playerid] > 0)
	{
		AntiSK[playerid] = 0;
	    SetPlayerHealth(playerid,100);
		if(vip[playerid] == 1)
		{
			SetPlayerArmour(playerid,100);
		}
		if(showmsg == true)
		{
			CreateInfoBox(playerid,"Vase ~r~Spawn-Kill ~w~ochrana skoncila",3);
		}
	}
	return ;
}

stock IsPlayerLookingAtPos(playerid,Float:X,Float:Y,Float:Z)
{
	new
	Float:cX, Float:cY, Float:cZ,
	Float:cPosX, Float:cPosY, Float:cPosZ,
	Float:x1, Float:y1, Float:z1,
	Float:dX, Float:dY, Float:dZ;
	GetVehiclePos(GetPlayerVehicleID(playerid), x1, y1, z1);
	GetPlayerCameraPos(playerid, cPosX, cPosY, cPosZ);
	GetPlayerCameraFrontVector(playerid, cX, cY, cZ);
	new Float:Dist = GetDistanceBetweenPoints(x1, y1, z1, X, Y, Z);
	dX = cPosX + floatmul(cX, Dist);
	dY = cPosY + floatmul(cY, Dist);
	dZ = cPosZ + floatmul(cZ, Dist);
	if(GetDistanceBetweenPoints(x1, y1, z1, dX, dY, dZ) <= 10.0)
	{
		return true;
	}
	return false;
}
forward Float:GetDistanceBetweenPoints(Float:pos1X, Float:pos1Y, Float:pos1Z, Float:pos2X, Float:pos2Y, Float:pos2Z);

stock Float:GetDistanceBetweenPoints(Float:pos1X, Float:pos1Y, Float:pos1Z, Float:pos2X, Float:pos2Y, Float:pos2Z)
{
	return floatadd(floatadd(floatsqroot(floatpower(floatsub(pos1X, pos2X), 2)), floatsqroot(floatpower(floatsub(pos1Y, pos2Y), 2))), floatsqroot(floatpower(floatsub(pos1Z, pos2Z), 2)));
}

stock GetLastIpNick(ip[])
{
	new nick[24];
	format(nick,sizeof(nick),"Unknown");
	if(strlen(ip) < 16)
	{
	    new query[100],Cache:cache;
	    mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Accounts` WHERE `IP`='%s' ORDER BY `Updated` DESC LIMIT 1",ip);
		cache = mysql_query(mysql,query);
		if(cache_get_row_count(mysql))
		{
		    cache_get_field_content(0,"Nick",nick,mysql);
		}
	    cache_delete(cache,mysql);
	}
	return nick;
}


stock LoadObjects(playerid,Float:X,Float:Y,Float:Z,Float:A,time = 1000,bool:text = true,bool:freeze = false)
{
	SetTimerEx("LoadObjectsTimer",time,false,"iffffii",playerid,X,Y,Z,A,text,freeze);
	if(text == true)
	{
		CreateInfoBox(playerid,"Nacitani objektu..",time/1000);
	}
	TogglePlayerControllable(playerid,false);
	SetCameraBehindPlayer(playerid);
	return 1;
}

forward LoadObjectsTimer(playerid,Float:X,Float:Y,Float:Z,Float:A,text,freeze);

public LoadObjectsTimer(playerid,Float:X,Float:Y,Float:Z,Float:A,text,freeze)
{
	if(!IsPlayerInAnyVehicle(playerid))
	{
		SetPlayerPos(playerid,X,Y,Z);
		SetPlayerFacingAngle(playerid,A);
	}
	else
	{
	    SetVehiclePos(GetPlayerVehicleID(playerid),X,Y,Z);
	    SetVehicleZAngle(GetPlayerVehicleID(playerid),A);
	}
	SetCameraBehindPlayer(playerid);
	if(text == 1)
	{
		CreateInfoBox(playerid,"Objekty nacteny",2);
	}
	if(AFK[playerid] == false && freeze == 0)
	{
		TogglePlayerControllable(playerid,true);
	}
	return 1;
}

stock HighlightText(text[],barva[9])
{
	new string[150],pos = -1;
	strcat(string,text);
	new highlightedwords[][] = {"s0beit","sobeit","aimbot","cheat","hack","spawn","miluju","server","servr","admin","majitel","event"};
	for(new i; i < sizeof(highlightedwords); i ++)
	{
		pos = strfind(string,highlightedwords[i],true,0);
		while(pos != -1)
		{
			strins(string,"{FF0000}",pos,sizeof(string));
			strins(string,barva,pos+strlen(highlightedwords[i])+8,sizeof(string));
			pos = strfind(string,highlightedwords[i],true,pos+strlen(highlightedwords[i])+8);
		}
	}
	return string;
}
stock ChangeSwear(Text[], Symbol = '*')
{
	new iWords = sizeof(CENZURA), i;
	for(new x; x < strlen(Text); x ++)
	{
		tolower(Text[x]);
	}
	for (new BadWord; BadWord != iWords; ++BadWord)
	{
	    while ((i = strfind(Text, CENZURA[BadWord], true)) != -1)
	    {
	        for (new x = (i + strlen(CENZURA[BadWord])); i != x; ++i)
			{
				Text[i] = Symbol;
			}
			return 1;
		}
	}
	return 0;
}

stock CENUROVAT(string[],word[],destch='*')
{
        new start_index=(-1),
            end_index=(-1);

        start_index=strfind(string,word,true);
        if(start_index==(-1)) return 1;

        end_index=(start_index+strlen(word));

        for( ; start_index<end_index; start_index++)
                string[start_index]=destch;

        return 1;
}

stock ShowPlayerSettings(playerid)
{
	new DIALOG[1000];
	if(Sex[playerid] == 2)
	{
		strcat(DIALOG,"Pohlaví\t{FF00FF}ena\n");
	}
	else
	{
		strcat(DIALOG,"Pohlaví\t{0088FF}Mu\n");
	}
	format(str,sizeof(str),"E-Mail:\t"sb"%s\n",Player[playerid][pMail]);
	strcat(DIALOG,str);
	format(str,sizeof(str),"TextDrawy\t%s\n",OnOff(TD[playerid]));
	strcat(DIALOG,str);
	format(str,sizeof(str),"Audio Stream\t%s\n",OnOff(BlockedStream[playerid]));
	strcat(DIALOG,str);
	format(str,sizeof(str),"Soukromé zprávy\t%s\n",OnOff(BlockedPMsAll[playerid]));
	strcat(DIALOG,str);
	format(str,sizeof(str),"Zvuky soukromých zpráv\t%s\n",OnOff(PMSounds[playerid]));
	strcat(DIALOG,str);
	format(str,sizeof(str),"Reálný èas\t%s\n",OnOff(RealnyTime[playerid],2));
	strcat(DIALOG,str);
	format(str,sizeof(str),"Automatický pøevod penìz do banky\t%s\n",OnOff(AutoBank[playerid],2));
	strcat(DIALOG,str);
	format(str,sizeof(str),"Ukládat pozici pøi odchodu\t%s\n",OnOff(UseLastPos[playerid],2));
	strcat(DIALOG,str);
	format(str,sizeof(str),"Blokování /vgoto\t%s\n",OnOff(BlockedVgoto[playerid],2));
	strcat(DIALOG,str);
	format(str,sizeof(str),"Blokování pozvánek do gangu\t%s\n",OnOff(BlockedGangInvite[playerid],2));
	strcat(DIALOG,str);
	format(str,sizeof(str),"Spawn nastaven u\t{0077FF}%s\n",SpawnTypeNames[GetPlayerSpawn(playerid)]);
	strcat(DIALOG,str);
	format(str,sizeof(str),"Oprava pøes NUM 8\t%s\n",OnOff(bOprava[playerid]));
	strcat(DIALOG,str);
	format(str,sizeof(str),"Flip pøes NUM 4\t%s\n",OnOff(bFlip[playerid]));
	strcat(DIALOG,str);
	format(str,sizeof(str),"Hitsound\t%s\n",OnOff(HitSound[playerid],2));
	strcat(DIALOG,str);
	format(str,sizeof(str),"Blokování pozvánek k hodu kostkou\t%s\n",OnOff(BlockedKostka[playerid],2));
	strcat(DIALOG,str);
	SPD(playerid,UNNAMED+143,DIALOG_STYLE_TABLIST,"Nastavení",DIALOG,"Vybrat","Zavøít");
	return 1;
}

stock HideTextDraws(playerid,bool:text = true)
{
	CallRemoteFunction("HideTach","i",playerid);
	if(TD[playerid] == false)
	{
		for(new t; t < 5; t++)
		{
			TextDrawHideForPlayer(playerid,TextDraw[t]);
			TextDrawHideForPlayer(playerid,event[t]);
		}
		for(new t; t < 3; t ++)
		{
		    TextDrawHideForPlayer(playerid,TDTimery[playerid][t]);
		}
		TextDrawHideForPlayer(playerid,Textdraw0);
		TextDrawHideForPlayer(playerid,Textdraw1[playerid]);
		TextDrawHideForPlayer(playerid,Textdraw2);
		TextDrawHideForPlayer(playerid,Textdraw3);
  		TextDrawHideForPlayer(playerid,Textdraw7);
		TextDrawHideForPlayer(playerid,Textdraw8);
		TextDrawHideForPlayer(playerid,Textdraw9);
		TextDrawHideForPlayer(playerid,Textdraw12);
		TextDrawHideForPlayer(playerid,Textdraw13);
		TextDrawHideForPlayer(playerid,Textdraw14);
		TextDrawHideForPlayer(playerid,Textdraw15);
		TextDrawHideForPlayer(playerid,Textdraw16);
		TextDrawHideForPlayer(playerid,Textdraw17);
		TextDrawHideForPlayer(playerid,Textdraw18);
		TextDrawHideForPlayer(playerid,Textdraw19);
		PlayerTextDrawHide(playerid,Textdraw38[playerid]);
		PlayerTextDrawHide(playerid,Textdraw39[playerid]);
		PlayerTextDrawHide(playerid,TDTime[playerid]);
		TextDrawHideForPlayer(playerid,Textdraw28);
		PlayerTextDrawHide(playerid,Textdraw29[playerid]);
		CallRemoteFunction("HideShowHours","ii",playerid,0);
		if(text == true)
		{
            SM(playerid,"TextDrawy úspìnì "r"vypnuty");
		}
		TD[playerid] = true;
	}
	else if(TD[playerid] == true)
	{
		for(new t; t < 5; t++)
		{
			TextDrawShowForPlayer(playerid,TextDraw[t]);
		}
		if(portid > 0)
		{
			TextDrawShowForPlayer(playerid,Textdraw0);
			for(new t; t < 5; t++)
			{
				TextDrawShowForPlayer(playerid,event[t]);
			}
		}
		if(RepairTime[playerid] > 0)
		{
		    TextDrawShowForPlayer(playerid,TDTimery[playerid][0]);
		}
		if(HealTime[playerid] > 0)
		{
		    TextDrawShowForPlayer(playerid,TDTimery[playerid][1]);
		}
		if(WarpBlock[playerid] > 0)
		{
		    TextDrawShowForPlayer(playerid,TDTimery[playerid][2]);
		}
		if(RunEvent > 0)
		{
			TextDrawShowForPlayer(playerid,Textdraw3);
		}
		TextDrawShowForPlayer(playerid,Textdraw1[playerid]);
		TextDrawShowForPlayer(playerid,Textdraw2);
  		TextDrawShowForPlayer(playerid,Textdraw7);
		TextDrawShowForPlayer(playerid,Textdraw8);
		TextDrawShowForPlayer(playerid,Textdraw9);
		TextDrawShowForPlayer(playerid,Textdraw12);
		TextDrawShowForPlayer(playerid,Textdraw13);
		TextDrawShowForPlayer(playerid,Textdraw14);
		TextDrawShowForPlayer(playerid,Textdraw15);
		TextDrawShowForPlayer(playerid,Textdraw16);
		TextDrawShowForPlayer(playerid,Textdraw17);
		TextDrawShowForPlayer(playerid,Textdraw18);
		TextDrawShowForPlayer(playerid,Textdraw19);
		PlayerTextDrawShow(playerid,Textdraw38[playerid]);
		PlayerTextDrawShow(playerid,Textdraw39[playerid]);
		PlayerTextDrawShow(playerid,Textdraw29[playerid]);
		CallRemoteFunction("HideShowHours","ii",playerid,1);
		if(hlasovani == 1)
		{
			TextDrawShowForPlayer(playerid,Textdraw28);
		}
		PlayerTextDrawShow(playerid,TDTime[playerid]);
		if(text == true)
		{
            SM(playerid,"TextDrawy úspìnì "g"zapnuty");
		}
		TD[playerid] = false;
	}
	return 1;
}


stock OnOff(onoff = 0,type = 0,hvip = 0)
{
	new Nazev[20];
	if(type == 0)
	{
		if(onoff != 0) Nazev = "{FF0000}Vypnuto";
		else Nazev = "{00FF00}Zapnuto";
	}
	else if(type == 1)
	{
		if(onoff == 0)
		{
			Nazev = "{FF0000}Vypnuto";
		}
		else
		{
			if(hvip == 1)
			{
				Nazev = "{00FF00}Zapnuto";
			}
			else
			{
				Nazev = "{FF6600}Zapnuto";
			}
		}
	}
	else if(type == 2)
	{
		if(onoff == 0) Nazev = "{FF0000}Vypnuto";
		else Nazev = "{00FF00}Zapnuto";
	}
	return Nazev;
}

stock CreateInteriorEnter(ID,Float:X,Float:Y,Float:Z,Exit = -1)
{
	new query[200],rows,fields,Cache:cache;
	for(new i; i < MAX_INTERIORS; i ++)
	{
		if(InteriorEnters[i][ieX] == 0.0 && InteriorEnters[i][ieY] == 0.0 && InteriorEnters[i][ieZ] == 0.0)
		{
			mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Interiors` WHERE `ID`='%d' LIMIT 1",i);
			cache = mysql_query(mysql,query);
			cache_get_data(rows,fields,mysql);
			if(!rows)
			{
			    mysql_format(mysql,query,sizeof(query),"INSERT INTO `Interiors` (`ID`,`IntID`,`X`,`Y`,`Z`,`IntExit`) VALUES ('%d','%d','%f','%f','%f','%d')",i,ID,X,Y,Z,Exit);
				mysql_query(mysql,query,false);
			}
			InteriorEnters[i][ieID] = ID;
			InteriorEnters[i][ieX] = X;
			InteriorEnters[i][ieY] = Y;
			InteriorEnters[i][ieZ] = Z;
			InteriorEnters[i][ieExit] = Exit;
			InteriorEnters[i][iePickup] = CreateDynamicPickup(1318,23,X,Y,Z,.worldid = 0);
			InteriorEnters[i][ieText] = CreateDynamic3DTextLabel("[ {0088FF}ENTER "w"]",bila,X,Y,Z,10,.testlos = 1,.worldid = 0);
			if(Interiors[ID][iMapIcon] != 0)
			{
				CreateDynamicMapIcon(X,Y,Z,Interiors[ID][iMapIcon],-1,0,0,.streamdistance = 300);
			}
			cache_delete(cache,mysql);
			break;
		}
	}
	return 1;
}

stock timec(timestamp, compare = -1)
{
    if (compare == -1) {
        compare = gettime();
    }
    new
        n,
        Float:d = (timestamp > compare) ? timestamp - compare : compare - timestamp,
        returnstr[32];
    if (d < 60) {
	    if (d == 1) {
	        format(returnstr, sizeof(returnstr), "1 sekunda", returnstr);
	    } else {
	        format(returnstr, sizeof(returnstr), "%.0f sekund", d);
	    }
        return returnstr;
    } else if (d < 3600) { // 3600 = 1 hour
        n = floatround(floatdiv(d, 60.0), floatround_floor);
	    if (n == 1) {
	        format(returnstr, sizeof(returnstr), "1 minuta", returnstr);
	    } else {
	        format(returnstr, sizeof(returnstr), "%d minut", n);
	    }
    } else if (d < 86400) { // 86400 = 1 day
        n = floatround(floatdiv(d, 3600.0), floatround_floor);
	    if (n == 1) {
	        format(returnstr, sizeof(returnstr), "1 hodina", returnstr);
	    } else {
	        format(returnstr, sizeof(returnstr), "%d hodin", n);
	    }
    } else if (d < 2592000) { // 2592000 = 1 month
        n = floatround(floatdiv(d, 86400.0), floatround_floor);
	    if (n == 1) {
	        format(returnstr, sizeof(returnstr), "1 den", returnstr);
	    } else {
	        format(returnstr, sizeof(returnstr), "%d dny", n);
	    }
    } else if (d < 31536000) { // 31536000 = 1 year
        n = floatround(floatdiv(d, 2592000.0), floatround_floor);
	    if (n == 1) {
	        format(returnstr, sizeof(returnstr), "1 mìsíc", returnstr);
	    } else {
	        format(returnstr, sizeof(returnstr), "%d mìsíce", n);
	    }
    } else {
        n = floatround(floatdiv(d, 31536000.0), floatround_floor);
	    if (n == 1) {
	        format(returnstr, sizeof(returnstr), "1 rok", returnstr);
	    } else {
	        format(returnstr, sizeof(returnstr), "%d lety", n);
	    }
    }
    return returnstr;
}

stock IsPlayerHouseOwner(playerid,houseid)
{
	if(strlen(House[houseid][hOwner]))
	{
		if(strcmp(House[houseid][hOwner],Jmeno(playerid)) == 0) return 1;
	}
	return 0;
}

stock LoadHouses()
{
	new Cache:cache;
	cache = mysql_query(mysql,"SELECT * FROM `Houses`");
	for(new i; i < cache_get_row_count(mysql); i ++)
	{
		if(House[i][hX] == 0.0 && House[i][hY] == 0.0 && House[i][hZ] == 0.0)
		{
		    House[i][hX] = cache_get_field_content_float(i,"X",mysql);
		    House[i][hY] = cache_get_field_content_float(i,"Y",mysql);
		    House[i][hZ] = cache_get_field_content_float(i,"Z",mysql);
		    House[i][hID] = cache_get_field_content_int(i,"ID",mysql);
		    cache_get_field_content(i,"Owner",House[i][hOwner],mysql,24);
		    cache_get_field_content(i,"Name",House[i][hName],mysql,30);
		    cache_get_field_content(i,"Password",House[i][hPassword],mysql,30);
			House[i][hInt] = cache_get_field_content_int(i,"Interior",mysql);
			House[i][hPrice] = cache_get_field_content_int(i,"Price",mysql);
			House[i][hNeedHours] = cache_get_field_content_int(i,"NeedHours",mysql);
			House[i][hText] = CreateDynamic3DTextLabel("_",red,House[i][hX],House[i][hY],House[i][hZ],40,.testlos = 1,.worldid = 0);
			UpdateHouse(i);
		}
	}
	cache_delete(cache,mysql);
	return 1;
}

stock CreateHouse(Float:X,Float:Y,Float:Z,hint = 0,needhours = 10)
{
	for(new i; i < MAX_HOUSES; i ++)
	{
		if(House[i][hX] == 0.0 && House[i][hY] == 0.0 && House[i][hZ] == 0.0)
		{
			new query[150],Cache:cache;
		    House[i][hX] = X;
		    House[i][hY] = Y;
		    House[i][hZ] = Z;
			format(House[i][hOwner],24,"-1");
			format(House[i][hPassword],30,"");
			format(House[i][hName],30,"Dùm na prodej");
			House[i][hInt] = hint;
			House[i][hNeedHours] = needhours;
		    mysql_format(mysql,query,sizeof(query),"INSERT INTO `Houses` (`X`,`Y`,`Z`,`Owner`,`Name`,`Interior`,`NeedHours`) VALUES ('%f','%f','%f','-1','Dùm na prodej','%d','%d')",X,Y,Z,hint,needhours);
		    cache = mysql_query(mysql,query);
			House[i][hText] = CreateDynamic3DTextLabel("",red,X,Y,Z,40,.testlos = 1);
			House[i][hID] = cache_insert_id(mysql);
			cache_delete(cache,mysql);
			UpdateHouse(i);
			break;
		}
	}
	return 1;
}

stock UpdateHouse(houseid)
{
	new hint = House[houseid][hInt],Float:X = House[houseid][hX],Float:Y = House[houseid][hY],Float:Z = House[houseid][hZ];
	if(IsValidDynamicMapIcon(House[houseid][hMapIcon]))
		DestroyDynamicMapIcon(House[houseid][hMapIcon]);
	if(IsValidDynamicPickup(House[houseid][hPickup]))
	    DestroyDynamicPickup(House[houseid][hPickup]);
	if(strcmp(House[houseid][hOwner],"-1",false) == 0)
	{
	    format(str,sizeof(str),"%s\n"w"è.p.: "sb"%d\n"w"Majitel: "sb"Mìsto\n"w"Interiér: "sb"%s\n"w"Cena: "g"%s$",House[houseid][hName],houseid+1,HouseInteriors[hint][HouseInteriorName],Split(HouseInteriors[hint][HouseInteriorPrice]));
		UpdateDynamic3DTextLabelText(House[houseid][hText],red,str);
		House[houseid][hMapIcon] = CreateDynamicMapIcon(X,Y,Z,31,bila);
	    House[houseid][hPickup] = CreateDynamicPickup(1273,23,X,Y,Z,0);
	}
	else
	{
	    House[houseid][hPickup] = CreateDynamicPickup(1272,23,X,Y,Z,0);
		if(strlen(House[houseid][hPassword]) == 0)
		{
		    if(House[houseid][hPrice] == 0)
		    {
	    		format(str,sizeof(str),"%s\n"w"è.p.: "sb"%d\n"w"Majitel: "sb"%s\n"w"Interiér: "sb"%s\n"w"Zamknuto: "r"Ne",House[houseid][hName],houseid+1,House[houseid][hOwner],HouseInteriors[hint][HouseInteriorName]);
			}
			else
			{
	    		format(str,sizeof(str),"%s\n"r"Dùm na prodej\n"w"Cena: "g"%s$\n"w"è.p.: "sb"%d\n"w"Majitel: "sb"%s\n"w"Interiér: "sb"%s\n"w"Zamknuto: "r"Ne",House[houseid][hName],Split(House[houseid][hPrice]),houseid+1,House[houseid][hOwner],HouseInteriors[hint][HouseInteriorName]);
			}
		}
		else
		{
		    if(House[houseid][hPrice] == 0)
		    {
		    	format(str,sizeof(str),"%s\n"w"è.p.: "sb"%d\n"w"Majitel: "sb"%s\n"w"Interiér: "sb"%s\n"w"Zamknuto: "g"Ano",House[houseid][hName],houseid+1,House[houseid][hOwner],HouseInteriors[hint][HouseInteriorName]);
			}
			else
			{
	    		format(str,sizeof(str),"%s\n"r"Dùm na prodej\n"w"Cena: "g"%s$\n"w"è.p.: "sb"%d\n"w"Majitel: "sb"%s\n"w"Interiér: "sb"%s\n"w"Zamknuto: "g"Ano",House[houseid][hName],Split(House[houseid][hPrice]),houseid+1,House[houseid][hOwner],HouseInteriors[hint][HouseInteriorName]);
			}
		}
		UpdateDynamic3DTextLabelText(House[houseid][hText],red,str);
		House[houseid][hMapIcon] = CreateDynamicMapIcon(X,Y,Z,32,bila,0);
	}
	return 1;
}

stock AddPlayerTitul(playerid,titul[])
{
	new query[130];
	mysql_format(mysql,query,sizeof(query),"INSERT INTO `UserTituls` (`Nick`,`Titul`) VALUES ('%e','%e')",Jmeno(playerid),titul);
	mysql_query(mysql,query,false);
	return 1;
}

stock AddVehicleToGarage(playerid,modelid,bool:odstavit = false)
{
	new slot;
	for(new i; i < MAX_SLOTS; i ++)
	{
	    format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(playerid),i);
	    if(!fexist(dfile))
	    {
			slot = i;
			break;
	    }
	}
    new Float:X,Float:Y,Float:Z,Float:Angle;
    GetPlayerPos(playerid,X,Y,Z);
    GetPlayerFacingAngle(playerid,Angle);
	new rand = random(128);
	SavedCar[playerid][slot] = 0;
	ParkInfo[playerid][slot][pX] = X + 4*floatcos(90+Angle, degrees);
	ParkInfo[playerid][slot][pY] = Y + 4*floatsin(90-Angle, degrees);
	ParkInfo[playerid][slot][pZ] = Z;
	ParkInfo[playerid][slot][pA] = Angle+90;
	if(odstavit == true)
	{
		ParkInfo[playerid][slot][pOdstaveno] = true;
	}
	if(modelid < 612)
	{
    	SavedCar[playerid][slot] = CreateVehicle(modelid,X,Y,Z,Angle,rand,rand,-1,0);
	}
	format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(playerid),slot);
	ParkInfo[playerid][slot][Color1] = rand;
	ParkInfo[playerid][slot][Color2] = rand;
    format(ParkInfo[playerid][slot][Password],30,"Locked");
	if(!fexist(dfile))
	{
	    DOF2_CreateFile(dfile);
		DOF2_SetInt(dfile,"Model",modelid);
		DOF2_SetFloat(dfile,"X",ParkInfo[playerid][slot][pX]);
		DOF2_SetFloat(dfile,"Y",ParkInfo[playerid][slot][pY]);
		DOF2_SetFloat(dfile,"Z",ParkInfo[playerid][slot][pZ]);
		DOF2_SetFloat(dfile,"A",ParkInfo[playerid][slot][pA]);
		DOF2_SetInt(dfile,"Color1",ParkInfo[playerid][slot][Color1]);
		DOF2_SetInt(dfile,"Color2",ParkInfo[playerid][slot][Color2]);
		DOF2_SetInt(dfile,"PaintJob",3);
		DOF2_SetBool(dfile,"Odstaveno",ParkInfo[playerid][slot][pOdstaveno]);
		DOF2_SaveFile();
	}
	ParkInfo[playerid][slot][PaintJob] = 3;
	ParkInfo[playerid][slot][Model] = modelid;
	SpawnCar(playerid,slot);
	TuneCar(playerid,slot);
	return 1;
}

stock CreateGift(Float:X,Float:Y,Float:Z)
{
	for(new i; i < MAX_GIFTS; i ++)
	{
		if(i < MAX_GIFTS)
		{
			if(Gifts[i][gX] == 0 && Gifts[i][gY] == 0 && Gifts[i][gZ] == 0)
			{
				Gifts[i][gX] = X;
				Gifts[i][gY] = Y;
				Gifts[i][gZ] = Z;
				if(X != 0 && Y != 0 && Z != 0)
				{
					Gifts[i][gObject] = CreateDynamicPickup(GiftsObject[random(sizeof(GiftsObject))],23,X,Y,Z,.worldid=CHRISTMAS_VW);
				}
			    break;
			}
		}
		else
		{
		    printf("Byl pøekroèen maximální limit dárkù [ %d / %d ]",i,MAX_GIFTS);
		}
	}
	return 1;
}

stock ShowAdminInfoByName(playerid,name[])
{
	new DIALOG[5000],query[500],rows,fields,Cache:cache,ip[16];
	format(dfile,sizeof(dfile),USER_FILES,name);
	format(ip,sizeof(ip),DOF2_GetString(dfile,"IP"));
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Accounts` WHERE `IP`='%s' ORDER BY `Updated` DESC LIMIT 1",ip);
	cache = mysql_query(mysql,query);
	cache_get_data(rows,fields,mysql);
	cache_delete(cache,mysql);
	if(rows)
	{
	    new country[MAX_COUNTRY_NAME],city[50];
		format(city,sizeof(city),DOF2_GetString(dfile,"City"));
		if(!strlen(city))
		    format(city,sizeof(city),"Unknown");
	   	format(country,sizeof(country),DOF2_GetString(dfile,"Country"));
		strcat(DIALOG,""aip"Základní informace\n");
		format(str,sizeof(str),""aid"Nick: "ais"%s\n"aid"IP Adresa: "ais"%s\n"aid"Poslední pøihláení: "ais"%s\n"aid"Stát: "ais"%s"aid"\n"aid"Mìsto: "ais"%s\n",name,ip,DOF2_GetString(dfile,"LastConnect"),country,city);
		strcat(DIALOG,str);
		format(str,sizeof(str),""aid"Zobrazit nicky [ "ais">> "aid"]\n"aid"Zobrazit IP Adresy [ "ais">> "aid"]\n"aid"Zobrazit PM Archiv [ "ais" >> "aid"]\n");
		strcat(DIALOG,str);

		strcat(DIALOG,""aip"Pøestupky\n");
		mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Prestupky` WHERE `Nick` = '%e' AND `Type` = '%d'",name,TYPE_MUTE);
		cache = mysql_query(mysql,query);
		cache_get_data(rows,fields,mysql);
		if(rows)
		{
			format(str,sizeof(str),""aid"Zobrazit umlèení [ "ais"%d "aid"]\n",rows);
		}
		else
		{
			format(str,sizeof(str),""aid"Zobrazit umlèení [ "ais"0 "aid"]\n");
		}
	    strcat(DIALOG,str);
		cache_delete(cache,mysql);

		mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Prestupky` WHERE `Nick` = '%e' AND `Type` = '%d'",name,TYPE_CBLOCK);
		cache = mysql_query(mysql,query);
		cache_get_data(rows,fields,mysql);
		if(rows)
		{
			format(str,sizeof(str),""aid"Zobrazit bloknutí pøíkazù [ "ais"%d "aid"]\n",rows);
		}
		else
		{
			format(str,sizeof(str),""aid"Zobrazit bloknutí pøíkazù [ "ais"0 "aid"]\n");
		}
	    strcat(DIALOG,str);
		cache_delete(cache,mysql);

		mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Prestupky` WHERE `Nick` = '%e' AND `Type` = '%d'",name,TYPE_VAR);
		cache = mysql_query(mysql,query);
		cache_get_data(rows,fields,mysql);
		if(rows)
		{
			format(str,sizeof(str),""aid"Zobrazit varování [ "ais"%d "aid"]\n",rows);
		}
		else
		{
			format(str,sizeof(str),""aid"Zobrazit varování [ "ais"0 "aid"]\n");
		}
	    strcat(DIALOG,str);
		cache_delete(cache,mysql);

		mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Prestupky` WHERE `Nick` = '%e' AND `Type` = '%d'",name,TYPE_KICK);
		cache = mysql_query(mysql,query);
		cache_get_data(rows,fields,mysql);
		if(rows)
		{
			format(str,sizeof(str),""aid"Zobrazit kicky [ "ais"%d "aid"]\n",rows);
		}
		else
		{
			format(str,sizeof(str),""aid"Zobrazit kicky [ "ais"0 "aid"]\n");
		}
	    strcat(DIALOG,str);
		cache_delete(cache,mysql);

		mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Prestupky` WHERE `Nick` = '%e' AND `Type` = '%d'",name,TYPE_TBAN);
		cache = mysql_query(mysql,query);
		cache_get_data(rows,fields,mysql);
		if(rows)
		{
			format(str,sizeof(str),""aid"Zobrazit time bany [ "ais"%d "aid"]\n",rows);
		}
		else
		{
			format(str,sizeof(str),""aid"Zobrazit time bany [ "ais"0 "aid"]\n");
		}
	    strcat(DIALOG,str);
		cache_delete(cache,mysql);

		mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Prestupky` WHERE `Nick` = '%e' AND `Type` = '%d'",name,TYPE_BAN);
		cache = mysql_query(mysql,query);
		cache_get_data(rows,fields,mysql);
		if(rows)
		{
			format(str,sizeof(str),""aid"Zobrazit bany [ "ais"%d "aid"]\n",rows);
		}
		else
		{
			format(str,sizeof(str),""aid"Zobrazit bany [ "ais"0 "aid"]\n");
		}
	    strcat(DIALOG,str);

		cache_delete(cache,mysql);

		new file2[50];
		format(dfile,sizeof(dfile),"%s.txt",(name));
		format(file2,sizeof(file2),USER_FILES,name);
		strcat(DIALOG,""aip"Úèet:\n");
		format(str,sizeof(str),""aid"Hodin: "ais"%d\n"aid"Minut: "ais"%d\n"aid"Level: "ais"%d\n",DOF2_GetInt(dfile,"Odehrano")/60/60,DOF2_GetInt(dfile,"Odehrano")/60%60,DOF2_GetInt(file2,"Level"));
		strcat(DIALOG,str);
		if(DOF2_GetInt(file2,"VIP") == 1)
		{
			format(str,sizeof(str),""aid"Premium Úèet: "g"Vlastní\n"aid"Titul: "ais"%s\n",DOF2_GetString(file2,"Prefix"));
		}
		else
		{
			format(str,sizeof(str),""aid"Premium Úèet: "r"Nevlastní\n");
		}
		strcat(DIALOG,str);
		strcat(DIALOG,""aip"Kriminalita:\n");
		format(str,sizeof(str),""aid"Vrady: "ais"%d\n"aid"Úmrtí: "ais"%d\n"aid"Wanted: "ais"%d\n",DOF2_GetInt(dfile,"Kills"),DOF2_GetInt(dfile,"Deaths"),DOF2_GetInt(dfile,"Wanted"));
		strcat(DIALOG,str);
		strcat(DIALOG,""aip"Finance:\n");
		format(str,sizeof(str),""aid"Peníze: "ais"%s$\n"aid"Banka: "ais"%s$\n"aid"Výplata: "ais"%s$\n",Split(DOF2_GetInt(dfile,"Money")),Split(DOF2_GetInt(dfile,"Banka")),Split(DOF2_GetInt(dfile,"Vyplata")));
		strcat(DIALOG,str);
		strcat(DIALOG,""aip"Score:\n");
		format(str,sizeof(str),""aid"Výbuné náboje: "ais"%d\n"aid"Body: "ais"%0.1f\n"aid"DM Score: "ais"%d\n"aid"Vyhráno postøehù: "ais"%d"aid"\n"aid"Vyhráno eventù: "ais"%d\n",DOF2_GetInt(file2,"Naboje"),DOF2_GetFloat(file2,"Body"),DOF2_GetInt(file2,"DMScore"),DOF2_GetInt(file2,"WinPostrehy"),DOF2_GetInt(file2,"Vyhry"));
		strcat(DIALOG,str);
		format(str,sizeof(str),""aid"Vyhráno duelù: "ais"%d\n"aid"Prohráno duelù: "ais"%d\n"aid"Misí splnìno: "ais"%d\n",DOF2_GetInt(file2,"DuelWins"),DOF2_GetInt(file2,"DuelLose"),DOF2_GetInt(file2,"MiseCompleted"));
		strcat(DIALOG,str);
		format(str,sizeof(str),""aid"Vyhraných sumo zápasù: "ais"%d\n"aid"Prohaných sumo zápasù: "ais"%d\n",DOF2_GetInt(file2,"SumoWins"),DOF2_GetInt(file2,"SumoLose"));
		strcat(DIALOG,str);
		format(str,sizeof(str),""aid"Vyhraných závodù: "ais"%d\n"aid"Zabito hráèù v DM: "ais"%d\n"aid"Vykradeno nemovitostí: "ais"%d\n",DOF2_GetInt(file2,"RaceWins"),DOF2_GetInt(file2,"DMKills"),DOF2_GetInt(file2,"Vykradeno"));
		strcat(DIALOG,str);
		format(str,sizeof(str),""aid"Vyhráno bodù v hodu mincí: "ais"%d\n"aid"Prohráno bodù v hodu mincí: "ais"%d",DOF2_GetInt(file2,"MinceWin"),DOF2_GetInt(file2,"MinceLose"));
		strcat(DIALOG,str);
		strcat(DIALOG,"\n"aip"Vozový park\n");
		new slots = 0;
		for(new i; i < MAX_SLOTS; i ++)
		{
			format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",name,i);
			if(fexist(dfile))
			{
			    slots ++;
				format(str,sizeof(str),""aid"%s\n",GetVehicleNameByCarID(DOF2_GetInt(dfile,"Model")));
				strcat(DIALOG,str);
			}
		}
		if(slots == 0) strcat(DIALOG,""aid"Hráè nevlastní ádné vozidlo\n");
		strcat(DIALOG,""aip"Seznam Achievementù\n");
		new achiev = 0;
		format(dfile,sizeof(dfile),USER_FILES,name);
		for(new i; i < MAX_ACHIEVEMENTS; i ++)
		{
		    format(str,sizeof(str),"Achievement[%d]",i);
		    if(DOF2_GetInt(dfile,str) == 2)
		    {
		        achiev++;
		        format(str,sizeof(str),""aid"%s\n",AchievementsNames[i][AchievName]);
				strcat(DIALOG,str);
		    }
		}
		if(achiev == 0) strcat(DIALOG,""aid"Hráè nemá odemèené ádné achievementy\n");
		new props = 0;
		strcat(DIALOG,""aip"Seznam nemovitostí\n");
		for(new i; i < MAX_PROPERTIES; i ++)
		{
			if(strcmp(Property[i][PropertyOwner],"0",false) != 0)
			{
			    if(strcmp(Property[i][PropertyOwner],name,false) == 0)
		    	{
			        props++;
			        format(str,sizeof(str),""aid"%s\n",Property[i][PropertyName]);
					strcat(DIALOG,str);
				}
		    }
		}
		if(props == 0) strcat(DIALOG,""aid"Hráè nevlastní ádné nemovitosti\n");
		SPD(playerid,UNNAMED+128,DIALOG_STYLE_LIST,name,DIALOG,"Vybrat","Zavøít");
		SetPVarString(playerid,"GetAiName",name);
		format(dfile,sizeof(dfile),USER_FILES,name);
		SetPVarString(playerid,"GetAiIP",DOF2_GetString(dfile,"IP"));
	}
	else
	{
	    SM(playerid,"Tento úèet neexistuje");
	}
	return 1;
}

stock ShowAdminInfoByIP(playerid,ip[])
{
	new query[500],rows,fields,Cache:cache;
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Accounts` WHERE `IP` = '%s'",ip);
	cache = mysql_query(mysql,query);
	cache_get_data(rows,fields,mysql);
	if(rows)
	{
	    new DIALOG[500];
		format(str,sizeof(str),""aid"IP Adresa: "ais"%s\n"aid"Poslední pøihláení: "ais"%s\n",ip,DATE(cache_get_field_content_int(0,"Updated")));
		strcat(DIALOG,str);
		format(str,sizeof(str),""aid"Zobrazit nicky [ "ais">> "aid"]\n"aid"Zobrazit IP Adresy [ "ais">> "aid"]\n");
		strcat(DIALOG,str);
		SPD(playerid,UNNAMED+128,DIALOG_STYLE_LIST,ip,DIALOG,"Vybrat","Zavøít");
		SetPVarString(playerid,"GetAiIP",ip);
	}
	else
	{
	    SM(playerid,"Tento úèet neexistuje");
	}
	cache_delete(cache,mysql);
	return 1;
}

stock GetMoney(playerid)
{
	return CallRemoteFunction("GetMoney","i",playerid);
}

stock AdminActivity(playerid,amount = 1)
{
	if(Admin[playerid] > 0)
	{
		new rows,fields,query[200];
		mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Users` WHERE `Nick`= '%s' LIMIT 1",Jmeno(playerid));
		new Cache:cache = mysql_query(mysql,query);
		cache_get_data(rows,fields,mysql);
		if(rows)
		{
			mysql_format(mysql,query,sizeof(query),"UPDATE `Users` SET `ActivityPoints`=%d WHERE `Nick`='%s'",cache_get_field_content_int(0,"ActivityPoints",mysql)+amount,Jmeno(playerid));
		}
		else
		{
		    mysql_format(mysql,query,sizeof(query),"INSERT INTO `Users` (`Nick`,`ActivityPoints`) VALUES('%s','%d')",Jmeno(playerid),amount);
		}
		mysql_query(mysql,query,false);
		cache_delete(cache,mysql);
	}
	return 1;
}

stock GiveXP(playerid,Float:amount,reason[],bool:booster = true)
{
	if(IsPlayerLogged(playerid))
	{
	    new string[144],Float:boosted;
	    if(XPBoostPercent[playerid] != 0 && booster == true)
	    {
			boosted = (amount/100)*XPBoostPercent[playerid];
	        amount += boosted;
	    }
		XP[playerid] += floatround(amount);
		while(XP[playerid] >= floatround((Level[playerid]*100)*1.5))
		{
		    XP[playerid] -= floatround(((Level[playerid]*100)*1.5));
			Level[playerid] ++;
			format(string,sizeof(string),"Gratulujeme, dosahl si levelu %d",Level[playerid]);
			CreateCompleteMessage(playerid,"LEVEL UP!",string,5);
			format(str,sizeof(str),"~b~~h~%s ~w~%s ~b~~h~dosahl ~w~%d. ~b~~h~levelu~w~.",Players(playerid),Jmeno(playerid),Level[playerid]);
			AddStringToTextDraw(str);
			if(Level[playerid]%10 == 0)
			{
			    format(str,sizeof(str),"%s "w"%s {00bbff}dosáhl "w"%d. {00bbff}levelu"w".",Players(playerid),Jmeno(playerid),Level[playerid]);
				SCMTA(0x00bbffFF,str);
			}
		}
		if(floatround(amount) > 0)
		{
			if(floatround(boosted) == 0)
			{
				format(string,sizeof(string),"~r~~h~%s ~r~~h~+ %d XP",reason,floatround(amount));
			}
			else
			{
				format(string,sizeof(string),"~r~~h~%s ~r~~h~+ %d (~y~%d~r~~h~) XP",reason,floatround(amount),floatround(boosted));
			}
			PlayerTextDrawSetString(playerid,Textdraw30[playerid],string);
			PlayerTextDrawShow(playerid,Textdraw30[playerid]);
			SetTimerEx("HideXP",1000*8,false,"i",playerid);
		}
		format(str,sizeof(str),"{00FFFF}%s +%0.1fXP (Level %d)",Jmeno(playerid),amount,Level[playerid]);
		printEx(str);
		format(string,sizeof(string),"%d XP / %d XP~n~~w~Level %d",XP[playerid],floatround((Level[playerid]*100)*1.5),Level[playerid]);
		PlayerTextDrawSetString(playerid,Textdraw29[playerid],string);
		format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
		if(fexist(dfile))
		{
		    DOF2_SetInt(dfile,"XP",XP[playerid]);
		    DOF2_SetInt(dfile,"Level",Level[playerid]);
		    DOF2_SaveFile();
		}
	    if(Achiv[playerid][LEVEL_10] == 0)
	    {
	        if(Level[playerid] >= 10)
	        {
	            SetPlayerAchievement(playerid,LEVEL_10);
	        }
	    }
	    if(Achiv[playerid][LEVEL_30] == 0)
	    {
	        if(Level[playerid] >= 30)
	        {
	            SetPlayerAchievement(playerid,LEVEL_30);
	        }
	    }
	    if(Achiv[playerid][LEVEL_50] == 0)
	    {
	        if(Level[playerid] >= 50)
	        {
	            SetPlayerAchievement(playerid,LEVEL_50);
	        }
	    }
	    if(Achiv[playerid][LEVEL_100] == 0)
	    {
	        if(Level[playerid] >= 100)
	        {
	            SetPlayerAchievement(playerid,LEVEL_100);
	        }
	    }
	}
	return 1;
}

stock IsNickSame(nick[])
{
	new query[200],Cache:cache;
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `Users` WHERE `AntiNickCopy`='%e' ORDER BY `Hours` DESC LIMIT 1",EncodeNick(nick));
	cache = mysql_query(mysql,query);
	if(cache_get_row_count(mysql))
	{
		if(cache_get_field_content_int(0,"Hours",mysql) != 0)
		{
			new soubor[50];
			format(soubor,sizeof(soubor),USER_FILES,nick);
			if(!fexist(soubor))
			{
			    new pNick[24];
			    cache_get_field_content(0,"Nick",pNick,mysql);
			    if(strcmp(pNick,nick,false) != 0)
			    {
					return 1;
			    }
			}
		}
	}
	cache_delete(cache,mysql);
	return 0;
}

stock EncodeNick(nick[])
{
	new pName[24+1];
	format(pName,sizeof(pName),nick);
	for(new i; i < strlen(pName); i ++)
	{
	    if(pName[i] == 'I') pName[i] = '#';
	    if(pName[i] == 'l') pName[i] = '#';
		if(pName[i] == ']') pName[i] = '#';
		if(pName[i] == '[') pName[i] = '#';
	}
	return pName;
}

function IsPlayerAFK(playerid)
{
	return AFK[playerid];
}

stock Jmeno(playerid,type = 0)
{
	new pName[MAX_PLAYER_NAME+1];
	if(IPC(playerid))
	{
		if(type == 0)
		{
			if(AFK[playerid] == false) GetPlayerName(playerid,pName,sizeof(pName));
			else GetPVarString(playerid,"afkname",pName,sizeof(pName));
		}
		else if(type == 2)
		{
		    GetPVarString(playerid,"AdminName",pName,sizeof(pName));
		}
	}
	return pName;
}

stock ShowTop(playerid,from[],order[],what[],mark[],jednotka[] = "")
{
    new query[200],fields,rows,DIALOG[1000];
    mysql_format(mysql,query,sizeof(query),"SELECT * FROM `%s` ORDER BY `%s` DESC",from,order);
	new Cache:cache = mysql_query(mysql,query);
	cache_get_data(rows,fields,mysql);
	if(rows == 0) return SM(playerid,"Nebyli nalezení ádní top hráèi");
	new bool:finded = false;
	for(new i; i < rows; i ++)
	{
		if(i < 10)
		{
		    if(i < rows)
		    {
			    cache_get_field_content(i,what,str,mysql);
				if(i == 0)
				{
			    	format(str,sizeof(str),"%d.\t"r"%s\t"w"%d %s\n",i+1,str,cache_get_field_content_int(i,order,mysql),jednotka);
				}
				else if(strfind(str,mark,false) != -1)
				{
	    			format(str,sizeof(str),"%d.\t"y"%s\t"w"%d %s\n",i+1,str,cache_get_field_content_int(i,order,mysql),jednotka);
					finded = true;
				}
				else
				{
		    		format(str,sizeof(str),"%d.\t%s\t"w"%d %s\n",i+1,str,cache_get_field_content_int(i,order,mysql),jednotka);
				}
				strcat(DIALOG,str);
			}
			else
			{
			    format(str,sizeof(str),"%d.\t"g"X\t"w"0 %s\n",i+1,jednotka);
			    strcat(DIALOG,str);
				finded = true;
			}
		}
		if(i > 10)
		{
			if(finded == false)
			{
			    cache_get_field_content(i,what,str,mysql);
				if(strcmp(str,mark,false) == 0)
				{
				    strcat(DIALOG,"\n \t \t \n");
					format(str,sizeof(str),"%d.\t"y"%s\t"w"%d %s\n",i+1,str,cache_get_field_content_int(i,order,mysql),jednotka);
					strcat(DIALOG,str);
					break;
				}
			}
		}
	}
	SPD(playerid,0,DIALOG_STYLE_TABLIST,"Top 10",DIALOG,"Zavøít","");
	cache_delete(cache,mysql);
	return 1;
}

function printEx(text[])
{
	if(LogActions == false)
	{
		if(strlen(text) > 0)
		{
			new query[300];
			mysql_format(mysql, query, sizeof(query), "INSERT INTO `ServerLog` (`Time`, `Text`) VALUES ('%d', '%e')",gettime(),text);
			printf("[DB:LOG] %s", text);
			mysql_query(mysql,query,false);
		}
	}
	return 1;
}

function mysql_reconnect_ex()
{
	printf("[Mysql: ReconnectEx] Reconnecting..");
//	SendAdminMessage("{ff0000}[UnNamed-DB]{ffffff} Probìhne {ffff00}reconnect{ffffff} databáze.");
	// Disconnect
	mysql_close(mysql);
	// Connect
    mysql = mysql_connect(DOF2_GetString(CONFIG,"DB_HOST"), DOF2_GetString(CONFIG,"DB_USER"), DOF2_GetString(CONFIG,"DB_NAME"), DOF2_GetString(CONFIG,"DB_PASS"));
	mysql_query(mysql,"SET character_set_client=cp1250");
	mysql_query(mysql,"SET character_set_connection=cp1250");
	mysql_query(mysql,"SET character_set_results=cp1250");
	mysql_tquery(mysql,"SET character_set_client=cp1250","","");
	mysql_tquery(mysql,"SET character_set_connection=cp1250","","");
	mysql_tquery(mysql,"SET character_set_results=cp1250","","");
	
	if(mysql_errno(mysql) != 0)
	{
//	    SendAdminMessage("{ff0000}[UnNamed-DB] {ffff00}Reconnect{ffffff} databáze se nezdaøil.");
		printf("[ UnNamed ] MySQL (%s) [ FAIL ] [ SHUTTED DOWN ]",DOF2_GetString(CONFIG,"DB_NAME"));
		SendRconCommand(Off);
	}
	else
	{
//	    SendAdminMessage("{ff0000}[UnNamed-DB] {ffff00}Reconnect{ffffff} databáze byl proveden úspìnì.");
		printf("[ UnNamed ] MySQL (%s) [ OK ]",DOF2_GetString(CONFIG,"DB_NAME"));
	}
	
	printf("[Mysql: ReconnectEx] Reconnected.");
}

stock ChangeName(playerid,name[])
{
	if(strlen(name) < 20)
	{
		if(!IPC(playerid)) return 0;
		new nfile[50];
		format(dfile,sizeof(dfile),"%s.txt",Jmeno(playerid));
		format(nfile,sizeof(nfile),"%s.txt",name);
		ReNameFile(dfile,nfile);
		format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
		format(nfile,sizeof(nfile),USER_FILES,name);
		ReNameFile(dfile,nfile);
		for(new i; i < MAX_SLOTS; i ++)
		{
		    format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(playerid),i);
		    format(nfile,sizeof(nfile),"UnNamed/Vehicles/%s[%d].txt",name,i);
		    if(fexist(dfile))
		    {
		        ReNameFile(dfile,nfile);
		    }
		}
		if(POwner[playerid] > 0)
		{
		    for(new i; i < MAX_PROPERTIES; i ++)
		    {
		        if(strcmp(Property[i][PropertyOwner],"0",false) != 0)
		        {
		            if(IsPlayerPropertyOwner(playerid,i))
		            {
		                format(dfile,sizeof(dfile),"UnNamed/Properties/Property%d.txt",i);
						if(fexist(dfile))
						{
			                DOF2_SetString(dfile,"Owner",name);
			                DOF2_SaveFile();
			                format(Property[i][PropertyOwner],24+1,name);
			                UpdatePropertyText(i);
						}
		            }
		        }
		    }
		}
		if(GetGang(playerid) > 0)
		{
		    if(CallRemoteFunction("GetPlayerBoss","i",playerid) > 0)
		    {
		        format(dfile,sizeof(dfile),"GangSystem/Gang[%d].ini",GetGang(playerid));
		        if(fexist(dfile))
		        {
		            dini_Set(dfile,"Owner",name);
					CallRemoteFunction("UpdateGangText","i",GetGang(playerid));
				}
		    }
		    else
		    {
		        format(dfile,sizeof(dfile),"GangSystem/Gang[%d].ini",GetGang(playerid));
		        if(fexist(dfile))
		        {
					format(str,sizeof(str),"Member[%d]",CallRemoteFunction("GetPlayerMemberPos","i",playerid));
		            dini_Set(dfile,str,name);
		        }
		    }
		}
		for(new i; i < MAX_HOUSES; i ++)
		{
		    if(IsPlayerHouseOwner(playerid,i))
		    {
		        format(House[i][hOwner],24,name);
				UpdateHouse(i);
		    }
		}
		new query[100];
		mysql_format(mysql,query,sizeof(query),"UPDATE `Maps` SET `Autor` = '%e' WHERE `Autor` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `Vybava` SET `nick` = '%e' WHERE `nick` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `PlayerPackages` SET `Nick` = '%e' WHERE `Nick` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `TrestneBody` SET `hrac` = '%e' WHERE `hrac` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `TrestneBody` SET `admin` = '%e' WHERE `admin` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `Stunts` SET `Nick` = '%e' WHERE `Nick` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `Users` SET `Nick` = '%e' WHERE `Nick` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `Vyhry` SET `Nick` = '%e' WHERE `Nick` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `Vyhry` SET `Admin` = '%e' WHERE `Admin` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `Dotazy` SET `Nick` = '%e' WHERE `Nick` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `Dotazy` SET `Odpovedel` = '%e' WHERE `Odpovedel` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `SoutezOdpovedi` SET `Nick` = '%e' WHERE `Nick` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `Prestupky` SET `Nick` = '%e' WHERE `Nick` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `Prestupky` SET `Admin` = '%e' WHERE `Admin` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `Bans` SET `Nick` = '%e' WHERE `Nick` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `Bans` SET `Admin` = '%e' WHERE `Admin` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `Houses` SET `Owner` = '%e' WHERE `Owner` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `LoginLog` SET `Nick` = '%e' WHERE `Nick` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `Users` SET `AntiNickCopy` = '%e' WHERE `AntiNickCopy` = '%e'",EncodeNick(name),EncodeNick(Jmeno(playerid)));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `Inzeraty` SET `NICK` = '%e' WHERE `NICK` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `Reports` SET `Nick` = '%e' WHERE `Nick` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `Reports` SET `Reporter` = '%e' WHERE `Reporter` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `Reports` SET `Solved` = '%e' WHERE `Solved` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `OnlineUsers` SET `Nick` = '%e' WHERE `Nick` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `Addons` SET `NICK` = '%e' WHERE `NICK` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `UserTituls` SET `Nick` = '%e' WHERE `Nick` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `Gifts` SET `Nick` = '%e' WHERE `Nick` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `Tombola` SET `Nick` = '%e' WHERE `Nick` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `Skins` SET `Nick` = '%e' WHERE `Nick` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `SpecialProperties` SET `Nick` = '%e' WHERE `Nick` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		mysql_format(mysql,query,sizeof(query),"UPDATE `GameAchievs` SET `Nick` = '%e' WHERE `Nick` = '%e'",name,Jmeno(playerid));
		mysql_query(mysql,query,false);
		format(str,sizeof(str),""r"%s %s changed name to %s",Players(playerid),Jmeno(playerid),name);
		printEx(str);
		SetPlayerName(playerid,name);
        SetPVarString(playerid,"Signature","");
	}
	return 1;
}

stock TDPlayers(playerid)
{
	new Nazev[1000];
	if(Admin[playerid] > 0 && AdminHide[playerid] == false)
	{
		if(Sex[playerid] == 2)
		{
			if(Admin[playerid] == 1) Nazev = "Eventerka";
			else if(Admin[playerid] == 2) Nazev = "Moderatorka";
			else if(Admin[playerid] == 3) Nazev = "Administratorka";
			else if(Admin[playerid] == 4) Nazev = "Hl. Administratorka";
			else if(Admin[playerid] == 5) Nazev = "SpoluMajitelka";
	  		else if(Admin[playerid] == 6) Nazev = "Majitelka";
	  		else if(Admin[playerid] == 99) Nazev = "Bot";
		}
		else
	    {
			if(Admin[playerid] == 1) Nazev = "Eventer";
			else if(Admin[playerid] == 2) Nazev = "Moderator";
			else if(Admin[playerid] == 3) Nazev = "Administrator";
			else if(Admin[playerid] == 4) Nazev = "Hl. Administrator";
			else if(Admin[playerid] == 5) Nazev = "SpoluMajitel";
	  		else if(Admin[playerid] == 6) Nazev = "Majitel";
	  		else if(Admin[playerid] == 99) Nazev = "Bot";
		}
	}
	else if(Admin[playerid] == 0 || AdminHide[playerid] == true)
	{
		if(Sex[playerid] == 2)
		{
			if(vip[playerid] == 0) Nazev = "Hracka";
			else if(vip[playerid] == 1) Nazev = "VIP Hracka";
		}
		else
		{
			if(vip[playerid] == 0) Nazev = "Hrac";
			else if(vip[playerid] == 1) Nazev = "VIP Hrac";
		}
	}
	return Nazev;
}
stock Players(playerid)
{
	new Nazev[1000];
	if(Admin[playerid] > 0 && AdminHide[playerid] == false)
	{
		if(Sex[playerid] == 2)
		{
			if(Admin[playerid] == 1) Nazev = "Eventerka";
			else if(Admin[playerid] == 2) Nazev = "Moderátorka";
			else if(Admin[playerid] == 3) Nazev = "Administrátorka";
			else if(Admin[playerid] == 4) Nazev = "Hl. Administrátorka";
			else if(Admin[playerid] == 5) Nazev = "SpoluMajitelka";
	  		else if(Admin[playerid] == 99) Nazev = "Bot";
		}
		else
	    {
			if(Admin[playerid] == 1) Nazev = "Eventer";
			else if(Admin[playerid] == 2) Nazev = "Moderátor";
			else if(Admin[playerid] == 3) Nazev = "Administrátor";
			else if(Admin[playerid] == 4) Nazev = "Hl. Administrátor";
			else if(Admin[playerid] == 5) Nazev = "SpoluMajitel";
	  		else if(Admin[playerid] == 6) Nazev = "Majitel";
	  		else if(Admin[playerid] == 99) Nazev = "Bot";
		}
	}
	else if(Admin[playerid] == 0 || AdminHide[playerid] == true)
	{
		if(Sex[playerid] == 2)
		{
			if(vip[playerid] == 0) Nazev = "Hráèka";
			else if(vip[playerid] == 1) Nazev = "VIP Hráèka";
		}
		else
		{
			if(vip[playerid] == 0) Nazev = "Hráè";
			else if(vip[playerid] == 1) Nazev = "VIP Hráè";
		}
	}
	return Nazev;
}

stock GiveMoney(playerid,money,reason[] = "")
{
	return CallRemoteFunction("GiveMoney","iis",playerid,money,reason);
}

function GetPlayerAutoBank(playerid)
{
	return AutoBank[playerid];
}

stock SetPlayerJob(playerid,jobid)
{
	return CallRemoteFunction("SetPlayerJob","ii",playerid,jobid);
}

stock Split(number,type = 0)
{
	new string[16],splitter[2];
	if(type == 0) splitter[0] = '.';
	else if(type == 1) splitter[0] = ' ';
	format(string,sizeof(string),"%d",number);
	if(number >= 1000) strins(string,splitter,strlen(string)-3,sizeof(string));
	if(number >= 1000000) strins(string,splitter,strlen(string)-7,sizeof(string));
	if(number >= 1000000000) strins(string,splitter,strlen(string)-11,sizeof(string));
	return string;
}

stock IsPlayerPropertyOwner(playerid,propid)
{
	if(strcmp(Property[propid][PropertyOwner],"0",false) == 0) return 0;
	else if(strcmp(Property[propid][PropertyOwner],"-1",false) == 0) return 0;
	else if(strcmp(Property[propid][PropertyOwner],Jmeno(playerid),false) == 0) return 1;
	return 0;
}

function GetPlayerPropertiesSlots(playerid)
{
	return PropSlots[playerid];
}

function CountPlayerProperties(playerid)
{
	new props;
	for(new i; i < MAX_PROPERTIES; i ++)
	{
		if(strcmp(Property[i][PropertyOwner],"0",false) != 0)
		{
		    if(strcmp(Property[i][PropertyOwner],"-1",false) != 0)
		    {
		        if(IsPlayerPropertyOwner(playerid,i))
		        {
		            props ++;
		        }
		    }
		}
	}
	return props;
}

stock CreateProperty(Float:X,Float:Y,Float:Z,level = 1,name[] = "Nemovitost na prodej")
{
    propertyid++;
	if(X != 0 && Y != 0 && Z != 0)
	{
	    format(dfile,sizeof(dfile),"UnNamed/Properties/Property%d.txt",propertyid);
		Property[propertyid][PropertyPickup] = CreateDynamicPickup(19523,23,X,Y,Z,0);
	    if(!fexist(dfile))
	    {
	        DOF2_CreateFile(dfile);
	        DOF2_SetFloat(dfile,"X",X);
	        DOF2_SetFloat(dfile,"Y",Y);
	        DOF2_SetFloat(dfile,"Z",Z);
			DOF2_SetString(dfile,"Name",name);
	        DOF2_SetInt(dfile,"Owner",-1);
			DOF2_SetInt(dfile,"Level",level);
			DOF2_SetInt(dfile,"CashLevel",1);
			DOF2_SetInt(dfile,"Earning",0);
			DOF2_SetInt(dfile,"Hours",0);
			DOF2_SetInt(dfile,"OnSale",0);
			DOF2_SetInt(dfile,"Mafia",0);
			DOF2_SaveFile();
	    }
		Property[propertyid][PropertyX] = X;
		Property[propertyid][PropertyY] = Y;
		Property[propertyid][PropertyZ] = Z;
		Property[propertyid][PropertyLevel] = DOF2_GetInt(dfile,"Level");
	  	Property[propertyid][PropertyCashLevel] = DOF2_GetInt(dfile,"CashLevel");
		Property[propertyid][PropertyEarning] = DOF2_GetInt(dfile,"Earning");
		Property[propertyid][PropertyTime] = DOF2_GetInt(dfile,"Hours");
		Property[propertyid][PropertyPrice] = Property[propertyid][PropertyLevel]*PROPERTY_DPRICE+Property[propertyid][PropertyCashLevel]*PROPERTY_DPRICE;
		Property[propertyid][PropertyOnSale] = DOF2_GetInt(dfile,"OnSale");
		Property[propertyid][PropertyMafia] = DOF2_GetInt(dfile,"Mafia");
		format(Property[propertyid][PropertyOwner],24+1,DOF2_GetString(dfile,"Owner"));
		format(Property[propertyid][PropertyName],50,DOF2_GetString(dfile,"Name"));
	    Property[propertyid][PropertyText] = CreateDynamic3DTextLabel("Loading",sblue,X,Y,Z,50,.worldid= 0,.testlos = 1);
		UpdatePropertyText(propertyid);
	}
	return 1;
}

stock UpdateProperty(propid)
{
	new Float:X = Property[propid][PropertyX],Float:Y = Property[propid][PropertyY],Float:Z = Property[propid][PropertyZ];
	DestroyDynamicPickup(Property[propid][PropertyPickup]);
	DestroyDynamic3DTextLabel(Property[propid][PropertyText]);
	Property[propid][PropertyPickup] = CreateDynamicPickup(19523,23,X,Y,Z,0);
    Property[propid][PropertyText] = CreateDynamic3DTextLabel("Loading",sblue,X,Y,Z,50,.worldid= 0,.testlos = 1);
	UpdatePropertyText(propid);
	return 1;
}

stock UpdatePropertyText(propid)
{
	if(strcmp(Property[propid][PropertyOwner],"-1",false) == 0)
	{
	    format(str,sizeof(str),"%s\n"w"IÈO: "g"%d\n"w"Majitel: "g"Nikdo\n"w"Cena: "g"%s$\n"w"Výdìlek: "g"%s$\n"w"Level: "g"P: %d, K: %d",Property[propid][PropertyName],propid,Split(Property[propid][PropertyPrice]),Split(Property[propid][PropertyLevel]*EARNING_PER_LEVEL),Property[propid][PropertyLevel],Property[propid][PropertyCashLevel]);
	    UpdateDynamic3DTextLabelText(Property[propid][PropertyText],sblue,str);
	}
	else
	{
	    if(Property[propid][PropertyOnSale] == 0)
	    {
    		format(str,sizeof(str),"%s\n"w"IÈO: "g"%d\n"w"Majitel: "g"%s\n"w"Výdìlek: "g"%s$\n"w"Vyprí za: "g"%d hodin\n"w"Level: "g"P: %d, K: %d",Property[propid][PropertyName],propid,Property[propid][PropertyOwner],Split(Property[propid][PropertyLevel]*EARNING_PER_LEVEL),Property[propid][PropertyTime],Property[propid][PropertyLevel],Property[propid][PropertyCashLevel]);
		}
		else
		{
			new string[256];
			format(str,sizeof(str),"");
    		format(string,sizeof(string),"%s\n"r"Nemovitost na prodej\n"w"IÈO: "g"%d\n"w"Cena: "g"%s$\n",Property[propid][PropertyName],propid,Split(Property[propid][PropertyOnSale]));
    		strcat(str,string);
			format(string,sizeof(string),""w"Majitel: "g"%s\n"w"Výdìlek: "g"%s$\n"w"Vyprí za: "g"%d hodin\n"w"Level: "g"P: %d, K: %d",Property[propid][PropertyOwner],Split(Property[propid][PropertyLevel]*EARNING_PER_LEVEL),Property[propid][PropertyTime],Property[propid][PropertyLevel],Property[propid][PropertyCashLevel]);
			strcat(str,string);
		}
	    UpdateDynamic3DTextLabelText(Property[propid][PropertyText],sblue,str);
	}
	return 1;
}

stock DayWord(hours)
{
	new nazev[4];
	if(hours <= 47) nazev = "den";
	else if(hours > 48 && hours < 120) nazev = "dny";
	else nazev = "dní";
	return nazev;
}

stock SetMissionTimer(playerid,sekundy)
{
	PlayerTextDrawShow(playerid,Textdraw26[playerid]);
	MissionToEndTime[playerid] = sekundy;
	MissionToEndTimer[playerid] = SetTimerEx("MissionTimeEnd",1000,false,"i",playerid);
	new minutes,seconds;
	minutes = MissionToEndTime[playerid]/60;
	seconds = MissionToEndTime[playerid]%60;
	format(str,sizeof(str),"%02d:%02d",minutes,seconds);
	PlayerTextDrawSetString(playerid,Textdraw26[playerid],str);
	return 1;
}
stock EndMissionTimer(playerid)
{
 	KillTimer(MissionToEndTimer[playerid]);
	MissionToEndTimer[playerid] = 0;
	MissionToEndTime[playerid] = 0;
	PlayerTextDrawHide(playerid,Textdraw26[playerid]);
	PlayerTextDrawHide(playerid,Textdraw25[playerid]);
	DestroyVehicle(MissionCar[playerid]);
	MissionCar[playerid] = 0;
	RemovePlayerMapIcon(playerid,50);
	return 1;
}

stock Hash(password[])
{
	new promena0 = strlen(password); //z
	new promena1 = 1; //x
	new promena2 = 0; //q
	new promena3 = 0; //r
	for(promena3 = 0; promena3 < promena0; promena3++)
	{
		promena1 = (promena1 + password[promena3]) % 65521;
		promena2 = (promena2 + promena1) % 65521;
	}
	return promena1 + (promena2 << 16);
}

stock CancelEvent(playerid,reason[] = "")
{
	if(OnEvent[playerid] == true)
	{
		if(RunEvent == 9)
		{
		    new text[50];
		    PlayerTeams[PlayerTeam[playerid]]--;
			for(new i; i < sizeof(PlayerTeams); i ++)
			{
			    format(str,sizeof(str),"%s%s: ~w~%d~n~",(i == 0) ? ("~r~") : ("~b~"),TeamNames[i],PlayerTeams[i]);
				strcat(text,str);
			}
			format(str,sizeof(str),"TDM Status: {%06x}%s: "w"%d ivých | {%06x}%s: "w"%d ivých",TeamColors[0] >>> 8,TeamNames[0],PlayerTeams[0],TeamColors[1] >>> 8,TeamNames[1],PlayerTeams[1]);
			SendAdminMessage(str);
		    TextDrawSetString(Textdraw44,text);
		}
	    Player[playerid][pEventKills] = 0;
	    Player[playerid][pGunGameState] = 0;
	    PlayerTeam[playerid] = -1;
	    if(PlayerWeather[playerid] != -1)
		    SetPlayerWeather(playerid,PlayerWeather[playerid]);
		if(EventRadius > 0)
		{
			GangZoneHideForPlayer(playerid,EventZone[0]);
			GangZoneHideForPlayer(playerid,EventZone[1]);
		}
		if(PlayerWeather[playerid] != -1)
		    SetPlayerWeather(playerid,PlayerWeather[playerid]);
		else
		    SetPlayerWeather(playerid,serverweather);
		TextDrawHideForPlayer(playerid,Textdraw44);
	    SetPlayerTeam(playerid,255);
		if(EventDL[playerid] == true)
		{
		    SetPlayerDrunkLevel(playerid,0);
		}
		EventDL[playerid] = false;
 		if(AR[playerid] == true)
		{
			if(IsPlayerInAnyVehicle(playerid))
			{
				RepairVehicle(GetPlayerVehicleID(playerid));
			}
		}
		if(RunEvent == 6)
		{
			DerbyPos[EventPlayer[playerid]][4] = 0;
		}
		EventColor[playerid] = 0;
		AR[playerid] = false;
	    TogglePlayerControllable(playerid,true);
        SetPlayerColor(playerid,GetPVarInt(playerid,"EventColor"));
	    DestroyVehicle(Ecar[playerid]);
		Ecar[playerid] = 0;
		OnEvent[playerid] = false;
		CBLOCK[playerid] = false;
		DestroyObject(Eobj[playerid]);
		Eobj[playerid] = 0;
		for(new i; i < sizeof(PlayerEventObject); i ++)
		{
		    DestroyDynamicObject(PlayerEventObject[i][playerid]);
		    PlayerEventObject[i][playerid] = 0;
		}
        if(!IsPlayerInAnyVehicle(playerid))
        {
        	SetPlayerVirtualWorld(playerid,0);
		}
		else
		{
			SetPlayerVirtualWorld(playerid,0);
			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),0);
		}
		if(RacePlayer[playerid] > -1)
		{
			RacePlayer[playerid] = -1;
			DisablePlayerRaceCheckpoint(playerid);
			PlayerCP[playerid] = 0;
			RaceSeconds[playerid] = 0;
			RaceMinutes[playerid] = 0;
			TextDrawHideForPlayer(playerid,Textdraw20);
			PlayerTextDrawHide(playerid,Textdraw22[playerid]);
			PlayerTextDrawHide(playerid,Textdraw23[playerid]);
			TextDrawHideForPlayer(playerid,Textdraw21);
			PlayerTextDrawHide(playerid,Textdraw24[playerid]);
		}
		DisableRemoteVehicleCollisions(playerid,0);
		if(GetGang(playerid) > 0)
		{
		    SetGang(playerid,GetGang(playerid));
		}
		if(strlen(reason) > 0)
		{
			format(str,sizeof(str),"%s "w"%s "r"%s event [ %s ].",Players(playerid),Jmeno(playerid),SexWord(playerid,"opustil","opustila"),reason);
			SCMTA(red,str);
		}
		EventPlayers --;
		format(str,sizeof(str),"~y~%d %s ~w~probiha event ~g~%s ~w~na eventu je: ~r~%d %s",EventTime[0]/60,PluralWord(EventTime[0]/60,"minutu","minuty","minut"),EventName,EventPlayers,PluralWord(EventPlayers,"hrac","hraci","hracu"));
        TextDrawDiakritika(str);
		TextDrawSetString(Textdraw3,str);
		SetPlayerWantedLevel(playerid,GetPVarInt(playerid,"EventWL"));
		if(BotEvent == true && IsBotConnected() && EventTime[0] > 30)
		{
		    if(RunEvent != 5)
		    {
				new endplayers = 0;
				if(RunEvent == 9)
				    endplayers = 1;
				if(EventPlayers == endplayers)
				{
			        CallLocalFunction("cmd_eventend","is",botid," ");
			        CallLocalFunction("cmd_dann","is",botid," ");
			        CallLocalFunction("cmd_say","is",botid,"Event zruen (nedostatek hráèù k dohrání eventu).");
				}
			}
		}
	}
	return 1;
}

stock SetWanted(playerid,wl)
{
	WantedLevel[playerid] = wl;
	format(str,wl+1,"]]]]]]");
	PlayerTextDrawSetString(playerid,Textdraw31[playerid],str);
	if(wl > 0)
	{
	    PlayerTextDrawShow(playerid,Textdraw31[playerid]);
		TextDrawShowForPlayer(playerid,Textdraw32);
	}
	else
	{
	    PlayerTextDrawHide(playerid,Textdraw31[playerid]);
		TextDrawHideForPlayer(playerid,Textdraw32);
	}
	return 1;
}

stock GetWanted(playerid)
{
	return WantedLevel[playerid];
}


stock GetVehicleIDFromName(name[])
{
	for(new i; i < sizeof(VehicleNames); i ++)
	{
	    if(strfind(VehicleNames[i],name,true) != -1)
	    {
	    	return i + 400;
		}
	}
	return -1;
}


stock MissionAchievement(playerid)
{
	if(Achiv[playerid][MISE_1] == 0)
	{
		if(MiseCompleted[playerid] >= 1)
		{
			SetPlayerAchievement(playerid,MISE_1);
		}
	}
	if(Achiv[playerid][MISE_100] == 0)
	{
		if(MiseCompleted[playerid] >= 100)
		{
			SetPlayerAchievement(playerid,MISE_100);
		}
	}
	if(Achiv[playerid][MISE_200] == 0)
	{
		if(MiseCompleted[playerid] >= 200)
		{
			SetPlayerAchievement(playerid,MISE_200);
		}
	}
	return 1;
}

stock WriteTextInToFile(tofile[],text[])
{
	new File:Soubor = fopen(tofile,io_append),string[255],day,month,year,hour,minute,second;
	if(!fexist(tofile))
	{
	    DOF2_CreateFile(tofile);
	}
	getdate(year,month,day);
	gettime(hour,minute,second);
	format(string,sizeof(str),"[ %02d.%02d.%d %02d:%02d:%02d ] %s\n",day,month,year,hour,minute,second,text);
	if(Soubor)
	{
		fwrite(Soubor,string);
		fclose(Soubor);
	}
	else
	{
	    printf("[%s] fwrite error: [ %s | %s ]",DATE(gettime()),dfile,str);
	}
	return 1;
}

stock PositiveNumber(numb)
{
	new Nazev[10];
	if(numb < 0) Nazev = "Neznámo";
	if(numb > 0) format(Nazev,sizeof(Nazev),"%d",numb);
	return Nazev;
}

stock ReNameFile(olfile[],newfile[])
{
	new Content[5000];
	dini_Create(newfile);
	new File:soubor = fopen(olfile,io_read);
	new File:soubor2 = fopen(newfile,io_write);
	if(soubor && soubor2)
	{
		while(fread(soubor,Content,sizeof(Content))) fwrite(soubor2,Content);
		fclose(soubor2);
		fclose(soubor);
		dini_Remove(olfile);
	}
	else
	{
	    printf("[%s] fwrite error: [ %s | %s ]",DATE(gettime()),dfile,"Zmìna nicku");
	}
	return 1;
}


stock GetGang(playerid)
{
	return CallRemoteFunction("GetPlayerGang","i",playerid);
}

stock SetGang(playerid,gang = 255)
{
	return CallRemoteFunction("SetGangTeam","ii",playerid,gang);
}


stock GetClickText(text[],what[])
{
	if(strfind(text,what,true) != -1) return 1;
	return 0;
}

stock ChangeNickName(playerid,name[MAX_PLAYER_NAME])
{
	for(new i; i < MAX_PLAYER_NAME; i ++)
	{
	    if(name[i] < 48 || name[i] > 57 && name[i] < 65 || name[i] > 90 && name[i] < 61 || name[i] > 122) return SM(playerid,"NO");
	    SM(playerid,"OK");
	}
	return 1;
}

stock GetOnlinePlayers()
{
	hraci = 0;
	phraci = 0;
	ahraci = 0;
	for(new i; i <= GetPlayerPoolSize(); i ++)
	{
	    if(IPC(i) && !IsPlayerNPC(i))
	    {
	        hraci++;
			if(vip[i] == 1)
			{
			    phraci ++;
			}
			if(AdminHide[i] == false)
			{
				if(Admin[i] > 0)
				{
				    ahraci ++;
				}
			}
		}
	}
	format(str,sizeof(str),"On-Line ~w~Hraci: ~w~%d",hraci);
	TextDrawSetString(Textdraw8,str);
	format(str,sizeof(str),"On-Line ~y~Premium Hraci: ~w~%d",phraci);
	TextDrawSetString(Textdraw9,str);
	format(str,sizeof(str),"On-Line ~r~Administratori: ~w~%d",ahraci);
	TextDrawSetString(Textdraw7,str);
	return 1;
}

stock EndMission(playerid,reason[255])
{
	if(WorkMission[playerid] > 0)
	{
	    WorkMission[playerid] = 0;
	    WorkStatus[playerid] = 0;
		CreateInfoBox(playerid,"Mise ~r~zruseny",5);
		DisablePlayerCheckpoint(playerid);
		KillTimer(MissionTimer[playerid]);
		KillTimer(MissionToEndTimer[playerid]);
		MissionToEndTimer[playerid] = 0;
		MissionToEndTime[playerid] = 0;
		MissionTimer[playerid] = 0;
		MissionTimeSeconds[playerid] = 0;
		PlayerTextDrawHide(playerid,Textdraw25[playerid]);
		PlayerTextDrawHide(playerid,Textdraw26[playerid]);
		MissionPay[playerid] = 0;
		DestroyPlayerObject(playerid,MissionObject[playerid]);
		MissionObject[playerid] = 0;
		CreateCompleteMessage(playerid,"~r~Mise Selhala",reason,7);
		SetPlayerVirtualWorld(playerid,0);
		SetVehicleVirtualWorld(GetPlayerVehicleID(playerid),0);
		DestroyVehicle(MissionCar[playerid]);
		MissionCar[playerid] = 0;
		MissionLine[playerid] = 0;
		if(MissionTrailer[playerid] > 0)
		{
			SetVehicleVirtualWorld(MissionTrailer[playerid],0);
		}
		MissionVehicle[playerid] = 0;
		MissionTrailer[playerid] = 0;
		RemovePlayerMapIcon(playerid,50);
	}
	return 1;
}

AntiDeAMX()
{
	new a[][] =
	{
		"Unarmed (Fist)",
		"Brass K"
	};
	#pragma unused a
}

forward LoadTitul(playerid);
public LoadTitul(playerid)
{
	new soubor[50];
	format(soubor,sizeof(soubor),USER_FILES,Jmeno(playerid));
	if(fexist(soubor))
	{
	    new color[7],color2[7],prefix[25];
	    format(prefix,sizeof(prefix),DOF2_GetString(soubor,"Prefix"));
	    format(color,sizeof(color),DOF2_GetString(soubor,"PrefixColor"));
	    format(color2,sizeof(color2),DOF2_GetString(soubor,"TextColor"));
		new day,month,year;
		getdate(year,month,day);
		if(month != 11 && strcmp(prefix,"Pumpkin",false) == 0)
		    format(color,sizeof(color),"FFFFFF");
	    if(!strlen(prefix) || !strlen(color) || !strlen(color2))
			SetDefaultTitul(playerid);
		else
		{
			SetPVarString(playerid,"Titul",prefix);
			SetPVarString(playerid,"TitulColor",color);
			SetPVarString(playerid,"TextColor",color2);
		}
	}
	return 1;
}

function SetPlayerTitul(playerid,titul[],color[],textcolor[])
{
	SetPVarString(playerid,"Titul",titul);
	SetPVarString(playerid,"TitulColor",color);
	if(strlen(textcolor))
		SetPVarString(playerid,"TextColor",textcolor);
	return 1;
}

stock SendPrivateMessage(playerid,id,text[])
{
	format(str,sizeof(str),"Jste umlèený, nemùete psát soukromé zprávy [ "g"%s "w"]",SecondsToMinutes(Mute[playerid]));
	if(Mute[playerid] > 0) return SM(playerid,str);
	if(!IPC(id) || IsPlayerNPC(id)) return SM(playerid,"Hráè s tímto ID není pøipojen");
	if(BlockedPMsAll[id] == true) return SM(playerid,"Hráè má bloknuté PM Zprávy");
	for(new i; i < MAX_BLOCKED; i ++)
	{
	    if(BlockedPMs[id][i] == playerid) return SM(playerid,"Tento hráè si bloknul vae PM zprávy");
	}
	if(strlen(text) == 0) return SM(playerid,"Nezadal si ádný text");
	ChangeSwear(text);
	format(str,sizeof(str),"[ "w"PM "y"] Pro "w"%s "y"(%d): %s",Jmeno(id),id,text);
	SendTwoLinesMessage(playerid,yellow,str);
	format(str,sizeof(str),"[ "w"PM "y"] Od "w"%s "y"(%d): %s",Jmeno(playerid),playerid,text);
	SendTwoLinesMessage(id,yellow,str);
	if(GetPVarInt(id,"PMID") != playerid)
		SM(id,"Na tuto PM rychle odpovíte pøíkazem "g"/re [ Text ]");
	SetPVarInt(playerid,"PMID",id);
	SetPVarInt(id,"PMID",playerid);
	new query[500];
	mysql_format(mysql,query,sizeof(query),"INSERT INTO `PMLog` (`PM_TIME`,`PM_SENDER`,`PM_RECEIVER`,`PM_TEXT`) VALUES (%d,'%e','%e','%e')",gettime(),Jmeno(playerid),Jmeno(id),text);
	mysql_tquery(mysql,query,"","");
	if(AFK[id] == true)
		SM(playerid,"Hráè je AFK, je moné e vám neodepíe");
	if(OnEvent[id] == true)
	    SM(playerid,"Hráè je na Eventu, je moné e vám neodepíe");
	if(RacePlayer[id] > -1 && OnEvent[id] == false)
	    SM(playerid,"Hráè je v závodì, je moné e vám neodepíe");
	if(PMSounds[id] == false)
		PlayerPlaySound(id,5201,0,0,0);
	format(str,sizeof(str),"[ PM ] %s -> %s: %s",Jmeno(playerid),Jmeno(id),HighlightText(text,"{7171FF}"));
	if(Admin[playerid] == 0)
	{
		for(new i; i <= GetPlayerPoolSize(); i ++)
		{
		    if(IPC(i) && !IsPlayerNPC(i))
		    {
				if(Admin[i] > 0)
				{
            		if(id != i)
					{
					    if(Player[i][pPMHightLight] == playerid || Player[i][pPMHightLight] == id){
		            		SCM(i,red,str);
	            		    PlayerPlaySound(i,1085,0.0,0.0,0.0);
						}
						else
		            		SCM(i,0x7171FF00,str);
					}
				}
			}
		}
	}
	printEx(str);
	return 1;
}

stock SendTwoLinesMessage(playerid,color,input[],color2 = -1)
{
	if(strlen(input) < 144*2)
	{
	    if(color2 == -1)
	        color2 = color;
		new Text[2][145];
		strmid(Text[0],input,0,144);
		strmid(Text[1],input,144,144*2);
		SCM(playerid,color,Text[0]);
		if(strlen(Text[1])) SCM(playerid,color2,Text[1]);
	}
	else printf("[ UNNAMED ]: MSG: %s not sended",input);
	return 1;
}

stock SendTwoLinesMessageToAll(color,input[],color2 = -1)
{
	if(strlen(input) < 145*2)
	{
	    if(color2 == -1)
	        color2 = color;
		new Text[2][145];
		strmid(Text[0],input,0,144);
		strmid(Text[1],input,144,144*2);
		SCMTA(color,Text[0]);
		if(strlen(Text[1])) SCMTA(color2,Text[1]);
	}
	else printf("[ UNNAMED ]: MSG: %s not sended",input);
	return 1;
}

stock LoadData(playerid)
{
	for(new i; i < MAX_SLOTS; i ++)
	{
		format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(playerid),i);
		if(fexist(dfile))
		{
		    ParkInfo[playerid][i][pX] = DOF2_GetFloat(dfile,"X");
		    ParkInfo[playerid][i][pY] = DOF2_GetFloat(dfile,"Y");
		    ParkInfo[playerid][i][pZ] = DOF2_GetFloat(dfile,"Z");
		    ParkInfo[playerid][i][pA] = DOF2_GetFloat(dfile,"A");
		    ParkInfo[playerid][i][Model] = DOF2_GetInt(dfile,"Model");
		    ParkInfo[playerid][i][Color1] = DOF2_GetInt(dfile,"Color1");
		    ParkInfo[playerid][i][Color2] = DOF2_GetInt(dfile,"Color2");
		    ParkInfo[playerid][i][PaintJob] = DOF2_GetInt(dfile,"PaintJob");
		    ParkInfo[playerid][i][TuneSlot0] = DOF2_GetInt(dfile,"TuneSlot0");
		    ParkInfo[playerid][i][TuneSlot1] = DOF2_GetInt(dfile,"TuneSlot1");
		    ParkInfo[playerid][i][TuneSlot2] = DOF2_GetInt(dfile,"TuneSlot2");
		    ParkInfo[playerid][i][TuneSlot3] = DOF2_GetInt(dfile,"TuneSlot3");
		    ParkInfo[playerid][i][TuneSlot4] = DOF2_GetInt(dfile,"TuneSlot4");
		    ParkInfo[playerid][i][TuneSlot5] = DOF2_GetInt(dfile,"TuneSlot5");
		    ParkInfo[playerid][i][TuneSlot6] = DOF2_GetInt(dfile,"TuneSlot6");
		    ParkInfo[playerid][i][TuneSlot7] = DOF2_GetInt(dfile,"TuneSlot7");
		    ParkInfo[playerid][i][TuneSlot8] = DOF2_GetInt(dfile,"TuneSlot8");
		    ParkInfo[playerid][i][TuneSlot9] = DOF2_GetInt(dfile,"TuneSlot9");
		    ParkInfo[playerid][i][TuneSlot10] = DOF2_GetInt(dfile,"TuneSlot10");
		    ParkInfo[playerid][i][TuneSlot11] = DOF2_GetInt(dfile,"TuneSlot11");
		    ParkInfo[playerid][i][TuneSlot12] = DOF2_GetInt(dfile,"TuneSlot12");
		    ParkInfo[playerid][i][TuneSlot13] = DOF2_GetInt(dfile,"TuneSlot13");
		    ParkInfo[playerid][i][pPancir] = DOF2_GetFloat(dfile,"Pancir");
		    ParkInfo[playerid][i][pOdstaveno] = DOF2_GetBool(dfile,"Odstaveno");
		    if(ParkInfo[playerid][i][pPancir] > 1000)
		    {
		        RepairVehicle(SavedCar[playerid][i]);
				SetVehicleHealth(SavedCar[playerid][i],ParkInfo[playerid][i][pPancir]);
		    }
		    format(ParkInfo[playerid][i][SPZ],30,DOF2_GetString(dfile,"SPZ"));
		    format(ParkInfo[playerid][i][Password],30,DOF2_GetString(dfile,"Password"));
		    if(!strlen(ParkInfo[playerid][i][Password]))
		    {
		        format(ParkInfo[playerid][i][Password],30,"Locked");
		    }
		}
	}
	return 1;
}

stock SpawnCar(playerid,slot)
{
 	format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(playerid),slot);
	if(fexist(dfile))
	{
		DestroyVehicle(SavedCar[playerid][slot]);
	    SavedCar[playerid][slot] = 0;
	    for(new i; i < MAX_S_OBJECTS; i ++)
	    {
	        DestroyDynamicObject(ParkInfo[playerid][slot][SpecialObjects][i]);
	        ParkInfo[playerid][slot][SpecialObjects][i] = 0;
	    }
		if(ParkInfo[playerid][slot][Model] < 612)
		{
			SavedCar[playerid][slot] = CreateVehicle(ParkInfo[playerid][slot][Model],ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);
			if(strlen(ParkInfo[playerid][slot][SPZ]) != 0)
			{
				SetVehicleNumberPlate(SavedCar[playerid][slot],ParkInfo[playerid][slot][SPZ]);
				SetVehicleToRespawn(SavedCar[playerid][slot]);
			}
			else
			{
				SetVehicleDefaultSPZ(SavedCar[playerid][slot]);
			}
		}
		else if(ParkInfo[playerid][slot][Model] == 612)
		{
			SavedCar[playerid][slot] = CreateVehicle(571,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);
			LinkVehicleToInterior(SavedCar[playerid][slot],30);
			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(19315,0,0,0,0,0,0,0);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot],0,0,0.25,0,0,90);
		}
		else if(ParkInfo[playerid][slot][Model] == 613)
		{
			SavedCar[playerid][slot] = CreateVehicle(539,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);
			LinkVehicleToInterior(SavedCar[playerid][slot],30);
			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(1609,0,0,0,0,0,0,0);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot],0,0,0,0,0,0);
		}
		else if(ParkInfo[playerid][slot][Model] == 614)
		{
			SavedCar[playerid][slot] = CreateVehicle(573,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);
			LinkVehicleToInterior(SavedCar[playerid][slot],30);
			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(16442,0,0,0,0,0,0,0);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot],0,0,0.285,0,0,90);
		}
		else if(ParkInfo[playerid][slot][Model] == 615)
		{
			SavedCar[playerid][slot] = CreateVehicle(572,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);
			LinkVehicleToInterior(SavedCar[playerid][slot],30);
			new gifts[] ={19055,19054,19056,19057,19058};
			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(gifts[random(sizeof(gifts))],0,0,0,0,0,0,0);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot],0,0,0.05,0,0,90);
		}
		else if(ParkInfo[playerid][slot][Model] == 616)
		{
			SavedCar[playerid][slot] = CreateVehicle(411,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);
			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(2985,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][1] = CreateDynamicObject(2985,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][2] = CreateDynamicObject(18963,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][3] = CreateDynamicObject(18963,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][4] = CreateDynamicObject(1014,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][5] = CreateDynamicObject(18646,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][6] = CreateDynamicObject(1640,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][7] = CreateDynamicObject(1640,0,0,0,0,0,0);

			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][6], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][7], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][6],SavedCar[playerid][slot], -1.100000, -1.199999, 0.099999, 90.000000, 0.000000, 270.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][7],SavedCar[playerid][slot], 1.100000, -1.199999, 0.099999, 90.000000, 0.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot], -0.799999, 1.300000, -0.499999, 4.000000, 0.000000, 91.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][1],SavedCar[playerid][slot], 0.800000, 1.400000, -0.499999, 0.000000, 0.000000, 92.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][2],SavedCar[playerid][slot], 1.100000, -2.100000, 0.100000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][3],SavedCar[playerid][slot], -1.100000, -2.100000, 0.100000, 0.000000, 0.000000, 183.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][4],SavedCar[playerid][slot], 0.000000, -2.299999, 0.299999, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][5],SavedCar[playerid][slot], 0.500000, 0.200000, 0.700000, 0.000000, 0.000000, 0.000000);
		}
		else if(ParkInfo[playerid][slot][Model] == 617)
		{
			SavedCar[playerid][slot] = CreateVehicle(411,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);
			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(1023,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][1] = CreateDynamicObject(359,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][2] = CreateDynamicObject(359,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][3] = CreateDynamicObject(18646,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][4] = CreateDynamicObject(2678,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][5] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][6] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][7] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][8] = CreateDynamicObject(1640,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][9] = CreateDynamicObject(1640,0,0,0,0,0,0);

			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][8], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][9], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][8],SavedCar[playerid][slot], -1.100000, -1.199999, 0.099999, 90.000000, 0.000000, 270.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][9],SavedCar[playerid][slot], 1.100000, -1.199999, 0.099999, 90.000000, 0.000000, 90.000000);

			for(new i; i < 16; i++)
				SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][4], i, 8675, "wddngchpl02", "shingles6", 0xFFFFFFFF);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot], 0.000000, -2.499999, 0.300000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][1],SavedCar[playerid][slot], 1.154444, -1.45000, 0.000000, 0.000000, 0.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][2],SavedCar[playerid][slot], -1.054444, -1.450000, 0.000000, 0.000000, 0.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][3],SavedCar[playerid][slot], 0.000000, 0.200000, 0.700000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][4],SavedCar[playerid][slot], -0.139999, 2.799999, 0.000000, 8.000000, 90.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][5],SavedCar[playerid][slot], 0.000000, 2.899999, -0.200000, 0.000000, 78.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][6],SavedCar[playerid][slot], 0.000000, 2.899999, -0.400000, 0.000000, 78.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][7],SavedCar[playerid][slot], 0.000000, 2.899999, -0.600000, 0.000000, 78.000000, 90.000000);
		}
		else if(ParkInfo[playerid][slot][Model] == 618)
		{
			SavedCar[playerid][slot] = CreateVehicle(541,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);

			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(3280,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][1] = CreateDynamicObject(362,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][2] = CreateDynamicObject(362,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][3] = CreateDynamicObject(18646,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][4] = CreateDynamicObject(2678,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][5] = CreateDynamicObject(1640,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][6] = CreateDynamicObject(1640,0,0,0,0,0,0);

			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][5], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][6], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][5],SavedCar[playerid][slot], -1.0750000, -0.899999, -0.100000, 90.000000, 0.000000, 270.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][6],SavedCar[playerid][slot], 1.0750000, -0.899999, -0.100000, 90.000000, 0.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot], 0.000000, 1.200000, 0.200000, 149.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][1],SavedCar[playerid][slot], 1.100000, -0.299999-1, 0.200000, 0.000000, 30.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][2],SavedCar[playerid][slot], -1.000000, -0.299999-1, 0.199999, 0.000000, 29.000000, 96.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][3],SavedCar[playerid][slot], -0.000000, 0.000000, 0.700000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][4],SavedCar[playerid][slot], -0.099999, 2.399999, 0.200000, 5.000000, 90.000000, 0.000000);
		}
		else if(ParkInfo[playerid][slot][Model] == 619)
		{
			SavedCar[playerid][slot] = CreateVehicle(541,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);
			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(3280,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][1] = CreateDynamicObject(362,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][2] = CreateDynamicObject(362,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][3] = CreateDynamicObject(18646,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][5] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][6] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][7] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][8] = CreateDynamicObject(1593,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][9] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][10] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][11] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][12] = CreateDynamicObject(1593,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][13] = CreateDynamicObject(19845,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][14] = CreateDynamicObject(19845,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][4] = CreateDynamicObject(1254,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][15] = CreateDynamicObject(2061,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][16] = CreateDynamicObject(1014,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][17] = CreateDynamicObject(1640,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][18] = CreateDynamicObject(1640,0,0,0,0,0,0);

			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][17], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][18], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][17],SavedCar[playerid][slot], -1.0750000, -0.899999, -0.100000, 90.000000, 0.000000, 270.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][18],SavedCar[playerid][slot], 1.0750000, -0.899999, -0.100000, 90.000000, 0.000000, 90.000000);

			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][13], 0, 1652, "fencehaiti", "awirex2", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][14], 0, 1652, "fencehaiti", "awirex2", 0xFFFFFFFF);

			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][5], 0, 18200, "w_town2cs_t", "newall3_16c128", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][6], 0, 18200, "w_town2cs_t", "newall3_16c128", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][7], 0, 18200, "w_town2cs_t", "newall3_16c128", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][8], 0, 18200, "w_town2cs_t", "newall3_16c128", 0xFFFFFFFF);

			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][9], 0, 18200, "w_town2cs_t", "newall3_16c128", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][10], 0, 18200, "w_town2cs_t", "newall3_16c128", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][11], 0, 18200, "w_town2cs_t", "newall3_16c128", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][12], 0, 18200, "w_town2cs_t", "newall3_16c128", 0xFFFFFFFF);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot], 0.000000, 1.200000, 0.200000, 149.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][1],SavedCar[playerid][slot], 1.100000, -0.299999-1, 0.200000, 0.000000, 30.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][2],SavedCar[playerid][slot], -1.000000, -0.299999-1, 0.199999, 0.000000, 29.000000, 96.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][3],SavedCar[playerid][slot], -0.000000, 0.000000, 0.700000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][5], SavedCar[playerid][slot], -0.799999-0.00+0.1, 2.299999+0.00, 0.000000-0.0, 0.000000, 258.000000, 121.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][6], SavedCar[playerid][slot], -0.799999-0.03+0.1, 2.299999+0.05, 0.000000-0.2, 0.000000, 258.000000, 121.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][7], SavedCar[playerid][slot], -0.799999-0.06+0.1, 2.299999+0.10, 0.000000-0.4, 0.000000, 258.000000, 121.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][8], SavedCar[playerid][slot], -0.799999-0.09+0.1, 2.299999+0.15, 0.000000-0.6, 0.000000, 258.000000, 121.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][9], SavedCar[playerid][slot], 0.799999+0.00-0.1, 2.299999+0.00, 0.000000-0.0, 0.000000, 258.000000, 121.000000 / 2);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][10], SavedCar[playerid][slot], 0.799999+0.03-0.1, 2.299999+0.05, 0.000000-0.2, 0.000000, 258.000000, 121.000000 / 2);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][11], SavedCar[playerid][slot], 0.799999+0.06-0.1, 2.299999+0.10, 0.000000-0.4, 0.000000, 258.000000, 121.000000 / 2);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][12], SavedCar[playerid][slot], 0.799999+0.09-0.1, 2.299999+0.15, 0.000000-0.6, 0.000000, 258.000000, 121.000000 / 2);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][13], SavedCar[playerid][slot], 0.300000, 2.400000-0.04, -0.000000-0.01, 0.000000, 0.000000, 34.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][14], SavedCar[playerid][slot], -0.399999, 2.299999, 0.000000-0.01, 0.000000, 0.000000, 92.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][4], SavedCar[playerid][slot], 0.000000, 2.799999-0.005, 0.000000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][15], SavedCar[playerid][slot], 0.000000, 2.000000, 0.000000, 107.000000, 0.000000, 180.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][16], SavedCar[playerid][slot], 0.000000, -2.200000, 0.300000, 0.000000, 0.000000, 0.000000);
		}
		else if(ParkInfo[playerid][slot][Model] == 620)
		{
			SavedCar[playerid][slot] = CreateVehicle(480,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);
			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(1023,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][1] = CreateDynamicObject(362,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][2] = CreateDynamicObject(362,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][4] = CreateDynamicObject(2678,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][5] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][6] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][7] = CreateDynamicObject(1593,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][8] = CreateDynamicObject(1640,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][9] = CreateDynamicObject(1640,0,0,0,0,0,0);

			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][8], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][9], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][8],SavedCar[playerid][slot], -1.000000, -2.099999, -0.100000, 90.000000, 0.000000, 270.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][9],SavedCar[playerid][slot], 1.000000, -2.099999, -0.100000, 90.000000, 0.000000, 90.000000);

			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][5], 0, 8538, "vgsrailroad", "concreteyellow256 copy", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][6], 0, 8538, "vgsrailroad", "concreteyellow256 copy", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][7], 0, 8538, "vgsrailroad", "concreteyellow256 copy", 0xFFFFFFFF);
			for(new i; i < 16; i++)
				SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][4], i, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot], 0.000000, -2.499999+0.1, 0.300000-0.3, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][1],SavedCar[playerid][slot], 1.100000, -0.299999-1, 0.200000, 0.000000, 30.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][2],SavedCar[playerid][slot], -1.000000, -0.299999-1, 0.199999, 0.000000, 29.000000, 96.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][4],SavedCar[playerid][slot], -0.139999, 2.799999-0.33, 0.000000, 8.000000, 90.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][5],SavedCar[playerid][slot], 0.000000, 2.899999-0.33, -0.200000, 0.000000, 78.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][6],SavedCar[playerid][slot], 0.000000, 2.899999-0.33, -0.400000, 0.000000, 78.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][7],SavedCar[playerid][slot], 0.000000, 2.899999-0.33, -0.600000, 0.000000, 78.000000, 90.000000);
		}
		else if(ParkInfo[playerid][slot][Model] == 621)
		{
			SavedCar[playerid][slot] = CreateVehicle(474,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);
			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(3280,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][1] = CreateDynamicObject(2678,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][2] = CreateDynamicObject(1023,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][4] = CreateDynamicObject(19314,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][5] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][6] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][7] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][8] = CreateDynamicObject(1012,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][9] = CreateDynamicObject(1640,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][10] = CreateDynamicObject(1640,0,0,0,0,0,0);

			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][5], 0, 10357, "tvtower_sfs", "ws_transmit_red", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][6], 0, 10357, "tvtower_sfs", "ws_transmit_red", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][7], 0, 10357, "tvtower_sfs", "ws_transmit_red", 0xFFFFFFFF);
			for(new i; i < 16; i ++)
				SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][1], i, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);

			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][9], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][10], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot], -0.000000, 0.800000, 0.300000, 140.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][1],SavedCar[playerid][slot], -0.199999, 2.699999, 0.200000, 13.000000, 90.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][2],SavedCar[playerid][slot], -0.000000, -2.599999, 0.200000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][4],SavedCar[playerid][slot], 0.000000, 2.699999, 0.200000, 87.000000, 90.000000, 0.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][5],SavedCar[playerid][slot], 0.000000, 2.799999, -0.000000, 0.000000, 74.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][6],SavedCar[playerid][slot], 0.000000, 2.799999+0.07, -0.200000, 0.000000, 74.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][7],SavedCar[playerid][slot], 0.000000, 2.799999+0.06+0.06, -0.400000, 0.000000, 74.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][8],SavedCar[playerid][slot], -0.000000, 1.400000, 0.400000, 0.000000, 0.000000, 0.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][9],SavedCar[playerid][slot], -1.100000, -1.800000, 0.099999, 89.000000, 0.000000, 270.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][10],SavedCar[playerid][slot], 1.100000, -1.800000, 0.099999, 89.000000, 0.000000, 90.000000);
		}
		else if(ParkInfo[playerid][slot][Model] == 622)
		{
			SavedCar[playerid][slot] = CreateVehicle(495,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1,1);
			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(2678,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][1] = CreateDynamicObject(19314,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][2] = CreateDynamicObject(362,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][3] = CreateDynamicObject(19419,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][4] = CreateDynamicObject(2061,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][5] = CreateDynamicObject(362,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][9] = CreateDynamicObject(1640,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][10] = CreateDynamicObject(1640,0,0,0,0,0,0);

			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][9], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][10], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot], -0.199999+0.05, 2.499999, 0.200000, 12.000000, 90.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][1],SavedCar[playerid][slot], 0.000000, 2.499999, 0.200000, 77.000000, 90.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][2],SavedCar[playerid][slot], 1.300000, -1.800000, 0.300000, 0.000000, 30.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][3],SavedCar[playerid][slot], 0.000000, -0.199999-0.4, 1.000000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][4],SavedCar[playerid][slot], 0.000000, 1.700000, 0.500000, 280.000000, 0.000000, 0.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][5],SavedCar[playerid][slot], -1.300000, -1.800000, 0.300000, 0.000000, 30.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][9],SavedCar[playerid][slot], -1.075000, -0.70000, 0.599999, 67.000000, 0.000000, 270.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][10],SavedCar[playerid][slot], 1.075000, -0.70000, 0.599999, 67.000000, 0.000000, 90.000000);
		}
		else if(ParkInfo[playerid][slot][Model] == 623)
		{
			SavedCar[playerid][slot] = CreateVehicle(451,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);
			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(3280,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][1] = CreateDynamicObject(2678,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][2] = CreateDynamicObject(18646,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][3] = CreateDynamicObject(19314,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][4] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][5] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][6] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][7] = CreateDynamicObject(1593,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][8] = CreateDynamicObject(362,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][9] = CreateDynamicObject(362,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][10] = CreateDynamicObject(1640,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][11] = CreateDynamicObject(1640,0,0,0,0,0,0);

			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][4], 0, 8839, "vgsecarshow", "lightblue2_32", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][5], 0, 8839, "vgsecarshow", "lightblue2_32", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][6], 0, 8839, "vgsecarshow", "lightblue2_32", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][7], 0, 8839, "vgsecarshow", "lightblue2_32", 0xFFFFFFFF);

			for(new i; i < 16; i ++)
				SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][1], i, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);

			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][10], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][11], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot], 0.000000, 0.810000, 0.200000, 157.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][1],SavedCar[playerid][slot], -0.200000, 2.299999, 0.000000, 49.000000, 90.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][2],SavedCar[playerid][slot], 0.000000, -0.300000, 0.600000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][3],SavedCar[playerid][slot], 0.000000, 2.299999, 0.000000, 85.000000, 90.000000, 0.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][4],SavedCar[playerid][slot], 0.000000, 2.499999, -0.100000, 0.000000, 38.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][5],SavedCar[playerid][slot], 0.000000, 2.499999+0.1, -0.18000, 0.000000, 38.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][6],SavedCar[playerid][slot], 0.000000, 2.499999+0.1+0.1, -0.260000, 0.000000, 38.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][7],SavedCar[playerid][slot], 0.000000, 2.499999+0.1+0.1+0.1, -0.340000, 0.000000, 38.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][8],SavedCar[playerid][slot], 1.100000, -1.500000, 0.200000, 0.000000, 30.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][9],SavedCar[playerid][slot], -1.100000, -1.500000, 0.200000, 0.000000, 30.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][10],SavedCar[playerid][slot], -1.020000, -2.299999+0.05, -0.150001, 90.000000, 0.000000, 270.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][11],SavedCar[playerid][slot], 1.020000, -2.299999+0.05, -0.1500001, 90.000000, 0.000000, 90.000000);
		}
		else if(ParkInfo[playerid][slot][Model] == 624)
		{
			SavedCar[playerid][slot] = CreateVehicle(504,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);
			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(3280,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][2] = CreateDynamicObject(19314,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][3] = CreateDynamicObject(1006,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][4] = CreateDynamicObject(1012,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][5] = CreateDynamicObject(1640,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][6] = CreateDynamicObject(1640,0,0,0,0,0,0);

			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][5], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][6], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][5],SavedCar[playerid][slot], -1.100000, -0.399999, -0.200001, 90.000000, 0.000000, 270.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][6],SavedCar[playerid][slot], 1.100000, -0.399999, -0.200001, 90.000000, 0.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot], -0.000000, 1.100000, 0.200000, 47.000000, 0.000000, 180.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][2],SavedCar[playerid][slot], 0.000000, 2.599999, 0.200000, 89.000000, 90.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][3],SavedCar[playerid][slot], 0.000000, 1.900000, 0.300000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][4],SavedCar[playerid][slot], 0.000000, 0.300000, 0.800000, 0.000000, 0.000000, 0.000000);
		}
		else if(ParkInfo[playerid][slot][Model] == 625)
		{
			SavedCar[playerid][slot] = CreateVehicle(562,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);
			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(2678,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][1] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][2] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][3] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][4] = CreateDynamicObject(1593,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][5] = CreateDynamicObject(1023,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][6] = CreateDynamicObject(19314,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][7] = CreateDynamicObject(1640,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][8] = CreateDynamicObject(1640,0,0,0,0,0,0);

			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][1], 0, 18233, "cuntwshopscs_t", "orange1", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][2], 0, 18233, "cuntwshopscs_t", "orange1", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][3], 0, 18233, "cuntwshopscs_t", "orange1", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][4], 0, 18233, "cuntwshopscs_t", "orange1", 0xFFFFFFFF);

			for(new i; i < 16; i ++)
				SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][0], i, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);

			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][7], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][8], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot], -0.179999, 2.599999, 0.100000, 4.000000, 90.000000, 0.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][1],SavedCar[playerid][slot], 0.000000, 2.699999, -0.100000, 0.000000, 86.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][2],SavedCar[playerid][slot], 0.000000, 2.699999+0.005, -0.220000, 0.000000, 86.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][3],SavedCar[playerid][slot], 0.000000, 2.699999+0.005+0.005, -0.340000, 0.000000, 86.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][4],SavedCar[playerid][slot], 0.000000, 2.699999+0.005+0.005+0.005, -0.460000, 0.000000, 86.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][5],SavedCar[playerid][slot], 0.000000, -2.100000, 0.300000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][6],SavedCar[playerid][slot], 0.000000, 2.599999, 0.100000, 84.000000, 90.000000, 0.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][7],SavedCar[playerid][slot], -1.0250000, -2.025000, 0.099999, 90.000000, 0.000000, 270.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][8],SavedCar[playerid][slot], 1.025000, -2.025000, 0.099999, 90.000000, 0.000000, 90.000000);
		}
		else if(ParkInfo[playerid][slot][Model] == 626)
		{
			SavedCar[playerid][slot] = CreateVehicle(428,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);
			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(2678,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][1] = CreateDynamicObject(19314,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][2] = CreateDynamicObject(1023,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][3] = CreateDynamicObject(3280,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][4] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][5] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][6] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][7] = CreateDynamicObject(1593,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][8] = CreateDynamicObject(1640,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][9] = CreateDynamicObject(1640,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][10] = CreateDynamicObject(19836,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][11] = CreateDynamicObject(19836,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][12] = CreateDynamicObject(19836,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][13] = CreateDynamicObject(19843,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][14] = CreateDynamicObject(19843,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][15] = CreateDynamicObject(19836,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][16] = CreateDynamicObject(19836,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][17] = CreateDynamicObject(19836,0,0,0,0,0,0);

			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][4], 0, 16150, "ufo_bar", "GEwhite1_64", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][5], 0, 16150, "ufo_bar", "GEwhite1_64", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][6], 0, 16150, "ufo_bar", "GEwhite1_64", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][7], 0, 16150, "ufo_bar", "GEwhite1_64", 0xFFFFFFFF);

			for(new i; i < 16; i ++)
				SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][0], 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);

			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][2], 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);

			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][8], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][9], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot], -0.100000, 2.799999, -0.100000, 7.000000, 90.000000, 0.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][1],SavedCar[playerid][slot], 0.000000, 2.799999, -0.100000, 84.000000, 90.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][2],SavedCar[playerid][slot], 0.000000, -2.799999, 1.400000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][3],SavedCar[playerid][slot], 0.000000, 1.400000, 0.500000, 107.000000, 0.000000, 0.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][4],SavedCar[playerid][slot], 0.000000, 2.899999, -0.300000, 0.000000, 82.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][5],SavedCar[playerid][slot], 0.000000, 2.899999+0.005, -0.420000, 0.000000, 82.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][6],SavedCar[playerid][slot], 0.000000, 2.899999+0.005+0.005, -0.540000, 0.000000, 82.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][7],SavedCar[playerid][slot], 0.000000, 2.899999+0.005+0.005+0.005, -0.660000, 0.000000, 82.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][8],SavedCar[playerid][slot], -1.200000, -2.399999-0.15, 0.299999, 90.000000, 0.000000, 270.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][9],SavedCar[playerid][slot], 1.200000, -2.399999-0.15, 0.299999, 90.000000, 0.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][10],SavedCar[playerid][slot], 0.600000, 2.89999, -0.599999, 0.000000, 83.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][11],SavedCar[playerid][slot], 0.000000, 2.88888, -0.399999, 144.000000, 83.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][12],SavedCar[playerid][slot], -0.600000, 2.89999, -0.599999, 0.000000, 83.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][13],SavedCar[playerid][slot], 1.200000, -1.750000, -0.300000, 0.000000, 90.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][14],SavedCar[playerid][slot], -1.20000, -1.750000, -0.300000, 0.000000, 90.000000, -180.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][15],SavedCar[playerid][slot], 0.400000, 2.88888, -0.300000, 0.000000, 83.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][16],SavedCar[playerid][slot], -0.299999, 2.88888, -0.399999, 0.000000, 93.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][17],SavedCar[playerid][slot], -0.800000, 2.88888, -0.299999, 0.000000, 77.000000, 90.000000);
		}
		else if(ParkInfo[playerid][slot][Model] == 627)
		{
			SavedCar[playerid][slot] = CreateVehicle(415,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);
			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(2678,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][1] = CreateDynamicObject(1023,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][2] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][3] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][4] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][5] = CreateDynamicObject(1593,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][6] = CreateDynamicObject(1006,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][7] = CreateDynamicObject(19314,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][8] = CreateDynamicObject(1640,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][9] = CreateDynamicObject(1640,0,0,0,0,0,0);

			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][1], 0, 16150, "ufo_bar", "GEwhite1_64", 0xFFFFFFFF);
			for(new i; i < 16; i ++)
				SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][0], i, 16150, "ufo_bar", "GEwhite1_64", 0xFFFFFFFF);

			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][2], 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][3], 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][4], 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][5], 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);

			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][8], 0, "                                                {A9A9A9}D{0066FF}G", 130, "Arial", 35, 1, -32256, 0, 1);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][9], 0, "                                                {A9A9A9}D{0066FF}G", 130, "Arial", 35, 1, -32256, 0, 1);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot], -0.199999, 2.599998, 0.000000, 14.000000, 90.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][1],SavedCar[playerid][slot], 0.000000, -2.299999, 0.100000, 0.000000, 0.000000, 0.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][2],SavedCar[playerid][slot], 0.000000, 2.799999, -0.600000, 0.000000, 78.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][3],SavedCar[playerid][slot], 0.000000, 2.799999-0.020, -0.460000, 0.000000, 78.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][4],SavedCar[playerid][slot], 0.000000, 2.799999-0.020-0.020, -0.320000, 0.000000, 78.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][5],SavedCar[playerid][slot], 0.000000, 2.799999-0.020-0.020-0.020, -0.180000, 0.000000, 78.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][6],SavedCar[playerid][slot], 0.000000, -0.300000, 0.580000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][7],SavedCar[playerid][slot], 0.000000, 2.599999, 0.000000, 89.000000, 90.000000, 0.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][8],SavedCar[playerid][slot], -0.699999, -1.010000, 0.399999, 54.000000, 0.000000, 270.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][9],SavedCar[playerid][slot], 0.699999, -1.010000, 0.399999, 54.000000, 0.000000, 90.000000);
		}
		else if(ParkInfo[playerid][slot][Model] == 628)
		{
			SavedCar[playerid][slot] = CreateVehicle(415,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);
			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(2678,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][1] = CreateDynamicObject(1023,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][2] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][3] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][4] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][5] = CreateDynamicObject(1593,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][6] = CreateDynamicObject(362,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][7] = CreateDynamicObject(362,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][8] = CreateDynamicObject(1640,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][9] = CreateDynamicObject(1640,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][10] = CreateDynamicObject(18646,0,0,0,0,0,0);

			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][1], 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
			for(new i; i < 16; i ++)
				SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][0], i, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);

			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][2], 0, 8839, "vgsecarshow", "lightpurple2_32", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][3], 0, 8839, "vgsecarshow", "lightpurple2_32", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][4], 0, 8839, "vgsecarshow", "lightpurple2_32", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][5], 0, 8839, "vgsecarshow", "lightpurple2_32", 0xFFFFFFFF);

			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][8], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][9], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot], -0.199999, 2.599998, 0.000000, 14.000000, 90.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][1],SavedCar[playerid][slot], 0.000000, -2.299999, 0.100000, 0.000000, 0.000000, 0.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][2],SavedCar[playerid][slot], 0.000000, 2.799999, -0.600000, 0.000000, 78.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][3],SavedCar[playerid][slot], 0.000000, 2.799999-0.020, -0.460000, 0.000000, 78.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][4],SavedCar[playerid][slot], 0.000000, 2.799999-0.020-0.020, -0.320000, 0.000000, 78.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][5],SavedCar[playerid][slot], 0.000000, 2.799999-0.020-0.020-0.020, -0.180000, 0.000000, 78.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][6],SavedCar[playerid][slot], 1.100000, -1.500000, 0.200000, 0.000000, 30.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][7],SavedCar[playerid][slot], -1.100000, -1.500000, 0.200000, 0.000000, 30.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][8],SavedCar[playerid][slot], -0.699999, -1.010000, 0.399999, 54.000000, 0.000000, 270.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][9],SavedCar[playerid][slot], 0.699999, -1.010000, 0.399999, 54.000000, 0.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][10], SavedCar[playerid][slot], 0.000000, -0.100000, 0.670000, 0.000000, 0.000000, 0.000000);
		}
		else if(ParkInfo[playerid][slot][Model] == 629)
		{
			SavedCar[playerid][slot] = CreateVehicle(483,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);

			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(1023,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][1] = CreateDynamicObject(2678,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][2] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][3] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][4] = CreateDynamicObject(1593,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][6] = CreateDynamicObject(19314,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][8] = CreateDynamicObject(1640,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][9] = CreateDynamicObject(1640,0,0,0,0,0,0);

			for(new i; i < 16; i ++)
				SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][1], i, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);

			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][2], 0, 1250, "smashbarr", "redstuff", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][3], 0, 5168, "lashops6_las2", "yellow2_128", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][4], 0, 1273, "icons3", "greengrad32", 0xFFFFFFFF);

			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][8], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][9], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot], 0.000000, -2.699998, 0.900000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][1],SavedCar[playerid][slot], -0.159999, 2.899998, -0.099999, 12.000000, 90.000000, 0.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][2],SavedCar[playerid][slot], 0.000000, 3.099999, -0.600000, 0.000000, 74.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][3],SavedCar[playerid][slot], 0.000000, 3.099999-0.037, -0.420000, 0.000000, 74.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][4],SavedCar[playerid][slot], 0.000000, 3.099999-0.037-0.037, -0.260000, 0.000000, 74.000000, 90.000000);


			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][6],SavedCar[playerid][slot], 0.000000, 2.899999, -0.100000, 89.000000, 90.000000, 0.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][8],SavedCar[playerid][slot], -0.849999, -2.199999, 0.550000, 80.000000, 0.000000, 270.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][9],SavedCar[playerid][slot], 0.849999, -2.199999, 0.550000, 80.000000, 0.000000, 90.000000);
			ChangeVehicleColor(SavedCar[playerid][slot],1,1);
			ChangeVehiclePaintjob(SavedCar[playerid][slot],1); //PaintJob
		}
		else if(ParkInfo[playerid][slot][Model] == 630)
		{
			SavedCar[playerid][slot] = CreateVehicle(411,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);

			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(1023,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][1] = CreateDynamicObject(18729,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][2] = CreateDynamicObject(18729,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][3] = CreateDynamicObject(19314,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][5] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][6] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][7] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][10] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][11] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][12] = CreateDynamicObject(1593,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][13] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][14] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][15] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][16] = CreateDynamicObject(1593,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][17] = CreateDynamicObject(2678,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][18] = CreateDynamicObject(2678,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][8] = CreateDynamicObject(1640,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][9] = CreateDynamicObject(1640,0,0,0,0,0,0);

			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][8], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][9], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);

			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][17], 0, "", 130, "Arial", 35, 1, -32256, 0, 1);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][18], 0, "", 130, "Arial", 35, 1, -32256, 0, 1);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][8],SavedCar[playerid][slot], -1.100000, -1.199999, 0.099999, 90.000000, 0.000000, 270.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][9],SavedCar[playerid][slot], 1.100000, -1.199999, 0.099999, 90.000000, 0.000000, 90.000000);

			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][5], 0, -1, "none", "none", 0xFF222222);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][6], 0, -1, "none", "none", 0xFF222222);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][7], 0, -1, "none", "none", 0xFF222222);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][10], 0, -1, "none", "none", 0xFF222222);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][11], 0, -1, "none", "none", 0xFF222222);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][12], 0, -1, "none", "none", 0xFF222222);

			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][13], 0, -1, "none", "none", 0xFF0077FF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][14], 0, -1, "none", "none", 0xFF0077FF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][15], 0, -1, "none", "none", 0xFF0077FF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][16], 0, -1, "none", "none", 0xFF0077FF);
			for(new i; i < 16; i ++)
				SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][17], i, -1, "none", "none", 0xFF222222);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][18], 0, -1, "none", "none", 0xFF222222);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot], 0.000000, -2.499999, 0.300000, 0.000000, 0.000000, 0.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][1],SavedCar[playerid][slot],  -1.000000, -1.500000, -2.100000, 0.000000, 0.000000, 180.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][2],SavedCar[playerid][slot],  1.000000, -1.500000, -2.100000, 0.000000, 0.000000, 180.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][3],SavedCar[playerid][slot], 0.000000, 0.400000, 0.680000, 90.000000, 0.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][4],SavedCar[playerid][slot], -0.139999, 2.799999, 0.000000, 8.000000, 90.000000, 0.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][5],SavedCar[playerid][slot], -0.000000, 2.599999, -0.100000, 0.000000, 205.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][6],SavedCar[playerid][slot], -0.000000, 2.799999, -0.200000, 0.000000, 229.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][7],SavedCar[playerid][slot], -0.000000, 2.840000, -0.300000, 0.000000, 270.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][10],SavedCar[playerid][slot], -0.000000, 2.840000, -0.400000, 0.000000, 270.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][11],SavedCar[playerid][slot], -0.000000, 2.799999, -0.500000, 0.000000, 308.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][12],SavedCar[playerid][slot], -0.000000, 2.699999, -0.135000, 0.000000, 209.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][13],SavedCar[playerid][slot], 0.000000-0.001, 2.699999, 0.040000, 0.000000, 25.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][14],SavedCar[playerid][slot], 0.000000-0.001, 2.899999, -0.100000, 0.000000, 51.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][15],SavedCar[playerid][slot], 0.000000-0.001, 2.999999, -0.300000, 0.000000, 87.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][16],SavedCar[playerid][slot], 0.000000-0.001, 2.940000, -0.499999, 0.000000, 102.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][17],SavedCar[playerid][slot], 0.000000, 1.549999, -0.300000, 89.000000, 90.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][18],SavedCar[playerid][slot], 0.800001, 1.549999, -0.300000, 89.000000, 90.000000, 90.000000);
		}
		else if(ParkInfo[playerid][slot][Model] == 631)
		{
			SavedCar[playerid][slot] = CreateVehicle(541,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);

			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(3280,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][1] = CreateDynamicObject(362,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][2] = CreateDynamicObject(362,0,0,0,0,0,0);
//			ParkInfo[playerid][slot][SpecialObjects][3] = CreateDynamicObject(1006,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][4] = CreateDynamicObject(1014,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][5] = CreateDynamicObject(1640,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][6] = CreateDynamicObject(1640,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][7] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][8] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][9] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][10] = CreateDynamicObject(1593,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][11] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][12] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][13] = CreateDynamicObject(1593,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][14] = CreateDynamicObject(2678,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][15] = CreateDynamicObject(2678,0,0,0,0,0,0);

			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][7], 0, -1, "none", "none", 0xFF222222);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][8], 0, -1, "none", "none", 0xFF222222);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][9], 0, -1, "none", "none", 0xFF222222);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][10], 0, -1, "none", "none", 0xFF222222);

			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][11], 0, -1, "none", "none", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][12], 0, -1, "none", "none", 0xFFFFFFFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][13], 0, -1, "none", "none", 0xFFFFFFFF);

			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][5], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][6], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);

			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][14], 0, "", 130, "Arial", 35, 1, -32256, 0, 1);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][15], 0, "", 130, "Arial", 35, 1, -32256, 0, 1);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][5],SavedCar[playerid][slot], -1.0750000, -0.899999, -0.100000, 90.000000, 0.000000, 270.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][6],SavedCar[playerid][slot], 1.0750000, -0.899999, -0.100000, 90.000000, 0.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot], 0.000000, 1.200000, 0.200000, 149.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][1],SavedCar[playerid][slot], 1.100000, -0.299999, 0.200000, 0.000000, 30.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][2],SavedCar[playerid][slot], -1.000000, -0.299999, 0.199999, 0.000000, 29.000000, 96.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][3],SavedCar[playerid][slot], 0.000000, -0.200000, 0.600000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][4],SavedCar[playerid][slot], 0.000000, -2.100000, 0.300000, 0.000000, 0.000000, 0.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][7],SavedCar[playerid][slot], 0.000000, 2.299999, -0.010000, 0.000000, 209.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][8],SavedCar[playerid][slot], 0.000000, 2.399999, -0.100000, 0.000000, 242.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][9],SavedCar[playerid][slot], 0.000000, 2.43000, -0.250000, 0.000000, 269.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][10],SavedCar[playerid][slot], 0.000000, 2.399999, -0.400000, 0.000000, 289.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][11],SavedCar[playerid][slot], 0.000000, 2.399999, 0.100000, 0.000000, 41.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][12],SavedCar[playerid][slot], 0.000000, 2.530000, -0.099999, 0.000000, 71.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][13],SavedCar[playerid][slot], 0.000000, 2.550000, -0.319999, 0.000000, 94.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][14],SavedCar[playerid][slot], 0.000000, 1.400000, -0.299999, 95.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][15],SavedCar[playerid][slot], -0.600000, 1.400000, -0.299999, 95.000000, 0.000000, 0.000000);
		}
		else if(ParkInfo[playerid][slot][Model] == 632)
		{
			SavedCar[playerid][slot] = CreateVehicle(471,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);

			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(1023,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][1] = CreateDynamicObject(2678,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][2] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][3] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][4] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][5] = CreateDynamicObject(1593,0,0,0,0,0,0);

			for(new i; i < 16; i ++)
				SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][1], i, -1, "none", "none", 0xFFFF7000);

			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][2], 0, -1, "none", "none", 0xFF00AAFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][3], 0, -1, "none", "none", 0xFF00AAFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][4], 0, -1, "none", "none", 0xFF00AAFF);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][5], 0, -1, "none", "none", 0xFF00AAFF);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot], 0.030000, -0.800000, 0.200000, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][1],SavedCar[playerid][slot], -0.099999, 0.899998, 0.300000, 5.000000, 90.000000, 0.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][2],SavedCar[playerid][slot], 0.030000, 0.999998, 0.100000, 0.000000, 83.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][3],SavedCar[playerid][slot], 0.030000, 0.999998, 0.100000-0.15, 0.000000, 83.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][4],SavedCar[playerid][slot], 0.030000, 0.999998, 0.100000-0.15-0.15, 0.000000, 83.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][5],SavedCar[playerid][slot], 0.030000, 0.999998, 0.100000-0.15-0.15-0.15, 0.000000, 83.000000, 90.000000);

		}
		else if(ParkInfo[playerid][slot][Model] == 633)
		{
			SavedCar[playerid][slot] = CreateVehicle(522,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);

			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(2678,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][1] = CreateDynamicObject(18646,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][2] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][3] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][4] = CreateDynamicObject(1593,0,0,0,0,0,0);

			for(new i; i < 16; i ++)
				SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][0], i, -1, "none", "none", 0xFF7700FF);

			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][2], 0, -1, "none", "none", 0xFF00FF00);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][3], 0, -1, "none", "none", 0xFF00FF00);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][4], 0, -1, "none", "none", 0xFF00FF00);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot], -0.049999, 1.099998, 0.200000, 5.000000, 90.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][1],SavedCar[playerid][slot], 0.000000, 0.300000, 0.650000, 349.000000, 0.000000, 0.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][2],SavedCar[playerid][slot], 0.050000, 1.200000, 0.000000, 0.000000, 90.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][3],SavedCar[playerid][slot], 0.050000, 1.200000+0.01, 0.000000-0.175, 0.000000, 90.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][4],SavedCar[playerid][slot], 0.050000, 1.200000+0.01+0.01, 0.000000-0.175-0.175, 0.000000, 90.000000, 90.000000);
		}
		else if(ParkInfo[playerid][slot][Model] == 634)
		{
			SavedCar[playerid][slot] = CreateVehicle(415,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1,1);

			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(2678,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][1] = CreateDynamicObject(1023,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][2] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][3] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][4] = CreateDynamicObject(1593,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][5] = CreateDynamicObject(1593,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][8] = CreateDynamicObject(1640,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][9] = CreateDynamicObject(1640,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][10] = CreateDynamicObject(19056,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][11] = CreateDynamicObject(11702, 0, 0, 0, 0, 0, 0);
			ParkInfo[playerid][slot][SpecialObjects][12] = CreateDynamicObject(19327, 0, 0, 0, 0, 0, 0);
			ParkInfo[playerid][slot][SpecialObjects][13] = CreateDynamicObject(19327, 0, 0, 0, 0, 0, 0);
			ParkInfo[playerid][slot][SpecialObjects][14] = CreateDynamicObject(19327, 0, 0, 0, 0, 0, 0);
			ParkInfo[playerid][slot][SpecialObjects][15] = CreateDynamicObject(19327, 0, 0, 0, 0, 0, 0);

			ParkInfo[playerid][slot][SpecialObjects][16] = CreateDynamicObject(359, 0, 0, 0, 0, 0, 0);
			ParkInfo[playerid][slot][SpecialObjects][17] = CreateDynamicObject(359, 0, 0, 0, 0, 0, 0);
			ParkInfo[playerid][slot][SpecialObjects][18] = CreateDynamicObject(1012,0,0,0,0,0,0);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][11],SavedCar[playerid][slot] , 0.000000, -0.5, 0.59, 0.000000, 0.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][12],SavedCar[playerid][slot], 1.059999, 0.000000, -0.200000, 0.000000, 0.000000, 90.449951);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][13],SavedCar[playerid][slot], -1.059999, 0.000000, -0.200000, 0.000000, 0.000000, -90.449951);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][14],SavedCar[playerid][slot], 1.059999, 0.000000, -0.40000, 0.000000, 0.000000, 90.449951);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][15],SavedCar[playerid][slot], -1.059999, 0.000000, -0.40000, 0.000000, 0.000000, -90.449951);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][16],SavedCar[playerid][slot], -1.000000, -1.400000, 0.000000, 0.000000, 3.000000, 89.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][17],SavedCar[playerid][slot], 1.100000, -1.400000, 0.000000, 0.000000, 3.000000, 91.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][18],SavedCar[playerid][slot], 0.000000,1.300000, 0.100000, 0.000000, 0.000000, 0.000000);

			format(str,sizeof(str),"{FF0000}Vánoce");
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][12],0, str, OBJECT_MATERIAL_SIZE_256x128,"Arial", 28, 1, 0xFF0000FF, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][13],0, str, OBJECT_MATERIAL_SIZE_256x128,"Arial", 28, 1, 0xFF0000FF, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);

			format(str,sizeof(str),"{00FF00}2k17");
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][14],0, str, OBJECT_MATERIAL_SIZE_256x128,"Arial", 20, 1, 0xFF0000FF, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][15],0, str, OBJECT_MATERIAL_SIZE_256x128,"Arial", 20, 1, 0xFF0000FF, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);


			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][1], 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
			for(new i; i < 16; i ++)
				SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][0], i, -1, "none", "none", 0xFFFF0000);

			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][2], 0, -1, "none", "none", 0xFF00FF00);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][3], 0, -1, "none", "none", 0xFF00FF00);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][4], 0, -1, "none", "none", 0xFF00FF00);
			SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][5], 0, -1, "none", "none", 0xFF00FF00);

			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][8], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][9], 0, DGTEXT, 130, "Arial", 35, 1, -32256, 0, 1);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot], -0.199999, 2.599998, 0.000000, 14.000000, 90.000000, 0.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][1],SavedCar[playerid][slot], 0.000000, -2.299999, 0.100000, 0.000000, 0.000000, 0.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][2],SavedCar[playerid][slot], 0.000000, 2.799999, -0.600000, 0.000000, 78.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][3],SavedCar[playerid][slot], 0.000000, 2.799999-0.020, -0.460000, 0.000000, 78.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][4],SavedCar[playerid][slot], 0.000000, 2.799999-0.020-0.020, -0.320000, 0.000000, 78.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][5],SavedCar[playerid][slot], 0.000000, 2.799999-0.020-0.020-0.020, -0.180000, 0.000000, 78.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][6],SavedCar[playerid][slot], 1.100000, -1.500000, 0.200000, 0.000000, 30.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][7],SavedCar[playerid][slot], -1.100000, -1.500000, 0.200000, 0.000000, 30.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][8],SavedCar[playerid][slot], -0.699999, -1.010000, 0.399999, 54.000000, 0.000000, 270.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][9],SavedCar[playerid][slot], 0.699999, -1.010000, 0.399999, 54.000000, 0.000000, 90.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][10], SavedCar[playerid][slot], 0.000000, -1.600000, 0.200000, 0.000000, 0.000000, 0.000000);
		}
		else if(ParkInfo[playerid][slot][Model] == 635)
		{
			SavedCar[playerid][slot] = CreateVehicle(571,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);
			LinkVehicleToInterior(SavedCar[playerid][slot],30);
			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(19320,0,0,0,0,0,0,0);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot],0,0,0.25,0,0,90);
		}
		else if(ParkInfo[playerid][slot][Model] == 636)
		{
			SavedCar[playerid][slot] = CreateVehicle(411,ParkInfo[playerid][slot][pX],ParkInfo[playerid][slot][pY],ParkInfo[playerid][slot][pZ],ParkInfo[playerid][slot][pA],ParkInfo[playerid][slot][Color1],ParkInfo[playerid][slot][Color2],-1);
			ParkInfo[playerid][slot][SpecialObjects][0] = CreateDynamicObject(1023,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][1] = CreateDynamicObject(18729,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][2] = CreateDynamicObject(18729,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][3] = CreateDynamicObject(19314,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][5] = CreateDynamicObject(19056,0,0,0,0,0,0);
			//ParkInfo[playerid][slot][SpecialObjects][6] = CreateDynamicObject(1006,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][7] = CreateDynamicObject(2678,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][13] = CreateDynamicObject(19327,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][14] = CreateDynamicObject(19327,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][15] = CreateDynamicObject(19327,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][16] = CreateDynamicObject(19327,0,0,0,0,0,0);

			ParkInfo[playerid][slot][SpecialObjects][8] = CreateDynamicObject(1640,0,0,0,0,0,0);
			ParkInfo[playerid][slot][SpecialObjects][9] = CreateDynamicObject(1640,0,0,0,0,0,0);

			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][8],0, DGTEXT,130, "Arial", 35, 1, -32256, 0, 1);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][9],0, DGTEXT,130, "Arial", 35, 1, -32256, 0, 1);

			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][17],0, "", 130, "Arial", 35, 1, -32256, 0, 1);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][18],0, "", 130, "Arial", 35, 1, -32256, 0, 1);

			format(str,sizeof(str),"{FF0000}Vánoce");
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][13],0,str, OBJECT_MATERIAL_SIZE_256x128,"Arial", 28, 1, 0xFF0000FF, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][14],0,str, OBJECT_MATERIAL_SIZE_256x128,"Arial", 28, 1, 0xFF0000FF, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);

			format(str,sizeof(str),"{00FF00}2k18");
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][15],0,str,OBJECT_MATERIAL_SIZE_256x128,"Arial", 20, 1, 0xFF0000FF, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
			SetDynamicObjectMaterialText(ParkInfo[playerid][slot][SpecialObjects][16],0,str,OBJECT_MATERIAL_SIZE_256x128,"Arial", 20, 1, 0xFF0000FF, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][8],SavedCar[playerid][slot], -1.100000, -1.199999, 0.099999, 90.000000, 0.000000, 270.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][9],SavedCar[playerid][slot], 1.100000, -1.199999, 0.099999, 90.000000, 0.000000, 90.000000);

			for(new a = 0; a < 4; a++)
				SetDynamicObjectMaterial(ParkInfo[playerid][slot][SpecialObjects][7], a, -1, "none", "none", 0xFFFF0000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][0],SavedCar[playerid][slot], 0.000000, -2.499999, 0.300000, 0.000000, 0.000000, 0.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][1],SavedCar[playerid][slot],  -1.000000, -1.500000, -2.100000, 0.000000, 0.000000, 180.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][2],SavedCar[playerid][slot],  1.000000, -1.500000, -2.100000, 0.000000, 0.000000, 180.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][3],SavedCar[playerid][slot], 0.000000, 0.400000, 0.680000, 90.000000, 0.000000, 90.000000);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][4],SavedCar[playerid][slot], -0.139999, 2.799999, 0.000000, 8.000000, 90.000000, 0.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][5],SavedCar[playerid][slot], 0.000000, -1.600000, 0.200000, 3.000000, 0.000000, 0.000000);
			//AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][6],SavedCar[playerid][slot], -0.000000, 1.800000, 0.190000, 353.300018, 0.000000, 0.000000);//0.200000 1925

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][7],SavedCar[playerid][slot], -0.139999, 2.799999, 0.000000, 8.000000, 90.000000, 0.000000);

			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][13],SavedCar[playerid][slot], 1.059999+0.0295, 0.000000, -0.200000, 0.000000, 0.000000, 90.449951);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][14],SavedCar[playerid][slot], -1.059999-0.0295, 0.000000, -0.200000, 0.000000, 0.000000, -90.449951);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][15],SavedCar[playerid][slot], 1.059999+0.035, 0.000000, -0.40000, 0.000000, 0.000000, 90.449951);
			AttachDynamicObjectToVehicle(ParkInfo[playerid][slot][SpecialObjects][16],SavedCar[playerid][slot], -1.059999-0.035, 0.000000, -0.40000, 0.000000, 0.000000, -90.449951);
		}
	}
	return 1;
}

stock TuneCar(playerid,slot)
{
 	format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(playerid),slot);
	if(fexist(dfile))
	{
		ChangeVehiclePaintjob(SavedCar[playerid][slot],ParkInfo[playerid][slot][PaintJob]);
		if(ParkInfo[playerid][slot][TuneSlot0] != 0) AddVehicleComponent(SavedCar[playerid][slot],ParkInfo[playerid][slot][TuneSlot0]);
		if(ParkInfo[playerid][slot][TuneSlot1] != 0) AddVehicleComponent(SavedCar[playerid][slot],ParkInfo[playerid][slot][TuneSlot1]);
		if(ParkInfo[playerid][slot][TuneSlot2] != 0) AddVehicleComponent(SavedCar[playerid][slot],ParkInfo[playerid][slot][TuneSlot2]);
		if(ParkInfo[playerid][slot][TuneSlot3] != 0) AddVehicleComponent(SavedCar[playerid][slot],ParkInfo[playerid][slot][TuneSlot3]);
		if(ParkInfo[playerid][slot][TuneSlot4] != 0) AddVehicleComponent(SavedCar[playerid][slot],ParkInfo[playerid][slot][TuneSlot4]);
		if(ParkInfo[playerid][slot][TuneSlot5] != 0) AddVehicleComponent(SavedCar[playerid][slot],ParkInfo[playerid][slot][TuneSlot5]);
		if(ParkInfo[playerid][slot][TuneSlot6] != 0) AddVehicleComponent(SavedCar[playerid][slot],ParkInfo[playerid][slot][TuneSlot6]);
		if(ParkInfo[playerid][slot][TuneSlot7] != 0) AddVehicleComponent(SavedCar[playerid][slot],ParkInfo[playerid][slot][TuneSlot7]);
		if(ParkInfo[playerid][slot][TuneSlot8] != 0) AddVehicleComponent(SavedCar[playerid][slot],ParkInfo[playerid][slot][TuneSlot8]);
		if(ParkInfo[playerid][slot][TuneSlot9] != 0) AddVehicleComponent(SavedCar[playerid][slot],ParkInfo[playerid][slot][TuneSlot9]);
		if(ParkInfo[playerid][slot][TuneSlot10] != 0) AddVehicleComponent(SavedCar[playerid][slot],ParkInfo[playerid][slot][TuneSlot10]);
		if(ParkInfo[playerid][slot][TuneSlot11] != 0) AddVehicleComponent(SavedCar[playerid][slot],ParkInfo[playerid][slot][TuneSlot11]);
		if(ParkInfo[playerid][slot][TuneSlot12] != 0) AddVehicleComponent(SavedCar[playerid][slot],ParkInfo[playerid][slot][TuneSlot12]);
		if(ParkInfo[playerid][slot][TuneSlot13] != 0) AddVehicleComponent(SavedCar[playerid][slot],ParkInfo[playerid][slot][TuneSlot13]);
	    switch(ParkInfo[playerid][slot][Model])
	    {
		    case 611..616,635: LinkVehicleToInterior(SavedCar[playerid][slot],30);
		}
		if(ParkInfo[playerid][slot][pPancir] > 1000)
	    {
	        RepairVehicle(SavedCar[playerid][slot]);
			SetVehicleHealth(SavedCar[playerid][slot],ParkInfo[playerid][slot][pPancir]);
	    }
	    if(ParkInfo[playerid][slot][pOdstaveno] == true)
	    {
			SetVehiclePos(SavedCar[playerid][slot],6000,6000,2000);
	    }
	}
	return 1;
}

stock CheckPlayerDrazbaVehicle(playerid,slotid)
{
	if(GetPlayerDrazbaStatus(playerid) == 1)
	{
	    if(GetPlayerDrazbaType(playerid) == 2)
	    {
		    if(slotid == GetPlayerDrazbaItem(playerid))
		    {
		        ResetPlayerDrazba(playerid);
		        SM(playerid,"Vozidlo, které draíte u nemáte v garáí, draba byla zruena");
		    }
		}
	}
	return 1;
}

stock CheckPlayerDrazbaProperty(playerid,pid)
{
	if(GetPlayerDrazbaStatus(playerid) == 1)
	{
	    if(GetPlayerDrazbaType(playerid) == 3)
	    {
		    if(pid == GetPlayerDrazbaItem(playerid))
		    {
		        ResetPlayerDrazba(playerid);
		        SM(playerid,"Nemovitost, kterou draíte u nevlastníte, draba byla zruena");
		    }
		}
	}
	return 1;
}

stock CheckPlayerDrazbaHouse(playerid,house)
{
	if(GetPlayerDrazbaStatus(playerid) == 1)
	{
	    if(GetPlayerDrazbaType(playerid) == 4)
	    {
		    if(house == GetPlayerDrazbaItem(playerid))
		    {
		        ResetPlayerDrazba(playerid);
		        SM(playerid,"Dùm, který draíte u nevlastníte, draba byla zruena");
		    }
		}
	}
	return 1;
}

function GetPoints(playerid)
{
	return floatround(Points[playerid],floatround_floor);
}

stock GivePoints(playerid,Float:body,bool:drazba = false)
{
	return GivePlayerPoints(playerid,body,drazba);
}

function GivePlayerPoints(playerid,Float:body,bool:drazba)
{
	if(body != 0)
	{
		if(drazba == false)
		{
			if(GetPlayerDrazbaStatus(playerid) == 1)
			{
			    if(GetPlayerDrazbaType(playerid) == 1)
			    {
				    if(Points[playerid] + body < GetPlayerDrazbaAmount(playerid))
				    {
				        ResetPlayerDrazba(playerid);
				        SM(playerid,"Nemáte tolik bodù kolik draíte, draba byla zruena");
				    }
				}
			}
		}
		new fajl[50];
		Points[playerid] += body;
		format(fajl,sizeof(fajl),USER_FILES,Jmeno(playerid));
		DOF2_SetFloat(fajl,"Body",Points[playerid]);
		DOF2_SaveFile();
		format(str,sizeof(str),"~y~BODY:~w~ %0.1f",Points[playerid]);
		new tecka = strfind(str,".",false,0);
		strins(str,"~r~",tecka);
		strins(str,"~w~",tecka+4);
		TextDrawSetString(Textdraw1[playerid],str);
		format(str,sizeof(str),"{6AFF00}%s +%0.1f points total: %.01f [ ID: %d ]",Jmeno(playerid),body,Points[playerid],playerid);
		printEx(str);
		if(Achiv[playerid][POINTS_100] == 0)
		{
		    if(Points[playerid] >= 100)
		    {
				SetPlayerAchievement(playerid,POINTS_100);
		    }
		}
		if(Achiv[playerid][POINTS_800] == 0)
		{
		    if(Points[playerid] >= 800)
		    {
				SetPlayerAchievement(playerid,POINTS_800);
		    }
		}
		if(Achiv[playerid][POINTS_1500] == 0)
		{
		    if(Points[playerid] >= 1500)
		    {
				SetPlayerAchievement(playerid,POINTS_1500);
		    }
		}
		SetPlayerAchievementEx(playerid,POINTS_10000,floatround(Points[playerid],floatround_ceil),10000);
		SetPlayerAchievementEx(playerid,POINTS_50000,floatround(Points[playerid],floatround_ceil),50000);
		SetPlayerAchievementEx(playerid,POINTS_100000,floatround(Points[playerid],floatround_ceil),100000);
	}
	return 1;
}

stock SetPlayerAchievementEx(playerid,achiev,hodnota,hodnotamustbe)
{
    if(Achiv[playerid][achiev] == 0)
    {
        if(hodnota >= hodnotamustbe)
        {
            SetPlayerAchievement(playerid,achiev);
        }
    }
/*    else
    {
        if(hodnota < hodnotamustbe)
        {
            RemovePlayerAchievement(playerid,achiev);
        }
    }
*/
	return 1;
}

stock SetPlayerAchievement(playerid,achiv)
{
	new text[255],soubor[50],hour,minute,day,month,year,query[200],Cache:cache;
	gettime(hour,minute);
	getdate(year,month,day);
	Achiv[playerid][achiv] = 1;
	mysql_format(mysql,query,sizeof(query),"SELECT * FROM `GameAchievs` WHERE `Nick`='%e' AND `AchievID`=%d",Jmeno(playerid),achiv);
 	cache = mysql_query(mysql,query);
	if(!cache_get_row_count(mysql))
	{
		format(str,sizeof(str),"%02d.%02d.%d %02d:%02d",day,month,year,hour,minute);
	    mysql_format(mysql,query,sizeof(query),"INSERT INTO `GameAchievs` (`Nick`,`AchievID`,`Date`) VALUES ('%e',%d,'%e')",Jmeno(playerid),achiv,str);
		mysql_query(mysql,query,false);

	    format(text,sizeof(text),"Achievement ~r~%s ~w~dasazen! Ziskavas odmenu ~b~%d bodu",AchievementsNames[achiv][AchievName],AchievementsNames[achiv][AchievReward]);
	    CreateCompleteMessage(playerid,"Achievement",text,8);
	    format(str,sizeof(str),"[ ACHIEVEMENT ] {00FF87}Získal si achievement "w"%s{00FF87} + "w"%d Bodù{00FF87}.",AchievementsNames[achiv][AchievName],AchievementsNames[achiv][AchievReward]);
		SCM(playerid,bila,str);
		SCM(playerid,bila,"[ ACHIEVEMENT ] {00FF87}Pro seznam vech achievementù -> "w"/achiev");
		format(soubor,sizeof(soubor),"UnNamed/Achievements.txt");
		if(!fexist(soubor))
		    DOF2_CreateFile(soubor);
		format(text,sizeof(text),"Achievement[%d]",achiv);
		DOF2_SetInt(soubor,text,DOF2_GetInt(soubor,text)+ 1);
		DOF2_SaveFile();
	    GivePoints(playerid,AchievementsNames[achiv][AchievReward]);
	    format(str,sizeof(str),"Achievement: ~w~%s",AchievementsNames[achiv][AchievName]);
	    TextDrawDiakritika(str);
	    GiveXP(playerid,AchievementsNames[achiv][AchievReward]*2,str);
	}
	cache_delete(cache,mysql);
	return 1;
}

stock SetHodnota(playerid,nazev[],hodnota[])
{
	DOF2_SetString(dfile,nazev,hodnota);
	DOF2_SaveFile();
	format(str,sizeof(str),"Hodnota nastavena na: "g"%s",hodnota);
	SM(playerid,str);
	return 1;
}

stock LoadMissionVehicles()
{
	Truck[0] = CreateVehicle(515,-2124.8748,-199.9914,36.3394,181.5699,-1,-1,60);
	Truck[1] = CreateVehicle(515,-2118.4055,-199.7709,36.3362,180.3356,-1,-1,60);
	Truck[2] = CreateVehicle(515,-2111.4055,-199.9401,36.3357,177.3817,-1,-1,60);
	Truck[3] = CreateVehicle(515,-2104.3269,-199.9807,36.3393,179.8099,-1,-1,60);
	Truck[4] = CreateVehicle(515,-2102.9731,-274.8238,36.3441,0.4848,-1,-1,60);
	Truck[5] = CreateVehicle(515,-2108.5874,-275.2840,36.3395,0.6773,-1,-1,60);
	Truck[6] = CreateVehicle(515,-2114.3662,-275.0000,36.3421,359.4694,-1,77,60);
	Truck[7] = CreateVehicle(435,-2102.5867,-215.8693,34.9984,93.7600,-1,-1,60);
	Truck[8] = CreateVehicle(435,-2102.5867,-220.8693,34.9984,93.3238,-1,-1,60);
	Truck[9] = CreateVehicle(435,-2102.5867,-225.8693,34.9984,93.3238,-1,-1,60);
	Truck[10] = CreateVehicle(435,-2102.5867,-230.8693,34.9984,93.3238,-1,-1,60);
	Truck[11] = CreateVehicle(435,-2102.5867,-235.8693,34.9984,93.3238,-1,-1,60);
	Truck[12] = CreateVehicle(435,-2102.5867,-240.8693,34.9984,93.3238,-1,-1,60);
	Truck[13] = CreateVehicle(435,-2102.5867,-245.8693,34.9984,93.3238,-1,-1,60);

	Bus[0] = CreateVehicle(437,-2630.1563,-53.2815,4.4838,359.3661,-1,-1,60);
	Bus[1] = CreateVehicle(437,-2636.1563,-53.2815,4.4771,0.3803,-1,-1,60);
	Bus[2] = CreateVehicle(437,-2642.1563,-53.2815,4.4771,0.3803,-1,-1,60);
	Bus[3] = CreateVehicle(437,-2648.1563,-53.2815,4.4771,0.3803,-1,-1,60);
	Bus[4] = CreateVehicle(437,-2654.1563,-53.2815,4.4771,0.3803,-1,-1,60);
	Bus[5] = CreateVehicle(437,-2660.1563,-53.2815,4.4771,0.3803,-1,-1,60);
	Bus[6] = CreateVehicle(437,-2666.1563,-53.2815,4.4771,0.3803,-1,-1,60);
	Bus[7] = CreateVehicle(437,-2672.1563,-53.2815,4.4771,0.3803,-1,-1,60);
	Bus[8] = CreateVehicle(437,-2680.1563,-53.2815,4.4771,0.3803,-1,-1,60);
	Bus[9] = CreateVehicle(437,-2686.1563,-53.2815,4.4771,0.3803,-1,-1,60);

	TreeCar[0] = CreateVehicle(495,-2008.0209,-2406.7896,30.7107,136.5987,-1,-1,60);
	TreeCar[1] = CreateVehicle(495,-2005.4592,-2410.6089,30.7106,136.4801,-1,-1,60);
	TreeCar[2] = CreateVehicle(495,-2003.3158,-2413.7183,30.7124,135.5991,-1,-1,60);
	TreeCar[3] = CreateVehicle(495,-2000.6547,-2416.3999,30.7086,135.4637,-1,-1,60);
	TreeCar[4] = CreateVehicle(495,-1998.0516,-2418.9692,30.7098,136.1695,-1,-1,60);
	TreeCar[5] = CreateVehicle(495,-1995.4512,-2421.8721,30.7076,134.4527,-1,-1,60);
	TreeCar[6] = CreateVehicle(495,-1993.1162,-2424.2415,30.7081,137.8980,-1,-1,60);
	TreeCar[7] = CreateVehicle(495,-1990.6965,-2426.8228,30.7077,136.5866,-1,-1,60);
	TreeCar[8] = CreateVehicle(495,-1988.1262,-2429.8088,30.7115,135.9970,-1,-1,60);
	TreeCar[9] = CreateVehicle(495,-1985.4005,-2433.5239,30.7108,134.9206,-1,-1,60);

	KuryrCar[0] = CreateVehicle(560,2375.9258,1952.4969,5.7200,269.9865,0,0,60);
	KuryrCar[1] = CreateVehicle(560,2375.9258,1945.4647,5.7205,269.9122,0,0,60);
	KuryrCar[2] = CreateVehicle(560,2375.9258,1938.4647,5.7205,269.9122,0,0,60);
	KuryrCar[3] = CreateVehicle(560,2375.9258,1931.4647,5.7205,269.9122,0,0,60);
	KuryrCar[4] = CreateVehicle(541,2375.9258,1924.4647,5.7205,269.9122,0,0,60);
	KuryrCar[5] = CreateVehicle(541,2375.9258,1917.4647,5.7205,269.9122,0,0,60);
	KuryrCar[6] = CreateVehicle(541,2375.9258,1910.4647,5.7205,269.9122,0,0,60);
	KuryrCar[7] = CreateVehicle(541,2375.9258,1903.4647,5.7205,269.9122,0,0,60);
	KuryrCar[8] = CreateVehicle(415,2375.9258,1896.4647,5.7205,269.9122,0,0,60);
	KuryrCar[9] = CreateVehicle(415,2375.9258,1889.4647,5.7205,269.9122,0,0,60);
	KuryrCar[10] = CreateVehicle(415,2375.9258,1882.4647,5.7205,269.9122,0,0,60);
	KuryrCar[11] = CreateVehicle(415,2375.9258,1875.4647,5.7205,269.9122,0,0,60);

	MechanicCars[0] = CreateVehicle(525,-2055.9832,146.7749,28.8010,181.8427,-1,-1,60,1);
	MechanicCars[1] = CreateVehicle(525,-2052.2097,146.8705,28.7162,180.9617,-1,-1,60,1);
	MechanicCars[2] = CreateVehicle(525,-2048.4575,147.0457,28.7169,178.8736,-1,-1,60,1);
	MechanicCars[3] = CreateVehicle(525,-2055.6987,123.2003,28.4449,0.4420,-1,-1,60,1);
	MechanicCars[4] = CreateVehicle(525,-2052.1250,123.3467,28.6563,1.4334,-1,-1,60,1);
	MechanicCars[5] = CreateVehicle(525,-2048.4709,123.2654,28.7800,359.8520,-1,-1,60,1);
	MechanicCars[6] = CreateVehicle(525,-2059.8582,146.5235,28.7524,179.3757,-1,-1,60,1);
	MechanicCars[7] = CreateVehicle(525,-2059.8452,135.0882,28.7582,179.9535,-1,-1,60,1);
	MechanicCars[8] = CreateVehicle(525,-2040.3223,131.6095,28.7243,268.9075,-1,-1,60,1);

	Plane[0] = CreateVehicle(593,-1259.6327,-86.1901,14.6080,134.4393,-1,-1,60);
	Plane[1] = CreateVehicle(593,-1249.2584,-96.7109,14.6063,134.4393,-1,-1,60);
	Plane[2] = CreateVehicle(593,-1239.2584,-106.7109,14.6063,134.4393,-1,-1,60);
	Plane[3] = CreateVehicle(593,-1229.2584,-116.7109,14.6063,134.4393,-1,-1,60);
	Plane[4] = CreateVehicle(593,-1219.2584,-126.7109,14.6063,134.4393,-1,-1,60);
	Plane[5] = CreateVehicle(593,-1209.2584,-136.7109,14.6063,134.4393,-1,-1,60);
	Plane[6] = CreateVehicle(593,-1199.2584,-146.7109,14.6063,134.4393,-1,-1,60);
	Plane[7] = CreateVehicle(593,-1189.2584,-156.7109,14.6063,134.4393,-1,-1,60);
	return 1;
}

stock SetPlayerVIP(playerid,dni,bool:tutorial = false)
{
    format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	if(vip[playerid] == 1)
	{
	    new date = DOF2_GetInt(dfile,"VIP_vyprsi") + mktime1(0,0,0,dni,0,0);
	    DOF2_SetInt(dfile,"VIP_vyprsi",date);
	    DOF2_SaveFile();
	}
	if(vip[playerid] == 0)
	{
		vip[playerid] = 1;
		phraci++;
		format(str,sizeof(str),"On-Line ~y~Premium Hraci: ~w~%d",phraci);
		TextDrawSetString(Textdraw9,str);
		new date = gettime() + mktime1(0,0,0,dni,0,0);
		DOF2_SetInt(dfile,"VIP",vip[playerid]);
		DOF2_SetInt(dfile,"VIP_vyprsi",date);
		DOF2_SetString(dfile,"BarvaTextu","FFFFFF");
		DOF2_SaveFile();
		DefaultSpawnEquip(playerid);
		if(tutorial == false)
			SPD(playerid,UNNAMED+10,DIALOG_STYLE_MSGBOX,"VIP Nastavení","Nyní si vyberete barvu "y"nicku "w"[ "c"Klikni na "w": "g"Dalí"w" ]","Dalí","");
		SetDefaultTitul(playerid);
	}
	return 1;
}

stock SpecialVar(playerid,admin[],duvod[])
{
	new query[500];
	mysql_format(mysql,query,sizeof(query),"INSERT INTO `Prestupky` (`Nick`,`IP`,`Type`,`Admin`,`Reason`,`Time`) VALUES ('%e','%s','%d','%e','%e','%d')",Jmeno(playerid),GetIP(playerid),TYPE_VAR,admin,duvod,gettime());
	mysql_query(mysql,query,false);
	return 1;
}

stock SpecialKick(playerid,admin[],duvod[])
{
	new query[500];
	mysql_format(mysql,query,sizeof(query),"INSERT INTO `Prestupky` (`Nick`,`IP`,`Type`,`Admin`,`Reason`,`Time`) VALUES ('%e','%s','%d','%e','%e','%d')",Jmeno(playerid),GetIP(playerid),TYPE_KICK,admin,duvod,gettime());
	mysql_query(mysql,query,false);
	KickPlayerAfterTime(playerid,30);
	return 1;
}

stock SpecialBan(playerid,admin[],duvod[],sign[] = "")
{
	new query[500];
	if(!strlen(sign))
	    format(sign,24,admin);
	mysql_format(mysql,query,sizeof(query),"INSERT INTO `Prestupky` (`Nick`,`IP`,`Type`,`Admin`,`Sign`,`Reason`,`Time`) VALUES ('%e','%s','%d','%e','%e','%e','%d')",Jmeno(playerid),GetIP(playerid),TYPE_BAN,admin,sign,duvod,gettime());
	mysql_query(mysql,query,false);
	return 1;
}

stock SpecialTBan(playerid,admin[],duvod[],time,sign[] = "")
{
	new query[500];
	if(!strlen(sign))
	    format(sign,24,admin);
	mysql_format(mysql,query,sizeof(query),"INSERT INTO `Prestupky` (`Nick`,`IP`,`Type`,`Admin`,`Sign`,`Reason`,`Time`,`EndTime`) VALUES ('%e','%s','%d','%e','%e','%e','%d','%d')",Jmeno(playerid),GetIP(playerid),TYPE_TBAN,admin,sign,duvod,gettime(),time);
	mysql_query(mysql,query,false);
	return 1;
}

stock ShowInfo(playerid,playerid2)
{
	new DIALOG_INFO[3500],file2[50];
	format(dfile,sizeof(dfile),"%s.txt",Jmeno(playerid2));
	format(file2,sizeof(file2),USER_FILES,Jmeno(playerid2));
	strcat(DIALOG_INFO,""or"Úèet:\n");
	format(str,sizeof(str),"Hodin: "c"%d\n"w"Minut: "c"%d\nLevel: "c"%d\n",GetPlayerPlayedTime(playerid2)/60/60,GetPlayerPlayedTime(playerid2)/60%60,Level[playerid2]);
	strcat(DIALOG_INFO,str);
	if(vip[playerid2] == 1)
	{
		format(str,sizeof(str),""w"Premium Úèet: "g"Vlastní\n"w"Titul: "c"%s\n",DOF2_GetString(file2,"Prefix"));
	}
	else
	{
		format(str,sizeof(str),""w"Premium Úèet: "r"Nevlastní\n");
	}
	strcat(DIALOG_INFO,str);
	if(PlayerHouse[playerid2] == -1)
	{
		format(str,sizeof(str),""w"Dùm: "r"Nevlastní\n");
	}
	else
	{
		format(str,sizeof(str),""w"Dùm: "c"%d\n",PlayerHouse[playerid2]+1);
	}
	strcat(DIALOG_INFO,str);
	strcat(DIALOG_INFO,""or"Kriminalita:\n");
	format(str,sizeof(str),""w"Vrady: "c"%d\n"w"Úmrtí: "c"%d\n"w"Wanted: "c"%d\n",Kills[playerid2],Deaths[playerid2],GetPlayerWantedLevel(playerid2));
	strcat(DIALOG_INFO,str);
	strcat(DIALOG_INFO,""or"Finance:\n");
	format(str,sizeof(str),""w"Peníze: "c"%s$\n"w"Banka: "c"%s$\n"w"Výplata: "c"%s$\n",Split(GetMoney(playerid2)),Split(GetPlayerBankMoney(playerid2)),Split(DOF2_GetInt(dfile,"Vyplata")));
	strcat(DIALOG_INFO,str);
	strcat(DIALOG_INFO,""or"Score:\n");
	format(str,sizeof(str),""w"Výbuné náboje: "c"%d\n"w"Body: "c"%0.1f\nDM Score:"c" %d\n"w"Vyhráno postøehù: "c"%d"w"\n"w"Vyhráno eventù: "c"%d\n",Naboje[playerid2],Points[playerid2],DMScore[playerid2],WinPostrehy[playerid2],EventsWins[playerid2]);
	strcat(DIALOG_INFO,str);
	format(str,sizeof(str),""w"Vyhráno duelù: "c"%d\n"w"Prohráno duelù: "c"%d\n"w"Misí splnìno: "c"%d\n",DuelWins[playerid2],DuelLose[playerid2],MiseCompleted[playerid2]);
	strcat(DIALOG_INFO,str);
	format(str,sizeof(str),"Vyhraných sumo zápasù: "c"%d\nProhraných sumo zápasù: "c"%d\n",SumoWins[playerid2],SumoLose[playerid2]);
	strcat(DIALOG_INFO,str);
	format(str,sizeof(str),"Vyhraných závodù: "c"%d\nZabito hráèù v DM: "c"%d\nVykradeno nemovitostí: "c"%d\n",RaceWins[playerid2],DMKillsTotal[playerid2],Robs[playerid2]);
	strcat(DIALOG_INFO,str);
	format(str,sizeof(str),"Dokonèeno stuntù: "c"%d/%d\nDokonèeno stuntù celkem: "c"%d\nVyhráno bodù v hodu mincí: "c"%d\nProhráno bodù v hodu mincí: "c"%d\n",pStunt[playerid2][sCompleted],sizeof(StuntPos),pStunt[playerid2][sTotalCompleted],MinceWin[playerid2],MinceLose[playerid2]);
	strcat(DIALOG_INFO,str);
	format(str,sizeof(str),"Splnìno denních výzev: "c"%d",Player[playerid2][pDailyDone]);
	strcat(DIALOG_INFO,str);
	strcat(DIALOG_INFO,"\n"or"Vozový Park:\n");
	new slots = 0;
	for(new i; i < MAX_SLOTS; i ++)
	{
		format(dfile,sizeof(dfile),"UnNamed/Vehicles/%s[%d].txt",Jmeno(playerid2),i);
		if(fexist(dfile))
		{
			slots++;
			format(str,sizeof(str),"%s\n",GetVehicleNameByCarID(DOF2_GetInt(dfile,"Model")));
			strcat(DIALOG_INFO,str);
		}
	}
	if(slots == 0) strcat(DIALOG_INFO,"Hráè nevlastní ádné vozidlo\n");
	strcat(DIALOG_INFO,"\n"or"Achievementy:\n");
	new achiev = 0;
	for(new i; i < MAX_ACHIEVEMENTS; i ++)
	{
	    if(Achiv[playerid2][i] == 2)
	    {
	        achiev++;
	        format(str,sizeof(str),"%s\n",AchievementsNames[i][AchievName]);
			strcat(DIALOG_INFO,str);
	    }
	}
	if(achiev == 0) strcat(DIALOG_INFO,"Hráè nemá odemèené ádné achievementy\n");
	new props = 0;
	strcat(DIALOG_INFO,"\n"or"Nemovitosti:\n");
	for(new i; i < MAX_PROPERTIES; i ++)
	{
		if(strcmp(Property[i][PropertyOwner],"0",false) != 0)
		{
		    if(IsPlayerPropertyOwner(playerid2,i))
	    	{
		        props++;
		        format(str,sizeof(str),"%s\n",Property[i][PropertyName]);
				strcat(DIALOG_INFO,str);
			}
	    }
	}
	if(props == 0) strcat(DIALOG_INFO,"Hráè nevlastní ádné nemovitosti\n");
	format(str,sizeof(str),"Info hráèe: "c"%s",Jmeno(playerid2));
	if(Admin[playerid] <= 2)
	{
		SPD(playerid,DIALOG_NONECLICK,DIALOG_STYLE_LIST,str,DIALOG_INFO,"Zavøít","");
	}
	else
	{
		SPD(playerid,UNNAMED+62,DIALOG_STYLE_LIST,str,DIALOG_INFO,"Zavøít","Admin Info");
		SetPVarInt(playerid,"InfoID",playerid2);
	}
	return 1;
}
function SetDefaultTitul(playerid)
{
	if(vip[playerid] == 1) SetPlayerTitul(playerid,"VIP","FFFFFF","FFFFFF");
	if(Admin[playerid] > 0) SetPlayerTitul(playerid,Players(playerid),"FFFFFF","FFFFFF");
	return 1;
}

stock SelectPlayer(playerid,text[],string[256])
{
	#pragma unused playerid
	format(string, sizeof(string), "%s", text);
	for (new i; i < 145; i++)
	{
		if (string[i] == '@')
		{
			if ((string[i + 1] > 47) && (string[i + 1] < 58))
		  	{
		  		new j = (i + 1),idtext[6];
			    while ((j < (i + 3)) && ((string[j] > 47) && (string[j] < 58)))
			          j++;
				for(new x = i+1; x < j+1; x ++)
				    if(string[x] > 47 && string[x] < 58){
				        new oneletter[2];
				        format(oneletter,sizeof(oneletter),"%s",string[x]);
				        format(idtext,sizeof(idtext),"%s%d",idtext,strval(oneletter));
					}
					else break;
				new id=strval(idtext);
				if(IPC(id) && !IsPlayerNPC(id))
				{
				    strdel(string, i, j);
					strins(string, Jmeno(strval(idtext)), i);
				}
			}
		}
	}
  	return 1;
}

stock ZavinacID(playerid,color[],text[])
{
	new string[146];
	format(string, 145, text);
	for(new i = 0; i < 145; i++)
	{
		if(string[i] == '@')
		{
			new id[4];
			for(new j = 1; j < 4; j++)
			{
//				if(i + j > 144) break;
				if(string[i + j] >= '0' && string[i + j] <= '9') id[j - 1] = string[i + j];
			}
			if(id[0] == '\0') continue;
			new player_id = strval(id);
			if(IsPlayerConnected(player_id) && !IsPlayerNPC(player_id))
			{
			    zavinace[playerid] ++;
			    if(zavinace[playerid] < 4)
			    {
					strdel(string, i, i + strlen(id) + 1);
					if(strlen(str) > 103)
					{
						if(i < 103) strdel(str, 103, 128);
						else break;
					}
					new name[40];
					format(name,sizeof(name),"{FFD800}%s{%s}",Jmeno(player_id),color);
					strins(string, name, i);
				}
				else
				{
				    SM(playerid,"Pøekroèil si limit nickù");
				    break;
				}
			}
		}
	}
	return string;
}

function SendAdminMessage(text[])
{
    new strrr[256];
	for(new i; i <= GetPlayerPoolSize(); i++)
	{
		if(IPC(i) && !IsPlayerNPC(i))
		{
		    if(Admin[i] > 0)
		    {
				format(strrr,sizeof(strrr),"*  %s.",text);
       			SCM(i,bila,strrr);
		    }
		}
	}
	printEx(strrr);
	return 1;
}

forward SendAdminMessageWithoutADMINS(text[]);

public SendAdminMessageWithoutADMINS(text[])
{
	for(new i; i <= GetPlayerPoolSize(); i++)
	{
		if(IPC(i) && !IsPlayerNPC(i))
		{
		    if(Admin[i] > 0)
		    {
       			SCM(i,bila,text);
		    }
		}
	}
	return 1;
}

stock CreateCarMenuVehicle(playerid,carid,spz[] = "{0055FF}UN-DG")
{
	return _CreateCarMenuVehicle(playerid,carid,spz);
}

function _CreateCarMenuVehicle(playerid,carid,spz[])
{
	if(IsPlayerInSpecialProperty(playerid)) return SM(playerid,"V nemovitosti se nemùete pouít tento pøíkaz");
	if(pStunt[playerid][sStuntID] != -1) return SM(playerid,"Kdy plní stunt, nemùe si spawnout vozidlo");
	if(MakesPlayerDrivingSchool(playerid)) return SM(playerid,"Kdy dìláte autokolu, nemùete si spawnout vozidlo");
	if(InDM[playerid] != -1) return SM(playerid,"V DeathMatchi si nemùe spawnout vozidlo "r"/leave");
	if(RacePlayer[playerid] != -1) return CreateInfoBox(playerid,"V ~y~zavode ~r~nemuzes ~w~pouzit tento prikaz",5);
	if(IsPlayerInBlockedMission(playerid)) return SM(playerid,"Pøi plnìní mise si nemùe spawnout vozidlo");
	if(OnEvent[playerid] == true)
	{
		if(Admin[playerid] == 0)
		{
		    if(RunEvent != 2) return SM(playerid,"Na eventu bez vozidel nelze spawnovat vozidla");
		}
	}
	if(IsPlayerInAnyVehicle(playerid))
	{
		new Float:Vhealth;
		GetVehicleHealth(GetPlayerVehicleID(playerid),Vhealth);
		if(Vhealth < 250) return SM(playerid,"Nemùe pouít tento pøíkaz kdy ti hoøí vozidlo");
	}
	if(Admin[playerid] == 0)
	{
		new lvl;
		switch(carid)
		{
			case 425,432: lvl = 30;
			case 520: lvl = 20;
			case 447: lvl = 15;
			case 464: lvl = 10;
		}
		if(lvl > 0)
		{
		    if(Level[playerid] < lvl)
		    {
				format(str,sizeof(str),"Toto vozidlo ("g"%s"w") mùe øídit a od {0077FF}%d"w". levelu",GetVehicleNameByCarID(carid),lvl);
				SPD(playerid,0,DIALOG_STYLE_MSGBOX,"Vozidlo",str,"Zavøít","");
				return 0;
			}
		}
	}
	DestroyObject(ObjectOne[playerid]);
	DestroyObject(ObjectTwo[playerid]);
 	DestroyObject(ObjectThree[playerid]);
	DestroyObject(ObjectFour[playerid]);
	DestroyObject(ObjectFive[playerid]);
	DestroyVehicle(ACAR[playerid]);
	ACAR[playerid] = 0;
	ObjectOne[playerid] = 0;
	ObjectTwo[playerid] = 0;
	ObjectThree[playerid] = 0;
	ObjectFour[playerid] = 0;
	ObjectFive[playerid] = 0;
	if(IsPlayerInAnyVehicle(playerid))
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SM(playerid,"U sedí u nìkoho ve vozidle");
	}
	new strr[255];
	new Float:X,Float:Y,Float:Z,Float:A;
	new Float:vX,Float:vY,Float:vZ;
	GetPlayerPos(playerid,X,Y,Z);
    GetPlayerFacingAngle(playerid,A);
	GetPlayerVelocity(playerid,vX,vY,vZ);
	if(IsPlayerInAnyVehicle(playerid))
	{
	    new car = GetPlayerVehicleID(playerid);
		GetVehicleZAngle(car,A);
		GetVehicleVelocity(car,vX,vY,vZ);
	}
	DestroyVehicle(CCAR[playerid]);
	CCAR[playerid] = 0;
	CCAR[playerid] = CreateVehicle(carid,X,Y,Z+2,0,-1,-1,-1);
	if(strlen(spz) == 0)
	{
		SetVehicleDefaultSPZ(CCAR[playerid]);
	}
	else
	{
	    SetVehicleNumberPlate(CCAR[playerid],spz);
	    SetVehicleToRespawn(CCAR[playerid]);
	}
	SetVehicleVirtualWorld(CCAR[playerid],GetPlayerVirtualWorld(playerid));
	LinkVehicleToInterior(CCAR[playerid],GetPlayerInterior(playerid));
	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	PutPlayerInVehicle(playerid,CCAR[playerid],0);
	SetVehicleZAngle(CCAR[playerid],A);
	SetVehicleVelocity(CCAR[playerid],vX,vY,vZ);
	format(strr,sizeof(strr),"~w~Vozidlo: ~g~%s~w~, ID: ~r~%d ~y~spawnuto",GetVehicleName(CCAR[playerid]),carid);
	CreateInfoBox(playerid,strr,5);
	return 1;
}

stock CreateAdminVehicle(playerid,Float:X,Float:Y,Float:Z,Text[])
{
	new Float:A;
	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	DestroyObject(ObjectOne[playerid]);
	DestroyObject(ObjectTwo[playerid]);
	DestroyObject(ObjectThree[playerid]);
	DestroyObject(ObjectFour[playerid]);
	DestroyObject(ObjectFive[playerid]);
	DestroyVehicle(ACAR[playerid]);
	ACAR[playerid] = 0;
	ObjectOne[playerid] = 0;
	ObjectTwo[playerid] = 0;
	ObjectThree[playerid] = 0;
	ObjectFour[playerid] = 0;
	ObjectFive[playerid] = 0;
	GetPlayerFacingAngle(playerid,A);
	ACAR[playerid] = CreateVehicle(415,X,Y,Z,A,0,0,600000,1);
	format(str,sizeof(str),"{FF0000}%s",Jmeno(playerid));
	SetVehicleNumberPlate(ACAR[playerid],str);
	SetVehicleToRespawn(ACAR[playerid]);
	PutPlayerInVehicle(playerid,ACAR[playerid],0);
	ObjectOne[playerid]   = CreateObject(11702, 0, 0, 0, 0, 0, 0);
	ObjectTwo[playerid]   = CreateObject(19327, 0, 0, 0, 0, 0, 0);
	ObjectThree[playerid] = CreateObject(19327, 0, 0, 0, 0, 0, 0);
	ObjectFour[playerid]   = CreateObject(19327, 0, 0, 0, 0, 0, 0);
	ObjectFive[playerid] = CreateObject(19327, 0, 0, 0, 0, 0, 0);
	AttachObjectToVehicle(ObjectOne[playerid],GetPlayerVehicleID(playerid) , 0.000000, -0.5, 0.59, 0.000000, 0.000000, 0.000000); //Object Model: 19419 |
	AttachObjectToVehicle(ObjectTwo[playerid],GetPlayerVehicleID(playerid), 1.059999, 0.000000, -0.200000, 0.000000, 0.000000, 90.449951); //Object Model: 19327|
	AttachObjectToVehicle(ObjectThree[playerid],GetPlayerVehicleID(playerid), -1.059999, 0.000000, -0.200000, 0.000000, 0.000000, -90.449951); //Object Model: 19327 |
	AttachObjectToVehicle(ObjectFour[playerid],GetPlayerVehicleID(playerid), 1.059999, 0.000000, -0.40000, 0.000000, 0.000000, 90.449951); //Object Model: 19327|
	AttachObjectToVehicle(ObjectFive[playerid],GetPlayerVehicleID(playerid), -1.059999, 0.000000, -0.40000, 0.000000, 0.000000, -90.449951); //Object Model: 19327 |
	AddVehicleComponent(GetPlayerVehicleID(playerid),1010);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1023);
	AddVehicleComponent(GetPlayerVehicleID(playerid),1074);
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	format(str,sizeof(str),"{%s}%s",DOF2_GetString(dfile,"BarvaTitulu"),Text);
	SetObjectMaterialText(ObjectTwo[playerid],str, 0, OBJECT_MATERIAL_SIZE_256x128,"Arial", 28, 1, red, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
	SetObjectMaterialText(ObjectThree[playerid],str, 0, OBJECT_MATERIAL_SIZE_256x128,"Arial", 28, 1, red, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
	format(str,sizeof(str),"{%06x}%s",GetPlayerColor(playerid) >>> 8,Jmeno(playerid));
	SetObjectMaterialText(ObjectFour[playerid],str, 0, OBJECT_MATERIAL_SIZE_256x128,"Arial", 20, 1,GetPlayerColor(playerid), 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
	SetObjectMaterialText(ObjectFive[playerid],str, 0, OBJECT_MATERIAL_SIZE_256x128,"Arial", 20, 1,GetPlayerColor(playerid), 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
	return 1;
}
stock CreateWarp(playerid,Float:X,Float:Y,Float:Z,predlozka[],kam[],winterior = 0, Float:angle = 0.0, vehicle = -1)
{
	JailCmdBlock(playerid);
	if(IsPlayerInSpecialProperty(playerid)) return SM(playerid,"V nemovitosti se nemùete odwarpovat");
	if(pStunt[playerid][sStuntID] != -1) return SM(playerid,"Kdy plní stunt, nemùe se odwarpovat");
	if(OnEvent[playerid] == true) return SM(playerid,"Na eventu nemùe pouít tento pøíkaz");
	if(IsPlayerSupplyRun(playerid)) return SM(playerid,"Právì plní misi, nemùe vykonat tuto akci");
	if(InDM[playerid] != -1) return SM(playerid,"V DeathMatchi se nemùe odwarpovat "r"/leave");
	if(RacePlayer[playerid] != -1) return CreateInfoBox(playerid,"V ~y~zavode ~r~nemuzes ~w~pouzit tento prikaz",5);
	if(IsPlayerInBlockedMission(playerid)) return SM(playerid,"Pøi misi se nemùe odwarpovat");
	if(IsPlayerHitted(playerid)) return SM(playerid,"Nemùe utéct z boje warpem");
	if(WarpBlock[playerid] == 0)
	{
	    TimerWarpBlock[playerid] = SetTimerEx("UnBlockWarp",1000*60,false,"i",playerid);
	}
	new warps;
	if(Legend[playerid] == true)
	    warps = 12;
	else if(vip[playerid] == 0)
	    warps = PWBLOCK;
	else
	    warps = VWBLOCK;

	if(WarpBlock[playerid] >= warps)
	{
	    format(str,sizeof(str),"Pøekroèil si Warp Limit znovu se mùete warpovat za: "g"%02d"w" : "g"%02d",WarpTimeMinutes[playerid],WarpTimeSeconds[playerid]);
		SM(playerid,str);
	}
	else
	{
	    WarpBlock[playerid]++;
		if(WarpBlock[playerid] < warps)
			format(str,sizeof(str),"Pozor a nepøekroèí Warp-Limit [ "g"%d"w" / "r"%d"w" ]",WarpBlock[playerid],warps);
		else if(WarpBlock[playerid] == warps)
		{
		    WarpTimeMinutes[playerid] = 3;
		    WarpTimeSeconds[playerid] = 0;
			KillTimer(TimerWarpBlock[playerid]);
		    SetTimerEx("UnBlockWarps",1000,false,"i",playerid);
			format(str,sizeof(str),"Warp-Block: ~y~%02d:%02d",WarpTimeMinutes[playerid],WarpTimeSeconds[playerid]);
			TextDrawSetString(TDTimery[playerid][2],str);
			if(TD[playerid] == false)
			{
			    TextDrawShowForPlayer(playerid,TDTimery[playerid][2]);
			}
			format(str,sizeof(str),"Pøekroèil si Warp-Limit [ "r"%d"w" / "r"%d"w" ]",WarpBlock[playerid],warps);
		}
		SM(playerid,str);
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && vehicle != 0)
		{
			if(angle != 0)
			{
			    SetVehicleZAngle(GetPlayerVehicleID(playerid),angle);
			}
			SetVehiclePos(GetPlayerVehicleID(playerid),X,Y,Z);
			SetPlayerInterior(GetPlayerVehicleID(playerid),winterior);
			SetPlayerInterior(playerid,winterior);
			LinkVehicleToInterior(GetPlayerVehicleID(playerid),winterior);
			for(new i; i < MAX_SLOTS; i ++)
			{
				if(IsPlayerInVehicle(playerid,SavedCar[playerid][i]))
				{
				    switch(ParkInfo[playerid][i][Model])
				    {
				        case 612..616,635: LinkVehicleToInterior(GetPlayerVehicleID(playerid),30);
				    }
				}
			}
		}
		else
		{
		    SetPlayerPos(playerid,X,Y,Z);
			SetPlayerInterior(playerid,winterior);
			if(angle != 0)
			{
			    SetPlayerFacingAngle(playerid,angle);
			}
		}

		format(str,sizeof(str),"~w~%s ~g~%s ~w~se %s %s ~r~%s~w~.",TDPlayers(playerid),Jmeno(playerid),SexWord(playerid,"odwarpoval","odwarpovala"),predlozka,kam);
		AddStringToTextDraw(str);
		CancelAntiSK(playerid);
		PlayerSpeed[playerid] = 0;
	}
	return 1;
}

forward UnBlockWarps(playerid);
forward UnBlockWarp(playerid);

public UnBlockWarp(playerid) { WarpBlock[playerid] = 0; SM(playerid,"Vá Warp Limit byl vynulován"); return 1; }

public UnBlockWarps(playerid)
{
	if(WarpBlock[playerid] == PWBLOCK || WarpBlock[playerid] == VWBLOCK || WarpBlock[playerid] == 12)
	{
	    WarpTimeSeconds[playerid]--;
	    SetTimerEx("UnBlockWarps",1000,false,"i",playerid);
		if(WarpTimeSeconds[playerid] < 0)
		{
		    WarpTimeSeconds[playerid] = 59;
		    WarpTimeMinutes[playerid] --;
			if(WarpTimeMinutes[playerid] < 0)
			{
			    WarpTimeSeconds[playerid] = 0;
			    WarpTimeMinutes[playerid] = 0;
			    SM(playerid,"Mùe se znovu warpovat");
			    WarpBlock[playerid] = 0;
				TextDrawHideForPlayer(playerid,TDTimery[playerid][2]);
			}
		}
	}
	format(str,sizeof(str),"Warp-Block: ~y~%02d:%02d",WarpTimeMinutes[playerid],WarpTimeSeconds[playerid]);
	TextDrawSetString(TDTimery[playerid][2],str);
	return 1;
}

stock ShowWarps(playerid,category)
{
    new DIALOG[1000];
    for(new i; i < sizeof(Warps); i ++)
    {
        if(Warps[i][wCategory] == category)
        {
            new text[80];
            format(text,sizeof(text),"%s %s\t"g"/%s\n",Warps[i][wPredlozka],Warps[i][wLokace],Warps[i][wCMD]);
            strcat(DIALOG,text);
        }
    }
    SPD(playerid,UNNAMED+30,DIALOG_STYLE_TABLIST,WarpCategories[category],DIALOG,"Vybrat","Zpìt");
	return 1;
}

stock WarpMenu(playerid)
{
	if(IsPlayerSupplyRun(playerid)) return SM(playerid,"Právì plní misi, nemùe vykonat tuto akci");
	new DIALOG_WARPY[sizeof(WarpCategories)*40];
	for(new i; i < sizeof(WarpCategories); i ++)
	{
		new text[40];
		format(text,sizeof(text),""sb"%c"w"%s\n",WarpCategories[i][0],WarpCategories[i][1]);
		strcat(DIALOG_WARPY,text);
	}
	SPD(playerid,UNNAMED+29,DIALOG_STYLE_LIST,"Warpy",DIALOG_WARPY,"Vybrat","Zavøít");
	return 1;
}

stock ConnectToRace(playerid,raceid)
{
	if(IsPlayerSupplyRun(playerid)) return SM(playerid,"Právì plní misi, nemùe vykonat tuto akci");
	if(Points[playerid] < Race[raceid][RaceZapisne]) return SM(playerid,"Nemáte dostatek bodù pro pøipojení");
	GivePoints(playerid,-Race[raceid][RaceZapisne]);
	Race[raceid][RaceWin] +=Race[raceid][RaceZapisne];
	format(str,sizeof(str),"%s %s connected to race (-%db)",Players(playerid),Jmeno(playerid),Race[raceid][RaceZapisne]);
	printEx(str);
	new VW = raceid+2;
	CancelAntiSK(playerid);
	if(Race[raceid][CPVW] > 0)
	{
	    VW = Race[raceid][CPVW];
	}
	SCM(playerid,sblue,"Pro odchod pouijte "g"/leave");
	DisableRemoteVehicleCollisions(playerid,1);
    RacePlayers[raceid] ++;
	DestroyVehicle(Ecar[playerid]);
	Ecar[playerid] = 0;
    ResetPlayerWeaponsEx(playerid);
	RacePlayer[playerid] = raceid;
	SetPlayerPos(playerid,Race[raceid][CPX][1],Race[raceid][CPY][1],Race[raceid][CPZ][1]);
	Ecar[playerid] = CreateVehicle(RaceVehicle[raceid],Race[raceid][CPX][1],Race[raceid][CPY][1],Race[raceid][CPZ][1]+2,0,0,1,-1);
	PutPlayerInVehicle(playerid,Ecar[playerid],0);
	SetPlayerVirtualWorld(playerid,VW);
	SetVehicleVirtualWorld(Ecar[playerid],VW);
	SetVehicleZAngle(Ecar[playerid],Race[raceid][CPA]);
    RaceOdpocet[playerid] = 5;
	TogglePlayerControllable(playerid,false);
	return 1;
}

stock PremiumVyhody(playerid)
{
	format(dfile,sizeof(dfile),USER_FILES,Jmeno(playerid));
	new DIALOG_PREMIUM[10000];
	strcat(DIALOG_PREMIUM,""r"VIP Výhody:\n");
	strcat(DIALOG_PREMIUM,""w"Titul: "g"[ VIP Hráè ]"w".\n");
	strcat(DIALOG_PREMIUM,""w"Oprava "g"1x "w"za "g"30 "w"sekund.\n");
	format(str,sizeof(str),""w"Warp Block "g"%d "w"warpù za "g"1"w" minutu.\n",DOF2_GetInt(CONFIG,"VPWBLOCK"));
	strcat(DIALOG_PREMIUM,str);
	strcat(DIALOG_PREMIUM,""w"Pøi spawnu dostanete vestu a tyto zbranì:\n");
	strcat(DIALOG_PREMIUM,""g"M4, MP5, Sawn Off Shotgun, Desert Eagle, Sniperku, Granáty, Fotoaparát\n\n");
	strcat(DIALOG_PREMIUM,""r"VIP Pøíkazy\n");
	strcat(DIALOG_PREMIUM,""g"/color - "w"Zmìna barvy nicku a textu.\n");
	strcat(DIALOG_PREMIUM,""g"/oprava - "w"Opraví vozidlo (1 za 30 sekund).\n");
	strcat(DIALOG_PREMIUM,""g"/hydraulika - "w"Namontuje do vozidla hydrauliku.\n");
	strcat(DIALOG_PREMIUM,""g"/heal - "w"Doplní zdraví (1 za 5 minut).\n");
	strcat(DIALOG_PREMIUM,""g"/hide - "w"Zneviditelní vás na mapì za mení poplatek.\n");
//	strcat(DIALOG_PREMIUM,""g"/unhide - "w"Zviditelní vás na mapì.\n");
	strcat(DIALOG_PREMIUM,""g"/setskin [ ID Skinu ] - "w"Nastaví skin (0 - 311).\n");
	strcat(DIALOG_PREMIUM,""g"/flip - "w"Pøevrátí vozidlo zpìt na kola.\n");
	strcat(DIALOG_PREMIUM,""g"/carcol [ Barva 1 ] [ Barva 2] - "w"Zmìna barvy vozidla.\n");
	strcat(DIALOG_PREMIUM,""g"/astream [ URL ] - "w"Spustí On-Line Audio Stream.\n");
//	strcat(DIALOG_PREMIUM,""g"/nastream [ Název Písnièky ] - "w"Spustí On-Line Audio Stream.\n");
	strcat(DIALOG_PREMIUM,""g"/flashnick - "w"Automatické mìnìní barev nicku.\n");
	strcat(DIALOG_PREMIUM,""g"/crazycar - "w"Automatické mìnìní barev a kol auta.\n");
	strcat(DIALOG_PREMIUM,""g"/vgoto [ ID ] - "w"Portne Vás k hráèi.\n");
	strcat(DIALOG_PREMIUM,""g"/vsave - "w"Uloí soukromou pozici pro "g"/vload"w".\n");
	strcat(DIALOG_PREMIUM,""g"/vload - "w"Portne Vás na Vai soukomou pozici "g"/vsave"w".\n");
	strcat(DIALOG_PREMIUM,""g"/hidecar - "w"Zneviditelní vozidlo.\n");
	strcat(DIALOG_PREMIUM,""g"/unhidecar - "w"Zviditelní vozidlo.\n");
	strcat(DIALOG_PREMIUM,""g"/odpocet - "w"Spustí odpoèet na 5 sekund.\n");
	strcat(DIALOG_PREMIUM,""g"/spz [ SPZ ] - "w"Zmìna SPZ vozidla.\n");
	strcat(DIALOG_PREMIUM,""g"/anketa [ Anketa ] - "w"Vytvoøí anketu.\n");
	strcat(DIALOG_PREMIUM,""g"/sc - "w"Spawne speciální vozidlo\n");
	strcat(DIALOG_PREMIUM,""g"/mytime [ Hodiny ] [ Minuty ] - "w"Nastaví vlastní èas\n");
	strcat(DIALOG_PREMIUM,""g"/myweather [ ID Poèasí ] - "w"Nastaví vlastní poèasí\n");
	strcat(DIALOG_PREMIUM,""g"/vybava - "w"Seznam Vaich výbav\n");
	if(vip[playerid] == 1)
	{
		format(str,sizeof(str),"\n\n"w"VIP Úèet expiruje: "g"%s",DATE(DOF2_GetInt(dfile,"VIP_vyprsi")));
	}
	else
	{
		format(str,sizeof(str),"\n\n"w"VIP Úèet expiruje: "r"NEZAKOUPENO >> "g"/shop");
	}
	strcat(DIALOG_PREMIUM,str);
	SPD(playerid,999,DIALOG_STYLE_MSGBOX,"VIP Úèet",DIALOG_PREMIUM,"Zavøít","");
	return 1;
}


stock Loadefile(playerid)
{
	format(str,sizeof(str),"[ Server ] {0055FF}Loaded file: "y"%s",dfile);
	SCM(playerid,bila,str);
	return 1;
}

stock GetPlayerIdFromName(playername[])
{
  	for(new i = 0; i <= GetPlayerPoolSize(); i++)
  	{
    	if(IsPlayerConnected(i))
    	{
      		if(strcmp(Jmeno(i),playername,true,strlen(playername)) == 0)
      		{
        		return i;
      		}
    	}
  	}
  	return INVALID_PLAYER_ID;
}

stock GetPlayerID(const playername[], partofname=0)
{
 	new i;
 	new playername1[MAX_STRING];
 	for (i=0;i<MAX_PLAYERS;i++)
 	{
  		if (IsPlayerConnected(i))
  		{
   			GetPlayerName(i,playername1,sizeof(playername1));
   			if (strcmp(playername1,playername,true)==0)
   			{
    			return i;
   			}
  		}
 	}
 	new correctsigns_userid=-1;
 	new tmpuname[MAX_STRING];
 	new hasmultiple=-1;
 	if(partofname)
 	{
  		for (i=0;i<MAX_PLAYERS;i++)
  		{
   			if (IsPlayerConnected(i))
  	 		{
		    	GetPlayerName(i,tmpuname,sizeof(tmpuname));
		    	if(strfind(tmpuname,partofname,true)==0)
    			{
			     	hasmultiple++;
			     	correctsigns_userid=i;
    			}
    			if(hasmultiple>0)
    			{
     				return -2;
    			}
			}
		}
	}
  	return correctsigns_userid;
}

stock GetPlayerSpeed(playerid)
{
    new Float:ST[4];
    if(IsPlayerInAnyVehicle(playerid))
    GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
    else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
    ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 179.28625;
    return floatround(ST[3]);
}

function IsPlayerUAdmin(playerid)
{
	return Admin[playerid];
}

stock IsVehicleEmpty(vehicleid)
{
 	for(new i; i <= GetPlayerPoolSize(); i++)
  	{
    	if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i) && GetPlayerVehicleID(i) == vehicleid) return 0;
  	}
  	return 1;
}

stock WeaponsNames(weaponid)
{
	new Nazev[50];
	if(weaponid == 0) Nazev = "Pìst";
	else if(weaponid == 1) Nazev = "Boxer";
	else if(weaponid == 2) Nazev = "Golfová Hùl";
	else if(weaponid == 3) Nazev = "Obuek";
	else if(weaponid == 4) Nazev = "Nù";
	else if(weaponid == 5) Nazev = "Baseballka";
	else if(weaponid == 6) Nazev = "Lopata";
	else if(weaponid == 7) Nazev = "Kuleèníková hùl";
	else if(weaponid == 8) Nazev = "Katana";
	else if(weaponid == 9) Nazev = "Motorovka";
	else if(weaponid == 10) Nazev = "Rùové Dildo";
	else if(weaponid == 11) Nazev = "Dildo";
	else if(weaponid == 12) Nazev = "Vibrátor";
	else if(weaponid == 13) Nazev = "Støíbrný vibrátor";
	else if(weaponid == 14) Nazev = "Kvìtiny";
	else if(weaponid == 15) Nazev = "Hùl";
	else if(weaponid == 16) Nazev = "Granát";
	else if(weaponid == 17) Nazev = "Slzný Plyn";
	else if(weaponid == 18) Nazev = "Molotov";
	else if(weaponid == 22) Nazev = "Pistol";
	else if(weaponid == 23) Nazev = "Pistol s tlumièem";
	else if(weaponid == 24) Nazev = "Desert Eagle";
	else if(weaponid == 25) Nazev = "Brokovnice";
	else if(weaponid == 26) Nazev = "Sawn off Shotgun";
	else if(weaponid == 27) Nazev = "Combat Shotgun";
	else if(weaponid == 28) Nazev = "Uzi";
	else if(weaponid == 29) Nazev = "MP5";
	else if(weaponid == 30) Nazev = "AK-47";
	else if(weaponid == 31) Nazev = "M4";
	else if(weaponid == 32) Nazev = "Tec-9";
	else if(weaponid == 33) Nazev = "Puka";
	else if(weaponid == 34) Nazev = "Sniperka";
	else if(weaponid == 35) Nazev = "Raketomet";
	else if(weaponid == 36) Nazev = "Tepelný raketomet";
	else if(weaponid == 37) Nazev = "Plamenomet";
	else if(weaponid == 38) Nazev = "Minigun";
	else if(weaponid == 39) Nazev = "C4";
	else if(weaponid == 40) Nazev = "Detonátor";
	else if(weaponid == 41) Nazev = "Spray";
	else if(weaponid == 42) Nazev = "Hasièák";
	else if(weaponid == 43) Nazev = "Fotoaparát";
	else if(weaponid == 44) Nazev = "Noèní vidìní";
	else if(weaponid == 45) Nazev = "Thermo vize";
	else if(weaponid == 46) Nazev = "Padák";
	return Nazev;
}
